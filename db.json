{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/baidu_verify_JUfi5MBhor.html","path":"baidu_verify_JUfi5MBhor.html","modified":0,"renderable":0},{"_id":"source/google33931402362bf12b.html","path":"google33931402362bf12b.html","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/404/404.html","path":"404/404.html","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"source/contentimg/headpic.jpg","path":"contentimg/headpic.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/redhand.png","path":"images/redhand.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechataddfriend.png","path":"images/wechataddfriend.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"source/unitydemo/4/index.html","path":"unitydemo/4/index.html","modified":0,"renderable":0},{"_id":"source/unitydemo/5/index.html","path":"unitydemo/5/index.html","modified":0,"renderable":0},{"_id":"source/unitydemo/2/index.html","path":"unitydemo/2/index.html","modified":0,"renderable":0},{"_id":"source/unitydemo/1/fish.html","path":"unitydemo/1/fish.html","modified":0,"renderable":0},{"_id":"source/unitydemo/3/index.html","path":"unitydemo/3/index.html","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/LICENSE","path":"unitydemo/pdfjs-web/LICENSE","modified":0,"renderable":0},{"_id":"source/unitydemo/1/fish.swf","path":"unitydemo/1/fish.swf","modified":0,"renderable":0},{"_id":"source/unitydemo/1/penguins.swf","path":"unitydemo/1/penguins.swf","modified":0,"renderable":0},{"_id":"source/unitydemo/1/hamster.swf","path":"unitydemo/1/hamster.swf","modified":0,"renderable":0},{"_id":"source/unitydemo/1/swfobject.js","path":"unitydemo/1/swfobject.js","modified":0,"renderable":0},{"_id":"source/unitydemo/1/hamster.html","path":"unitydemo/1/hamster.html","modified":0,"renderable":0},{"_id":"source/unitydemo/1/penguins.html","path":"unitydemo/1/penguins.html","modified":0,"renderable":0},{"_id":"source/contentimg/10/1.png","path":"contentimg/10/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/10/12.png","path":"contentimg/10/12.png","modified":0,"renderable":0},{"_id":"source/contentimg/10/13.png","path":"contentimg/10/13.png","modified":0,"renderable":0},{"_id":"source/contentimg/10/3.png","path":"contentimg/10/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/10/6.png","path":"contentimg/10/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/10/2.png","path":"contentimg/10/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/10/8.png","path":"contentimg/10/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/12/4.png","path":"contentimg/12/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/11/click.html","path":"contentimg/11/click.html","modified":0,"renderable":0},{"_id":"source/contentimg/12/1.png","path":"contentimg/12/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/13/1.png","path":"contentimg/13/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/12/3.png","path":"contentimg/12/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/13/2.png","path":"contentimg/13/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/14/1.png","path":"contentimg/14/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/14/4.png","path":"contentimg/14/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/14/5.png","path":"contentimg/14/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/15/1.png","path":"contentimg/15/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/14/2.png","path":"contentimg/14/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/15/3.png","path":"contentimg/15/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/15/4.png","path":"contentimg/15/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/15/6.png","path":"contentimg/15/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/17/2.png","path":"contentimg/17/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/17/3.png","path":"contentimg/17/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/17/1.png","path":"contentimg/17/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/19/1.png","path":"contentimg/19/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/14/6.png","path":"contentimg/14/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/15/2.png","path":"contentimg/15/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/19/2.png","path":"contentimg/19/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/19/3.png","path":"contentimg/19/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/19/4.png","path":"contentimg/19/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/19/5.png","path":"contentimg/19/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/20/4.png","path":"contentimg/20/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/17/5.png","path":"contentimg/17/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/21/1.png","path":"contentimg/21/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/1.png","path":"contentimg/2/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/23/6.png","path":"contentimg/23/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/2.png","path":"contentimg/2/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/3.png","path":"contentimg/2/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/5.2.png","path":"contentimg/2/5.2.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/4.2.png","path":"contentimg/2/4.2.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/8.1.png","path":"contentimg/2/8.1.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/8.2.png","path":"contentimg/2/8.2.png","modified":0,"renderable":0},{"_id":"source/contentimg/29/2.png","path":"contentimg/29/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/14.png","path":"contentimg/30/14.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/16.png","path":"contentimg/30/16.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/17.png","path":"contentimg/30/17.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/3.png","path":"contentimg/30/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/6.png","path":"contentimg/30/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/12.png","path":"contentimg/26/12.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/13.png","path":"contentimg/26/13.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/14.png","path":"contentimg/26/14.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/10.png","path":"contentimg/26/10.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/3.png","path":"contentimg/26/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/11.png","path":"contentimg/26/11.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/1.png","path":"contentimg/26/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/4.png","path":"contentimg/26/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/9.png","path":"contentimg/26/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/27/5.png","path":"contentimg/27/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/10.png","path":"contentimg/3/10.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/11.png","path":"contentimg/3/11.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/14.png","path":"contentimg/3/14.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/18.png","path":"contentimg/3/18.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/2.png","path":"contentimg/3/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/3.png","path":"contentimg/3/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/16.png","path":"contentimg/3/16.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/6.png","path":"contentimg/3/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/8.png","path":"contentimg/3/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/32/3.png","path":"contentimg/32/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/32/4.png","path":"contentimg/32/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/32/5.png","path":"contentimg/32/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/32/2.png","path":"contentimg/32/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/32/6.png","path":"contentimg/32/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/35/Finite_State_Machine.html","path":"contentimg/35/Finite_State_Machine.html","modified":0,"renderable":0},{"_id":"source/contentimg/22/1.png","path":"contentimg/22/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/22/1.jpg","path":"contentimg/22/1.jpg","modified":0,"renderable":0},{"_id":"source/contentimg/22/3.png","path":"contentimg/22/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/22/4.png","path":"contentimg/22/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/22/7.png","path":"contentimg/22/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/22/6.png","path":"contentimg/22/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/1.png","path":"contentimg/4/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/2.png","path":"contentimg/4/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/3.png","path":"contentimg/4/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/4.2.png","path":"contentimg/4/4.2.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/4.1.png","path":"contentimg/4/4.1.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/4.3.png","path":"contentimg/4/4.3.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/5.2.png","path":"contentimg/4/5.2.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/9.1.png","path":"contentimg/4/9.1.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/1.png","path":"contentimg/5/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/9.3.png","path":"contentimg/4/9.3.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/11.png","path":"contentimg/5/11.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/10.png","path":"contentimg/5/10.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/13.png","path":"contentimg/5/13.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/2.png","path":"contentimg/5/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/5.png","path":"contentimg/5/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/12.png","path":"contentimg/5/12.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/6.png","path":"contentimg/5/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/3.png","path":"contentimg/5/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/7.png","path":"contentimg/5/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/9.png","path":"contentimg/5/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/8.png","path":"contentimg/5/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/6/3.png","path":"contentimg/6/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/6/1.png","path":"contentimg/6/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/5/4.png","path":"contentimg/5/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/6/4.png","path":"contentimg/6/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/6/5.png","path":"contentimg/6/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/6/7.png","path":"contentimg/6/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/6/14.png","path":"contentimg/6/14.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/11.png","path":"contentimg/7/11.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/16.png","path":"contentimg/7/16.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/19.png","path":"contentimg/7/19.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/10.png","path":"contentimg/7/10.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/22.png","path":"contentimg/7/22.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/3.png","path":"contentimg/7/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/4.png","path":"contentimg/7/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/14.png","path":"contentimg/7/14.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/5.png","path":"contentimg/7/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/6.png","path":"contentimg/7/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/8/2.png","path":"contentimg/8/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/8/1.png","path":"contentimg/8/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/8/7.png","path":"contentimg/8/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/33/3.png","path":"contentimg/33/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/33/4.png","path":"contentimg/33/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/33/2.png","path":"contentimg/33/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/33/5.png","path":"contentimg/33/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/33/8.png","path":"contentimg/33/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/33/9.png","path":"contentimg/33/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/33/6.png","path":"contentimg/33/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/8/9.png","path":"contentimg/8/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/15.png","path":"contentimg/9/15.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/14.png","path":"contentimg/9/14.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/17.png","path":"contentimg/9/17.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/19.png","path":"contentimg/9/19.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/18.png","path":"contentimg/9/18.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/20.png","path":"contentimg/9/20.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/25.png","path":"contentimg/9/25.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/24.png","path":"contentimg/9/24.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/28.png","path":"contentimg/9/28.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/3.png","path":"contentimg/9/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/29.png","path":"contentimg/9/29.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/31.png","path":"contentimg/9/31.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/26.png","path":"contentimg/9/26.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/35.png","path":"contentimg/9/35.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/32.png","path":"contentimg/9/32.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/36.png","path":"contentimg/9/36.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/38.png","path":"contentimg/9/38.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/4.png","path":"contentimg/9/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/33.png","path":"contentimg/9/33.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/40.png","path":"contentimg/9/40.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/43.png","path":"contentimg/9/43.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/45.png","path":"contentimg/9/45.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/41.png","path":"contentimg/9/41.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/44.png","path":"contentimg/9/44.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/42.png","path":"contentimg/9/42.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/47.png","path":"contentimg/9/47.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/48.png","path":"contentimg/9/48.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/51.png","path":"contentimg/9/51.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/50.png","path":"contentimg/9/50.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/6.png","path":"contentimg/9/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/7.png","path":"contentimg/9/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/9.png","path":"contentimg/9/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/31/1.jpg","path":"contentimg/31/1.jpg","modified":0,"renderable":0},{"_id":"source/contentimg/31/12.png","path":"contentimg/31/12.png","modified":0,"renderable":0},{"_id":"source/contentimg/31/4.png","path":"contentimg/31/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/31/13.png","path":"contentimg/31/13.png","modified":0,"renderable":0},{"_id":"source/contentimg/31/3.png","path":"contentimg/31/3.png","modified":0,"renderable":0},{"_id":"themes/next/source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":1},{"_id":"source/contentimg/1/2.png","path":"contentimg/1/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/1/3.png","path":"contentimg/1/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/1/4.png","path":"contentimg/1/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/1/5.png","path":"contentimg/1/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/1/1.png","path":"contentimg/1/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/1/7.png","path":"contentimg/1/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/1/6.png","path":"contentimg/1/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/10/11.png","path":"contentimg/10/11.png","modified":0,"renderable":0},{"_id":"source/contentimg/10/10.png","path":"contentimg/10/10.png","modified":0,"renderable":0},{"_id":"source/contentimg/10/5.png","path":"contentimg/10/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/10/4.png","path":"contentimg/10/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/15/5.png","path":"contentimg/15/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/17/4.png","path":"contentimg/17/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/20/1.png","path":"contentimg/20/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/20/2.png","path":"contentimg/20/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/20/3.png","path":"contentimg/20/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/23/11.png","path":"contentimg/23/11.png","modified":0,"renderable":0},{"_id":"source/contentimg/23/10.png","path":"contentimg/23/10.png","modified":0,"renderable":0},{"_id":"source/contentimg/23/12.png","path":"contentimg/23/12.png","modified":0,"renderable":0},{"_id":"source/contentimg/23/3.png","path":"contentimg/23/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/23/5.png","path":"contentimg/23/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/23/2.png","path":"contentimg/23/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/23/9.png","path":"contentimg/23/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/23/8.png","path":"contentimg/23/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/4.3.png","path":"contentimg/2/4.3.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/6.2.png","path":"contentimg/2/6.2.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/7.2.png","path":"contentimg/2/7.2.png","modified":0,"renderable":0},{"_id":"source/contentimg/28/2.png","path":"contentimg/28/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/28/4.png","path":"contentimg/28/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/28/3.png","path":"contentimg/28/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/28/1.png","path":"contentimg/28/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/10.png","path":"contentimg/30/10.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/15.png","path":"contentimg/30/15.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/11.png","path":"contentimg/30/11.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/5.png","path":"contentimg/30/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/2.png","path":"contentimg/30/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/6.png","path":"contentimg/26/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/27/10.png","path":"contentimg/27/10.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/5.png","path":"contentimg/26/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/27/2.png","path":"contentimg/27/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/27/1.png","path":"contentimg/27/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/27/6.png","path":"contentimg/27/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/27/7.png","path":"contentimg/27/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/27/8.png","path":"contentimg/27/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/1.png","path":"contentimg/3/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/27/4.png","path":"contentimg/27/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/12.png","path":"contentimg/3/12.png","modified":0,"renderable":0},{"_id":"source/contentimg/27/9.png","path":"contentimg/27/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/13.png","path":"contentimg/3/13.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/17.png","path":"contentimg/3/17.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/19.png","path":"contentimg/3/19.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/5.png","path":"contentimg/3/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/35/CSharpMessenger_Extended.html","path":"contentimg/35/CSharpMessenger_Extended.html","modified":0,"renderable":0},{"_id":"source/contentimg/32/1.png","path":"contentimg/32/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/32/8.png","path":"contentimg/32/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/22/2.png","path":"contentimg/22/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/22/5.png","path":"contentimg/22/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/22/8.png","path":"contentimg/22/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/5.1.png","path":"contentimg/4/5.1.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/6.png","path":"contentimg/4/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/7.png","path":"contentimg/4/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/6/6.png","path":"contentimg/6/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/32/7.png","path":"contentimg/32/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/6/8.png","path":"contentimg/6/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/1.png","path":"contentimg/7/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/13.png","path":"contentimg/7/13.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/12.png","path":"contentimg/7/12.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/18.png","path":"contentimg/7/18.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/17.png","path":"contentimg/7/17.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/20.png","path":"contentimg/7/20.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/21.png","path":"contentimg/7/21.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/2.png","path":"contentimg/7/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/7.png","path":"contentimg/7/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/8/12.png","path":"contentimg/8/12.png","modified":0,"renderable":0},{"_id":"source/contentimg/8/6.png","path":"contentimg/8/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/8/8.png","path":"contentimg/8/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/8/4.png","path":"contentimg/8/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/33/12.png","path":"contentimg/33/12.png","modified":0,"renderable":0},{"_id":"source/contentimg/33/10.png","path":"contentimg/33/10.png","modified":0,"renderable":0},{"_id":"source/contentimg/33/7.png","path":"contentimg/33/7.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"source/contentimg/9/10.png","path":"contentimg/9/10.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/12.png","path":"contentimg/9/12.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/13.png","path":"contentimg/9/13.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"source/contentimg/9/30.png","path":"contentimg/9/30.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/34.png","path":"contentimg/9/34.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"source/contentimg/9/39.png","path":"contentimg/9/39.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/46.png","path":"contentimg/9/46.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/49.png","path":"contentimg/9/49.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"source/contentimg/9/5.png","path":"contentimg/9/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/8.png","path":"contentimg/9/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/31/11.png","path":"contentimg/31/11.png","modified":0,"renderable":0},{"_id":"source/contentimg/31/2.png","path":"contentimg/31/2.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"source/unitydemo/4/Build/test.json","path":"unitydemo/4/Build/test.json","modified":0,"renderable":0},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"source/unitydemo/3/Build/test.json","path":"unitydemo/3/Build/test.json","modified":0,"renderable":0},{"_id":"source/unitydemo/5/Build/test.json","path":"unitydemo/5/Build/test.json","modified":0,"renderable":0},{"_id":"source/contentimg/31/9.png","path":"contentimg/31/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/31/7.png","path":"contentimg/31/7.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/viewer.css","path":"unitydemo/pdfjs-web/web/viewer.css","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/viewer.html","path":"unitydemo/pdfjs-web/web/viewer.html","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/debugger.js","path":"unitydemo/pdfjs-web/web/debugger.js","modified":0,"renderable":0},{"_id":"source/contentimg/10/7.png","path":"contentimg/10/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/23/1.png","path":"contentimg/23/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/23/4.png","path":"contentimg/23/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/29/1.png","path":"contentimg/29/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/7.png","path":"contentimg/26/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/4.png","path":"contentimg/3/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/9.png","path":"contentimg/3/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/22/10.png","path":"contentimg/22/10.png","modified":0,"renderable":0},{"_id":"source/contentimg/8/5.png","path":"contentimg/8/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/16.png","path":"contentimg/9/16.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/1.png","path":"contentimg/9/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/23.png","path":"contentimg/9/23.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/27.png","path":"contentimg/9/27.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/37.png","path":"contentimg/9/37.png","modified":0,"renderable":0},{"_id":"source/contentimg/31/10.png","path":"contentimg/31/10.png","modified":0,"renderable":0},{"_id":"source/unitydemo/2/Release/UnityLoader.js","path":"unitydemo/2/Release/UnityLoader.js","modified":0,"renderable":0},{"_id":"source/contentimg/12/2.png","path":"contentimg/12/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/14/3.png","path":"contentimg/14/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/23/7.png","path":"contentimg/23/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/2.png","path":"contentimg/26/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/26/8.png","path":"contentimg/26/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/27/3.png","path":"contentimg/27/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/15.png","path":"contentimg/3/15.png","modified":0,"renderable":0},{"_id":"source/contentimg/22/9.png","path":"contentimg/22/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/9.2.png","path":"contentimg/4/9.2.png","modified":0,"renderable":0},{"_id":"source/contentimg/4/8.png","path":"contentimg/4/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/15.png","path":"contentimg/7/15.png","modified":0,"renderable":0},{"_id":"source/contentimg/7/8.png","path":"contentimg/7/8.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"source/contentimg/9/2.png","path":"contentimg/9/2.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"source/contentimg/31/6.png","path":"contentimg/31/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/3.png","path":"contentimg/16/1/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/2/10.png","path":"contentimg/16/2/10.png","modified":0,"renderable":0},{"_id":"source/unitydemo/3/Build/test.wasm.framework.unityweb","path":"unitydemo/3/Build/test.wasm.framework.unityweb","modified":0,"renderable":0},{"_id":"source/unitydemo/4/Build/test.wasm.framework.unityweb","path":"unitydemo/4/Build/test.wasm.framework.unityweb","modified":0,"renderable":0},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-check.svg","path":"unitydemo/pdfjs-web/web/images/annotation-check.svg","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-insert.svg","path":"unitydemo/pdfjs-web/web/images/annotation-insert.svg","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-key.svg","path":"unitydemo/pdfjs-web/web/images/annotation-key.svg","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-noicon.svg","path":"unitydemo/pdfjs-web/web/images/annotation-noicon.svg","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-newparagraph.svg","path":"unitydemo/pdfjs-web/web/images/annotation-newparagraph.svg","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-help.svg","path":"unitydemo/pdfjs-web/web/images/annotation-help.svg","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-comment.svg","path":"unitydemo/pdfjs-web/web/images/annotation-comment.svg","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-next-rtl.png","path":"unitydemo/pdfjs-web/web/images/findbarButton-next-rtl.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-next.png","path":"unitydemo/pdfjs-web/web/images/findbarButton-next.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-next-rtl@2x.png","path":"unitydemo/pdfjs-web/web/images/findbarButton-next-rtl@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-next@2x.png","path":"unitydemo/pdfjs-web/web/images/findbarButton-next@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-previous-rtl.png","path":"unitydemo/pdfjs-web/web/images/findbarButton-previous-rtl.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-previous-rtl@2x.png","path":"unitydemo/pdfjs-web/web/images/findbarButton-previous-rtl@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-previous.png","path":"unitydemo/pdfjs-web/web/images/findbarButton-previous.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/grab.cur","path":"unitydemo/pdfjs-web/web/images/grab.cur","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-previous@2x.png","path":"unitydemo/pdfjs-web/web/images/findbarButton-previous@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/grabbing.cur","path":"unitydemo/pdfjs-web/web/images/grabbing.cur","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-documentProperties.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-documentProperties.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-paragraph.svg","path":"unitydemo/pdfjs-web/web/images/annotation-paragraph.svg","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-note.svg","path":"unitydemo/pdfjs-web/web/images/annotation-note.svg","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/locale.properties","path":"unitydemo/pdfjs-web/web/locale/locale.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/loading-small.png","path":"unitydemo/pdfjs-web/web/images/loading-small.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-firstPage@2x.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-firstPage@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-firstPage.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-firstPage.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-handTool.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-handTool.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-lastPage.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-lastPage.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-handTool@2x.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-handTool@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-lastPage@2x.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-lastPage@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-rotateCcw.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-rotateCcw.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-documentProperties@2x.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-documentProperties@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-rotateCw.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-rotateCw.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-selectTool.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-selectTool.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/loading-icon.gif","path":"unitydemo/pdfjs-web/web/images/loading-icon.gif","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/shadow.png","path":"unitydemo/pdfjs-web/web/images/shadow.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-rotateCw@2x.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-rotateCw@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-bookmark.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-bookmark.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-rotateCcw@2x.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-rotateCcw@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-bookmark@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-bookmark@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-download.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-download.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-menuArrows@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-menuArrows@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-menuArrows.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-menuArrows.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-download@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-download@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-openFile.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-openFile.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageDown-rtl.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-pageDown-rtl.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageDown-rtl@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-pageDown-rtl@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-openFile@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-openFile@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageDown.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-pageDown.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageUp-rtl@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-pageUp-rtl@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageUp-rtl.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-pageUp-rtl.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageDown@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-pageDown@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageUp.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-pageUp.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-presentationMode@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-presentationMode@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-presentationMode.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-presentationMode.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageUp@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-pageUp@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-search@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-search@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-print.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-print.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-search.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-search.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-print@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-print@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-secondaryToolbarToggle@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-secondaryToolbarToggle@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-secondaryToolbarToggle-rtl.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-secondaryToolbarToggle-rtl.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-secondaryToolbarToggle.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-secondaryToolbarToggle.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-sidebarToggle-rtl.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-sidebarToggle-rtl.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-secondaryToolbarToggle-rtl@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-secondaryToolbarToggle-rtl@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-sidebarToggle@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-sidebarToggle@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-sidebarToggle-rtl@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-sidebarToggle-rtl@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-sidebarToggle.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-sidebarToggle.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewAttachments.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-viewAttachments.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/texture.png","path":"unitydemo/pdfjs-web/web/images/texture.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewOutline-rtl@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-viewOutline-rtl@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewOutline-rtl.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-viewOutline-rtl.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewOutline@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-viewOutline@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewOutline.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-viewOutline.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewThumbnail.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-viewThumbnail.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewThumbnail@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-viewThumbnail@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-zoomIn.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-zoomIn.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-zoomIn@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-zoomIn@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-zoomOut@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-zoomOut@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-zoomOut.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-zoomOut.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/treeitem-collapsed-rtl.png","path":"unitydemo/pdfjs-web/web/images/treeitem-collapsed-rtl.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/treeitem-collapsed-rtl@2x.png","path":"unitydemo/pdfjs-web/web/images/treeitem-collapsed-rtl@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/treeitem-collapsed.png","path":"unitydemo/pdfjs-web/web/images/treeitem-collapsed.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/treeitem-collapsed@2x.png","path":"unitydemo/pdfjs-web/web/images/treeitem-collapsed@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/treeitem-expanded.png","path":"unitydemo/pdfjs-web/web/images/treeitem-expanded.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/treeitem-expanded@2x.png","path":"unitydemo/pdfjs-web/web/images/treeitem-expanded@2x.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/9.png","path":"contentimg/30/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/3/7.png","path":"contentimg/3/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/6/2.png","path":"contentimg/6/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/8/11.png","path":"contentimg/8/11.png","modified":0,"renderable":0},{"_id":"source/contentimg/8/3.png","path":"contentimg/8/3.png","modified":0,"renderable":0},{"_id":"source/contentimg/8/10.png","path":"contentimg/8/10.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-selectTool@2x.png","path":"unitydemo/pdfjs-web/web/images/secondaryToolbarButton-selectTool@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78-EUC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/78-EUC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewAttachments@2x.png","path":"unitydemo/pdfjs-web/web/images/toolbarButton-viewAttachments@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78-RKSJ-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/78-RKSJ-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78-EUC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/78-EUC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/78-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/78-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78ms-RKSJ-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/78ms-RKSJ-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78-RKSJ-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/78-RKSJ-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78ms-RKSJ-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/78ms-RKSJ-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/83pv-RKSJ-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/83pv-RKSJ-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/90ms-RKSJ-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/90ms-RKSJ-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/90pv-RKSJ-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/90pv-RKSJ-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/90msp-RKSJ-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/90msp-RKSJ-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/90ms-RKSJ-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/90ms-RKSJ-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/90pv-RKSJ-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/90pv-RKSJ-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Add-RKSJ-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Add-RKSJ-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/90msp-RKSJ-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/90msp-RKSJ-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Add-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Add-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-0.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-0.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-1.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-1.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-3.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-3.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-2.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-2.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-5.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-5.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-4.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-4.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Add-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Add-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-6.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-6.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-0.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-0.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-1.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-1.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-2.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-2.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-3.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-3.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-4.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-4.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-5.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-5.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-UCS2.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-UCS2.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-0.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-0.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-1.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-1.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-2.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-2.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-3.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-3.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-4.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-4.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-5.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-5.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-UCS2.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-UCS2.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-6.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-6.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Korea1-0.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-Korea1-0.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Korea1-2.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-Korea1-2.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Korea1-1.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-Korea1-1.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-UCS2.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-UCS2.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/B5-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/B5-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/B5-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/B5-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Add-RKSJ-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Add-RKSJ-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/CNS-EUC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/CNS-EUC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/B5pc-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/B5pc-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/B5pc-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/B5pc-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/CNS1-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/CNS1-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/CNS2-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/CNS2-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/CNS2-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/CNS2-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/CNS-EUC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/CNS-EUC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/CNS1-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/CNS1-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/ETHK-B5-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/ETHK-B5-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/ETen-B5-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/ETen-B5-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/ETHK-B5-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/ETHK-B5-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/ETen-B5-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/ETen-B5-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/ETenms-B5-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/ETenms-B5-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/ETenms-B5-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/ETenms-B5-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/EUC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/EUC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/EUC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/EUC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Korea1-UCS2.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Adobe-Korea1-UCS2.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Ext-RKSJ-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Ext-RKSJ-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Ext-RKSJ-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Ext-RKSJ-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GB-EUC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GB-EUC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Ext-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Ext-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GB-EUC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GB-EUC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GB-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GB-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GB-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GB-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Ext-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Ext-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBK2K-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBK2K-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBK-EUC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBK-EUC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBK2K-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBK2K-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBKp-EUC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBKp-EUC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBT-EUC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBT-EUC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBT-EUC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBT-EUC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/images/loading-small@2x.png","path":"unitydemo/pdfjs-web/web/images/loading-small@2x.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBT-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBT-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBT-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBT-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBTpc-EUC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBTpc-EUC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBpc-EUC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBpc-EUC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBpc-EUC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBpc-EUC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKdla-B5-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/HKdla-B5-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKdlb-B5-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/HKdlb-B5-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKdla-B5-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/HKdla-B5-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKdlb-B5-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/HKdlb-B5-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKgccs-B5-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/HKgccs-B5-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKgccs-B5-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/HKgccs-B5-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKm314-B5-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/HKm314-B5-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKm314-B5-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/HKm314-B5-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBTpc-EUC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBTpc-EUC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBK-EUC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBK-EUC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKm471-B5-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/HKm471-B5-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKscs-B5-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/HKscs-B5-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Hankaku.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Hankaku.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Hiragana.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Hiragana.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSC-EUC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/KSC-EUC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBKp-EUC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/GBKp-EUC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSC-EUC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/KSC-EUC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKm471-B5-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/HKm471-B5-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSC-Johab-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/KSC-Johab-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/KSC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSC-Johab-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/KSC-Johab-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/KSC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSCms-UHC-HW-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/KSCms-UHC-HW-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSCms-UHC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/KSCms-UHC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSCpc-EUC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/KSCpc-EUC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Katakana.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Katakana.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSCpc-EUC-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/KSCpc-EUC-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSCms-UHC-HW-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/KSCms-UHC-HW-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSCms-UHC-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/KSCms-UHC-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/NWP-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/NWP-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/RKSJ-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/RKSJ-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/RKSJ-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/RKSJ-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Roman.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/Roman.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/NWP-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/NWP-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UCS2-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniCNS-UCS2-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/LICENSE","path":"unitydemo/pdfjs-web/web/cmaps/LICENSE","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF16-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF16-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKscs-B5-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/HKscs-B5-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF32-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF32-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UCS2-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniGB-UCS2-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF32-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF32-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF8-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF8-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UCS2-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniGB-UCS2-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UTF16-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniGB-UTF16-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF8-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF8-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF16-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF16-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UTF8-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniGB-UTF8-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UTF32-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniGB-UTF32-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UTF32-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniGB-UTF32-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UTF8-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniGB-UTF8-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UCS2-HW-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS-UCS2-HW-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UCS2-HW-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS-UCS2-HW-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF16-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF16-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UCS2-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS-UCS2-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF16-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF16-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UCS2-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniCNS-UCS2-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF32-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF32-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF32-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF32-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF8-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF8-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF8-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF8-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF16-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF16-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UTF16-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniGB-UTF16-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF32-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF32-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF16-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF16-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF8-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF8-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF32-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF32-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISPro-UCS2-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJISPro-UCS2-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF8-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF8-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UCS2-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJIS-UCS2-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISX0213-UTF32-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJISX0213-UTF32-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISX0213-UTF32-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJISX0213-UTF32-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISPro-UTF8-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJISPro-UTF8-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISX02132004-UTF32-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJISX02132004-UTF32-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UCS2-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniKS-UCS2-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UTF16-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniKS-UTF16-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UCS2-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniKS-UCS2-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISX02132004-UTF32-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniJISX02132004-UTF32-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UTF32-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniKS-UTF32-V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UTF8-V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniKS-UTF8-V.bcmap","modified":0,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/V.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/V.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/WP-Symbol.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/WP-Symbol.bcmap","modified":0,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"source/contentimg/31/5.png","path":"contentimg/31/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/2/5.png","path":"contentimg/16/2/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/2/6.png","path":"contentimg/16/2/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/2/4.png","path":"contentimg/16/2/4.png","modified":0,"renderable":0},{"_id":"source/unitydemo/4/Build/UnityLoader.js","path":"unitydemo/4/Build/UnityLoader.js","modified":0,"renderable":0},{"_id":"source/unitydemo/3/Build/UnityLoader.js","path":"unitydemo/3/Build/UnityLoader.js","modified":0,"renderable":0},{"_id":"source/unitydemo/5/Build/test.wasm.framework.unityweb","path":"unitydemo/5/Build/test.wasm.framework.unityweb","modified":0,"renderable":0},{"_id":"source/unitydemo/5/Build/UnityLoader.js","path":"unitydemo/5/Build/UnityLoader.js","modified":0,"renderable":0},{"_id":"source/contentimg/31/8.png","path":"contentimg/31/8.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UTF8-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniKS-UTF8-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UTF16-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniKS-UTF16-H.bcmap","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UTF32-H.bcmap","path":"unitydemo/pdfjs-web/web/cmaps/UniKS-UTF32-H.bcmap","modified":0,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"source/contentimg/Unity姚佳鑫_13580519427.pdf","path":"contentimg/Unity姚佳鑫_13580519427.pdf","modified":0,"renderable":0},{"_id":"source/contentimg/30/13.png","path":"contentimg/30/13.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"source/contentimg/16/1/2.png","path":"contentimg/16/1/2.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/2/7.png","path":"contentimg/16/2/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/2/8.png","path":"contentimg/16/2/8.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/2/9.png","path":"contentimg/16/2/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/2/3.png","path":"contentimg/16/2/3.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"source/unitydemo/pdfjs-web/web/locale/af/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/af/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ach/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ach/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ak/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ak/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/an/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/an/viewer.properties","modified":0,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"source/unitydemo/pdfjs-web/web/locale/ast/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ast/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/az/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/az/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ar/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ar/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/as/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/as/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/be/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/be/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/bg/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/bg/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/bn-BD/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/bn-BD/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/br/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/br/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/bs/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/bs/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/bn-IN/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/bn-IN/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ca/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ca/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/csb/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/csb/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/cs/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/cs/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/cy/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/cy/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/da/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/da/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/el/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/el/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/en-ZA/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/en-ZA/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/de/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/de/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/en-GB/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/en-GB/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/en-US/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/en-US/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/es-AR/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/es-AR/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/eo/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/eo/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/es-MX/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/es-MX/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/es-ES/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/es-ES/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/es-CL/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/es-CL/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/eu/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/eu/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/et/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/et/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/fi/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/fi/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ff/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ff/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/fy-NL/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/fy-NL/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/gl/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/gl/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ga-IE/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ga-IE/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/fr/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/fr/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/fa/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/fa/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/gd/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/gd/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/he/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/he/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/hi-IN/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/hi-IN/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/gu-IN/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/gu-IN/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/hu/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/hu/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/id/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/id/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/is/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/is/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/hr/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/hr/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/hy-AM/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/hy-AM/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ja/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ja/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ka/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ka/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/kk/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/kk/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/kn/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/kn/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ku/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ku/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/it/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/it/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ko/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ko/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/lg/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/lg/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/km/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/km/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/lv/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/lv/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/mai/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/mai/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/lt/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/lt/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ml/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ml/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/mk/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/mk/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/lij/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/lij/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ms/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ms/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/mr/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/mr/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/nl/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/nl/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/nb-NO/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/nb-NO/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/mn/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/mn/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/nn-NO/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/nn-NO/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/nso/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/nso/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/oc/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/oc/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/or/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/or/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/pl/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/pl/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/pa-IN/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/pa-IN/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/pt-PT/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/pt-PT/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/pt-BR/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/pt-BR/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/rm/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/rm/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ru/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ru/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ro/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ro/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/sah/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/sah/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/sk/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/sk/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/si/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/si/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/sl/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/sl/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/my/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/my/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/sq/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/sq/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/son/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/son/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/sw/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/sw/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/sv-SE/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/sv-SE/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/sr/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/sr/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/th/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/th/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/te/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/te/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/tl/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/tl/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ta-LK/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ta-LK/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ta/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ta/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/rw/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/rw/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/tn/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/tn/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/ur/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/ur/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/uk/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/uk/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/wo/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/wo/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/tr/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/tr/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/xh/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/xh/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/zu/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/zu/viewer.properties","modified":0,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"source/contentimg/16/2/2.png","path":"contentimg/16/2/2.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"source/unitydemo/pdfjs-web/web/locale/vi/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/vi/viewer.properties","modified":0,"renderable":0},{"_id":"source/contentimg/10/9.png","path":"contentimg/10/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/1.png","path":"contentimg/30/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/33/1.png","path":"contentimg/33/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/21.png","path":"contentimg/9/21.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/2/1.png","path":"contentimg/16/2/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/7.png","path":"contentimg/30/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/8.png","path":"contentimg/30/8.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/zh-TW/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/zh-TW/viewer.properties","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/locale/zh-CN/viewer.properties","path":"unitydemo/pdfjs-web/web/locale/zh-CN/viewer.properties","modified":0,"renderable":0},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"source/unitydemo/2/Release/test.memgz","path":"unitydemo/2/Release/test.memgz","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/viewer.js","path":"unitydemo/pdfjs-web/web/viewer.js","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/16.png","path":"contentimg/16/1/16.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/15.png","path":"contentimg/16/1/15.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/14.png","path":"contentimg/16/1/14.png","modified":0,"renderable":0},{"_id":"source/contentimg/31/14.png","path":"contentimg/31/14.png","modified":0,"renderable":0},{"_id":"source/contentimg/18/Office-2019.pdf","path":"contentimg/18/Office-2019.pdf","modified":0,"renderable":0},{"_id":"source/contentimg/7/9.png","path":"contentimg/7/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/9/22.png","path":"contentimg/9/22.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"source/contentimg/16/1/12.png","path":"contentimg/16/1/12.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/17.png","path":"contentimg/16/1/17.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/7.png","path":"contentimg/16/1/7.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/19.png","path":"contentimg/16/1/19.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/4.png","path":"contentimg/16/1/4.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/6.png","path":"contentimg/16/1/6.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/13.png","path":"contentimg/16/1/13.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/12.png","path":"contentimg/30/12.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/4.png","path":"contentimg/30/4.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/contentimg/16/1/11.png","path":"contentimg/16/1/11.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/22.png","path":"contentimg/16/1/22.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/8.png","path":"contentimg/16/1/8.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/build/pdf.js","path":"unitydemo/pdfjs-web/build/pdf.js","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/web/viewer.js.map","path":"unitydemo/pdfjs-web/web/viewer.js.map","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/10.png","path":"contentimg/16/1/10.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/7.1.png","path":"contentimg/2/7.1.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/4.1.png","path":"contentimg/2/4.1.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/21.png","path":"contentimg/16/1/21.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/5.png","path":"contentimg/16/1/5.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/9.png","path":"contentimg/16/1/9.png","modified":0,"renderable":0},{"_id":"source/contentimg/33/11.png","path":"contentimg/33/11.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/18.png","path":"contentimg/16/1/18.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/20.png","path":"contentimg/16/1/20.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/5.1.png","path":"contentimg/2/5.1.png","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/1.png","path":"contentimg/16/1/1.png","modified":0,"renderable":0},{"_id":"source/contentimg/2/6.1.png","path":"contentimg/2/6.1.png","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/build/pdf.js.map","path":"unitydemo/pdfjs-web/build/pdf.js.map","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/build/pdf.worker.js","path":"unitydemo/pdfjs-web/build/pdf.worker.js","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/24.png","path":"contentimg/16/1/24.png","modified":0,"renderable":0},{"_id":"source/contentimg/30/3.gif","path":"contentimg/30/3.gif","modified":0,"renderable":0},{"_id":"source/contentimg/30/2.gif","path":"contentimg/30/2.gif","modified":0,"renderable":0},{"_id":"source/contentimg/16/1/23.png","path":"contentimg/16/1/23.png","modified":0,"renderable":0},{"_id":"source/unitydemo/2/Release/test.datagz","path":"unitydemo/2/Release/test.datagz","modified":0,"renderable":0},{"_id":"source/contentimg/30/1.gif","path":"contentimg/30/1.gif","modified":0,"renderable":0},{"_id":"source/unitydemo/3/Build/test.data.unityweb","path":"unitydemo/3/Build/test.data.unityweb","modified":0,"renderable":0},{"_id":"source/unitydemo/3/Build/test.wasm.code.unityweb","path":"unitydemo/3/Build/test.wasm.code.unityweb","modified":0,"renderable":0},{"_id":"source/unitydemo/pdfjs-web/build/pdf.worker.js.map","path":"unitydemo/pdfjs-web/build/pdf.worker.js.map","modified":0,"renderable":0},{"_id":"source/unitydemo/5/Build/test.wasm.code.unityweb","path":"unitydemo/5/Build/test.wasm.code.unityweb","modified":0,"renderable":0},{"_id":"source/unitydemo/4/Build/test.wasm.code.unityweb","path":"unitydemo/4/Build/test.wasm.code.unityweb","modified":0,"renderable":0},{"_id":"source/unitydemo/2/Release/test.jsgz","path":"unitydemo/2/Release/test.jsgz","modified":0,"renderable":0},{"_id":"source/contentimg/30/4.gif","path":"contentimg/30/4.gif","modified":0,"renderable":0},{"_id":"source/unitydemo/4/Build/test.data.unityweb","path":"unitydemo/4/Build/test.data.unityweb","modified":0,"renderable":0},{"_id":"source/unitydemo/5/Build/test.data.unityweb","path":"unitydemo/5/Build/test.data.unityweb","modified":0,"renderable":0}],"Cache":[{"_id":"source/baidu_verify_JUfi5MBhor.html","hash":"bf8ff1c0a060f26649f978bd39dafeda56855fbc","modified":1539952810024},{"_id":"source/google33931402362bf12b.html","hash":"41b46d7e7c3710c57ee7fe38c423e2e17b634893","modified":1539955209550},{"_id":"source/robots.txt","hash":"3e516c7fb7e67d90538d889063f534d16a3a31a0","modified":1540102520285},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1514806389000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1514806389000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1514806389000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1514806389000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1514806389000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1514806389000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1514806389000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1514806389000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1514806389000},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1514806389000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1514806389000},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1514806389000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1514806389000},{"_id":"themes/next/README.md","hash":"898213e66d34a46c3cf8446bf693bd50db0d3269","modified":1514806389000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1514806389000},{"_id":"themes/next/_config.yml","hash":"e560823338aca54fe5a3eb17d92f22ce4f90f467","modified":1541668089962},{"_id":"source/404/index.md","hash":"07439ff6be756a4dc33c20a537178d5519efcdae","modified":1539512205194},{"_id":"source/404/404.html","hash":"9eb955271b03c72a4bb23a06b60e4ecb4070a880","modified":1539512050770},{"_id":"source/about/index.md","hash":"169818b7b641b5d4d1365fc8333a9f8324dad5db","modified":1541674320355},{"_id":"source/categories/index.md","hash":"fde150ff32c26dce80f5b4008e5ce67c8d6a08b3","modified":1539510959976},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1514806389000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1514806389000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1514806389000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1514806389000},{"_id":"themes/next/layout/_layout.swig","hash":"75970c2a4a82364cf09a29d1c8431dd74ec61ac7","modified":1540036010876},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1514806389000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1514806389000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1514806389000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1514806389000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1514806389000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1514806389000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1514806389000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1514806389000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1540035950996},{"_id":"source/tags/index.md","hash":"85ab9b296ae9c2a6b7d96b16ed925c92a528b672","modified":1539510970769},{"_id":"source/_posts/10ffmpeg-aes-1.md","hash":"3bd3647eaa78c9094aaea7cd5a7683ab11310621","modified":1539850899014},{"_id":"source/_posts/11clock-js.md","hash":"14d6917cf2137acf53828f12cc9936ccb19e015a","modified":1540641256232},{"_id":"source/_posts/14batforcodingpage.md","hash":"65b07faf979358175107ac8f697b868ae85e903f","modified":1540035836539},{"_id":"source/_posts/12hottoaddhtml.md","hash":"cc4b5feb49d8cb3743ddc15d9777b906d0a5b96a","modified":1539848073160},{"_id":"source/_posts/19markdownextend.md","hash":"c7a8ef46997804f112ca77bf6875935187a4d7cd","modified":1540639243537},{"_id":"source/_posts/13jsclickpass.md","hash":"a71a3fbc95ad77d61d070548e0458c1e0c34df7b","modified":1539853298675},{"_id":"source/_posts/15SSDforwto.md","hash":"dc6e1c0daa05faa0b7fa5aae709b33683ea0d4aa","modified":1539936170896},{"_id":"source/_posts/1IoDHSingleton.md","hash":"eb4b10dee94fe2ef135129573081139949127bde","modified":1539827861712},{"_id":"source/_posts/18office2019.md","hash":"d5e2b61e5cfeb20dcfbaf5174efc595fc2e5e3ad","modified":1541436940690},{"_id":"source/_posts/17git-securityalert.md","hash":"06df6c3cf86165955e795a393be53d0b708f5c23","modified":1539929574316},{"_id":"source/_posts/20sitemap2url.md","hash":"471f61db5e9912ee7b633426e34d7dbd11971963","modified":1540042530441},{"_id":"source/_posts/23unitywebgl360error.md","hash":"9e0da2c6c67b52071cf010189924dc115c8d0f6a","modified":1540224027728},{"_id":"source/_posts/22Roguelike.md","hash":"11bd17d6b8e71b7f68f5707530f18905fe1d2858","modified":1540787294925},{"_id":"source/_posts/24algorithm_1.md","hash":"2287d0b132681768e79f5e5d48e2b3b52fc768b6","modified":1540267493674},{"_id":"source/_posts/25UnityPlatform_define.md","hash":"2f5b6cf5359ee8d696b6a96bca3b2773bb3b446a","modified":1540272601855},{"_id":"source/_posts/28algorithm_2.md","hash":"b34e3e0b9551e2c7110844d611ec0129c36415dd","modified":1540403007034},{"_id":"source/_posts/26UnitySuper_1.md","hash":"a6b4bf463d0471226f4aa47c769e26f20fe665e9","modified":1540312034685},{"_id":"source/_posts/16VM_macandlinux.md","hash":"2c5ae9ac9c6e72e7386dc978acdbc523c1d70b3b","modified":1539938540403},{"_id":"source/_posts/29Unity_error_1.md","hash":"7dba1105d95570f13624c7967f2518993241a849","modified":1540456934758},{"_id":"source/_posts/27getweatherapi.md","hash":"7ca5c9ed9aa172fef8d66c7fb513330bff001d61","modified":1540347114948},{"_id":"source/_posts/30Lived2d_for_unity.md","hash":"2f3c8f51fe330e8b3fc0fcfd401fbcac15e43a83","modified":1540618154427},{"_id":"source/_posts/33HitGhostDemo.md","hash":"04e1d5e95f0442011edaf319ed9bf7d3d12a8ae3","modified":1541480744265},{"_id":"source/_posts/31WallBallDemo.md","hash":"abeb07293e41944f373266267e21fb58eea414e8","modified":1540797462397},{"_id":"source/_posts/2SortMethon.md","hash":"ba5f2b0283cbb960299b315d6246e98d43561278","modified":1539830866207},{"_id":"source/_posts/35FMS.md","hash":"f2bb06fa5239e0c77269dc31ca78f5515a0af3f9","modified":1541667717516},{"_id":"source/_posts/32AssetBundle_1.md","hash":"b6e93573c110af08b0fdeff70b2e4718f5d87c4d","modified":1541384779585},{"_id":"source/_posts/36Astar.md","hash":"a837054c297ccf150e51bce5227081872e4d9277","modified":1541669138115},{"_id":"source/_posts/34DesignPattern.md","hash":"61f48b93aeedd792350bdd4f3c3a97c0e344114b","modified":1541609413714},{"_id":"source/_posts/4fivefeatures.md","hash":"1404098aa26d08a89213df0bd3b434bb18b9be53","modified":1539827889738},{"_id":"source/_posts/5Closure.md","hash":"d2f473abc1301b483b912abbd69ec3a28050eb02","modified":1539827898521},{"_id":"source/_posts/6CreatWordPress.md","hash":"a59a62151b1ab4a28fa8cb31f75c86f9463e4b5a","modified":1539827941921},{"_id":"source/_posts/7CreatGitPage.md","hash":"72dfbc093f05df8bd6e064d9d1b5bf57d8a08a40","modified":1540019772511},{"_id":"source/_posts/8SupGitPage.md","hash":"14219d41076e7a6bc89daf059c9d236273dd5af8","modified":1539957218492},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1514806389000},{"_id":"source/_posts/3JsonDeal.md","hash":"23e5701a4724bac30fe4e4cd1920e23f4000244c","modified":1539827880922},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1514806389000},{"_id":"source/_posts/9howtoeditthemes.md","hash":"0026dd5115e9b8f2d56a369ad6df316927d9f7d6","modified":1540641070675},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1514806389000},{"_id":"source/_posts/21swfobjectdemo.md","hash":"88d8dd11a9051edddcc4586f9e84b1b966a687da","modified":1540641285406},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1514806389000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1514806389000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1514806389000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1514806389000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1514806389000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1514806389000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1514806389000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1514806389000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1514806389000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1514806389000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1514806389000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1514806389000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1514806389000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1514806389000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1514806389000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1514806389000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1514806389000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1514806389000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1514806389000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1514806389000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1514806389000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1514806389000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1514806389000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1514806389000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1514806389000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1514806389000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1514806389000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1514806389000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1514806389000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1514806389000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1514806389000},{"_id":"themes/next/layout/_macro/post.swig","hash":"d3c4d291941de6baf2d7f4650c2da1a3d77ddde3","modified":1540477698552},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1514806389000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1514806389000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1514806389000},{"_id":"themes/next/layout/_third-party/mob_share.swig","hash":"920c9b84fc90cbc3e1654c726277cdccbf0801f8","modified":1540015323994},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1514806389000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1514806389000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1514806389000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1514806389000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1514806389000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1514806389000},{"_id":"source/contentimg/headpic.jpg","hash":"ff4602f1521df5141fbd9bec4cf381e86f6dcdec","modified":1539688106414},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1514806389000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1514806389000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1514806389000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1514806389000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1514806389000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1540046757390},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1514806389000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1514806389000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1514806389000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1514806389000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1514806389000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1514806389000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/alipay.png","hash":"194f2a6d49d8569343886c9572c69e32c10adad0","modified":1540711632850},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1514806389000},{"_id":"themes/next/source/images/redhand.png","hash":"3550285eb69067046769f009bf1e1629d1ecf956","modified":1539250102333},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1514806389000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1514806389000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1514806389000},{"_id":"themes/next/source/images/wechataddfriend.png","hash":"fa251b626d99534496ef585a7e6b4f9e29a6dd96","modified":1539530506596},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1514806389000},{"_id":"source/unitydemo/4/index.html","hash":"80b31c352b7d42fe8ec8d0dc192fcde7d8a7a783","modified":1540795637437},{"_id":"source/unitydemo/5/index.html","hash":"143d25d9b90a30474ee6c9f3cf4c222956ba4e5f","modified":1541480309677},{"_id":"source/unitydemo/2/index.html","hash":"d49dee05f51c832f9a5f2d5540cdaab0821e4620","modified":1540787260536},{"_id":"source/unitydemo/1/fish.html","hash":"553e6af53a2cf2d5f5e14d1060a25f198cce7e6a","modified":1540052733392},{"_id":"source/unitydemo/3/index.html","hash":"12f88ffe193b39c46f6c6f30c804ccf9073042ac","modified":1540787259976},{"_id":"source/unitydemo/pdfjs-web/LICENSE","hash":"598f87f072f66e2269dd6919292b2934dbb20492","modified":1528189580000},{"_id":"source/unitydemo/1/fish.swf","hash":"4c399d6d4fb205347f89c83a047ead7041436cc0","modified":1540051463977},{"_id":"source/unitydemo/1/penguins.swf","hash":"9ac1be1035cdc493b5e85395f417699d51377998","modified":1540051290532},{"_id":"source/unitydemo/1/hamster.swf","hash":"3a1d1a3808dca7fb9abe0582f4edc5a7d1f69cc2","modified":1540050462192},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"source/unitydemo/1/swfobject.js","hash":"ec8d9bddcd3850ccac91fe101926113abcc5b0ac","modified":1540017828568},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"source/unitydemo/1/hamster.html","hash":"2fbbda172e26fa685b4c3cede59d81d2e01b33d4","modified":1540053202215},{"_id":"source/unitydemo/1/penguins.html","hash":"949d8073372090f959c84c846580fd661e76a8fe","modified":1540053276535},{"_id":"source/contentimg/10/1.png","hash":"e037ac299d6cab3920b6e36b3d1c097f0001f5ea","modified":1539839578100},{"_id":"source/contentimg/10/12.png","hash":"d6ba82d69af0e1b514b994d7e9501e1f4c361e34","modified":1539839621908},{"_id":"source/contentimg/10/13.png","hash":"bad8ed40fe328f2dc66030fa41a6a0a6efc1517f","modified":1539839625071},{"_id":"source/contentimg/10/3.png","hash":"cd29b94625ad66603877851e07d35abb1768d4cb","modified":1539839584975},{"_id":"source/contentimg/10/6.png","hash":"c2eeea90d35d5843ab832684bc25558c69cf129d","modified":1539839594730},{"_id":"source/contentimg/10/2.png","hash":"abae257c099336a3f7069bf3ee6e73e6a742cdaf","modified":1539839581523},{"_id":"source/contentimg/10/8.png","hash":"cc48df147dba2a4daf5c022d62aafbbd8de1b255","modified":1539839605012},{"_id":"source/contentimg/12/4.png","hash":"2e5b62d0e27f7994077d5b834e1ca0ac0ee43758","modified":1539847667121},{"_id":"source/contentimg/11/click.html","hash":"df31cc6e7400714d98f20b481975ef81d4695781","modified":1539844922256},{"_id":"source/contentimg/12/1.png","hash":"3a79366d2f604925be81bae7eebbaa799ba99d29","modified":1539847212034},{"_id":"source/contentimg/13/1.png","hash":"83ad8257d9ea02222e86afbf9234912b87b3ceaf","modified":1539851910887},{"_id":"source/contentimg/12/3.png","hash":"9ff353a5f0b405d6e0677f60ea7ea1449b2a1996","modified":1539847500395},{"_id":"source/contentimg/13/2.png","hash":"6b9a4ef778c36257cd4e764148132a40b58620c2","modified":1539853272904},{"_id":"source/contentimg/14/1.png","hash":"f5e0a2c88061f1ad9c423b595c8b093e378f6743","modified":1539939219074},{"_id":"source/contentimg/14/4.png","hash":"0d02eae7fa07ce4cfd1348b4a43ff518018d23de","modified":1539941480890},{"_id":"source/contentimg/14/5.png","hash":"302fe46b5a5b946af06ee937f44ba708cab58ee9","modified":1540035695706},{"_id":"source/contentimg/15/1.png","hash":"c0106a13f6b0476ca13ed7539f58bb426087db30","modified":1539934596365},{"_id":"source/contentimg/14/2.png","hash":"6ef7d9ff3b64759ce913e53f5f915d758dd6af17","modified":1539940707235},{"_id":"source/contentimg/15/3.png","hash":"03766ab0d7213ddc97a00e6f8b72d72e66695295","modified":1539934743342},{"_id":"source/contentimg/15/4.png","hash":"29f4aed59d95c1fb1d6fa7fe1dd98ac4a895fa2c","modified":1539934954367},{"_id":"source/contentimg/15/6.png","hash":"4d142339adbe01d09b40d06e2106470dcdf1011e","modified":1539935770619},{"_id":"source/contentimg/17/2.png","hash":"265e11bf56667684799c5da78ec363fa3f3f7725","modified":1539925973804},{"_id":"source/contentimg/17/3.png","hash":"0d4d3e968b5a90610dff52f1dfde59db94b58587","modified":1539925985054},{"_id":"source/contentimg/17/1.png","hash":"a8059411e27713ea8ecc0012ebdcfb05cdbb9958","modified":1539928370804},{"_id":"source/contentimg/19/1.png","hash":"090aa2898b2e1935f68b97e9a549282f5787e178","modified":1539933425563},{"_id":"source/contentimg/14/6.png","hash":"d3fb1982d2d58f9951bee316073f5305e4b47e3b","modified":1540035819737},{"_id":"source/contentimg/15/2.png","hash":"4056aeccde24f4c5b71169d53c2ae681269e85fd","modified":1539934661659},{"_id":"source/contentimg/19/2.png","hash":"935d24009e892cde060a8cb3aaf07adfce92f268","modified":1539933650169},{"_id":"source/contentimg/19/3.png","hash":"7fd094f04fe2cf02382c54db5a6a4f3d557983a6","modified":1540638899129},{"_id":"source/contentimg/19/4.png","hash":"1ea0c1b8ffd015e4f25c6748eb4b4d83c61c9839","modified":1540638978621},{"_id":"source/contentimg/19/5.png","hash":"8a237d4a821d6f8d45a01c75dfa902d9118a75ad","modified":1540639084628},{"_id":"source/contentimg/20/4.png","hash":"144fda15fdbd55112149dd1874e1cbc00e6b1271","modified":1540042439958},{"_id":"source/contentimg/17/5.png","hash":"8cf9faf02bdf5ed58e843de19fad234dcc7dad70","modified":1539929327567},{"_id":"source/contentimg/21/1.png","hash":"9fea3bb8f1357a3eb70bf8b5279657fd2c5d2b3f","modified":1540053421488},{"_id":"source/contentimg/2/1.png","hash":"d233c86dc3077006d20cd93cbf2a886aab876667","modified":1539526635753},{"_id":"source/contentimg/23/6.png","hash":"55652782a4a6df1dcbb9451f9ad5562375a54e3a","modified":1540217959123},{"_id":"source/contentimg/2/2.png","hash":"226b39ba1c58d9fa99dac375d94b9a455de40cd8","modified":1539527879113},{"_id":"source/contentimg/2/3.png","hash":"4aab13d7efa448a0ce01c8433a8f22e9883640a3","modified":1539528295384},{"_id":"source/contentimg/2/5.2.png","hash":"e35da2bc77666fae3f52c6c22ca00eba2d5fb71a","modified":1539535963598},{"_id":"source/contentimg/2/4.2.png","hash":"2a371d790dd45382b909fa580bb63ea0c2fe76d4","modified":1539529747376},{"_id":"source/contentimg/2/8.1.png","hash":"bc1ce30691cce309ff5f382a7534670cfd7b6254","modified":1539578049963},{"_id":"source/contentimg/2/8.2.png","hash":"bc4e641a4e868b7a3f8787a6c7ffa6ff676f28ff","modified":1539578118721},{"_id":"source/contentimg/29/2.png","hash":"cc63c8258b72ffd9a1f6540315918b00c89fe8f4","modified":1540174563314},{"_id":"source/contentimg/30/14.png","hash":"31f68937e1dd7b6201f4665d80b70b1b29ae420b","modified":1540568848246},{"_id":"source/contentimg/30/16.png","hash":"0d0bcbe4257d34eb437d8d61e33d01fc72c4874c","modified":1540617655715},{"_id":"source/contentimg/30/17.png","hash":"823f83b9f20a7190539937d18abd4db0ef794674","modified":1540617669986},{"_id":"source/contentimg/30/3.png","hash":"44ee79ac09d1ce20240600693d3edb078a11908c","modified":1540534743325},{"_id":"source/contentimg/30/6.png","hash":"bdcc080f63c470ff28d88d4300452d25f1c0db61","modified":1540535537625},{"_id":"source/contentimg/26/12.png","hash":"2e51697ee3d90e09ac8c6e0bc9064849c282c9a5","modified":1540310450711},{"_id":"source/contentimg/26/13.png","hash":"f8032e1ecf3540499e5713baca10e35c2181b5a4","modified":1540310871559},{"_id":"source/contentimg/26/14.png","hash":"36e7a51e257b17790aaec1dc93b92c9728232fac","modified":1540311574981},{"_id":"source/contentimg/26/10.png","hash":"7aeb6dc87ec434d31b338d768a19f4fcd09ba878","modified":1540309940105},{"_id":"source/contentimg/26/3.png","hash":"eaaadcbfb35dac6a54adb5d034c2fdcf5258ec54","modified":1540307593141},{"_id":"source/contentimg/26/11.png","hash":"327c9d10fd7958a2631193e2366a5871e05e060f","modified":1540310269254},{"_id":"source/contentimg/26/1.png","hash":"313f760385b01768adbbec1e7d6c9562a60a7541","modified":1540305445945},{"_id":"source/contentimg/26/4.png","hash":"65b4dbe3b003cf662c2d511354d289cf5c255584","modified":1540308972586},{"_id":"source/contentimg/26/9.png","hash":"942955b425c1a7eabf546b5db0b5aba1b3020c29","modified":1540309683311},{"_id":"source/contentimg/27/5.png","hash":"b4468c8964e56b5582f3bf2bed50250cbaf37ecf","modified":1540345032772},{"_id":"source/contentimg/3/10.png","hash":"50b779e5ef500a410bbebc04ded659fb00567426","modified":1539578719573},{"_id":"source/contentimg/3/11.png","hash":"0fe4fd4f2a7f8c108960d3bb67285e7a361feeed","modified":1539578723309},{"_id":"source/contentimg/3/14.png","hash":"450696b9b4f7c337bbacbbdddb1e08c2140b2cd4","modified":1539578735983},{"_id":"source/contentimg/3/18.png","hash":"fc7cfbe85665c2797e4039231daeaadc9b902ed9","modified":1539578753484},{"_id":"source/contentimg/3/2.png","hash":"4b649dc32402c7d05214b20df4c32a8a634ed084","modified":1539578670824},{"_id":"source/contentimg/3/3.png","hash":"96af9cd3437b85b66707e20d52ce4968cc197144","modified":1539578674574},{"_id":"source/contentimg/3/16.png","hash":"905d5b1b1c2021c969e34874a7c467df81fb2890","modified":1539578742337},{"_id":"source/contentimg/3/6.png","hash":"e54eb73db270151a75a8367abd850c9b1b1f7cb5","modified":1539578695761},{"_id":"source/contentimg/3/8.png","hash":"273361e0df4f923b98787a5fc7a3e45f752bdc34","modified":1539578703149},{"_id":"source/contentimg/32/3.png","hash":"54d453edd71db4195eec8027b82be035eb0d0f14","modified":1541380222960},{"_id":"source/contentimg/32/4.png","hash":"3ca66bac79fa802413116fe8f2ef530496bcd498","modified":1541380239969},{"_id":"source/contentimg/32/5.png","hash":"ba30ce6d0fe9d01df3956d6289c596cc99c9960d","modified":1541380443307},{"_id":"source/contentimg/32/2.png","hash":"2efe3e48903c72fe34dbdc4b2cbe4b30296fbd0a","modified":1541380211477},{"_id":"source/contentimg/32/6.png","hash":"205b0beba43ecb41572901b108a385105d06a7a9","modified":1541380823816},{"_id":"source/contentimg/35/Finite_State_Machine.html","hash":"d046867fea4c84d48082e506e2c881fff095fa5f","modified":1541653245093},{"_id":"source/contentimg/22/1.png","hash":"186ff66bde4ca5cd58712be02fb8735f09ecac99","modified":1540450804375},{"_id":"source/contentimg/22/1.jpg","hash":"1b48339b207df339a974399775c89fb4b16971cc","modified":1540107487616},{"_id":"source/contentimg/22/3.png","hash":"50f289764e1b999f54017bc1b5ff39177bf10e8d","modified":1540451636371},{"_id":"source/contentimg/22/4.png","hash":"08a8d023edb1bdf77debee501551add3ec5a0081","modified":1540451876021},{"_id":"source/contentimg/22/7.png","hash":"359856c28bdeb8c6a0dc0ffc6dd0d8448107be56","modified":1540452521394},{"_id":"source/contentimg/22/6.png","hash":"49c91d8ae2e2efaf40256fc45d8030f4c61d7618","modified":1540452435980},{"_id":"source/contentimg/4/1.png","hash":"aec49ece384c7d46933a08061fcd47df2bdd1ddb","modified":1539584180728},{"_id":"source/contentimg/4/2.png","hash":"14a271886f848ce430ea56f94b63c8eb258b5f1c","modified":1539584293897},{"_id":"source/contentimg/4/3.png","hash":"33aab85efd4e188f352f6cb173ac4bab6eced36c","modified":1539584584656},{"_id":"source/contentimg/4/4.2.png","hash":"ed9704102204d21d60567617bd7ff291749d568d","modified":1539584882584},{"_id":"source/contentimg/4/4.1.png","hash":"d72f07c98a52fee1f6867531bb48edeca604efb4","modified":1539584734919},{"_id":"source/contentimg/4/4.3.png","hash":"b7d524abd04487436cf5021234bc1375d270f564","modified":1539584948365},{"_id":"source/contentimg/4/5.2.png","hash":"efcb71ed10eb4d55a557016c4fb43c2415992da0","modified":1539585535476},{"_id":"source/contentimg/4/9.1.png","hash":"5578ed4788a05d4632bf1a87f748a1508eec6b83","modified":1539586818184},{"_id":"source/contentimg/5/1.png","hash":"25135810fe1d5055af2671f9dc18fb1b016cfef1","modified":1539588392453},{"_id":"source/contentimg/4/9.3.png","hash":"e6ac28d0786dcca39b8220ceee019ec2e2b88789","modified":1539587148654},{"_id":"source/contentimg/5/11.png","hash":"aed0f5d36556293357f5e0034accc3a9a1d1560a","modified":1539588743878},{"_id":"source/contentimg/5/10.png","hash":"774c6c948448a263dfa7565368030edbdebb27d2","modified":1539588739732},{"_id":"source/contentimg/5/13.png","hash":"ae782c721e0a6b6d4a4478e9b3df1c592adfd805","modified":1539588754635},{"_id":"source/contentimg/5/2.png","hash":"b6071c3fb0fd9411f23978363b545b7d0492236c","modified":1539588427173},{"_id":"source/contentimg/5/5.png","hash":"2088cd5b5b7aaf9517d7823a4c19753605ed7d74","modified":1539588639965},{"_id":"source/contentimg/5/12.png","hash":"9ecf458c9377c2bbb0b3c516e047d284cb13677f","modified":1539588748217},{"_id":"source/contentimg/5/6.png","hash":"9c8a64a3386314256ac8f64d2d413235a83fef0c","modified":1539588679914},{"_id":"source/contentimg/5/3.png","hash":"20e43b66be3641e5082346e47fbf59859a65ad28","modified":1539588490548},{"_id":"source/contentimg/5/7.png","hash":"653699756077d0488df753fcc137ca7fad759c72","modified":1539588718065},{"_id":"source/contentimg/5/9.png","hash":"43fe733a78c7dc3d290aafd0281c52e290d692ce","modified":1539588732638},{"_id":"source/contentimg/5/8.png","hash":"37fcbc8bdf6f70edac33d10f13808d038d19505c","modified":1539588723036},{"_id":"source/contentimg/6/3.png","hash":"2c5e88c6c3c9a020cae64fa62c7ab4ba1b830ef8","modified":1539242369592},{"_id":"source/contentimg/6/1.png","hash":"3c378d78f3f20d00400fb55e13855007136b0bec","modified":1539240943640},{"_id":"source/contentimg/5/4.png","hash":"eeca58ccf331f8159f19639e9d9092a87fdbc3b5","modified":1539588527136},{"_id":"source/contentimg/6/4.png","hash":"59010d2e94802a2746a08da12f897d3efac144af","modified":1539247129817},{"_id":"source/contentimg/6/5.png","hash":"85b91b6bffb32c7e561eb8f0371f114fb211e781","modified":1539758742271},{"_id":"source/contentimg/6/7.png","hash":"a5ca513b80a3fc32b5ba2e73e947eac9bb01cf7f","modified":1539758869069},{"_id":"source/contentimg/6/14.png","hash":"ada59038fbcf3bb4255b47d7bee0fc652f3192e6","modified":1539771574809},{"_id":"source/contentimg/7/11.png","hash":"c2ba7af53bebfaa27b3be00da8801b6b7b5218b5","modified":1539770315174},{"_id":"source/contentimg/7/16.png","hash":"b4dc84925cab6ec1dc608b53843cc8a7d0819944","modified":1539773187200},{"_id":"source/contentimg/7/19.png","hash":"9d90027980d30e550c63a28a4af735c122802286","modified":1539774042473},{"_id":"source/contentimg/7/10.png","hash":"56e8248d5226777240ed49b457f55b814c4dc3cf","modified":1539770050325},{"_id":"source/contentimg/7/22.png","hash":"18abaab60bf983d813393d4bfe2d5c6fbfdd3af1","modified":1539776202062},{"_id":"source/contentimg/7/3.png","hash":"e8f73ef7697c1d6cd127b57be5dc466bc563d289","modified":1539763691025},{"_id":"source/contentimg/7/4.png","hash":"30317aac3e26ddf2bb3190e4c0d55d0b459b4232","modified":1539767162797},{"_id":"source/contentimg/7/14.png","hash":"0250e37edab8139d744e9511f9b5405444e76736","modified":1539771601958},{"_id":"source/contentimg/7/5.png","hash":"d42423be9d5deba950775cb39cf3b0cdd85367b4","modified":1539767919310},{"_id":"source/contentimg/7/6.png","hash":"a309cd40029e9284e39ea8df7adb4c986cca9069","modified":1539768298943},{"_id":"source/contentimg/8/2.png","hash":"9667c1c0347e6b595b95f37034eff9fdaf6c8207","modified":1539779731191},{"_id":"source/contentimg/8/1.png","hash":"afc7c0377db8efcf30e5b18eb8581fc190ffc538","modified":1539779222984},{"_id":"source/contentimg/8/7.png","hash":"c8cd40f99dd8298688f39bc2589bb3dbc88700b3","modified":1539783735084},{"_id":"source/contentimg/33/3.png","hash":"0d72dddce39cc2eb86b9afe47a553ddb36132472","modified":1541407457164},{"_id":"source/contentimg/33/4.png","hash":"498452ec7b4aeea2b828783489472ca428936fa5","modified":1541407977667},{"_id":"source/contentimg/33/2.png","hash":"ab62a14c954179c050e13d81957faa3af7eddea9","modified":1541407438581},{"_id":"source/contentimg/33/5.png","hash":"d706c5177cbf82f543429ed93d63c90a46a564eb","modified":1541408469790},{"_id":"source/contentimg/33/8.png","hash":"b570c053e404ca1b07cb6e38cfc251abea1ce332","modified":1541425446716},{"_id":"source/contentimg/33/9.png","hash":"92af5da7ce3fbbfac405a226cd82f59704f18d0e","modified":1541425710638},{"_id":"source/contentimg/33/6.png","hash":"42b78bf4653d3023edb2467b4c95980b3cb27a19","modified":1541410015731},{"_id":"source/contentimg/8/9.png","hash":"8b081dbc8a3033aa250dc8b66a7734f9173d4d6d","modified":1539836401148},{"_id":"source/contentimg/9/15.png","hash":"819315c268e3a74e644909705b820778ee6327c2","modified":1539960885167},{"_id":"source/contentimg/9/14.png","hash":"dd9d19e65a78654c08994dd58fc79bdabc8d6dcf","modified":1539960824354},{"_id":"source/contentimg/9/17.png","hash":"6c7fd34a1fd296c94812cdf69b410163a85bec82","modified":1539961298033},{"_id":"source/contentimg/9/19.png","hash":"317cc51252a2e48771a6ff877e3b2f2403813360","modified":1539961715619},{"_id":"source/contentimg/9/18.png","hash":"d4f173ea82a6703b43fb695489c533a89eff39a0","modified":1539961619142},{"_id":"source/contentimg/9/20.png","hash":"ba4f6ac31d21dacd17991199f823388ecfa950a4","modified":1539962040634},{"_id":"source/contentimg/9/25.png","hash":"8b8ee03de1d99d412d605fb6a9a5dd7ddbf8c403","modified":1539972079113},{"_id":"source/contentimg/9/24.png","hash":"187e607d4b7eb8b41f4c5085236914df3c53c7cb","modified":1539971790181},{"_id":"source/contentimg/9/28.png","hash":"14b97c7460281e85d20394a5dc2a64f2879b5289","modified":1539973103507},{"_id":"source/contentimg/9/3.png","hash":"e5035e62fddbc2956e384c8f539c1e927fcef87d","modified":1539957991192},{"_id":"source/contentimg/9/29.png","hash":"6cd1f9531f5b81bc4569031b3496af3e7dbfa2b7","modified":1539955368621},{"_id":"source/contentimg/9/31.png","hash":"9a0f2d4415c9e1c510bc5e57622ed63b0c0e7ff5","modified":1540011499781},{"_id":"source/contentimg/9/26.png","hash":"eb92d7f943981e1f25561246d5ad6ebe1c744ca4","modified":1539972112028},{"_id":"source/contentimg/9/35.png","hash":"023345524c72d14ef8bd5bc88a4035586ca7d5b8","modified":1540027066354},{"_id":"source/contentimg/9/32.png","hash":"7480829baa301f279192393679051654e96eadb1","modified":1540011719410},{"_id":"source/contentimg/9/36.png","hash":"670656e27249439ca1693e062b79aa81dd33afcf","modified":1540027357849},{"_id":"source/contentimg/9/38.png","hash":"ee43741fb88099dc1515666668bf9ac0c5b640c1","modified":1540027550942},{"_id":"source/contentimg/9/4.png","hash":"2fb01799f7386e64e462ba12db88c90fc3653560","modified":1539958061657},{"_id":"source/contentimg/9/33.png","hash":"cf6b8c4dfd9a9485507f725e93fee0e4748fee8b","modified":1540012039558},{"_id":"source/contentimg/9/40.png","hash":"e136b205b0a2dfbc9ed69edbafff1791206237be","modified":1540028325381},{"_id":"source/contentimg/9/43.png","hash":"e90aa9a9425be8b39f07efdb578f2ec182cd3b80","modified":1540028638494},{"_id":"source/contentimg/9/45.png","hash":"773607daa99e62a1bfca3e888d06744412a18de4","modified":1540030369330},{"_id":"source/contentimg/9/41.png","hash":"0483002c5517f703e06c4534975a22dd4c73d336","modified":1540028446412},{"_id":"source/contentimg/9/44.png","hash":"b3ad7252b911820d24b9a56d71a8889547e2ae41","modified":1540028948066},{"_id":"source/contentimg/9/42.png","hash":"6bca4a1568591c0f5852386c27f13cb1ae250bf5","modified":1540028529808},{"_id":"source/contentimg/9/47.png","hash":"a14bc83924d9f0807e4245a626d25637f1c72976","modified":1540036915870},{"_id":"source/contentimg/9/48.png","hash":"d09b093690fa081e4efde7c37135e1bdb0b532bb","modified":1540037080846},{"_id":"source/contentimg/9/51.png","hash":"5eef7724c191f6e3651834816f4ad437d952a7d3","modified":1540103815897},{"_id":"source/contentimg/9/50.png","hash":"64fbfff5d72a4e4ee224206ae92c79dd8e0462c2","modified":1540100778430},{"_id":"source/contentimg/9/6.png","hash":"c7d8aa996e6ec4f2d611d2d0eafa2328262ca0e7","modified":1539958354631},{"_id":"source/contentimg/9/7.png","hash":"7f67feb15bbecfc443983a356728ea48c0c1e598","modified":1539959347448},{"_id":"source/contentimg/9/9.png","hash":"041be9acfd4ef2a2b666d383c9547dc760fb0b85","modified":1539960212915},{"_id":"source/contentimg/31/1.jpg","hash":"75bb1ac4a196da59a1eacc67a02b65f38c9ba5aa","modified":1540733145799},{"_id":"source/contentimg/31/12.png","hash":"e45dcda25212bf304a31fb63b05ae75107298884","modified":1540738101862},{"_id":"source/contentimg/31/4.png","hash":"5f01747be47bd2df2a37a3f8b9f8ba2ca4ab971f","modified":1540736565486},{"_id":"source/contentimg/31/13.png","hash":"9b7a729dda3ad24f5f7e8564d6c4174d3b2beb64","modified":1540740831941},{"_id":"source/contentimg/31/3.png","hash":"530df18293f73a1c38a1e410eb59ba888b5998e7","modified":1540735758775},{"_id":"themes/next/source/images/wechatpay.png","hash":"9609d38fd97ed42f67d503098a165292dd7bea71","modified":1539511813331},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1539963256375},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1514806389000},{"_id":"source/contentimg/1/2.png","hash":"fbd336c6cf7adc933dc0c58e09731d3080bf7457","modified":1539521585075},{"_id":"source/contentimg/1/3.png","hash":"b7cae233a934124e2030ce0e6946931b2f0a8666","modified":1539522163505},{"_id":"source/contentimg/1/4.png","hash":"6be88bf0aaed01e73a1dbeb48e67adfa0a22763e","modified":1539522661305},{"_id":"source/contentimg/1/5.png","hash":"328926e0507e4acd5b9c38780d449fd9e19ed51a","modified":1539522742898},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1514806389000},{"_id":"source/contentimg/1/1.png","hash":"c2dcd5d592fa7be08c17e58979503a4015cfed92","modified":1539521529431},{"_id":"source/contentimg/1/7.png","hash":"5023ac9df7b9ba7368d9d922a080bbec02df94e3","modified":1539523434425},{"_id":"source/contentimg/1/6.png","hash":"fed208e05d030d15e91c3f639cbf564681fde876","modified":1539522848750},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1514806389000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1514806389000},{"_id":"source/contentimg/10/11.png","hash":"52104a43e2adccd6ec296dac9fc2d394a7fd8046","modified":1539839618223},{"_id":"source/contentimg/10/10.png","hash":"e6e541356d0d3e679dd4d96aa2ff003a5542e380","modified":1539839614002},{"_id":"source/contentimg/10/5.png","hash":"758c081f50dc616ee7ab785da2d1d470fdb525c4","modified":1539839590916},{"_id":"source/contentimg/10/4.png","hash":"6109e81c51da629fd1f0c0dec2ceda5dc187ecfc","modified":1539839587980},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1514806389000},{"_id":"source/contentimg/15/5.png","hash":"2789f2acaa6ec4bf11f65a151df29dccb64dfd6a","modified":1539935423174},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1539617867773},{"_id":"source/contentimg/17/4.png","hash":"1ce52c7a2d8670d5281c27d580e0085ca05f473b","modified":1539926021838},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1514806389000},{"_id":"source/contentimg/20/1.png","hash":"5ba3133a9813fa6eadf54ce3e3ba6619a953929c","modified":1540041934225},{"_id":"source/contentimg/20/2.png","hash":"d14a9ddeddcf64c8492be188f131c0629b00cd64","modified":1540042367941},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1514806389000},{"_id":"source/contentimg/20/3.png","hash":"5bc6c2ffc4cafcfae76849c924fcc882c4d2c04d","modified":1540042310400},{"_id":"source/contentimg/23/11.png","hash":"bf70f3f9da56889fb45565861929de03280ff9b9","modified":1540222865623},{"_id":"source/contentimg/23/10.png","hash":"82bd721b88f4aa1967ad653302221dd6d6bacb62","modified":1540222812026},{"_id":"source/contentimg/23/12.png","hash":"b2aa9c89e4fc2ea179c1e54ff6f337a705d12bf5","modified":1540223505388},{"_id":"source/contentimg/23/3.png","hash":"205688c64a71020f78855060e8f3f96da10288e3","modified":1540218702322},{"_id":"source/contentimg/23/5.png","hash":"b3cc7f72db43d68dafbd1c1a3aea7463bff9e09f","modified":1540217493649},{"_id":"source/contentimg/23/2.png","hash":"6a7f0504b0379f60f2e4840951b866c0d160b28b","modified":1540216716349},{"_id":"source/contentimg/23/9.png","hash":"7c2923e476a9d03a38335544c2c9f4ff79aa4624","modified":1540218154551},{"_id":"source/contentimg/23/8.png","hash":"fe9b21cd912e8b0107529a11e764c67321c5f466","modified":1540217759010},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1514806389000},{"_id":"source/contentimg/2/4.3.png","hash":"daad8478ee25c651fbe9b19af53bfdb0e8ab02ee","modified":1539529689195},{"_id":"source/contentimg/2/6.2.png","hash":"48f92371e045d021bd5a8141cb99e4ac65b65862","modified":1539537412431},{"_id":"source/contentimg/2/7.2.png","hash":"55eabe588aff80048a4bab0cd77348de6107b208","modified":1539577815555},{"_id":"source/contentimg/28/2.png","hash":"d2dd6bc22fed97908387520989438c29ff0a40f9","modified":1540402762763},{"_id":"source/contentimg/28/4.png","hash":"78412d3e2a7f2218baf66b8014af2aea7e6cacdd","modified":1540402953287},{"_id":"source/contentimg/28/3.png","hash":"35b72eb6ba6869716ad94d229a8a0c1711281bef","modified":1540402783528},{"_id":"source/contentimg/28/1.png","hash":"580f6a4b31b37d1c5a2a94926c9b6d23ea1cfc4f","modified":1540402727846},{"_id":"source/contentimg/30/10.png","hash":"54e07b98cf813c02a021f3b2686b91118d987143","modified":1540567255185},{"_id":"source/contentimg/30/15.png","hash":"481ecb8b5cea21516257c3a5f94619277cb88570","modified":1540568911678},{"_id":"source/contentimg/30/11.png","hash":"e02c12b01b70a89c80a0f8bf2f80796ab535841b","modified":1540567487204},{"_id":"source/contentimg/30/5.png","hash":"a64a44c7b1f8374605c574190958012851bc45ec","modified":1540535395377},{"_id":"source/contentimg/30/2.png","hash":"8a36a7f7f0cd05e5fd2148e83befb18b03c7127b","modified":1540534100789},{"_id":"source/contentimg/26/6.png","hash":"cca097bcdd9d0eee9588a02114ea41c84a7f2c90","modified":1540309167386},{"_id":"source/contentimg/27/10.png","hash":"38f9622af6424548b5dbbbb5a8c8da98ddc3ec21","modified":1540345048885},{"_id":"source/contentimg/26/5.png","hash":"49b0b5ca823bff2716188c656f0fc1dee3397e1d","modified":1540292767655},{"_id":"source/contentimg/27/2.png","hash":"e54bb7e37a5ba566ccfb97462dc482b083afd29e","modified":1540345020968},{"_id":"source/contentimg/27/1.png","hash":"ee2d219a0e18a88031d17e9cd18259aebc975222","modified":1540345017227},{"_id":"source/contentimg/27/6.png","hash":"59e6d5d8ab467e87e09d2ce7a5f8177990c4b375","modified":1540345036031},{"_id":"source/contentimg/27/7.png","hash":"b7feeef7d35f3e51f7d6d6931d8ac3630e7ba8f5","modified":1540345039287},{"_id":"source/contentimg/27/8.png","hash":"e067e215d8dd43d44d066195bb92bf2e79d35a1f","modified":1540345042170},{"_id":"source/contentimg/3/1.png","hash":"6491bcd751fd5a87e6ce03a24eb26a0332945b80","modified":1539578664751},{"_id":"source/contentimg/27/4.png","hash":"fece699db19db243bad81a797e65ec4f1641e9e9","modified":1540345028381},{"_id":"source/contentimg/3/12.png","hash":"8030896391fdc2d502a7a6590f0446275ea44cb6","modified":1539578726773},{"_id":"source/contentimg/27/9.png","hash":"b2e2fa151498e2c010002018532735ae5c086416","modified":1540345045377},{"_id":"source/contentimg/3/13.png","hash":"d90c5b60c03955e1615e0578af474cdb5d4a7d0f","modified":1539578732332},{"_id":"source/contentimg/3/17.png","hash":"ad4860601e84eb9e19dbb51532c0442648d65b8f","modified":1539578746528},{"_id":"source/contentimg/3/19.png","hash":"d7a1ebfdff97c566502f924b71ca058199efe6f4","modified":1539578759064},{"_id":"source/contentimg/3/5.png","hash":"81690ef5e16fb04853e628ffee1dab5494a729d8","modified":1539578690371},{"_id":"source/contentimg/35/CSharpMessenger_Extended.html","hash":"2af6f9a4c2a20a868e01b9bb42b6c4c5cc155d61","modified":1541612050172},{"_id":"source/contentimg/32/1.png","hash":"8e7cc40f18a835cdd875f7d6ebc4fa2bff42ec45","modified":1541379587284},{"_id":"source/contentimg/32/8.png","hash":"2e132d76dfbc1bcc0a6e514d35e1c00bf123b668","modified":1541382233648},{"_id":"source/contentimg/22/2.png","hash":"28d3c56c401538bbd9a783ccef20bfdb739c686f","modified":1540451288413},{"_id":"source/contentimg/22/5.png","hash":"45c6f92cc706f3d094f082b0ab87bf7ead020fbf","modified":1540452305936},{"_id":"source/contentimg/22/8.png","hash":"5d4c0c5b544244b9a62396dac4b416ab7cc833f7","modified":1540453186378},{"_id":"source/contentimg/4/5.1.png","hash":"65bcf756bf5184666add66240f7f045a032cfd6a","modified":1539585449209},{"_id":"source/contentimg/4/6.png","hash":"30c684ac74672a53af3fca5c5ffbb1e7f3ef2d2a","modified":1539585781963},{"_id":"source/contentimg/4/7.png","hash":"ddc1796d1a6c6cc27ad92ef2e262f5f5bb00e705","modified":1539586136679},{"_id":"source/contentimg/6/6.png","hash":"54f40695902323495c840fe6340cdc4580d6fd0d","modified":1539758807249},{"_id":"source/contentimg/32/7.png","hash":"0545b04a365da1a7a589cf77697bbb693e0875e4","modified":1541380971615},{"_id":"source/contentimg/6/8.png","hash":"f14c74928773a74da23941fe09666d289663dc3c","modified":1539758901797},{"_id":"source/contentimg/7/1.png","hash":"aef809e1deeaedca8455abe7b9b1dc297ce9a9d3","modified":1539762647019},{"_id":"source/contentimg/7/13.png","hash":"f941c83027d9b2ced057fcb53d8529773b768a9b","modified":1539771565628},{"_id":"source/contentimg/7/12.png","hash":"f404bb4b8f9871791a39bb48f890d383aed5cd9b","modified":1539770945475},{"_id":"source/contentimg/7/18.png","hash":"500856ff93a91734cf84f72c24b4a68bb24e4c17","modified":1539773836910},{"_id":"source/contentimg/7/17.png","hash":"f9b03d764ffac645667f8a9831e03bcc4180e92b","modified":1539773277607},{"_id":"source/contentimg/7/20.png","hash":"72e0646d76360f448bccf98440752966ede3ee45","modified":1539774572841},{"_id":"source/contentimg/7/21.png","hash":"d9590adc61eb63f60c43c41cd0058a9bd8e3aa0a","modified":1539775005743},{"_id":"source/contentimg/7/2.png","hash":"92fa2821cb09ad2aa74a96a256f23218f10ae176","modified":1539763347154},{"_id":"source/contentimg/7/7.png","hash":"0c454c1f68d69bf492a82a64688f5a98e1ffd573","modified":1539768345276},{"_id":"source/contentimg/8/12.png","hash":"ccc32732974a7ddd9a9db4c7ab750229d32990ac","modified":1539878024504},{"_id":"source/contentimg/8/6.png","hash":"fc11e11b36841700d104242954cf41431ace05db","modified":1539783232386},{"_id":"source/contentimg/8/8.png","hash":"17090653614b1a4d64027904d9d8ebcd56360135","modified":1539783802334},{"_id":"source/contentimg/8/4.png","hash":"e39b37c0581b6736130c82e45d3c3db565c9e817","modified":1539782223145},{"_id":"source/contentimg/33/12.png","hash":"22aaeecd3a23804857653aab0fd216e8fee1f193","modified":1541446979280},{"_id":"source/contentimg/33/10.png","hash":"4e763dad08f114710d8444fc83ce876d6ff5c2e4","modified":1541427920679},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1514806389000},{"_id":"source/contentimg/33/7.png","hash":"41a1093f20b37031a02fed5602bdc59eee64bec2","modified":1541410086907},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"c31c70c880c9b503cc05956b72f32ef4d2e0988a","modified":1539853142496},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1514806389000},{"_id":"source/contentimg/9/10.png","hash":"8b565d2cb74a917a0b4f6832613b9e6b26fa91c8","modified":1539960260600},{"_id":"source/contentimg/9/12.png","hash":"bf024eb75de8b7d84f38fbf7443c4662a9e283ed","modified":1539960265114},{"_id":"source/contentimg/9/13.png","hash":"cf322c15a54ce96182a8839bc89cd95382117dfb","modified":1539960524421},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1514806389000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1514806389000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1514806389000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1514806389000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1514806389000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1514806389000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1514806389000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1514806389000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1514806389000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1514806389000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1514806389000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1514806389000},{"_id":"source/contentimg/9/30.png","hash":"c6bcb74f642468949e93483856465af6a4d9e174","modified":1540009545246},{"_id":"source/contentimg/9/34.png","hash":"150e1bd85eded62e3fdbacb2d281e95d59d56a5c","modified":1540014438875},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1514806389000},{"_id":"source/contentimg/9/39.png","hash":"06ece799d5116c209cc92559ff4dd46e4101ebe1","modified":1540028087548},{"_id":"source/contentimg/9/46.png","hash":"349cb055b13e201ef8ea4ef045411a3d83ef0a3b","modified":1540031572335},{"_id":"source/contentimg/9/49.png","hash":"07113612fdccad42e5bffc237cdf413f4960d1a9","modified":1540037125256},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1514806389000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1514806389000},{"_id":"source/contentimg/9/5.png","hash":"da0f765c1af35ccf10415c0a03ff4d3b37d8befc","modified":1539958208238},{"_id":"source/contentimg/9/8.png","hash":"a8d7f70bf80de44a7f84f8242d01b36a9c7209fc","modified":1539960188135},{"_id":"source/contentimg/31/11.png","hash":"976d9cea53ed633e2e0196b813448c409c5d7d29","modified":1540737291988},{"_id":"source/contentimg/31/2.png","hash":"c4dbe72b604807366f6e930c1fe1b1b89c4c0e7a","modified":1540735677463},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1514806389000},{"_id":"source/unitydemo/4/Build/test.json","hash":"f109e93aa44ebd6b6817a0792f643f455885759c","modified":1540795637434},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1514806389000},{"_id":"source/unitydemo/3/Build/test.json","hash":"49c6fe1eaa53e1641aeaa977416e39a2cfb212a8","modified":1540787260153},{"_id":"source/unitydemo/5/Build/test.json","hash":"a4588b02f5e7a31a79ef44750c14d31065331c50","modified":1541480309674},{"_id":"source/contentimg/31/9.png","hash":"428d42c961338b9f8f49c7ae11264f2b8662959d","modified":1540737135330},{"_id":"source/contentimg/31/7.png","hash":"8c7ea17b4afebf036062c1bc6f697e616352c43e","modified":1540736871468},{"_id":"source/unitydemo/pdfjs-web/web/viewer.css","hash":"e6841cb4b7a16f44eee4d948bce74b4dc0f3d4f8","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/viewer.html","hash":"c360a1d068fd6382bd713155a3b1da0e7e2fac3a","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/debugger.js","hash":"a9870064e699ea0f591243126a830c8b74c6a8c6","modified":1528189620000},{"_id":"source/contentimg/10/7.png","hash":"03f248eab74dc54e0a113b198180783c9289bafd","modified":1539839600170},{"_id":"source/contentimg/23/1.png","hash":"0fb85b6771a76c919ef6cf575aef1d2cfffc427b","modified":1540215427403},{"_id":"source/contentimg/23/4.png","hash":"52bd2cf44cf4703d86f526ef9074232877840d8b","modified":1540217468819},{"_id":"source/contentimg/29/1.png","hash":"bd315cdcd2a84be11bfde0d574eee6b49dbc8855","modified":1540442556085},{"_id":"source/contentimg/26/7.png","hash":"de5324a2e48c12a96608903ea3ced874cbfcc6eb","modified":1540309225163},{"_id":"source/contentimg/3/4.png","hash":"424a38786d1a2caf8a291e21275c66b8dbb5d0e9","modified":1539578678813},{"_id":"source/contentimg/3/9.png","hash":"9c45296a04af4eb5dccbf1e300d40809f335eaf5","modified":1539578707839},{"_id":"source/contentimg/22/10.png","hash":"1ffb836eacc795f4a2e6767adcec35427fe964b2","modified":1540453679860},{"_id":"source/contentimg/8/5.png","hash":"3c2c258bc884684f9152516031dd108c2157c34a","modified":1539782904918},{"_id":"source/contentimg/9/16.png","hash":"029604656788c3bc85993591d763ea48d9f472d3","modified":1539960940606},{"_id":"source/contentimg/9/1.png","hash":"c1bdd8fd7d4b61be24774ab6d6218550432576d6","modified":1539957871604},{"_id":"source/contentimg/9/23.png","hash":"bf934c063409a0652b27453c2b038b91de4cc613","modified":1539971427721},{"_id":"source/contentimg/9/27.png","hash":"d23169dd3f2ac50c5378586a7a5556725ce328dc","modified":1539972305277},{"_id":"source/contentimg/9/37.png","hash":"88aeb6015af077d1b32c821d204129a0b9272d27","modified":1540027468940},{"_id":"source/contentimg/31/10.png","hash":"f3a9292390046eb6e0aaf6787a08bf8a913429c0","modified":1540737213728},{"_id":"source/unitydemo/2/Release/UnityLoader.js","hash":"4b6c2fce849866de413e58e79a3191aeb7d816fc","modified":1540787260217},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1514806389000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1514806389000},{"_id":"source/contentimg/12/2.png","hash":"79c75b9c5004ae64f9696fe1806767cb4a455536","modified":1539847352422},{"_id":"source/contentimg/14/3.png","hash":"f3b8a4c1b9f452d9dde59910d2b60dc72cb19437","modified":1539940293144},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1514806389000},{"_id":"source/contentimg/23/7.png","hash":"98182650605d4bbeac64b16542dd8fcef7531fd8","modified":1540217743551},{"_id":"source/contentimg/26/2.png","hash":"d54c61ddee2c91ac0bc1043551072716f9ce71a8","modified":1540306028694},{"_id":"source/contentimg/26/8.png","hash":"38924a37222a7aaa25f1f5107149660193bb14a7","modified":1540309253605},{"_id":"source/contentimg/27/3.png","hash":"f8bb7993dc91ae9d275bea020f74609dd0b81d0e","modified":1540345024594},{"_id":"source/contentimg/3/15.png","hash":"c29c7f59cd161bf870eb52493cc4367f477e130a","modified":1539578738923},{"_id":"source/contentimg/22/9.png","hash":"c46cbccd1fe92a7741b92b835b6445d93ddab314","modified":1540453457342},{"_id":"source/contentimg/4/9.2.png","hash":"71e73afd9adbad282a1b3480082a58754881a4d0","modified":1539587099547},{"_id":"source/contentimg/4/8.png","hash":"b0cf9fbd98c80005122dc08613ae0cdddad53c6a","modified":1539586607328},{"_id":"source/contentimg/7/15.png","hash":"68f46c66a4e7eb4abcc12bb60b00acb7653f6251","modified":1539773017333},{"_id":"source/contentimg/7/8.png","hash":"a273073340e40ad622df20763a9c64b0ceebb579","modified":1539768370367},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"a3915535488313cdfc1082974aff88484f27cb7d","modified":1539691265380},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1514806389000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1514806389000},{"_id":"source/contentimg/9/2.png","hash":"ed707cd5671ef389cc4e0cde2e4c28f1b487e62a","modified":1539957980684},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1514806389000},{"_id":"source/contentimg/31/6.png","hash":"17d668e7e8c1a117032032748806fe456569e5a5","modified":1540736818957},{"_id":"source/contentimg/16/1/3.png","hash":"20ee92c35b0ebd3421a56e10aff069a6160dab6f","modified":1539937917329},{"_id":"source/contentimg/16/2/10.png","hash":"473648343c9e38d5a1ccf8433b2321ff86aada59","modified":1539938285753},{"_id":"source/unitydemo/3/Build/test.wasm.framework.unityweb","hash":"d88cc1d5fb882331454546eeb8ce370f4d5c4c94","modified":1540787260022},{"_id":"source/unitydemo/4/Build/test.wasm.framework.unityweb","hash":"b6beb7846a4c8e312c05becb3a5695edc3b49a3b","modified":1540795640388},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1514806389000},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-check.svg","hash":"015d03ffa6a0ce93b41ed93a262879e4f8cf72fd","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-insert.svg","hash":"7a12af74ef20d5249a0c330d992bd1132308cbac","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-key.svg","hash":"d9224d3aef774d6ecc9735b440810ada4384be11","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-noicon.svg","hash":"5a5447e5c39cf7ca748853a15dbd835ddaa3b5df","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-newparagraph.svg","hash":"453ba47aa10b6fcf8459569e0a550b4f91260ec7","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-help.svg","hash":"2f3d88f4e8cefafc2d76932104f6b2517034af2f","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-comment.svg","hash":"5ec875153d5046507050a3531422ca69b44680c7","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-next-rtl.png","hash":"d02c4e9bf493dc83029098e59b6ece2363f3c760","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-next.png","hash":"4bcb69c72d25d822dd09a3999c6972c0c311f04b","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-next-rtl@2x.png","hash":"f9f2cea77208aa0e219f3bed69e22861c2858bc3","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-next@2x.png","hash":"dca2a1a3bdbe036735dda32e5ed909b029829a3c","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-previous-rtl.png","hash":"4bcb69c72d25d822dd09a3999c6972c0c311f04b","modified":1528189582000},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-previous-rtl@2x.png","hash":"dca2a1a3bdbe036735dda32e5ed909b029829a3c","modified":1528189584000},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-previous.png","hash":"d02c4e9bf493dc83029098e59b6ece2363f3c760","modified":1528189586000},{"_id":"source/unitydemo/pdfjs-web/web/images/grab.cur","hash":"fbd667e863c8278950e7761aee54b394cd93ea0c","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/findbarButton-previous@2x.png","hash":"f9f2cea77208aa0e219f3bed69e22861c2858bc3","modified":1528189588000},{"_id":"source/unitydemo/pdfjs-web/web/images/grabbing.cur","hash":"f30d68405751e730ca94ada8628df45b4839931f","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-documentProperties.png","hash":"6f1e0ce52dae6af31bb3c5b09bbb33a33849fd08","modified":1528189612000},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-paragraph.svg","hash":"70591a3b26c56815c6e5ab2bae959e8a951c43fb","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/annotation-note.svg","hash":"6100deeb6121f98c7e024ec1a273171207c84c7f","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/locale.properties","hash":"ebf2bace4f530a3f959bdf2a18e1a80aed0b2274","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/loading-small.png","hash":"c1abf9b89af7392824f2228312785a899df224a0","modified":1528189592000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-firstPage@2x.png","hash":"fd24d7a57e2a1205a67a11a760eb6dd50748da26","modified":1528189618000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-firstPage.png","hash":"453a575f2676ba39eacc71c074420d6c97c87a42","modified":1528189618000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-handTool.png","hash":"8db06773a09e2f407bdf7ce448777398b40fd313","modified":1528189618000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-lastPage.png","hash":"6819bdd3000af84c50df1b10b55b3af33944a261","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-handTool@2x.png","hash":"eb8a16519da1e074f9ed07e8a350a6b0d52e5339","modified":1528189618000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-lastPage@2x.png","hash":"2fb45311e8ee9658cc4276f1202ada9a55df774d","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-rotateCcw.png","hash":"548451d8a12570d66bce4c8922d8ccffb63ca61a","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-documentProperties@2x.png","hash":"bd55401797e24ae5066afb9677dca1463e74c839","modified":1528189612000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-rotateCw.png","hash":"252e8a4adaf406c4e9c78033d8d8163333ce4c1c","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-selectTool.png","hash":"f62d271d5403f35e372b2cdf4c892aac7d364665","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/loading-icon.gif","hash":"e043879d3ee94a3edf10260f21f44bfa4a6fc66e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/shadow.png","hash":"02b6adc1ca6ad8f57605ee92943b65c6250d73ba","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-rotateCw@2x.png","hash":"f37e80bc600112fa88251e53e953f14946967e19","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-bookmark.png","hash":"0193cebc494facb8ba8733a1a8f50457e7189f56","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-rotateCcw@2x.png","hash":"84f034b57d24f7371d1a605bd12afa1f71b50f1b","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-bookmark@2x.png","hash":"f822c6228ea6f9ad2ee5465ace31c725cf3289c3","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-download.png","hash":"b25abd4a3c95097a338b8b138476e22189cb235e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-menuArrows@2x.png","hash":"fdb29640d1f7ee31b09550163f85e01a70cebd13","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-menuArrows.png","hash":"acbbc7071a0641a10e1d50991d1abbfa26b5dce9","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-download@2x.png","hash":"6c2ddead63c9a9ac3371bd7b8b8b914e2f81d605","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-openFile.png","hash":"6b17acd1c4ea6a9d9859819456952eff133f3cc1","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageDown-rtl.png","hash":"641a0e2d711ec06176c046d8efcdff670da876ef","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageDown-rtl@2x.png","hash":"445833e5eebdcc99270b879d0079bb54310f1615","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-openFile@2x.png","hash":"ae13be299d7c18dde70d975d0e229d3e20137afd","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageDown.png","hash":"6e10286da3a52e0bba782d0fc4a7c33d10c8f4b9","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageUp-rtl@2x.png","hash":"1507890ff466f28f78ab7bd9f6eebfe2e4eeee8a","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageUp-rtl.png","hash":"0529bff456111ea1a264771afdcb2daebe68f79a","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageDown@2x.png","hash":"2b817130c3724f8a864845b03a142bd7e1cb61e9","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageUp.png","hash":"b1eae4614fb964b6d0483f114f3dd2b49ec1b64a","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-presentationMode@2x.png","hash":"c2d54d6f77f831963132555599e7314d4f07b49a","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-presentationMode.png","hash":"3d206e303f9663dca95482df9abe55a08851c574","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-pageUp@2x.png","hash":"9960af5e2ff7dfe8aba862d77305f409f5f1405c","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-search@2x.png","hash":"25c50114436d8d598416a5c3eed9e1db282c43b3","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-print.png","hash":"77463c425966b8a298a2d87863533e68092676bc","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-search.png","hash":"14c3ef60d3979df9e8d13cf39cad10ed043f5578","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-print@2x.png","hash":"7577a46df5fcc89846737010a14878bffa85098e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-secondaryToolbarToggle@2x.png","hash":"6f1dca07696408ce28da5621ebcac57d0b2031a5","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-secondaryToolbarToggle-rtl.png","hash":"990118984a946a8c63d95fd1a8d8af848383118b","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-secondaryToolbarToggle.png","hash":"6cedbeddac0d6191afe09cabed7b6d517f7c7b21","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-sidebarToggle-rtl.png","hash":"422b5ed725be51f60e6339da94e0c959ad67990b","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-secondaryToolbarToggle-rtl@2x.png","hash":"51055db76ce1e9935fa3d91aaece874c6da14147","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-sidebarToggle@2x.png","hash":"04c42cddc1e2bdd5130c6fa477ff3fa594edda56","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-sidebarToggle-rtl@2x.png","hash":"29eade71266a6c4b1048eeacb1c29411435bdb41","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-sidebarToggle.png","hash":"ff7ef30371233abe8c548c2f3d5cbb335183ca92","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewAttachments.png","hash":"53c5a0c4c40f5f47fb6d2f57a82a4a6d0a83feb0","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/texture.png","hash":"230a3d5e2dfacfa7228f58a559de5df3734118f5","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewOutline-rtl@2x.png","hash":"6684f9d7964446ec66a8f3865445892187d16d21","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewOutline-rtl.png","hash":"e6214527b9354eb920cbec85e6fe4e1296b7ae15","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewOutline@2x.png","hash":"76be930d871fbd1ebd6c4d76c4fa325f32efc624","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewOutline.png","hash":"ec7aa605c063faf6a951c2d64a8d98933b60f6a4","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewThumbnail.png","hash":"f62aad7c7719300f1d8e922155f451661d41d42d","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewThumbnail@2x.png","hash":"ececa7ff064700efde72fa1e3889c8a1a3073dbc","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-zoomIn.png","hash":"838adbe15d84daceec25cfd4d8d6ac1580b4f693","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-zoomIn@2x.png","hash":"5403ddbeed138cc733020c352ae3bcd8cac03bf7","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-zoomOut@2x.png","hash":"4006d4387f2b0a0f0856d691a8874f74f61d0f51","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-zoomOut.png","hash":"63a719d5e6a708a22014f20abc0722cd54ffb0f6","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/treeitem-collapsed-rtl.png","hash":"7c2ff883f666ac379b04d0d41e3e6ddb14ddf220","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/treeitem-collapsed-rtl@2x.png","hash":"0465b8f9e77135e2bddd5708d425d5e1fc4ab63c","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/treeitem-collapsed.png","hash":"4588ca9c86db15c10de4de3f340111d4ce211ebd","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/treeitem-collapsed@2x.png","hash":"3229d96b4fa4d7e5c26fc135264d134e1024baab","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/treeitem-expanded.png","hash":"b0b4bca3d9bd0949da19a56214143db18f2a4f69","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/treeitem-expanded@2x.png","hash":"bf924ff993236e563dab83b41193bcb43120c0b6","modified":1528189620000},{"_id":"source/contentimg/30/9.png","hash":"3ec59c5408b0bf8ba86cea993d4300f30caaa97d","modified":1540567238085},{"_id":"source/contentimg/3/7.png","hash":"4ccd98638b5b6bd99c945567393f174ad4c2d6ee","modified":1539578698940},{"_id":"source/contentimg/6/2.png","hash":"c23c0c057635611488b995a197172cb48e344798","modified":1539241399080},{"_id":"source/contentimg/8/11.png","hash":"5bb230fa7abc14b1df3acabe794cbde3687dff9e","modified":1539838268137},{"_id":"source/contentimg/8/3.png","hash":"482113acd97c5e789e85edba4fbbb0b9ee6a593d","modified":1539782195802},{"_id":"source/contentimg/8/10.png","hash":"fa957e0d3c1a97939720f8b6daba19f65674e09b","modified":1539838033951},{"_id":"source/unitydemo/pdfjs-web/web/images/secondaryToolbarButton-selectTool@2x.png","hash":"9a10930334b9a42429c967b77f8c7e705e31cdaa","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78-EUC-V.bcmap","hash":"678dcba8720226133150374f78493cc09c9b8d9e","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/images/toolbarButton-viewAttachments@2x.png","hash":"eb96df312c7ff6fc0451795bc0de8ebadb72cf86","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78-RKSJ-V.bcmap","hash":"3fa6830e3e5c6b0cc5d03402cfb6712a04c08d31","modified":1528189582000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78-EUC-H.bcmap","hash":"c84a5fe05bb2a5e4e599329d0ebb3ed8fe1ebfdf","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78-V.bcmap","hash":"c58a521bdfad6ffe30e292505992a396033d03c3","modified":1528189584000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78-H.bcmap","hash":"e77449427a5d5411c9da1c1a64e1e3ae362bbcdf","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78ms-RKSJ-V.bcmap","hash":"27d45708491107b2cf673c2cd584bf22ca27e4e4","modified":1528189588000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78-RKSJ-H.bcmap","hash":"5f0f202932865c38e7b0b06924e419c77f74be85","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/78ms-RKSJ-H.bcmap","hash":"ef37df685e4779722b34fcc026b196b224bfca13","modified":1528189588000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/83pv-RKSJ-H.bcmap","hash":"c4474f77d94be66d771ba68f18ff2fd606a3c820","modified":1528189592000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/90ms-RKSJ-V.bcmap","hash":"c4ed8e0b82fc29ff6140c72ec8ab3acc3cd0578f","modified":1528189612000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/90pv-RKSJ-V.bcmap","hash":"7296d339f5c1d843b823482fa2b3857c0559eb93","modified":1528189618000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/90msp-RKSJ-V.bcmap","hash":"ddfc0fdb34314f2d7116d707fa6dbb24bc9bf390","modified":1528189618000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/90ms-RKSJ-H.bcmap","hash":"994ca6d6232d91be047c68e087e0951dcca4cba4","modified":1528189600000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/90pv-RKSJ-H.bcmap","hash":"76218acded94b2d29f747735e7fb41f19cee84eb","modified":1528189618000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Add-RKSJ-V.bcmap","hash":"0e4ef11ed7f4e5ed3b2e32f267f4c3fb4359d08e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/90msp-RKSJ-H.bcmap","hash":"d3f02d6724d9c91d077ed38545c9321dba65b624","modified":1528189616000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Add-V.bcmap","hash":"02ca7b80b507640df998e9b5f6d25b346082d8c1","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-0.bcmap","hash":"241cccfc85b5ef9ea4618f94a6341e02d1b03b98","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-1.bcmap","hash":"f37b5b68198690c8270322daa0ea522225a46127","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-3.bcmap","hash":"ef567b58254e03837d46e1fdff4fea5cce318a74","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-2.bcmap","hash":"a568bee71b12ec4e79a2fa65c4eb9f865c505a5e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-5.bcmap","hash":"b7de7cea41575c7933cffdb917ad1f918df76c70","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-4.bcmap","hash":"5f81f4782a5f996649dc318c1587ae7728afd10b","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Add-H.bcmap","hash":"cd55ec3d5627b80505d7dbea433e5702f8c05260","modified":1528189618000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-6.bcmap","hash":"4eaa2ec548df7cdbdece2eec227fdb9d4cb2f281","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-0.bcmap","hash":"86edf145080d2fedba2f0a0b0ab1bc18d9a5af55","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-1.bcmap","hash":"83cc28efd5e778b9d37898f9b100b502bc442dc3","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-2.bcmap","hash":"a3ce0132af54173d30a4330314bc4cf273fc29c8","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-3.bcmap","hash":"c7b6cfbeac681010771d022d319913c798416d75","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-4.bcmap","hash":"cee3007bb41ed1bbe7fd22f054c0fb036a92c8cf","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-5.bcmap","hash":"a7d9440784d773507e3d83d0bf93fa8d93a3289f","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-CNS1-UCS2.bcmap","hash":"bee971d04cae79d791a52bf0d3d5e2e9deb1d1c8","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-0.bcmap","hash":"ce5b494e809c30621968169d01d1136f3ad1ce3c","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-1.bcmap","hash":"a766b29745a30aa3316cafc73d884c271cc12ff4","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-2.bcmap","hash":"78c4e86cff8aa1c2f2bc18aaf83095a96f0bca50","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-3.bcmap","hash":"5b520d2cf37e21b084bc9e6a21d006c53e4e552e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-4.bcmap","hash":"4136c902f4715ed18b8b2390965d3621d2fda048","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-5.bcmap","hash":"38970fd416a1c3ef4faa25009254347627d24964","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-UCS2.bcmap","hash":"d99c0d908b8075afa69aa3c579a9393b13b29dd9","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Japan1-6.bcmap","hash":"dfba7ab251b5ac07d7648c4e81e808ea096578c9","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Korea1-0.bcmap","hash":"ca8e1774cdd2859ba0341e4474d07d6fb2f9395b","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Korea1-2.bcmap","hash":"0b8d7fd848de3efa86f958c6e1cf5aece9bf1bf4","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Korea1-1.bcmap","hash":"e9b783963160380ccfe33fa1dcdd9c79b1cf2934","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-GB1-UCS2.bcmap","hash":"23366624efa674e2493a18bf6b6e2c16929d68d3","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/B5-V.bcmap","hash":"dfc7362c157c24651761e5216ef0c46aba795488","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/B5-H.bcmap","hash":"771d71153bf652d1134b7d65beb8afc60c835ff6","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Add-RKSJ-H.bcmap","hash":"9a17c268decf876dc35c5f20c660ee63563fa523","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/CNS-EUC-H.bcmap","hash":"1da78eb52781330148c95ccf64c78edd2072a991","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/B5pc-V.bcmap","hash":"f12ae6ed2320136959420e28b1b937001cdd4f0b","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/B5pc-H.bcmap","hash":"29d5fd41dc8fc4f19b59949b9a7f410d63f4f3bd","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/CNS1-H.bcmap","hash":"07f422b28ca4fedf2cdc6ccdf551eaecae40f60b","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/CNS2-V.bcmap","hash":"c0870c3fad8349e3391ff7cda29d1f3a917e27f1","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/CNS2-H.bcmap","hash":"0570a8186311bba4ad216250f805461220d41d0a","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/CNS-EUC-V.bcmap","hash":"895fe039258dae00d7a8cea93b3b07d794543d2d","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/CNS1-V.bcmap","hash":"7455bd92e1a1f32bfd2cb5b80eb938aa665f6b8a","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/ETHK-B5-H.bcmap","hash":"225205ad3aad58967faf23a2504731abebc6dccc","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/ETen-B5-H.bcmap","hash":"9c3b70700d7ae2b8c4cc6f658cdc98f4e65b3be4","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/ETHK-B5-V.bcmap","hash":"03e35e7fc1b75495df5559a3f71c5f0cbd1517ba","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/ETen-B5-V.bcmap","hash":"5b637fa1b203754d98463053b38a2f694cde499b","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/ETenms-B5-V.bcmap","hash":"631c58a7f7a8094d44a858d26485ab65b499b59b","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/ETenms-B5-H.bcmap","hash":"1207c931295ad5f57a430317d5014fb66d0eab7d","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/EUC-H.bcmap","hash":"f88729b6a413ae1365bafb5dc8076b465aa1fb87","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/EUC-V.bcmap","hash":"c47c42d9099caf1447498e57fc1c8f3c7ff417b3","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Adobe-Korea1-UCS2.bcmap","hash":"15e4e07c96891a2bb2778b5df8dd0a131edeed52","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Ext-RKSJ-H.bcmap","hash":"e1c2563a6d785aa5e30de423911d179fe79ec957","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Ext-RKSJ-V.bcmap","hash":"5443591823737ba98993537c4d4e8af70a37c92e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GB-EUC-V.bcmap","hash":"7d268732b300431fced1351b4bfd12b51299283e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Ext-V.bcmap","hash":"0d88a7517783f25ce1eee082a5ed12b0f96061c2","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GB-EUC-H.bcmap","hash":"4231eab22968baa29ea4e6fdc4278b737067a7da","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GB-H.bcmap","hash":"3f1c2a68bdd13541e6a2cd6a7a393581e9444e1e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GB-V.bcmap","hash":"b70477a9738709f639adf6bc20e81363efcc9ed0","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Ext-H.bcmap","hash":"4b6a27e1125bb11bf9fd8fe9c5375f7781c95204","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBK2K-V.bcmap","hash":"d27b6916b7de1993464e5f33822f176fdc8e949f","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBK-EUC-V.bcmap","hash":"4f0e0cfffafa21b30f7a25e5161738faf2e265fe","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBK2K-H.bcmap","hash":"a36052b8b5d7dc1dde2b721437d6abc90ec7cefe","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBKp-EUC-V.bcmap","hash":"717f6d6585184bfebb894e59868886ab8f3c38f1","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBT-EUC-V.bcmap","hash":"9d6ef5fa295e3005d620904754d7cc16104be908","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBT-EUC-H.bcmap","hash":"e2dda44896a41f4fa817c5397f17894763b7623e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/images/loading-small@2x.png","hash":"171aeb1a90c2836c639438fa85c64cd9d94b3516","modified":1528189600000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBT-H.bcmap","hash":"62508bbc22bcd3795e4af2c7fa3cfddc71367813","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBT-V.bcmap","hash":"2f0936e0bd4362f7c6f8c2b56642d6483366cd11","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBTpc-EUC-V.bcmap","hash":"ce125f52097c71fc83631577977ac267b8901c78","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBpc-EUC-V.bcmap","hash":"36004a6bedae0edfaea620a7d8f61cfb875f9640","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBpc-EUC-H.bcmap","hash":"5c34efa7cca4e2f652f81f4498fdf41db1b7b1e6","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKdla-B5-H.bcmap","hash":"57ba02cf438eba88d2071bd99d1beb816b438b9e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/H.bcmap","hash":"149c08c0eadc405f6ba64adac9329fdb300d11ab","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKdlb-B5-H.bcmap","hash":"2be77ea4f4cd8a338ff7007d314773582f565efa","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKdla-B5-V.bcmap","hash":"035e4064559dd56ceb0f06c3ac1c2e766aeffe62","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKdlb-B5-V.bcmap","hash":"3dc79100304f82ec559b70d120100f6ebe6ab5c0","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKgccs-B5-H.bcmap","hash":"dbaa1026222370fa6e3275c98e3bdb5ef3d37709","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKgccs-B5-V.bcmap","hash":"6f22784990eb168bcf9192e7e36de18e08927dfb","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKm314-B5-H.bcmap","hash":"cbfb65ab0cae690e7679a1769de521ea20fb6602","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKm314-B5-V.bcmap","hash":"3ef5f7e35ebffe68dea8ea757cdceac5b8151372","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBTpc-EUC-H.bcmap","hash":"388eb76b53b008d90dfe68c1e3288314b21c3cdc","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBK-EUC-H.bcmap","hash":"08986b370ac27b60cf8cd7023c9e49f6b784b52b","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKm471-B5-V.bcmap","hash":"2a6f2cc4d105f464432187daeff7b81040c093e4","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKscs-B5-V.bcmap","hash":"fa5b3a1f0b3ab6bd614f8a39c9ab80b203daadf5","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Hankaku.bcmap","hash":"dfc2f635dd66602f9978ae3fe72695a02e512a6a","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Hiragana.bcmap","hash":"10e7a0f20cde8865a1dd3086a89f2e96e330d1a6","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSC-EUC-V.bcmap","hash":"4529ddac78c931d63411b6061b0af740b4c44ca5","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/GBKp-EUC-H.bcmap","hash":"a8785a44403f130097ee9a23c3923d5af252ac51","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSC-EUC-H.bcmap","hash":"bc349367bb60b06af5fdeeec05047f596ac71ab3","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKm471-B5-H.bcmap","hash":"a75f2e32e5495d46e14b1d07ac124b3fc675ef1a","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSC-Johab-V.bcmap","hash":"e68b770b37b591884c459d6ce3bb43bc4556547b","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSC-V.bcmap","hash":"22b097fd376c21e40a0f9392961be74acc316343","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSC-Johab-H.bcmap","hash":"3585accc6e6957eda55302393fd9c3a563db6cbb","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSC-H.bcmap","hash":"42e15fbce70bdec4f7bb5b2cbd02b0efd8bc65fc","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSCms-UHC-HW-V.bcmap","hash":"6cfeb36f492702aef5ce5b7671342291010b29e1","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSCms-UHC-V.bcmap","hash":"3de7c5c70cf172ff560a62d5dfe84a9336b4f5ad","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSCpc-EUC-H.bcmap","hash":"3705fd3621117a7e5a3772c3849c5d69620ef08f","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Katakana.bcmap","hash":"da100ad00f2a9ba196892bfb4d6644ec828a4fcf","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSCpc-EUC-V.bcmap","hash":"1d3a11932c44a5fa8fa22efd2bd3dba7db9a2c8e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSCms-UHC-HW-H.bcmap","hash":"d410341b19a6f05e0c20ea4a1a77078a3084044e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/KSCms-UHC-H.bcmap","hash":"4e0ed017a2a41ee7bf6eacf0f7e6b40ae60d223d","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/NWP-V.bcmap","hash":"891a866c52b46e7526123799a829db24ac6cda4f","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/RKSJ-H.bcmap","hash":"a4f7d5cdd13d3008cc42d82f69672d9e50a9d5b3","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/RKSJ-V.bcmap","hash":"16ae42a46e7eb92ca048fe24649b668c5103b4b2","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/Roman.bcmap","hash":"5755781c7e9c50cc8192426d8733a506382b5fdd","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/NWP-H.bcmap","hash":"7d0f51c52d7a96bf289d0c6454d7e9dccf009c15","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UCS2-V.bcmap","hash":"6b19ece5c921516431eb94d28d74080fdd7d35bc","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/LICENSE","hash":"1afb5991fce0d60110b5092b68bf9ff76b0c73f6","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF16-V.bcmap","hash":"0f7152f2845cc2be4d3ce7e0e1530639ec4162e3","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/HKscs-B5-H.bcmap","hash":"45f1793e771de030af89938eed23fff4c7daca3a","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF32-V.bcmap","hash":"debaa98acaf13f341a5003856ef6a6a7df8f6e14","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UCS2-H.bcmap","hash":"868238e34cb9548c4d138af1adc1a4bea62dec37","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF32-H.bcmap","hash":"a5872864e2b121c1df5068a54201ed166c69d5f1","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF8-V.bcmap","hash":"019bd0716b2aa80bc1bcabfd389d3d5e1065ba8e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UCS2-V.bcmap","hash":"f5853ca83c25b888c1d925e2a20ef44e064d064e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UTF16-V.bcmap","hash":"1771376eef979ad42c2b5c01a1af1d34f54580b7","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF8-H.bcmap","hash":"734ad1a00033d70c195c81358b643c7cba1327b2","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UTF16-H.bcmap","hash":"d73d55388c76932033915cea627bb628edad4f66","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UTF8-V.bcmap","hash":"e23616fa12132c73f52071b96e76d876430ececf","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UTF32-H.bcmap","hash":"b9ea278eb4c324d12a81e2d62479548d1e7126cb","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UTF32-V.bcmap","hash":"8167ba503aa8a6c805f39be0ca538b99898a967d","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UTF8-H.bcmap","hash":"09cc7750f69da77434093e4c94211394f5665eda","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UCS2-HW-H.bcmap","hash":"97cbb8599cf62914885a8b2b47594865fff52099","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UCS2-HW-V.bcmap","hash":"f36bad9c680f4bba6cbcf8ac57f53e7ce21c806b","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF16-H.bcmap","hash":"16499e93f0a447a94e1e44bfa9951401d290d89d","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UCS2-V.bcmap","hash":"45396576a6bd5468a84e2c2e4ae64c23fe7f2e85","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF16-V.bcmap","hash":"44402b8f73e0b0160846b641e7cb2e75ab8c81bd","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniCNS-UCS2-H.bcmap","hash":"7f289b94c643b7cc43d4936078143a2347ca0fc1","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF32-V.bcmap","hash":"2f5ec2584fd7c39f455161a857550fa7fea5f53a","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF32-H.bcmap","hash":"bc482114d214e2fffe85dd0b7422f48c3e282c17","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF8-V.bcmap","hash":"b3ea8d2172a2f6f9e73cf62ae467aa84848df6d7","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UTF8-H.bcmap","hash":"f47956c1c7b2eadbda93aac25fe4546b413ec0a5","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF16-V.bcmap","hash":"2872cb273dab9d0dbb7f331826045df18764a7b0","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniGB-UTF16-H.bcmap","hash":"28963866dfb575b58b4370e60ebd9bfb6e56ac09","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF32-V.bcmap","hash":"ef16ccb3102fc44c1d46f4cad40cfbdb020ee277","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF16-H.bcmap","hash":"b8b0cc6779d3960426899fc2e7cf2866ffc80167","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF8-V.bcmap","hash":"565560a59d5174ac379a8d91f165c8ecdef54e06","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF32-H.bcmap","hash":"f48723212d1ad18c0b3c41168d6f630798e04160","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISPro-UCS2-V.bcmap","hash":"b1a47305fa79afa19ab696d33af5099d35570c56","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS2004-UTF8-H.bcmap","hash":"385ab762d03499d35539048176928e031e5340d1","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJIS-UCS2-H.bcmap","hash":"caf525125e29fa4de78088e5eb1785c1af1f9950","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISX0213-UTF32-V.bcmap","hash":"dfbe3e295505977b4e1881ef30b80362d7406bbc","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISX0213-UTF32-H.bcmap","hash":"15c953c36436d32f748ec7468a95c3e5843d70bb","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","hash":"3f0a364246717707db82913593304cb7bd37c378","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISPro-UTF8-V.bcmap","hash":"ed6b571aeed388d3b53b9e65824af3f0146a5857","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISX02132004-UTF32-V.bcmap","hash":"9c48a0c654acf4bcf51defde2f7d8b3ce52a063d","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UCS2-V.bcmap","hash":"6743b3e07370fd49962b97d97be77dae8d18aabb","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UTF16-V.bcmap","hash":"cfdbfbf0b0e8ef98fef6236ea570c73465da1581","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UCS2-H.bcmap","hash":"50fcce1b2e3224791b480289e7c4c42938beb854","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniJISX02132004-UTF32-H.bcmap","hash":"c41dd50df01e3d3331f0acdb6da6c1b857a67cf7","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UTF32-V.bcmap","hash":"73bd343b188a80471eb156655f5b192903f86cbf","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UTF8-V.bcmap","hash":"586c64948a67e4cb12de64e221b0dc3d9e47dedf","modified":1528189620000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1514806389000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/V.bcmap","hash":"99790f12ca21a196bc1d836ae5bf0ad7af95e079","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/WP-Symbol.bcmap","hash":"3a6417abad460a1a083be75636c014f3a73937b5","modified":1528189620000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1514806389000},{"_id":"source/contentimg/31/5.png","hash":"f52b615645ae60eb8aefca7d6e1bfa5201c1d065","modified":1540736757718},{"_id":"source/contentimg/16/2/5.png","hash":"f186d9fd216f83c37a1deb0a9354ac3c9b3822b3","modified":1539938229730},{"_id":"source/contentimg/16/2/6.png","hash":"28059df1e233990f5e2381234b692d3533f7fa21","modified":1539938237478},{"_id":"source/contentimg/16/2/4.png","hash":"0e22ffe5696eb265f94e59f6a8f6817cfb72684f","modified":1539938223177},{"_id":"source/unitydemo/4/Build/UnityLoader.js","hash":"a9b6d7dd29677327d5828baf2229cd73683dbef2","modified":1539291314000},{"_id":"source/unitydemo/3/Build/UnityLoader.js","hash":"9a75f1a39c3466a6a79e21d5fe586466f0b34172","modified":1540787259978},{"_id":"source/unitydemo/5/Build/test.wasm.framework.unityweb","hash":"5431a0675a93232c12bcc04ee68afc4d382c0105","modified":1541480311749},{"_id":"source/unitydemo/5/Build/UnityLoader.js","hash":"a9b6d7dd29677327d5828baf2229cd73683dbef2","modified":1539291314000},{"_id":"source/contentimg/31/8.png","hash":"24c94afdb2187dd2f808405f3c23ac023840b007","modified":1540737078751},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1514806389000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UTF8-H.bcmap","hash":"8117d31e498a8f0fb7c223c4172ba881c0496c6f","modified":1528189620000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1514806389000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UTF16-H.bcmap","hash":"4f4603408966d9ac29a96c3a6755b9f23e7aa953","modified":1528189620000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1514806389000},{"_id":"source/unitydemo/pdfjs-web/web/cmaps/UniKS-UTF32-H.bcmap","hash":"6b0e98e16418fa5a86338b3fb361f1700971f649","modified":1528189620000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"a69ac741c61adb3eca6276bac6710d50148b3ddf","modified":1540016717594},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"c50755c286c28ba218d948daec036d362197c458","modified":1540020975242},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1540035984508},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1514806389000},{"_id":"source/contentimg/Unity姚佳鑫_13580519427.pdf","hash":"2f1834b2f598a1c26b5f687de7ae8ee7edb6ee0c","modified":1644509520917},{"_id":"source/contentimg/30/13.png","hash":"c2c8bd9dbffa934478c218a944cb16e6602f5f46","modified":1540568566820},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1540016712698},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1514806389000},{"_id":"source/contentimg/16/1/2.png","hash":"52b82e5b235c42f1fc475e84737729c1fa3a6858","modified":1539937908284},{"_id":"source/contentimg/16/2/7.png","hash":"fcf08879f447532c029a031cb573c6cdafb8a5bd","modified":1539938264239},{"_id":"source/contentimg/16/2/8.png","hash":"05ea785f9ed23179d77c86e90ee8505e96ff33bf","modified":1539938271952},{"_id":"source/contentimg/16/2/9.png","hash":"e5f81fba7551094b884ff223ad1b080ea057c30c","modified":1539938278705},{"_id":"source/contentimg/16/2/3.png","hash":"f3c32cc38fe393292f9371d8330c7d35508f8857","modified":1539938215854},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1514806389000},{"_id":"source/unitydemo/pdfjs-web/web/locale/af/viewer.properties","hash":"4f79c194d6b404ffbec112aaa55ad4b016b9d93f","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ach/viewer.properties","hash":"a95cf23a6a1b5ad066d00effaa6b6066cb93ab4d","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ak/viewer.properties","hash":"7b32cf30fd16432bc4050919607659c5e7ac7fe3","modified":1528189580000},{"_id":"source/unitydemo/pdfjs-web/web/locale/an/viewer.properties","hash":"a9505349d70da8f3b2821f2ee66b9074156cde3f","modified":1528189580000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514806389000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ast/viewer.properties","hash":"54aa033912efb743cd2d156926a6990fab648204","modified":1528189584000},{"_id":"source/unitydemo/pdfjs-web/web/locale/az/viewer.properties","hash":"5ee01ead8a6c934ae07b244a61f0b3d7ef8f490f","modified":1528189588000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ar/viewer.properties","hash":"0fbf56bd6c79c0f8a383d2d47ef1f187908b6ce5","modified":1528189582000},{"_id":"source/unitydemo/pdfjs-web/web/locale/as/viewer.properties","hash":"9be87d26909520181cec8572c4b18e5e1dc11388","modified":1528189584000},{"_id":"source/unitydemo/pdfjs-web/web/locale/be/viewer.properties","hash":"5ccdf7af58ca9bb238207d9085ece81f2f004a65","modified":1528189592000},{"_id":"source/unitydemo/pdfjs-web/web/locale/bg/viewer.properties","hash":"14456f2a2383f3173a8ae73fa6a7356779593e1d","modified":1528189592000},{"_id":"source/unitydemo/pdfjs-web/web/locale/bn-BD/viewer.properties","hash":"97dfce7de5d4f4c4f1f4aea98112b0a85c7be32f","modified":1528189600000},{"_id":"source/unitydemo/pdfjs-web/web/locale/br/viewer.properties","hash":"886cc153a58329cdad9b6e5a868a4d719ceb12c9","modified":1528189616000},{"_id":"source/unitydemo/pdfjs-web/web/locale/bs/viewer.properties","hash":"1cd906fac3592d54350bf285b39e2eef19936076","modified":1528189616000},{"_id":"source/unitydemo/pdfjs-web/web/locale/bn-IN/viewer.properties","hash":"91d38c2c46ef41753041da06f82c80c6d67e1540","modified":1528189612000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ca/viewer.properties","hash":"61cf69564543dddaf04c33170c27ddb7a4518862","modified":1528189618000},{"_id":"source/unitydemo/pdfjs-web/web/locale/csb/viewer.properties","hash":"17e840af72cb4451a586e70f5a7c7bfeb9c20683","modified":1528189618000},{"_id":"source/unitydemo/pdfjs-web/web/locale/cs/viewer.properties","hash":"55c26b8ff668cec7b6a5fc50cb8a23dd16e429f6","modified":1528189618000},{"_id":"source/unitydemo/pdfjs-web/web/locale/cy/viewer.properties","hash":"e5c78f83ae4f6cd67fc700d39539bd66030370e4","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/da/viewer.properties","hash":"f2c947cda368dbffb3fd814d408858925c34be94","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/el/viewer.properties","hash":"032b3116603f5a1b1246d2ab0a38010ff256f4b2","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/en-ZA/viewer.properties","hash":"876db7adcaa8ead13b464e7dafd5d2a965e34a3d","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/de/viewer.properties","hash":"eea56ea92ebd8cc01cb0d2c890265fdc3071c4b8","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/en-GB/viewer.properties","hash":"5cf722fa2d9851d0ea07dc9a991c196ba7afbc91","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/en-US/viewer.properties","hash":"2210dcf8920f2d5d58984b8266264262b9a61cea","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/es-AR/viewer.properties","hash":"08722158819e4d7b0b3dd562c0f32679bc675229","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/eo/viewer.properties","hash":"7785effe34131dfdf148dffc41e974dbe53a4ab9","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/es-MX/viewer.properties","hash":"b823ad54fbb95eeefc1990db9a027d19e777b88f","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/es-ES/viewer.properties","hash":"82c81e932b06a1e6b149f8e9b4519e0ac13ae925","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/es-CL/viewer.properties","hash":"1838d8b1a78b327dc8601bd566e52c3aac503632","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/eu/viewer.properties","hash":"9c4cbdf2b72455982b78c0a7fb55363fdbd313f6","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/et/viewer.properties","hash":"10b12c0e5313079593a7d93e26771f1f3997eee3","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/fi/viewer.properties","hash":"9d92dcc29b53a0388291be7b11dd3b8a9e115f51","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ff/viewer.properties","hash":"5b758148ec480f2ced8ed740bc3a817de1de5079","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/fy-NL/viewer.properties","hash":"bfc669a4c0fecd3a544651f7f1b8fe32d26ce959","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/gl/viewer.properties","hash":"6b2ffe923eb04ec15d69d7d83ab0a2eb5658f124","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ga-IE/viewer.properties","hash":"f319b460b796b9c703927444f9013d0316cbe3c8","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/fr/viewer.properties","hash":"dfdba6ebec407dd2a8472ac49a561e68d42a10eb","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/fa/viewer.properties","hash":"8a9f0fc9de7d3101e8d460ba4c7815002dcbd2fd","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/gd/viewer.properties","hash":"a411278563a4c86e5a97903518be333d90eec626","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/he/viewer.properties","hash":"89d4666184bfcff046df298aaf8ff159b87a1fdc","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/hi-IN/viewer.properties","hash":"fba802bc6019cf82eac8ec5af9e64438e622c861","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/gu-IN/viewer.properties","hash":"6019b62ded4eb98104429918688af1b5bf32ee7d","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/hu/viewer.properties","hash":"98a3115fc05f2c61125c0ffef91cace6acf82c11","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/id/viewer.properties","hash":"49af1c415a64020587343510cc55f909443cf3b8","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/is/viewer.properties","hash":"5c255f9d7aafe3503b9e9ce43c41378a4411bd9f","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/hr/viewer.properties","hash":"f17d789e2997924de357b3130136ee428ce769fe","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/hy-AM/viewer.properties","hash":"6f26fd809964c319ed66fc6de84c2f3cc786355c","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ja/viewer.properties","hash":"1ec9b9c849542ffd607a573d81ef73bf254db1ab","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ka/viewer.properties","hash":"774d9c7e4fa546b0005a8874e05020d4247bd940","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/kk/viewer.properties","hash":"35f725c9aedfedb186d32617af17df968069c485","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/kn/viewer.properties","hash":"f5ad2b147d465c0f8e96ebc4a9c0c48f05b5aae5","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ku/viewer.properties","hash":"46739e80d58ab8559ccfb21d6b0692a37e16e6a9","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/it/viewer.properties","hash":"1f5f14e861925880c2a6d2f13267cab2ae775921","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ko/viewer.properties","hash":"ed6931f13a0f5262c976c4755eee228dd11118ab","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/lg/viewer.properties","hash":"18c1b9f7ca30c648bd31e31b15d16c876242ee73","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/km/viewer.properties","hash":"fa84c645561a6573737a401e0c14c512401f4220","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/lv/viewer.properties","hash":"68f76f9efa29783c2407aa90538ae36bb087b981","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/mai/viewer.properties","hash":"6dffdd4313a49854702ae8c8ef81d0fe052324a6","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/lt/viewer.properties","hash":"566e490046f4498ae47cd6a307f0769dfed19e2f","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ml/viewer.properties","hash":"eb1166287e816b116787dadcc5258f9b45083176","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/mk/viewer.properties","hash":"1176024e0eb1664ad2b875608136c30d77fab909","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/lij/viewer.properties","hash":"8b33740be03221835dfbc6d86090bef07a6d12a1","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ms/viewer.properties","hash":"1fcec133ad093f02cc678bfc5278d0d45f1cfed3","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/mr/viewer.properties","hash":"2198ea0e02db7dd4cce108548083cc7cf55140f1","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/nl/viewer.properties","hash":"f17a3f05b53bf1087d4ff6687ec37214053a355d","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/nb-NO/viewer.properties","hash":"267027ecf7ae57369535990b0955da384d3c5d67","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/mn/viewer.properties","hash":"7986acd89509d0467129b71ce25922ecfbd4817e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/nn-NO/viewer.properties","hash":"1dfaaf65c3a1754cfa37b843174f982c72f8df29","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/nso/viewer.properties","hash":"176afe940078cca679275adf9dbc1ca1d6e8f7ce","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/oc/viewer.properties","hash":"3088ac151348236e113047295a6733800b7f80e2","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/or/viewer.properties","hash":"8e0e153f102d7a24d6e0523b67c3aa2d0e3857f5","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/pl/viewer.properties","hash":"f9b7dd2ac8a116068ede48b807557287bdfe05b8","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/pa-IN/viewer.properties","hash":"8b506f6ad150740f3a5b6c77c89c6c295a1c18be","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/pt-PT/viewer.properties","hash":"e6853ddd01fe2260be28bbb6bc27a0c76d57287e","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/pt-BR/viewer.properties","hash":"a72d9c13bb6c4b0e2787feadc472cd23745729f8","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/rm/viewer.properties","hash":"65d16adff5e71249e8055d41fef360da21357452","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ru/viewer.properties","hash":"727ddb2225bb72c187db33ebca48bcf16f567af9","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ro/viewer.properties","hash":"ce5d6a72c7e6cabadb1e3d73bd1b4717051f7772","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/sah/viewer.properties","hash":"ef69f15f4aa8ffcd0292b67519495ac962f0a846","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/sk/viewer.properties","hash":"cfabdbb12f4f1fabf2d9865ac22a262080c138cb","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/si/viewer.properties","hash":"8b43afbd734dcff0b498cc92921d994675c9e503","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/sl/viewer.properties","hash":"4c8a202322ca465d813ec2b5865b4e7156f1c578","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/my/viewer.properties","hash":"0559317ea137833114a9a61d2cf7bdd0bda48c61","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/sq/viewer.properties","hash":"10e653ef3804784de607ec890b9477e0f7d5563f","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/son/viewer.properties","hash":"89384fd7cb2359b1360345c7169031b0509f8df1","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/sw/viewer.properties","hash":"7e5b770e8155a7465f77d1b2d7792fa22e50bcd0","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/sv-SE/viewer.properties","hash":"a7f9900cba08785d055b25b39ca5c70026fc1438","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/sr/viewer.properties","hash":"c35dfd6fcca79784f781adee7b2174d63167ccfd","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/th/viewer.properties","hash":"6ba833eff1d4963dfee7796424cda8ed904ba8dd","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/te/viewer.properties","hash":"304f2fa7bb22284735c06bafc2567da53013473a","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/tl/viewer.properties","hash":"c16b8195696040b1c61a907994f452736efb7ffd","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ta-LK/viewer.properties","hash":"646e2182307793f70a61584fc436886c946482c4","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ta/viewer.properties","hash":"081716494b783f383312b41e5e202fb2815cf9c7","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/rw/viewer.properties","hash":"7d96bc96802f37a1c9ead373524a425d08e1dbcf","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/tn/viewer.properties","hash":"b1839a14243baf851f7811e5be779d8e0e147105","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/ur/viewer.properties","hash":"39be4d2af1b9191a76885ae1624ec48ddccf8fec","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/uk/viewer.properties","hash":"d1cb0b4f76960eb30096abd52fc6804bb7fdaaed","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/wo/viewer.properties","hash":"1426459b8518b593673ac0b758407f2a228c89ba","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/tr/viewer.properties","hash":"d2607bad3cf3feaf2ea8c3e3fb80ca3ea230ec50","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/xh/viewer.properties","hash":"4ce7fd8d9366220b4264e4ae712cf88348f4f83d","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/zu/viewer.properties","hash":"1c283ba7792aa61cad501198bd8e4d7b13fa5bb3","modified":1528189620000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1514806389000},{"_id":"source/contentimg/16/2/2.png","hash":"2e84de2b5af74eec63644e1f823b3a16f2b4b7a4","modified":1539938208304},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1514806389000},{"_id":"source/unitydemo/pdfjs-web/web/locale/vi/viewer.properties","hash":"b64d18db8b82a9a237d4b6764b9ae1dba32c5673","modified":1528189620000},{"_id":"source/contentimg/10/9.png","hash":"68d3e043aea80d8d7c1742169d7d025fc6d77ace","modified":1539839608933},{"_id":"source/contentimg/30/1.png","hash":"5cb762c9e4c2d592abf3d0374987708ab4d467f6","modified":1540533467842},{"_id":"source/contentimg/33/1.png","hash":"7918bd48e2bc3f03618f2961e38ba774feae0efe","modified":1541403735804},{"_id":"source/contentimg/9/21.png","hash":"347365cbca6287d146d1fde2f2caa1b3d05dbedb","modified":1539962183677},{"_id":"source/contentimg/16/2/1.png","hash":"803f993d53980b7cec33072b680b5a09d7cfc689","modified":1539938200235},{"_id":"source/contentimg/30/7.png","hash":"6b86b38d37641c29f74ecc6d412dc252e3fab99a","modified":1540546911019},{"_id":"source/contentimg/30/8.png","hash":"0fdaa6e3f1b0efad56d52c51ad674f8f01ff5c8c","modified":1540566869679},{"_id":"source/unitydemo/pdfjs-web/web/locale/zh-TW/viewer.properties","hash":"7bbacae7a98df12325ae2925dfef6540fd6e9ee7","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/web/locale/zh-CN/viewer.properties","hash":"1b20d704360b060ebf56591966110ae7734d1c2f","modified":1528189620000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1514806389000},{"_id":"source/unitydemo/2/Release/test.memgz","hash":"697d425865e3ee493f5acbfbd92244656896a24c","modified":1540787260238},{"_id":"source/unitydemo/pdfjs-web/web/viewer.js","hash":"cdf0f9d5ee4472f89924ba785ea3ca9c9a7bece0","modified":1540638102074},{"_id":"source/contentimg/16/1/16.png","hash":"1482dd696ebeada050427d255b26db366b2d3044","modified":1539938023181},{"_id":"source/contentimg/16/1/15.png","hash":"b22cc811d2a10ae07f30c10459836dd8af982c92","modified":1539938016535},{"_id":"source/contentimg/16/1/14.png","hash":"a70d3f518e13d12c8d52f9fb2bea24eae29d0764","modified":1539938007954},{"_id":"source/contentimg/31/14.png","hash":"57125234bac2d090f12ffac84eb391ca74dce3a3","modified":1540785762911},{"_id":"source/contentimg/18/Office-2019.pdf","hash":"15b912ed45cbd4fa5a5d770b6599fd730042add3","modified":1533948421515},{"_id":"source/contentimg/7/9.png","hash":"69a0733a4237a336b59ff35c046a188cf6af96d2","modified":1539768418319},{"_id":"source/contentimg/9/22.png","hash":"87c90e0e62dbec4de05f769b82ac4befe4f918eb","modified":1539962275085},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1514806389000},{"_id":"source/contentimg/16/1/12.png","hash":"85a181ab6b7edfa3c57a1803845dae175b7c54a2","modified":1539937993852},{"_id":"source/contentimg/16/1/17.png","hash":"b19e5f3e2a8c683e30bcf80397306a7a46a39719","modified":1539938029781},{"_id":"source/contentimg/16/1/7.png","hash":"6f08c61a36b792c6e2c8415b0cdf68ffca9acdba","modified":1539937950793},{"_id":"source/contentimg/16/1/19.png","hash":"a4efc93628e6bd5d429ec5652bbb3100b2676bf3","modified":1539938044948},{"_id":"source/contentimg/16/1/4.png","hash":"a42d91469808200455ac44c8ef68b937b38b99a4","modified":1539937925245},{"_id":"source/contentimg/16/1/6.png","hash":"a8cbc737ad93cc39afd60268106416b11c47f20f","modified":1539937940994},{"_id":"source/contentimg/16/1/13.png","hash":"cf191216884c30c567874a0429ab432b545be858","modified":1539938000398},{"_id":"source/contentimg/30/12.png","hash":"b06074a12489dbde47bb5e76d93d301be89c47f6","modified":1540567588138},{"_id":"source/contentimg/30/4.png","hash":"3e6c8cf052e0f9013cbf8110f6dc392a6c00ee8e","modified":1540535059277},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1514806389000},{"_id":"source/contentimg/16/1/11.png","hash":"2c44a24aa8376b03f36053b68e899841af0bc3d5","modified":1539937986929},{"_id":"source/contentimg/16/1/22.png","hash":"0671da2e2fe918ac0a0edba141c2ec6b8374a50b","modified":1539938070763},{"_id":"source/contentimg/16/1/8.png","hash":"7195edbde0afceacd01fbe82bcb635b8aaae7d5b","modified":1539937960260},{"_id":"source/unitydemo/pdfjs-web/build/pdf.js","hash":"2ae03826a743fc197e784f0d85bb707a24e5e2a2","modified":1528189618000},{"_id":"source/unitydemo/pdfjs-web/web/viewer.js.map","hash":"e7c700e4857c5ef8cd90c33bf36857932ff54462","modified":1528189600000},{"_id":"source/contentimg/16/1/10.png","hash":"2cb701e0a6dfda060729bbdbf58f002d21db0392","modified":1539937980144},{"_id":"source/contentimg/2/7.1.png","hash":"edd7864bb2786115fd4859714168342bd7e3d8c9","modified":1539577756932},{"_id":"source/contentimg/2/4.1.png","hash":"f572cb143f7260c06d3fec8c30e80f639500424f","modified":1539529338440},{"_id":"source/contentimg/16/1/21.png","hash":"8f81f24966587b7b880c3db942e2c11ed9de46a6","modified":1539938060651},{"_id":"source/contentimg/16/1/5.png","hash":"0653f75a137c0bc46cd22cc3463de6013d1bb5fe","modified":1539937933788},{"_id":"source/contentimg/16/1/9.png","hash":"982d6e24f498171d5a3bf15b61b7dcf50a0f4324","modified":1539937972529},{"_id":"source/contentimg/33/11.png","hash":"915b6f91474bc947d0818b8326a1a56d84503b2b","modified":1541428146473},{"_id":"source/contentimg/16/1/18.png","hash":"2a3f7490e9635d081fecc7efe8542e4c5f4b48c5","modified":1539938037477},{"_id":"source/contentimg/16/1/20.png","hash":"ccd378d6200245da7ac5e130739b11093deca3d9","modified":1539938053545},{"_id":"source/contentimg/2/5.1.png","hash":"c9f30d0fe2b45bff31c122534c5d5d4a06e48c6b","modified":1539535881185},{"_id":"source/contentimg/16/1/1.png","hash":"2a87078e57741c451962ea03f2c2d5418bb7c716","modified":1539937899638},{"_id":"source/contentimg/2/6.1.png","hash":"2590785ab24eec0133c41874c103e42292180d67","modified":1539537353588},{"_id":"source/unitydemo/pdfjs-web/build/pdf.js.map","hash":"dd630b79509d886ed9e2d3f8127a2321d78a2c13","modified":1528189620000},{"_id":"source/unitydemo/pdfjs-web/build/pdf.worker.js","hash":"5383a46b88e89310423b5ff95be8bfa33fdfd8b4","modified":1528189620000},{"_id":"source/contentimg/16/1/24.png","hash":"41b19cbb2920021c86441f3e1466d5b7487c1bc1","modified":1539449223543},{"_id":"source/contentimg/30/3.gif","hash":"78eefd9df14df8873f99738fefb88f3e0b1117f3","modified":1540536260507},{"_id":"source/contentimg/30/2.gif","hash":"60657da07d254a0a7594cea7010b0cff0807b477","modified":1540535880370},{"_id":"source/contentimg/16/1/23.png","hash":"e05943116784f575fb103f2b41b891c89428d2ca","modified":1539938081566},{"_id":"source/unitydemo/2/Release/test.datagz","hash":"c1ff011ccd86f689f9d22a64cb995af266f3c86b","modified":1540787260535},{"_id":"source/contentimg/30/1.gif","hash":"4a6cf468106288b0dd605ad53959c57285bcdba4","modified":1540582026258},{"_id":"source/unitydemo/3/Build/test.data.unityweb","hash":"6f0786ae6e1f90db399319c1fc0bbdeca4892535","modified":1540787260216},{"_id":"source/unitydemo/3/Build/test.wasm.code.unityweb","hash":"c152042486560fbcc1fe434b8bb28eb901ea9956","modified":1540787260152},{"_id":"source/unitydemo/pdfjs-web/build/pdf.worker.js.map","hash":"7ba95d91ace321ce565b362072047ab2737275c9","modified":1528189620000},{"_id":"source/unitydemo/5/Build/test.wasm.code.unityweb","hash":"864622c915dcb9e4116f32234329589e48dc1b7b","modified":1541480311669},{"_id":"source/unitydemo/4/Build/test.wasm.code.unityweb","hash":"ff53a9dce6af3d443373e913a4997258cb73ba4d","modified":1540795640314},{"_id":"source/unitydemo/2/Release/test.jsgz","hash":"3ed096b40da19bba442f9f5d9b6a1075d3e551e0","modified":1540787260411},{"_id":"source/contentimg/30/4.gif","hash":"e8eddc666d0241b412bb50618e7bffcf8d2c253e","modified":1540582547338},{"_id":"source/unitydemo/4/Build/test.data.unityweb","hash":"5a5095dc1acf06ba313bb6ac7344b8ce6ae437a1","modified":1540795638865},{"_id":"source/unitydemo/5/Build/test.data.unityweb","hash":"4a20a2a2b7d82cc9bbc4cdd80d738e8fc8fe59f4","modified":1541480310422},{"_id":"source/unitydemo/sanjiaoxin.apk","hash":"ee405976d94add5cf3982a5e14d636978e858ba0","modified":1556467078075},{"_id":"source/unitydemo/TriangleDemo.apk","hash":"ee405976d94add5cf3982a5e14d636978e858ba0","modified":1556467078075},{"_id":"source/unitydemo/Triangle.apk","hash":"ee405976d94add5cf3982a5e14d636978e858ba0","modified":1556467078075},{"_id":"public/baidusitemap.xml","hash":"0587526e08ebff77920ac39ed2635fd3dfb10166","modified":1593098518555},{"_id":"public/search.xml","hash":"051e7d4e8e2571988e05dcaf794fd2eff73ae683","modified":1644659081924},{"_id":"public/atom.xml","hash":"ea087f074c7c49313e61c8db8b9bc39041f24df1","modified":1593098518559},{"_id":"public/sitemap.xml","hash":"1f1589cb12196a54188e7da983d0eeae5467d033","modified":1593098519614},{"_id":"public/404/index.html","hash":"d064b844d68eb318d692da57a73e4c28286e5dda","modified":1644659081968},{"_id":"public/categories/index.html","hash":"bf17b3338b0b1d4ed270ab221a7271d020dad3ad","modified":1644659081968},{"_id":"public/tags/index.html","hash":"1fbd659def890c2e8bc41088d2163b637738937a","modified":1644659081968},{"_id":"public/about/index.html","hash":"f90867b5c92dad1ad81e16638e5046e34d642ca6","modified":1644659081968},{"_id":"public/36Astar/index.html","hash":"c65d9a705071b1f1aa99890e800cff615167c534","modified":1644659081968},{"_id":"public/35FMS/index.html","hash":"af481c2b459b3226a35f94ef5d132219139d28ca","modified":1644659081968},{"_id":"public/34DesignPattern/index.html","hash":"64a221e28659484bd3e2e363ab15bdaadcad4b0e","modified":1644659081968},{"_id":"public/33HitGhostDemo/index.html","hash":"66d9594e0ffec8a667ebc8f949d83d47dbf1f2f3","modified":1644659081968},{"_id":"public/32AssetBundle_1/index.html","hash":"62c0824c7266d6a89412391cb5c189f597911818","modified":1644659081968},{"_id":"public/31WallBallDemo/index.html","hash":"b7168a7296dbc88b70a480593a96eede5ad9a94b","modified":1644659081968},{"_id":"public/30Lived2d_for_unity/index.html","hash":"996e4e66252bb90ded7e71037d59a640f7b77de0","modified":1644659081968},{"_id":"public/26UnitySuper_1/index.html","hash":"b9044e3c9c19a4bb55e61b249694ce5edd92c94b","modified":1644659081968},{"_id":"public/25UnityPlatform_define/index.html","hash":"46571bada149a7e3f601fb9b2431b8c69a2cb41a","modified":1644659081968},{"_id":"public/28algorithm_2/index.html","hash":"499c011164f71602dc070177a41a1c05f58df0e4","modified":1644659081968},{"_id":"public/24algorithm_1/index.html","hash":"de78620961242ddaf6c0852f31e633cbd4bc289f","modified":1644659081968},{"_id":"public/23unitywebgl360error/index.html","hash":"33c260d314027f97e2a83363387faa25a141c6cb","modified":1644659081968},{"_id":"public/29Unity_error_1/index.html","hash":"5cf67951aa511294486347cc3830ed14b82d69fe","modified":1644659081968},{"_id":"public/27getweatherapi/index.html","hash":"27987c10570d9d43ceb6bd60e86a0c9f7163d098","modified":1644659081968},{"_id":"public/22Roguelike/index.html","hash":"df8909c94e03d1eb3fa38e4e99e98e99dc43493c","modified":1644659081968},{"_id":"public/21swfobjectdemo/index.html","hash":"f36e9638201038dc1101336d6cd99def255a1255","modified":1644659081968},{"_id":"public/17git-securityalert/index.html","hash":"3793adbe61ddae4f6bb3f144fdea2da378ceea7d","modified":1644659081968},{"_id":"public/20sitemap2url/index.html","hash":"3e041577c7ce9fa4a3da2306c06a70335ebeda05","modified":1644659081968},{"_id":"public/15SSDforwto/index.html","hash":"aa22406f8d51290c502ffc058124cbdbd07e153f","modified":1644659081969},{"_id":"public/19markdownextend/index.html","hash":"c6709404923e5c65c8451d848aefddb1e769fe3f","modified":1644659081968},{"_id":"public/18office2019/index.html","hash":"575a54bdf48a403495f1d1912e5f0690a76fe40b","modified":1644659081968},{"_id":"public/16VM_macandlinux/index.html","hash":"9dce13462e2ccccb5d190644dfa40ca5271afd3f","modified":1644659081969},{"_id":"public/14batforcodingpage/index.html","hash":"1552e59c06d9296f7dfa429dc1fa2c870321de09","modified":1644659081969},{"_id":"public/11clock-js/index.html","hash":"a1499f509c0cb4d529aba48c854351046329bf6d","modified":1644659081969},{"_id":"public/9howtoeditthemes/index.html","hash":"13dff2e9e7b368a3544a95122352d67482bf2b3c","modified":1644659081969},{"_id":"public/10ffmpeg-aes-1/index.html","hash":"feec6e3de9a7d3d970bfff5c24070cc889610d5e","modified":1644659081969},{"_id":"public/8SupGitPage/index.html","hash":"919f0999c9c7d67c0b7fddd311f2a606e4e88dcd","modified":1644659081969},{"_id":"public/7CreatGitPage/index.html","hash":"b2bffa42ce4dd3963de3c23a8615fb83de5f6f43","modified":1644659081969},{"_id":"public/6CreatWordPress/index.html","hash":"ae5195ed743c5b4160307987663480a4bd321c92","modified":1644659081969},{"_id":"public/13jsclickpass/index.html","hash":"f1787c15b0e971711b4c3c5803f6c03a7a586d00","modified":1644659081969},{"_id":"public/12hottoaddhtml/index.html","hash":"2031d311a49f989a8b6fac93d26ad4ae718b315d","modified":1644659081969},{"_id":"public/4fivefeatures/index.html","hash":"a70841e76caf0eb8423ac1a0c37e1ae16792a16e","modified":1644659081969},{"_id":"public/5Closure/index.html","hash":"1b1c494a2b86cdf3a4a1c6c2dced8cbbb6a72a57","modified":1644659081969},{"_id":"public/3JsonDeal/index.html","hash":"48898fbaaa0c75104847405b90fb01bcfc4320aa","modified":1644659081969},{"_id":"public/archives/index.html","hash":"414508b192be77c0d4a132b47479a48f25a5244c","modified":1644659081969},{"_id":"public/2SortMethon/index.html","hash":"2a443a31e0110c68d226c654b30ba285e5e11d10","modified":1644659081969},{"_id":"public/1IoDHSingleton/index.html","hash":"692e8f2252ac66c59b57612aacb2ade71228eff7","modified":1644659081969},{"_id":"public/archives/page/2/index.html","hash":"f97fd457dd4b6dec9a14cc1f498f1de010ff7f42","modified":1644659081969},{"_id":"public/archives/2018/index.html","hash":"0ce6325faf515c5c73af54336495a5053e82d6e5","modified":1644659081969},{"_id":"public/archives/page/4/index.html","hash":"86b772136881f5475d15b602a5bbb101f053414e","modified":1644659081969},{"_id":"public/archives/page/3/index.html","hash":"d4dcbaca6113daeab1836329d27b13c80a8c0e3c","modified":1644659081969},{"_id":"public/archives/2018/page/4/index.html","hash":"6c6903fb64b8438f37ab990df1b1a5650c25aa26","modified":1644659081969},{"_id":"public/archives/2018/10/page/2/index.html","hash":"c3a4520d44768ec951e232630b079088d88ed65e","modified":1644659081969},{"_id":"public/archives/2018/10/index.html","hash":"af899f56375946a5bd01fc133e87f544f835d3ce","modified":1644659081969},{"_id":"public/archives/2018/page/3/index.html","hash":"eb40a38f3104d76f07eaff6e3f5dc0fa494bf4da","modified":1644659081969},{"_id":"public/archives/2018/page/2/index.html","hash":"be87e5b920b71cb197269c6a71116ee1eecefb6f","modified":1644659081969},{"_id":"public/index.html","hash":"2d5f20c6ba8481dfb98b96cc95bd860056aff4e1","modified":1644659081969},{"_id":"public/archives/2018/10/page/3/index.html","hash":"b243bc80a03ddf006fb4bf19b477fa5d92dbc3c4","modified":1644659081969},{"_id":"public/page/2/index.html","hash":"e61fd4300710238f38441a4fee56082d7ebb393c","modified":1644659081969},{"_id":"public/page/3/index.html","hash":"3859de88cb1d0eaaa299768fef5f4f1e40a85014","modified":1644659081969},{"_id":"public/archives/2018/10/page/4/index.html","hash":"0fa669b872a8a6994a131d5971960b58959bea6a","modified":1644659081969},{"_id":"public/archives/2018/11/index.html","hash":"e2acc433d0c3c8645b8b5c7126f8ec9d6d7e06ee","modified":1644659081969},{"_id":"public/page/4/index.html","hash":"423e722a046b6a276b09aaf8c351cc576ee63f77","modified":1644659081969},{"_id":"public/categories/windows系统妙用/index.html","hash":"dcecb3de7f2ec4e1eb2c7bebca82c02e6e554375","modified":1644659081969},{"_id":"public/categories/前端/index.html","hash":"3b84da554d4b38d7e349cf273e066089153e62da","modified":1644659081969},{"_id":"public/categories/github疑难杂症/index.html","hash":"a4acd1e901ee0743316243fc5cd2ec53f2c70449","modified":1644659081969},{"_id":"public/categories/批处理/index.html","hash":"2e4192dc86ae8bc81ff57a4b29ea9071ce98f379","modified":1644659081969},{"_id":"public/categories/markdown扩展/index.html","hash":"bf6e90ad914c50c8c5052492534c21d49fa0ad0a","modified":1644659081969},{"_id":"public/categories/软件破解包/index.html","hash":"97d33e925fa528dadec07cfc8df2b7ccd9fe9097","modified":1644659081969},{"_id":"public/categories/虚拟机/index.html","hash":"afd52931d380fabde17ae38e8840f08fe56df91c","modified":1644659081970},{"_id":"public/categories/源码分析/index.html","hash":"b9e9d3f6a9dbc4bb3293b578df8830be8e223f6d","modified":1644659081970},{"_id":"public/categories/Unity3D/index.html","hash":"5c9bcb68125bbe9b0d0afd53b434b3660781be88","modified":1644659081970},{"_id":"public/categories/Unity/index.html","hash":"4566dd8ca3e6233b866696dd0c2ac81ec488f6a5","modified":1644659081970},{"_id":"public/categories/异常处理/index.html","hash":"b37fdf9375e6feebdd15e8c495517ccc85221fbe","modified":1644659081970},{"_id":"public/categories/第三方插件/index.html","hash":"817abc62a0266d7f16d4d597b97015974b598206","modified":1644659081970},{"_id":"public/categories/联调/index.html","hash":"c130364041beed1577c1ddf920394c1a83858377","modified":1644659081970},{"_id":"public/categories/设计模式/index.html","hash":"57f7460fbe05ff8dae43174cc5db7e52331b46d1","modified":1644659081970},{"_id":"public/categories/编程疑难杂症/index.html","hash":"be52dc35b088775921b8591eed6ecff9099a75ed","modified":1644659081970},{"_id":"public/categories/算法/index.html","hash":"a28ecf29054f559988c51315160532bbb639c8cd","modified":1644659081970},{"_id":"public/categories/编程人生/index.html","hash":"37c20809d003b0043a6b7d795b597e207d4ae0c3","modified":1644659081970},{"_id":"public/categories/Unity优化/index.html","hash":"9cd5384b56278a137f52d6748f61b09f1a69edd6","modified":1644659081970},{"_id":"public/tags/js/index.html","hash":"7baada73dc3c7910e7279954645c814871b9b832","modified":1644659081970},{"_id":"public/categories/编程技巧/index.html","hash":"565c326c4040564f731e6631ee42e2a13cdac320","modified":1644659081970},{"_id":"public/categories/开源库分享/index.html","hash":"2319ea10417dd0d77f63fb633158b88c9967013c","modified":1644659081970},{"_id":"public/tags/Markdown内嵌前端代码/index.html","hash":"7322ec8a341afe5c7ae64b1b3c94573ffafb133b","modified":1644659081970},{"_id":"public/tags/时钟挂件/index.html","hash":"4862a76951051cbf9d3ee3b0b6e506805d71bf80","modified":1644659081970},{"_id":"public/tags/Markdown内嵌html/index.html","hash":"065fa8376e0f860e80c07cb44dbc0a63459ac74a","modified":1644659081970},{"_id":"public/tags/skip-render/index.html","hash":"c194ea898f6b31f3a202e7889e2579e73dee1255","modified":1644659081970},{"_id":"public/tags/批处理/index.html","hash":"698c4276b6af6dd89d1ef121584f798a70b85a11","modified":1644659081970},{"_id":"public/tags/git/index.html","hash":"8610818fb70c848d358448d961a93705a5b230a5","modified":1644659081970},{"_id":"public/tags/canvas-nest/index.html","hash":"30c0f7b9b7b248c7da71f17c77132bb074ca8459","modified":1644659081970},{"_id":"public/tags/markdown/index.html","hash":"839d060165cd67cab108bbdd54977497765c5d82","modified":1644659081970},{"_id":"public/tags/SSD/index.html","hash":"ed2c2e83febac7ada10b8d29f3a4c3e0e39e44ca","modified":1644659081970},{"_id":"public/tags/office/index.html","hash":"07ae57976f6ccee2fcf925071948a1d09646b8e9","modified":1644659081970},{"_id":"public/tags/github/index.html","hash":"b08790099e810ac1dea4cc8cd948c69cc1298d0f","modified":1644659081970},{"_id":"public/tags/wto/index.html","hash":"a075c910e32bbcc7cbdb72f2d60b6f1cea8f42d7","modified":1644659081970},{"_id":"public/tags/破解吧/index.html","hash":"cb7298221fbd84e6fa98cf9d9469b14489406bdc","modified":1644659081970},{"_id":"public/tags/security-alert/index.html","hash":"1cb594a25feeb9f0abb02b3ac80c920bcba3bddb","modified":1644659081970},{"_id":"public/tags/hexo源码/index.html","hash":"4ce7e4b3f7a0b30dfedb0ded0aa5556cd3fa8bf9","modified":1644659081970},{"_id":"public/tags/webgl/index.html","hash":"19d277ea598637da7167dc3c39ff0e70561f9b75","modified":1644659081970},{"_id":"public/tags/环境/index.html","hash":"f48a7446b879398e2f067606e1253ab4e69f54fa","modified":1644659081970},{"_id":"public/tags/指令/index.html","hash":"02b6fb3b4c852a35da18b09977ae4bf9c56f1b9a","modified":1644659081970},{"_id":"public/tags/VMWare/index.html","hash":"3f9ec1dccab7d49ec98688bf9d3e1eca028c329f","modified":1644659081970},{"_id":"public/tags/Linux/index.html","hash":"92af0973fa2f38fb003658a713a4d848125d572a","modified":1644659081970},{"_id":"public/tags/Mac/index.html","hash":"2c872ca6be059ddd0ab93ae5a444d63442f2eec7","modified":1644659081970},{"_id":"public/tags/unity/index.html","hash":"5ce2323253bb45f1ac083e4813ffd08948945f55","modified":1644659081970},{"_id":"public/tags/游戏开发/index.html","hash":"f6979685d1e1c5a5f6dcd87c42fa5eb992a2d90a","modified":1644659081970},{"_id":"public/tags/接口调试/index.html","hash":"29e880697605314154205495e97d2d9b2c68e806","modified":1644659081970},{"_id":"public/tags/2D/index.html","hash":"24618bb477aaa15c68410efd2854190f0f26a1df","modified":1644659081970},{"_id":"public/tags/API使用/index.html","hash":"c8568d2bc53a7f70da0404a86a86fdbf44cb1ae2","modified":1644659081970},{"_id":"public/tags/http调试/index.html","hash":"de4d11d0eb9d4ee85d886f3d689b8d9b91ce8d96","modified":1644659081970},{"_id":"public/tags/入门级/index.html","hash":"3021d42fd2b0bdb4a8eae39cd323c3388a622a7a","modified":1644659081970},{"_id":"public/tags/异常处理/index.html","hash":"0306c3b6b33332bf171600b2a253ef4e1f1134b2","modified":1644659081970},{"_id":"public/tags/FMS/index.html","hash":"e4aeb597145457cc6e7475744b9bf3b2ddaac939","modified":1644659081970},{"_id":"public/tags/Live2D/index.html","hash":"dab3e5693a562746f5f3df426b027edf3556d6e7","modified":1644659081970},{"_id":"public/tags/小游戏/index.html","hash":"fce4b790ef37e72bd5eb0dcb08c1f52f08ff2353","modified":1644659081970},{"_id":"public/tags/abowman/index.html","hash":"a1e6728f7abc3d9f5840f75ccb32c9fcd648f487","modified":1644659081971},{"_id":"public/tags/C/index.html","hash":"e1c0cd7b26fc62441408db9413c5fd6f49905cdc","modified":1644659081971},{"_id":"public/tags/swf/index.html","hash":"7405a1d572b7ef03d181115116fa07ca75ff35aa","modified":1644659081971},{"_id":"public/tags/flash/index.html","hash":"6537cf11b8dafbe87fa97b80b4cf0b7483602ad1","modified":1644659081971},{"_id":"public/tags/swfobject/index.html","hash":"3027dda3babedf90313087597c6db0c124ebf9c1","modified":1644659081971},{"_id":"public/tags/视频处理/index.html","hash":"74e5bbc1ccd47e7f224d670b8b1f0c02101c996e","modified":1644659081971},{"_id":"public/tags/寻路/index.html","hash":"b104643008041cdda409e6ad448e48e5f94e8cc0","modified":1644659081971},{"_id":"public/tags/闭包/index.html","hash":"3f4cb75e94f68f3c568640fc5003cc4ae035fd38","modified":1644659081971},{"_id":"public/tags/工具使用/index.html","hash":"6c616fee6cfd0731edde4550713f8b91e4ca39df","modified":1644659081971},{"_id":"public/tags/ffmpeg/index.html","hash":"5171e19c2cf0fe5f1aa7b2de8e3e10b65069a04c","modified":1644659081971},{"_id":"public/tags/游戏优化/index.html","hash":"07cde5fbee6d537c299030b2f7d9d16ed27867c8","modified":1644659081971},{"_id":"public/tags/IoDH/index.html","hash":"4e015c4fb5b9ef7650b11efd3a5d2c8790255e94","modified":1644659081971},{"_id":"public/tags/Attribute特性/index.html","hash":"099f1e01f5a37e8087a0aa83cd870dbd81e67532","modified":1644659081971},{"_id":"public/tags/发布优化/index.html","hash":"ab63dcaaf78e76fb1a513c0b8a33373e440ed0de","modified":1644659081971},{"_id":"public/tags/3D/index.html","hash":"59e3d79f7551329b1cfcd9da9b1b82d5049332f7","modified":1644659081971},{"_id":"public/tags/设计模式/index.html","hash":"3d93ef5e6aa2aca8106bf9afbe0deb944760977c","modified":1644659081971},{"_id":"public/tags/enum特性/index.html","hash":"d6d22beeba605a7df4be7d132d5bc55610c2916e","modified":1644659081971},{"_id":"public/tags/域名/index.html","hash":"4e3b2a368f5ea1edb294b9437a9b9c4e9c1febc0","modified":1644659081971},{"_id":"public/tags/算法/index.html","hash":"f49c39232e6c1d0df8679c43dc20aa6b5e693127","modified":1644659081971},{"_id":"public/tags/个人博客/index.html","hash":"639f4b4e37034bcbfe0255aba261b0f584eee225","modified":1644659081971},{"_id":"public/tags/前端技术/index.html","hash":"7ec594dc844147b05cbe493e6241f1b7a894aa32","modified":1644659081971},{"_id":"public/tags/数据结构/index.html","hash":"907295fe36d54262fec6934ef691541e59609d21","modified":1644659081971},{"_id":"public/tags/Json/index.html","hash":"78de96029ffd87725b57a98dbac1f0e3a69b0ea9","modified":1644659081971},{"_id":"public/unitydemo/Triangle.apk","hash":"ee405976d94add5cf3982a5e14d636978e858ba0","modified":1593098525509},{"_id":"public/unitydemo/sanjiaoxin.apk","hash":"ee405976d94add5cf3982a5e14d636978e858ba0","modified":1593098525514},{"_id":"public/contentimg/Unity姚佳鑫_13580519427.pdf","hash":"2f1834b2f598a1c26b5f687de7ae8ee7edb6ee0c","modified":1644659132590}],"Category":[{"name":"前端","_id":"cjvklgqsn0006jo9clvmj45o3"},{"name":"批处理","_id":"cjvklgqsw000fjo9cmb0of8dn"},{"name":"markdown扩展","_id":"cjvklgqt0000mjo9ctxyqqyh6"},{"name":"windows系统妙用","_id":"cjvklgqt3000tjo9cea2i4oo9"},{"name":"软件破解包","_id":"cjvklgqt5000yjo9c17xyks8j"},{"name":"github疑难杂症","_id":"cjvklgqt70011jo9c4enchkvd"},{"name":"源码分析","_id":"cjvklgqt80016jo9ctnv6n7dj"},{"name":"Unity3D","_id":"cjvklgqta001ajo9ckpf4t51e"},{"name":"Unity","_id":"cjvklgqtd001ijo9chmvev1hm"},{"name":"虚拟机","_id":"cjvklgr1k002gjo9c4i97knei"},{"name":"异常处理","_id":"cjvklgr1n002ljo9ci7na3khe"},{"name":"联调","_id":"cjvklgr1q002qjo9crwdge2t7"},{"name":"第三方插件","_id":"cjvklgr1u002wjo9c53ztns36"},{"name":"设计模式","_id":"cjvklgr1w0031jo9c2q4c67qx"},{"name":"算法","_id":"cjvklgr1y0036jo9c4az6ayhu"},{"name":"编程疑难杂症","_id":"cjvklgr1z003bjo9cb8upuzmt"},{"name":"编程人生","_id":"cjvklgrd30049jo9cvblylkf1"},{"name":"Unity优化","_id":"cjvklgrht004qjo9cr9tlixfr"},{"name":"编程技巧","_id":"cjvklgrig0053jo9c9o0k3g32"},{"name":"开源库分享","_id":"cjvklgsbl006cjo9cocb7jd24"}],"Data":[],"Page":[{"title":"404","date":"2018-10-14T10:16:31.000Z","_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2018-10-14 18:16:31\n---\n<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","updated":"2018-10-14T10:16:45.194Z","path":"404/index.html","comments":1,"layout":"page","_id":"cjvklgp5g0000jo9coaj6rtsv","content":"<p>&lt;!DOCTYPE HTML&gt;</p>\n<html><br><head><br>  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"><br>  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"><br>  <meta name=\"robots\" content=\"all\"><br>  <meta name=\"robots\" content=\"index,follow\"><br>  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\"><br></head><br><body><br>  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\"><br>  </script><br>  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script><br>  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script><br></body><br></html>","site":{"data":{}},"excerpt":"","more":"<p>&lt;!DOCTYPE HTML&gt;</p>\n<html><br><head><br>  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"><br>  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"><br>  <meta name=\"robots\" content=\"all\"><br>  <meta name=\"robots\" content=\"index,follow\"><br>  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\"><br></head><br><body><br>  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\"><br>  </script><br>  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script><br>  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script><br></body><br></html>"},{"title":"个人简介","date":"2018-10-14T10:24:21.000Z","_content":"\n　　本人 姚佳鑫 ，广工16年毕业本科生。\n\n　　C#开发工程师，从事过WPF桌面应用开发、.net后台开发。\n\n　　对技术有所追求，但不嫌弃实现所能用技术，所以你在我的博客可以看到什么类型的技术都有提到，前端、批处理、工具等等。\n\n\n　　现寻找机会转职Unity3D开发工程师，亦或其他合适的技术岗位。本人不计较技术类型，但看重平台。目前考虑地点为广州/深圳。\n\n　　有意者请与我联系：<a id=\"qqlink\" href=\"http://wpa.qq.com/msgrd?v=3&uin=659771655&site=qq&menu=yes\"><i class=\"fa fa-fw fa-qq\"></i><span> Q-me:659771655 </span></a>\n\n　　手机用户亦可访问：<a id=\"qqlink\" href=\"mqqwpa://im/chat?chat_type=wpa&uin=659771655&version=1&src_type=web&web_src=oicqzone.com\"><i class=\"fa fa-fw fa-qq\"></i><span> Q-me:659771655 </span></a>\n\n\n　　个人简历：<a id=\"download\" href=\"/contentimg/Unity姚佳鑫_13580519427.pdf\" download=\"Unity姚佳鑫_13580519427.pdf\"><i class=\"fa fa-download\"></i><span> 下载简历 </span>\n</a>\n\n<p><div style=\"width:100%; height:950px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"900\" src=\"/unitydemo/pdfjs-web/web/viewer.html?file=/contentimg/Unity姚佳鑫_13580519427.pdf\"/></div></p>\n\n\n\n\n\n\n\n\n","source":"about/index.md","raw":"---\ntitle: 个人简介\ndate: 2018-10-14 18:24:21\n---\n\n　　本人 姚佳鑫 ，广工16年毕业本科生。\n\n　　C#开发工程师，从事过WPF桌面应用开发、.net后台开发。\n\n　　对技术有所追求，但不嫌弃实现所能用技术，所以你在我的博客可以看到什么类型的技术都有提到，前端、批处理、工具等等。\n\n\n　　现寻找机会转职Unity3D开发工程师，亦或其他合适的技术岗位。本人不计较技术类型，但看重平台。目前考虑地点为广州/深圳。\n\n　　有意者请与我联系：<a id=\"qqlink\" href=\"http://wpa.qq.com/msgrd?v=3&uin=659771655&site=qq&menu=yes\"><i class=\"fa fa-fw fa-qq\"></i><span> Q-me:659771655 </span></a>\n\n　　手机用户亦可访问：<a id=\"qqlink\" href=\"mqqwpa://im/chat?chat_type=wpa&uin=659771655&version=1&src_type=web&web_src=oicqzone.com\"><i class=\"fa fa-fw fa-qq\"></i><span> Q-me:659771655 </span></a>\n\n\n　　个人简历：<a id=\"download\" href=\"/contentimg/Unity姚佳鑫_13580519427.pdf\" download=\"Unity姚佳鑫_13580519427.pdf\"><i class=\"fa fa-download\"></i><span> 下载简历 </span>\n</a>\n\n<p><div style=\"width:100%; height:950px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"900\" src=\"/unitydemo/pdfjs-web/web/viewer.html?file=/contentimg/Unity姚佳鑫_13580519427.pdf\"/></div></p>\n\n\n\n\n\n\n\n\n","updated":"2018-11-08T10:52:00.355Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjvklgp7m0001jo9chpitrpdt","content":"<p>　　本人 姚佳鑫 ，广工16年毕业本科生。</p>\n<p>　　C#开发工程师，从事过WPF桌面应用开发、.net后台开发。</p>\n<p>　　对技术有所追求，但不嫌弃实现所能用技术，所以你在我的博客可以看到什么类型的技术都有提到，前端、批处理、工具等等。</p>\n<p>　　现寻找机会转职Unity3D开发工程师，亦或其他合适的技术岗位。本人不计较技术类型，但看重平台。目前考虑地点为广州/深圳。</p>\n<p>　　有意者请与我联系：<a id=\"qqlink\" href=\"http://wpa.qq.com/msgrd?v=3&uin=659771655&site=qq&menu=yes\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\"><i class=\"fa fa-fw fa-qq\"></i><span> Q-me:659771655 </span></a></p>\n<p>　　手机用户亦可访问：<a id=\"qqlink\" href=\"mqqwpa://im/chat?chat_type=wpa&uin=659771655&version=1&src_type=web&web_src=oicqzone.com\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\"><i class=\"fa fa-fw fa-qq\"></i><span> Q-me:659771655 </span></a></p>\n<p>　　个人简历：<a id=\"download\" href=\"/contentimg/Unity姚佳鑫_13580519427.pdf\" download=\"Unity姚佳鑫_13580519427.pdf\"><i class=\"fa fa-download\"></i><span> 下载简历 </span><br></a></p>\n<p><div style=\"width:100%; height:950px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"900\" src=\"/unitydemo/pdfjs-web/web/viewer.html?file=/contentimg/Unity姚佳鑫_13580519427.pdf\"></iframe></div></p>\n\n\n\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>　　本人 姚佳鑫 ，广工16年毕业本科生。</p>\n<p>　　C#开发工程师，从事过WPF桌面应用开发、.net后台开发。</p>\n<p>　　对技术有所追求，但不嫌弃实现所能用技术，所以你在我的博客可以看到什么类型的技术都有提到，前端、批处理、工具等等。</p>\n<p>　　现寻找机会转职Unity3D开发工程师，亦或其他合适的技术岗位。本人不计较技术类型，但看重平台。目前考虑地点为广州/深圳。</p>\n<p>　　有意者请与我联系：<a id=\"qqlink\" href=\"http://wpa.qq.com/msgrd?v=3&uin=659771655&site=qq&menu=yes\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\"><i class=\"fa fa-fw fa-qq\"></i><span> Q-me:659771655 </span></a></p>\n<p>　　手机用户亦可访问：<a id=\"qqlink\" href=\"mqqwpa://im/chat?chat_type=wpa&uin=659771655&version=1&src_type=web&web_src=oicqzone.com\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\"><i class=\"fa fa-fw fa-qq\"></i><span> Q-me:659771655 </span></a></p>\n<p>　　个人简历：<a id=\"download\" href=\"/contentimg/Unity姚佳鑫_13580519427.pdf\" download=\"Unity姚佳鑫_13580519427.pdf\"><i class=\"fa fa-download\"></i><span> 下载简历 </span><br></a></p>\n<p><div style=\"width:100%; height:950px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"900\" src=\"/unitydemo/pdfjs-web/web/viewer.html?file=/contentimg/Unity姚佳鑫_13580519427.pdf\"></iframe></div></p>\n\n\n\n\n\n\n\n\n"},{"title":"分类","date":"2018-10-14T09:55:22.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-10-14 17:55:22\ntype: \"categories\"\n---","updated":"2018-10-14T09:55:59.976Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjvklgp7m0002jo9c0layqahk","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-10-14T09:54:56.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-10-14 17:54:56\ntype: \"tags\"\n---\n","updated":"2018-10-14T09:56:10.769Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjvklgpxn0003jo9c4rdvihm0","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Markdown内嵌前端代码实例--时钟挂件","date":"2018-10-18T15:58:58.000Z","_content":"\t\n　　本文分享一个时钟挂件实例。该部分代码是网上搜索复制来的，非本人版权，请勿用于商业用途。\n\n<!-- more -->\n\n  <p><div style=\"width:100%; height:350px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"300\" src=\"/contentimg/11/click.html\"/></div></p>\n\n\n  \n　　这里利用iframe引用外部html，同时设置\n\n> allowtransparency=\"yes\" frameborder=\"0\"\n\n　　让iframe的背景透明，边框消失。\n\n> div style=\"width:100%; height:350px;border:none;text-align:center\"\n\n　　但是此时的iframe是靠左上的。我想居中，就需要利用div来实现。","source":"_posts/11clock-js.md","raw":"---\ntitle: Markdown内嵌前端代码实例--时钟挂件\ndate: 2018-10-18 23:58:58\ncategories:\n  - 前端\ntags:\n  - js\n  - 时钟挂件\n  - Markdown内嵌前端代码  \n---\n\t\n　　本文分享一个时钟挂件实例。该部分代码是网上搜索复制来的，非本人版权，请勿用于商业用途。\n\n<!-- more -->\n\n  <p><div style=\"width:100%; height:350px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"300\" src=\"/contentimg/11/click.html\"/></div></p>\n\n\n  \n　　这里利用iframe引用外部html，同时设置\n\n> allowtransparency=\"yes\" frameborder=\"0\"\n\n　　让iframe的背景透明，边框消失。\n\n> div style=\"width:100%; height:350px;border:none;text-align:center\"\n\n　　但是此时的iframe是靠左上的。我想居中，就需要利用div来实现。","slug":"11clock-js","published":1,"updated":"2018-10-27T11:54:16.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgqsi0004jo9c1e2ajo8n","content":"<p>　　本文分享一个时钟挂件实例。该部分代码是网上搜索复制来的，非本人版权，请勿用于商业用途。</p>\n<a id=\"more\"></a>\n  <p><div style=\"width:100%; height:350px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"300\" src=\"/contentimg/11/click.html\"></iframe></div></p>\n\n\n\n<p>　　这里利用iframe引用外部html，同时设置</p>\n<blockquote>\n<p>allowtransparency=”yes” frameborder=”0”</p>\n</blockquote>\n<p>　　让iframe的背景透明，边框消失。</p>\n<blockquote>\n<p>div style=”width:100%; height:350px;border:none;text-align:center”</p>\n</blockquote>\n<p>　　但是此时的iframe是靠左上的。我想居中，就需要利用div来实现。</p>\n","site":{"data":{}},"excerpt":"<p>　　本文分享一个时钟挂件实例。该部分代码是网上搜索复制来的，非本人版权，请勿用于商业用途。</p>","more":"<p><div style=\"width:100%; height:350px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"300\" src=\"/contentimg/11/click.html\"></iframe></div></p>\n\n\n\n<p>　　这里利用iframe引用外部html，同时设置</p>\n<blockquote>\n<p>allowtransparency=”yes” frameborder=”0”</p>\n</blockquote>\n<p>　　让iframe的背景透明，边框消失。</p>\n<blockquote>\n<p>div style=”width:100%; height:350px;border:none;text-align:center”</p>\n</blockquote>\n<p>　　但是此时的iframe是靠左上的。我想居中，就需要利用div来实现。</p>"},{"title":"Markdown内嵌html文件","date":"2018-10-18T15:59:58.000Z","_content":"\t\n　　本文记录如何在Markdown内嵌html文件，并设置hexo忽略编译该html。\n\n<!-- more -->\n\n　　前面一篇博客，我在页面里面嵌入了一个时钟html文件。\n\n　　到底如何实现的呢？\n\n　　刚开始，我是直接引用下面这样的代码：\n\n``` javascripts\n<p>\n    <div style=\"width:100%; height:350px;border:none;text-align:center\">\n\t\t<iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"300\" height=\"300\" src=\"/contentimg/11/click.html\"/>\n\t</div>\n</p>\n```\n\n![Result pic 1](/contentimg/12/1.png \"直接嵌入iframe\")\n\n\n　　Markdown可以插入外部html：利用iframe标签来实现。\n\n　　实际上，这样还是不行，hexo会自动给该html添加框架的代码，导致实际的效果变成主页嵌套该html代码。\n\n![Result pic 2](/contentimg/12/2.png \"主页嵌套html\")\n\n\n　　刚开始没头绪，后面对比文件大小。\n\n![Result pic 3](/contentimg/12/3.png \"生成public文件比对\")\n\n\n　　打开看到是加入了框架的代码导致。所以这时候要解决的是怎样让hexo编译的时候忽略该文件不加入框架代码。\n\n　　还好hexo也考虑到这个问题：\n\n![Result pic 4](/contentimg/12/4.png \"属性skip_render\")\n\n\n``` java\nskip_render: \n - contentimg/11/click.html\n - 404/404.html\n - README.md\n```\n\n　　在这里添加需要忽略编译的文件或文件夹。包括README.md也能这样弄，就不用像我前面的优化博客中提到那样在gulp里面操作复制文件了。\n\n　　文件夹的话是/*。注意设置完后，需要hexo clean，再hexo g。才能看到效果。不然直接hexo g，是不起效的。\n","source":"_posts/12hottoaddhtml.md","raw":"---\ntitle: Markdown内嵌html文件\ndate: 2018-10-18 23:59:58\ncategories:\n  - 前端\ntags:\n  - js\n  - skip_render\n  - Markdown内嵌html\n---\n\t\n　　本文记录如何在Markdown内嵌html文件，并设置hexo忽略编译该html。\n\n<!-- more -->\n\n　　前面一篇博客，我在页面里面嵌入了一个时钟html文件。\n\n　　到底如何实现的呢？\n\n　　刚开始，我是直接引用下面这样的代码：\n\n``` javascripts\n<p>\n    <div style=\"width:100%; height:350px;border:none;text-align:center\">\n\t\t<iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"300\" height=\"300\" src=\"/contentimg/11/click.html\"/>\n\t</div>\n</p>\n```\n\n![Result pic 1](/contentimg/12/1.png \"直接嵌入iframe\")\n\n\n　　Markdown可以插入外部html：利用iframe标签来实现。\n\n　　实际上，这样还是不行，hexo会自动给该html添加框架的代码，导致实际的效果变成主页嵌套该html代码。\n\n![Result pic 2](/contentimg/12/2.png \"主页嵌套html\")\n\n\n　　刚开始没头绪，后面对比文件大小。\n\n![Result pic 3](/contentimg/12/3.png \"生成public文件比对\")\n\n\n　　打开看到是加入了框架的代码导致。所以这时候要解决的是怎样让hexo编译的时候忽略该文件不加入框架代码。\n\n　　还好hexo也考虑到这个问题：\n\n![Result pic 4](/contentimg/12/4.png \"属性skip_render\")\n\n\n``` java\nskip_render: \n - contentimg/11/click.html\n - 404/404.html\n - README.md\n```\n\n　　在这里添加需要忽略编译的文件或文件夹。包括README.md也能这样弄，就不用像我前面的优化博客中提到那样在gulp里面操作复制文件了。\n\n　　文件夹的话是/*。注意设置完后，需要hexo clean，再hexo g。才能看到效果。不然直接hexo g，是不起效的。\n","slug":"12hottoaddhtml","published":1,"updated":"2018-10-18T07:34:33.160Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgqsm0005jo9caiwqcar1","content":"<p>　　本文记录如何在Markdown内嵌html文件，并设置hexo忽略编译该html。</p>\n<a id=\"more\"></a>\n<p>　　前面一篇博客，我在页面里面嵌入了一个时钟html文件。</p>\n<p>　　到底如何实现的呢？</p>\n<p>　　刚开始，我是直接引用下面这样的代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;</span><br><span class=\"line\">    &lt;div style=&quot;width:100%; height:350px;border:none;text-align:center&quot;&gt;</span><br><span class=\"line\">\t\t&lt;iframe allowtransparency=&quot;yes&quot; frameborder=&quot;0&quot; width=&quot;300&quot; height=&quot;300&quot; src=&quot;/contentimg/11/click.html&quot;/&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/12/1.png\" alt=\"Result pic 1\" title=\"直接嵌入iframe\"></p>\n<p>　　Markdown可以插入外部html：利用iframe标签来实现。</p>\n<p>　　实际上，这样还是不行，hexo会自动给该html添加框架的代码，导致实际的效果变成主页嵌套该html代码。</p>\n<p><img src=\"/contentimg/12/2.png\" alt=\"Result pic 2\" title=\"主页嵌套html\"></p>\n<p>　　刚开始没头绪，后面对比文件大小。</p>\n<p><img src=\"/contentimg/12/3.png\" alt=\"Result pic 3\" title=\"生成public文件比对\"></p>\n<p>　　打开看到是加入了框架的代码导致。所以这时候要解决的是怎样让hexo编译的时候忽略该文件不加入框架代码。</p>\n<p>　　还好hexo也考虑到这个问题：</p>\n<p><img src=\"/contentimg/12/4.png\" alt=\"Result pic 4\" title=\"属性skip_render\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">skip_render: </span><br><span class=\"line\"> - contentimg/<span class=\"number\">11</span>/click.html</span><br><span class=\"line\"> - <span class=\"number\">404</span>/<span class=\"number\">404</span>.html</span><br><span class=\"line\"> - README.md</span><br></pre></td></tr></table></figure>\n<p>　　在这里添加需要忽略编译的文件或文件夹。包括README.md也能这样弄，就不用像我前面的优化博客中提到那样在gulp里面操作复制文件了。</p>\n<p>　　文件夹的话是/*。注意设置完后，需要hexo clean，再hexo g。才能看到效果。不然直接hexo g，是不起效的。</p>\n","site":{"data":{}},"excerpt":"<p>　　本文记录如何在Markdown内嵌html文件，并设置hexo忽略编译该html。</p>","more":"<p>　　前面一篇博客，我在页面里面嵌入了一个时钟html文件。</p>\n<p>　　到底如何实现的呢？</p>\n<p>　　刚开始，我是直接引用下面这样的代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;</span><br><span class=\"line\">    &lt;div style=&quot;width:100%; height:350px;border:none;text-align:center&quot;&gt;</span><br><span class=\"line\">\t\t&lt;iframe allowtransparency=&quot;yes&quot; frameborder=&quot;0&quot; width=&quot;300&quot; height=&quot;300&quot; src=&quot;/contentimg/11/click.html&quot;/&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/12/1.png\" alt=\"Result pic 1\" title=\"直接嵌入iframe\"></p>\n<p>　　Markdown可以插入外部html：利用iframe标签来实现。</p>\n<p>　　实际上，这样还是不行，hexo会自动给该html添加框架的代码，导致实际的效果变成主页嵌套该html代码。</p>\n<p><img src=\"/contentimg/12/2.png\" alt=\"Result pic 2\" title=\"主页嵌套html\"></p>\n<p>　　刚开始没头绪，后面对比文件大小。</p>\n<p><img src=\"/contentimg/12/3.png\" alt=\"Result pic 3\" title=\"生成public文件比对\"></p>\n<p>　　打开看到是加入了框架的代码导致。所以这时候要解决的是怎样让hexo编译的时候忽略该文件不加入框架代码。</p>\n<p>　　还好hexo也考虑到这个问题：</p>\n<p><img src=\"/contentimg/12/4.png\" alt=\"Result pic 4\" title=\"属性skip_render\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">skip_render: </span><br><span class=\"line\"> - contentimg/<span class=\"number\">11</span>/click.html</span><br><span class=\"line\"> - <span class=\"number\">404</span>/<span class=\"number\">404</span>.html</span><br><span class=\"line\"> - README.md</span><br></pre></td></tr></table></figure>\n<p>　　在这里添加需要忽略编译的文件或文件夹。包括README.md也能这样弄，就不用像我前面的优化博客中提到那样在gulp里面操作复制文件了。</p>\n<p>　　文件夹的话是/*。注意设置完后，需要hexo clean，再hexo g。才能看到效果。不然直接hexo g，是不起效的。</p>"},{"title":"编写bat自动备份博客到codingpage","date":"2018-10-18T16:02:59.000Z","_content":"\t\n　　本文记录编写bat自动同步博客到codingpage。\n\n<!-- more -->\n\n　　由于gitpage在国内访问没codingpage快，我是把域名挂在codingpage的。但是博客和代码等等都在github那边，平时靠两边复制文件来同步，操作繁琐，便想到了用批处理来做这件事。\n\n　　在github这边，用gitbash生成，提交好后，点击bat，将public目录下的同步到coding。需求是这样的。那怎么实现？\n\n## 方案一\n\n　　新建文件夹codingpage，将public的文件复制到那边，然后提交。这里有问题，需要先清空codingpage文件夹，然后才能复制。写了一下del的处理，发现好麻烦，考虑的东西太多了。\n\n　　所以方案一放弃。\n\n## 方案二\n\n　　还是新建文件夹codingpage，但是是用来init git，让它出来一个.git后缀的文件夹：\n\n![Result pic 1](/contentimg/14/1.png \"初始化git文件夹\")\n\n\n　　后面的操作就是把这个.git文件夹复制过去public目录，然后cd进public，git提交。\n\n``` bash\n@echo off\necho 'use SSH command，will pull public to coding page'\n\nset publicdir=D:\\source\\blogcode\\public\\.git\nset publicd=D:\\source\\blogcode\\public\nset aimdir=D:\\source\\yaojiaxinpc\\.git\n\necho aimdir is %aimdir%\necho publicdir is %publicdir%\n\necho d|xcopy %aimdir%\\* %publicdir% /s /c /y\n\necho done\n\necho ***********************************************\necho ***********************************************\necho ***************start  to  commit***************\necho ***********************************************\necho ***********************************************\n\ncd /d %publicd%\necho gitdone\n\ndel CNAME\n\necho git pull origin master\necho but this useless because it's backups.so it won't done.\n\ngit add .\necho add all file to git...\n\nset \"year=%date:~0,4%\"\nset \"month=%date:~5,2%\"\nset \"day=%date:~8,2%\"\nset \"hour_ten=%time:~0,1%\"\nset \"hour_one=%time:~1,1%\"\nset \"minute=%time:~3,2%\"\nset \"second=%time:~6,2%\"\n\nif \"%hour_ten%\" == \" \" (\n    set cmitmessage=%year%%month%%day%0%hour_one%%minute%%second%\n) else (\n    set cmitmessage=%year%%month%%day%%hour_ten%%hour_one%%minute%%second%\n)\n\ngit commit -m \"%cmitmessage%\"\necho use time for message, commiting... \n\ngit push origin master -f\n \necho git push done!\npause>nul\n```\n\n[对应git](https://github.com/YaojiaxinPC/blogcode/blob/master/clonetocoding.bat)\n\n　　该方案行得通，而且处理方式简单许多。下面记录一下过程中遇到的问题。\n\n***\n\n　　按照脚本从上到下来记录吧。\n\n　　首先是定义变量：\n\n>  set 变量\n\n　　引用\n\n>  %变量%\n\n　　然后是复制 xcopy，这里会遇到弹窗选择“文件”：“文件夹”的弹窗选择，所以手动加一下追加输入：\n\n>  d|XXXXX\n\n　　d是里面要输入的东西。\n\n　　这样完成了将.git复制到public目录的工作了。得将运行目录定位到public目录。\n\n>  cd /d XXXX\n\n　　codingpage那边不需要CNAME文件，所以删掉它。\n\n>  del 文件\n\n　　剩下的是git操作。\n\n　　先用cmd实验一下git操作：\n\n``` cmd\ngit --version\ngit config --list\n```\n\n\n![Result pic 1](/contentimg/14/2.png \"检查cmd下能否运行git\")\n\n![Result pic 1](/contentimg/14/3.png \"cmd下的git\")\n\n\n\n　　①添加命令：“.”表示全部\n\n>  git add .\n\n　　②同步命令：\n\n>  git pull origin master\n\n　　③提交命令：（后面还得推送才是完整的提交）\n\n>  git commit -m '注释'\n\n　　④推送命令：\n\n>   git push origin master\n\n　　这里我用的是主线，可以根据需要进行修改。\n\n　　那就简单了，直接复制过去批处理。\n\n　　这里遇到的问题蛮多的：\n\n1. 批处理里面不能写多余的空格，特别是路径和变量定义。因为会完整识别出来空格并运用，导致出问题。\n1. git commit不加注释，就强制进入VIM模式。所以得加。\n1. 单引号 和 双引号 的区别，刚开始一直报错当前文件夹没有可提交的东西，排查到是commit出错，后面排查出来是引号问题。\n\n　　这里搜到一篇比较完整的git批处理：[bat文件方式对git进行操作](http://blog.51cto.com/13717297/2136859) \n\n　　以及面对VIM模式：[在git bush中如何退出vim编辑器](https://www.cnblogs.com/macliu/p/6062917.html) \n\n还有运行该bat后，github desktop无法提交，提示：failed to receive handshake\n\n　　其实只要注销重新登录就行的，不过我就去改配置文件，删掉用户信息，提交一遍，再加回去，就正常了。\n\n\n![Result pic 1](/contentimg/14/4.png \"配置文件\")\n\n## 写在最后\n\n　　后来发现，其实改配置文件，hexo d的时候能两边一起提交的！\n\n``` cmd\ndeploy:\n  type: git\n  message: [message]\n  repo:\n    github: <repository url>,[branch]\n    gitcafe: <repository url>,[branch] \n```\n\n![Result pic 1](/contentimg/14/5.png \"实际改主配置文件这里\")\n\n![Result pic 1](/contentimg/14/6.png \"官网有说明\")\n","source":"_posts/14batforcodingpage.md","raw":"---\ntitle: 编写bat自动备份博客到codingpage\ndate: 2018-10-19 00:02:59\ncategories:\n  - 批处理\ntags:\n  - 批处理\n  - git\n---\n\t\n　　本文记录编写bat自动同步博客到codingpage。\n\n<!-- more -->\n\n　　由于gitpage在国内访问没codingpage快，我是把域名挂在codingpage的。但是博客和代码等等都在github那边，平时靠两边复制文件来同步，操作繁琐，便想到了用批处理来做这件事。\n\n　　在github这边，用gitbash生成，提交好后，点击bat，将public目录下的同步到coding。需求是这样的。那怎么实现？\n\n## 方案一\n\n　　新建文件夹codingpage，将public的文件复制到那边，然后提交。这里有问题，需要先清空codingpage文件夹，然后才能复制。写了一下del的处理，发现好麻烦，考虑的东西太多了。\n\n　　所以方案一放弃。\n\n## 方案二\n\n　　还是新建文件夹codingpage，但是是用来init git，让它出来一个.git后缀的文件夹：\n\n![Result pic 1](/contentimg/14/1.png \"初始化git文件夹\")\n\n\n　　后面的操作就是把这个.git文件夹复制过去public目录，然后cd进public，git提交。\n\n``` bash\n@echo off\necho 'use SSH command，will pull public to coding page'\n\nset publicdir=D:\\source\\blogcode\\public\\.git\nset publicd=D:\\source\\blogcode\\public\nset aimdir=D:\\source\\yaojiaxinpc\\.git\n\necho aimdir is %aimdir%\necho publicdir is %publicdir%\n\necho d|xcopy %aimdir%\\* %publicdir% /s /c /y\n\necho done\n\necho ***********************************************\necho ***********************************************\necho ***************start  to  commit***************\necho ***********************************************\necho ***********************************************\n\ncd /d %publicd%\necho gitdone\n\ndel CNAME\n\necho git pull origin master\necho but this useless because it's backups.so it won't done.\n\ngit add .\necho add all file to git...\n\nset \"year=%date:~0,4%\"\nset \"month=%date:~5,2%\"\nset \"day=%date:~8,2%\"\nset \"hour_ten=%time:~0,1%\"\nset \"hour_one=%time:~1,1%\"\nset \"minute=%time:~3,2%\"\nset \"second=%time:~6,2%\"\n\nif \"%hour_ten%\" == \" \" (\n    set cmitmessage=%year%%month%%day%0%hour_one%%minute%%second%\n) else (\n    set cmitmessage=%year%%month%%day%%hour_ten%%hour_one%%minute%%second%\n)\n\ngit commit -m \"%cmitmessage%\"\necho use time for message, commiting... \n\ngit push origin master -f\n \necho git push done!\npause>nul\n```\n\n[对应git](https://github.com/YaojiaxinPC/blogcode/blob/master/clonetocoding.bat)\n\n　　该方案行得通，而且处理方式简单许多。下面记录一下过程中遇到的问题。\n\n***\n\n　　按照脚本从上到下来记录吧。\n\n　　首先是定义变量：\n\n>  set 变量\n\n　　引用\n\n>  %变量%\n\n　　然后是复制 xcopy，这里会遇到弹窗选择“文件”：“文件夹”的弹窗选择，所以手动加一下追加输入：\n\n>  d|XXXXX\n\n　　d是里面要输入的东西。\n\n　　这样完成了将.git复制到public目录的工作了。得将运行目录定位到public目录。\n\n>  cd /d XXXX\n\n　　codingpage那边不需要CNAME文件，所以删掉它。\n\n>  del 文件\n\n　　剩下的是git操作。\n\n　　先用cmd实验一下git操作：\n\n``` cmd\ngit --version\ngit config --list\n```\n\n\n![Result pic 1](/contentimg/14/2.png \"检查cmd下能否运行git\")\n\n![Result pic 1](/contentimg/14/3.png \"cmd下的git\")\n\n\n\n　　①添加命令：“.”表示全部\n\n>  git add .\n\n　　②同步命令：\n\n>  git pull origin master\n\n　　③提交命令：（后面还得推送才是完整的提交）\n\n>  git commit -m '注释'\n\n　　④推送命令：\n\n>   git push origin master\n\n　　这里我用的是主线，可以根据需要进行修改。\n\n　　那就简单了，直接复制过去批处理。\n\n　　这里遇到的问题蛮多的：\n\n1. 批处理里面不能写多余的空格，特别是路径和变量定义。因为会完整识别出来空格并运用，导致出问题。\n1. git commit不加注释，就强制进入VIM模式。所以得加。\n1. 单引号 和 双引号 的区别，刚开始一直报错当前文件夹没有可提交的东西，排查到是commit出错，后面排查出来是引号问题。\n\n　　这里搜到一篇比较完整的git批处理：[bat文件方式对git进行操作](http://blog.51cto.com/13717297/2136859) \n\n　　以及面对VIM模式：[在git bush中如何退出vim编辑器](https://www.cnblogs.com/macliu/p/6062917.html) \n\n还有运行该bat后，github desktop无法提交，提示：failed to receive handshake\n\n　　其实只要注销重新登录就行的，不过我就去改配置文件，删掉用户信息，提交一遍，再加回去，就正常了。\n\n\n![Result pic 1](/contentimg/14/4.png \"配置文件\")\n\n## 写在最后\n\n　　后来发现，其实改配置文件，hexo d的时候能两边一起提交的！\n\n``` cmd\ndeploy:\n  type: git\n  message: [message]\n  repo:\n    github: <repository url>,[branch]\n    gitcafe: <repository url>,[branch] \n```\n\n![Result pic 1](/contentimg/14/5.png \"实际改主配置文件这里\")\n\n![Result pic 1](/contentimg/14/6.png \"官网有说明\")\n","slug":"14batforcodingpage","published":1,"updated":"2018-10-20T11:43:56.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgqsp0008jo9cx27obib5","content":"<p>　　本文记录编写bat自动同步博客到codingpage。</p>\n<a id=\"more\"></a>\n<p>　　由于gitpage在国内访问没codingpage快，我是把域名挂在codingpage的。但是博客和代码等等都在github那边，平时靠两边复制文件来同步，操作繁琐，便想到了用批处理来做这件事。</p>\n<p>　　在github这边，用gitbash生成，提交好后，点击bat，将public目录下的同步到coding。需求是这样的。那怎么实现？</p>\n<h2 id=\"方案一\"><a href=\"#方案一\" class=\"headerlink\" title=\"方案一\"></a>方案一</h2><p>　　新建文件夹codingpage，将public的文件复制到那边，然后提交。这里有问题，需要先清空codingpage文件夹，然后才能复制。写了一下del的处理，发现好麻烦，考虑的东西太多了。</p>\n<p>　　所以方案一放弃。</p>\n<h2 id=\"方案二\"><a href=\"#方案二\" class=\"headerlink\" title=\"方案二\"></a>方案二</h2><p>　　还是新建文件夹codingpage，但是是用来init git，让它出来一个.git后缀的文件夹：</p>\n<p><img src=\"/contentimg/14/1.png\" alt=\"Result pic 1\" title=\"初始化git文件夹\"></p>\n<p>　　后面的操作就是把这个.git文件夹复制过去public目录，然后cd进public，git提交。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'use SSH command，will pull public to coding page'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> publicdir=D:\\<span class=\"built_in\">source</span>\\blogcode\\public\\.git</span><br><span class=\"line\"><span class=\"built_in\">set</span> publicd=D:\\<span class=\"built_in\">source</span>\\blogcode\\public</span><br><span class=\"line\"><span class=\"built_in\">set</span> aimdir=D:\\<span class=\"built_in\">source</span>\\yaojiaxinpc\\.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> aimdir is %aimdir%</span><br><span class=\"line\"><span class=\"built_in\">echo</span> publicdir is %publicdir%</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> d|xcopy %aimdir%\\* %publicdir% /s /c /y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> ***********************************************</span><br><span class=\"line\"><span class=\"built_in\">echo</span> ***********************************************</span><br><span class=\"line\"><span class=\"built_in\">echo</span> ***************start  to  commit***************</span><br><span class=\"line\"><span class=\"built_in\">echo</span> ***********************************************</span><br><span class=\"line\"><span class=\"built_in\">echo</span> ***********************************************</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /d %publicd%</span><br><span class=\"line\"><span class=\"built_in\">echo</span> gitdone</span><br><span class=\"line\"></span><br><span class=\"line\">del CNAME</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> git pull origin master</span><br><span class=\"line\"><span class=\"built_in\">echo</span> but this useless because it<span class=\"string\">'s backups.so it won'</span>t <span class=\"keyword\">done</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">git add .</span><br><span class=\"line\"><span class=\"built_in\">echo</span> add all file to git...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"year=%date:~0,4%\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"month=%date:~5,2%\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"day=%date:~8,2%\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"hour_ten=%time:~0,1%\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"hour_one=%time:~1,1%\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"minute=%time:~3,2%\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"second=%time:~6,2%\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">\"%hour_ten%\"</span> == <span class=\"string\">\" \"</span> (</span><br><span class=\"line\">    <span class=\"built_in\">set</span> cmitmessage=%year%%month%%day%0%hour_one%%minute%%second%</span><br><span class=\"line\">) <span class=\"keyword\">else</span> (</span><br><span class=\"line\">    <span class=\"built_in\">set</span> cmitmessage=%year%%month%%day%%hour_ten%%hour_one%%minute%%second%</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">git commit -m <span class=\"string\">\"%cmitmessage%\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> use time <span class=\"keyword\">for</span> message, commiting... </span><br><span class=\"line\"></span><br><span class=\"line\">git push origin master -f</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"built_in\">echo</span> git push <span class=\"keyword\">done</span>!</span><br><span class=\"line\">pause&gt;nul</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/YaojiaxinPC/blogcode/blob/master/clonetocoding.bat\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">对应git</a></p>\n<p>　　该方案行得通，而且处理方式简单许多。下面记录一下过程中遇到的问题。</p>\n<hr>\n<p>　　按照脚本从上到下来记录吧。</p>\n<p>　　首先是定义变量：</p>\n<blockquote>\n<p> set 变量</p>\n</blockquote>\n<p>　　引用</p>\n<blockquote>\n<p> %变量%</p>\n</blockquote>\n<p>　　然后是复制 xcopy，这里会遇到弹窗选择“文件”：“文件夹”的弹窗选择，所以手动加一下追加输入：</p>\n<blockquote>\n<p> d|XXXXX</p>\n</blockquote>\n<p>　　d是里面要输入的东西。</p>\n<p>　　这样完成了将.git复制到public目录的工作了。得将运行目录定位到public目录。</p>\n<blockquote>\n<p> cd /d XXXX</p>\n</blockquote>\n<p>　　codingpage那边不需要CNAME文件，所以删掉它。</p>\n<blockquote>\n<p> del 文件</p>\n</blockquote>\n<p>　　剩下的是git操作。</p>\n<p>　　先用cmd实验一下git操作：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git --version</span><br><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/14/2.png\" alt=\"Result pic 1\" title=\"检查cmd下能否运行git\"></p>\n<p><img src=\"/contentimg/14/3.png\" alt=\"Result pic 1\" title=\"cmd下的git\"></p>\n<p>　　①添加命令：“.”表示全部</p>\n<blockquote>\n<p> git add .</p>\n</blockquote>\n<p>　　②同步命令：</p>\n<blockquote>\n<p> git pull origin master</p>\n</blockquote>\n<p>　　③提交命令：（后面还得推送才是完整的提交）</p>\n<blockquote>\n<p> git commit -m ‘注释’</p>\n</blockquote>\n<p>　　④推送命令：</p>\n<blockquote>\n<p>  git push origin master</p>\n</blockquote>\n<p>　　这里我用的是主线，可以根据需要进行修改。</p>\n<p>　　那就简单了，直接复制过去批处理。</p>\n<p>　　这里遇到的问题蛮多的：</p>\n<ol>\n<li>批处理里面不能写多余的空格，特别是路径和变量定义。因为会完整识别出来空格并运用，导致出问题。</li>\n<li>git commit不加注释，就强制进入VIM模式。所以得加。</li>\n<li>单引号 和 双引号 的区别，刚开始一直报错当前文件夹没有可提交的东西，排查到是commit出错，后面排查出来是引号问题。</li>\n</ol>\n<p>　　这里搜到一篇比较完整的git批处理：<a href=\"http://blog.51cto.com/13717297/2136859\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">bat文件方式对git进行操作</a> </p>\n<p>　　以及面对VIM模式：<a href=\"https://www.cnblogs.com/macliu/p/6062917.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">在git bush中如何退出vim编辑器</a> </p>\n<p>还有运行该bat后，github desktop无法提交，提示：failed to receive handshake</p>\n<p>　　其实只要注销重新登录就行的，不过我就去改配置文件，删掉用户信息，提交一遍，再加回去，就正常了。</p>\n<p><img src=\"/contentimg/14/4.png\" alt=\"Result pic 1\" title=\"配置文件\"></p>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>　　后来发现，其实改配置文件，hexo d的时候能两边一起提交的！</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">deploy:</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">type</span>: <span class=\"title\">git</span></span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">message</span>: [<span class=\"title\">message</span>]</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">repo</span>:</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">github</span>: &lt;<span class=\"title\">repository</span> <span class=\"title\">url</span>&gt;,[<span class=\"title\">branch</span>]</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">gitcafe</span>: &lt;<span class=\"title\">repository</span> <span class=\"title\">url</span>&gt;,[<span class=\"title\">branch</span>]</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/14/5.png\" alt=\"Result pic 1\" title=\"实际改主配置文件这里\"></p>\n<p><img src=\"/contentimg/14/6.png\" alt=\"Result pic 1\" title=\"官网有说明\"></p>\n","site":{"data":{}},"excerpt":"<p>　　本文记录编写bat自动同步博客到codingpage。</p>","more":"<p>　　由于gitpage在国内访问没codingpage快，我是把域名挂在codingpage的。但是博客和代码等等都在github那边，平时靠两边复制文件来同步，操作繁琐，便想到了用批处理来做这件事。</p>\n<p>　　在github这边，用gitbash生成，提交好后，点击bat，将public目录下的同步到coding。需求是这样的。那怎么实现？</p>\n<h2 id=\"方案一\"><a href=\"#方案一\" class=\"headerlink\" title=\"方案一\"></a>方案一</h2><p>　　新建文件夹codingpage，将public的文件复制到那边，然后提交。这里有问题，需要先清空codingpage文件夹，然后才能复制。写了一下del的处理，发现好麻烦，考虑的东西太多了。</p>\n<p>　　所以方案一放弃。</p>\n<h2 id=\"方案二\"><a href=\"#方案二\" class=\"headerlink\" title=\"方案二\"></a>方案二</h2><p>　　还是新建文件夹codingpage，但是是用来init git，让它出来一个.git后缀的文件夹：</p>\n<p><img src=\"/contentimg/14/1.png\" alt=\"Result pic 1\" title=\"初始化git文件夹\"></p>\n<p>　　后面的操作就是把这个.git文件夹复制过去public目录，然后cd进public，git提交。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'use SSH command，will pull public to coding page'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> publicdir=D:\\<span class=\"built_in\">source</span>\\blogcode\\public\\.git</span><br><span class=\"line\"><span class=\"built_in\">set</span> publicd=D:\\<span class=\"built_in\">source</span>\\blogcode\\public</span><br><span class=\"line\"><span class=\"built_in\">set</span> aimdir=D:\\<span class=\"built_in\">source</span>\\yaojiaxinpc\\.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> aimdir is %aimdir%</span><br><span class=\"line\"><span class=\"built_in\">echo</span> publicdir is %publicdir%</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> d|xcopy %aimdir%\\* %publicdir% /s /c /y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> ***********************************************</span><br><span class=\"line\"><span class=\"built_in\">echo</span> ***********************************************</span><br><span class=\"line\"><span class=\"built_in\">echo</span> ***************start  to  commit***************</span><br><span class=\"line\"><span class=\"built_in\">echo</span> ***********************************************</span><br><span class=\"line\"><span class=\"built_in\">echo</span> ***********************************************</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /d %publicd%</span><br><span class=\"line\"><span class=\"built_in\">echo</span> gitdone</span><br><span class=\"line\"></span><br><span class=\"line\">del CNAME</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> git pull origin master</span><br><span class=\"line\"><span class=\"built_in\">echo</span> but this useless because it<span class=\"string\">'s backups.so it won'</span>t <span class=\"keyword\">done</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">git add .</span><br><span class=\"line\"><span class=\"built_in\">echo</span> add all file to git...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"year=%date:~0,4%\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"month=%date:~5,2%\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"day=%date:~8,2%\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"hour_ten=%time:~0,1%\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"hour_one=%time:~1,1%\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"minute=%time:~3,2%\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"string\">\"second=%time:~6,2%\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">\"%hour_ten%\"</span> == <span class=\"string\">\" \"</span> (</span><br><span class=\"line\">    <span class=\"built_in\">set</span> cmitmessage=%year%%month%%day%0%hour_one%%minute%%second%</span><br><span class=\"line\">) <span class=\"keyword\">else</span> (</span><br><span class=\"line\">    <span class=\"built_in\">set</span> cmitmessage=%year%%month%%day%%hour_ten%%hour_one%%minute%%second%</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">git commit -m <span class=\"string\">\"%cmitmessage%\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> use time <span class=\"keyword\">for</span> message, commiting... </span><br><span class=\"line\"></span><br><span class=\"line\">git push origin master -f</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"built_in\">echo</span> git push <span class=\"keyword\">done</span>!</span><br><span class=\"line\">pause&gt;nul</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/YaojiaxinPC/blogcode/blob/master/clonetocoding.bat\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">对应git</a></p>\n<p>　　该方案行得通，而且处理方式简单许多。下面记录一下过程中遇到的问题。</p>\n<hr>\n<p>　　按照脚本从上到下来记录吧。</p>\n<p>　　首先是定义变量：</p>\n<blockquote>\n<p> set 变量</p>\n</blockquote>\n<p>　　引用</p>\n<blockquote>\n<p> %变量%</p>\n</blockquote>\n<p>　　然后是复制 xcopy，这里会遇到弹窗选择“文件”：“文件夹”的弹窗选择，所以手动加一下追加输入：</p>\n<blockquote>\n<p> d|XXXXX</p>\n</blockquote>\n<p>　　d是里面要输入的东西。</p>\n<p>　　这样完成了将.git复制到public目录的工作了。得将运行目录定位到public目录。</p>\n<blockquote>\n<p> cd /d XXXX</p>\n</blockquote>\n<p>　　codingpage那边不需要CNAME文件，所以删掉它。</p>\n<blockquote>\n<p> del 文件</p>\n</blockquote>\n<p>　　剩下的是git操作。</p>\n<p>　　先用cmd实验一下git操作：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git --version</span><br><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/14/2.png\" alt=\"Result pic 1\" title=\"检查cmd下能否运行git\"></p>\n<p><img src=\"/contentimg/14/3.png\" alt=\"Result pic 1\" title=\"cmd下的git\"></p>\n<p>　　①添加命令：“.”表示全部</p>\n<blockquote>\n<p> git add .</p>\n</blockquote>\n<p>　　②同步命令：</p>\n<blockquote>\n<p> git pull origin master</p>\n</blockquote>\n<p>　　③提交命令：（后面还得推送才是完整的提交）</p>\n<blockquote>\n<p> git commit -m ‘注释’</p>\n</blockquote>\n<p>　　④推送命令：</p>\n<blockquote>\n<p>  git push origin master</p>\n</blockquote>\n<p>　　这里我用的是主线，可以根据需要进行修改。</p>\n<p>　　那就简单了，直接复制过去批处理。</p>\n<p>　　这里遇到的问题蛮多的：</p>\n<ol>\n<li>批处理里面不能写多余的空格，特别是路径和变量定义。因为会完整识别出来空格并运用，导致出问题。</li>\n<li>git commit不加注释，就强制进入VIM模式。所以得加。</li>\n<li>单引号 和 双引号 的区别，刚开始一直报错当前文件夹没有可提交的东西，排查到是commit出错，后面排查出来是引号问题。</li>\n</ol>\n<p>　　这里搜到一篇比较完整的git批处理：<a href=\"http://blog.51cto.com/13717297/2136859\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">bat文件方式对git进行操作</a> </p>\n<p>　　以及面对VIM模式：<a href=\"https://www.cnblogs.com/macliu/p/6062917.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">在git bush中如何退出vim编辑器</a> </p>\n<p>还有运行该bat后，github desktop无法提交，提示：failed to receive handshake</p>\n<p>　　其实只要注销重新登录就行的，不过我就去改配置文件，删掉用户信息，提交一遍，再加回去，就正常了。</p>\n<p><img src=\"/contentimg/14/4.png\" alt=\"Result pic 1\" title=\"配置文件\"></p>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>　　后来发现，其实改配置文件，hexo d的时候能两边一起提交的！</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">deploy:</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">type</span>: <span class=\"title\">git</span></span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">message</span>: [<span class=\"title\">message</span>]</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">repo</span>:</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">github</span>: &lt;<span class=\"title\">repository</span> <span class=\"title\">url</span>&gt;,[<span class=\"title\">branch</span>]</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">gitcafe</span>: &lt;<span class=\"title\">repository</span> <span class=\"title\">url</span>&gt;,[<span class=\"title\">branch</span>]</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/14/5.png\" alt=\"Result pic 1\" title=\"实际改主配置文件这里\"></p>\n<p><img src=\"/contentimg/14/6.png\" alt=\"Result pic 1\" title=\"官网有说明\"></p>"},{"title":"markdown扩展","date":"2018-10-18T16:07:59.000Z","_content":"\n　　本文分享markdown的妙用：插入本地文件。\n\n<!-- more -->\n\n　　前一篇博客，我插入了一个pdf文件。\n\n实际上是这样写的：\n\n![Result pic 1](/contentimg/19/1.png \"源文件\")\n\n\n\n　　还能这样写（使用html，并加入图标）：\n\n``` javascripts\n<a id=\"download\" href=\"/contentimg/18/Office-2019.pdf\"><i class=\"fa fa-download\"></i><span> Download PDF </span>\n</a>\n```\n\n　　这里也放一下pdf转html的一个网站吧，速度蛮快的：\n\n[迅捷PDF在线转换器](http://app.xunjiepdf.com/pdf2html)\n\n　　转化完下载下来是一个压缩包，解压放到工程中，然后到主配置文件修改：\n\n![Result pic 2](/contentimg/19/2.png \"_config.yml\")\n\n\n　　提醒hexo忽略编译该文件夹。然后清理整个工程：hexo clean。再生成和发布，就可以使用了。\n\n# 优化版\n\n　　目前这个在移动端无法适配大小。而且如果每个pdf都拿去转html，效率一般般。如果只需要完成电脑端的查看，可以直接\n\n``` html\n<p><div style=\"width:100%; height:950px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"800\" src=\"filepath.pdf\"/></div></p>\n```\n\n　　这种做法，实际hexo有个插件已经集成自动转化这种代码。但是不推荐这种做法！理由是iframe+pdf原文件，在手机端打开，不是提示下载，就是提示不支持。\n\n　　但是日常生活中，我们看到那些做得好的网站，是能在线浏览pdf的？都是后台转html？不是，这里有个开源插件：[pdf.js下载](http://mozilla.github.io/pdf.js/getting_started/#download) 源码120+m，有兴趣的前端工程师可以去github下载来看。这个链接是已经build的。拿到手后，修改一些参数后就可以使用了。\n\n![Result pic 2](/contentimg/19/3.png \"解压后，全部复制到source目录下\")\n\n\n　　要改的地方只有一个：找到示例中的pdf文件，删掉，同时在viewer.js脚本中找到这个文件的指向，删掉。\n\n![Result pic 2](/contentimg/19/4.png \"设为空string\")\n\n![Result pic 2](/contentimg/19/5.png \"使用示例\")\n\n\n　　然后到配置文件设置不编译这个目录，重新生成，就可以启用了。使用方法是在src中，先定位到该viewer.html，然后传你要显示的pdf给它。这样在电脑端或者移动端，都是可以实时预览，而且下次引用也方便。只需要指定新的pdf目录即可。\n\n\n\n\n\n\n","source":"_posts/19markdownextend.md","raw":"---\ntitle: markdown扩展\ndate: 2018-10-19 00:07:59\ncategories:\n  - markdown扩展\ntags:\n  - markdown\n---\n\n　　本文分享markdown的妙用：插入本地文件。\n\n<!-- more -->\n\n　　前一篇博客，我插入了一个pdf文件。\n\n实际上是这样写的：\n\n![Result pic 1](/contentimg/19/1.png \"源文件\")\n\n\n\n　　还能这样写（使用html，并加入图标）：\n\n``` javascripts\n<a id=\"download\" href=\"/contentimg/18/Office-2019.pdf\"><i class=\"fa fa-download\"></i><span> Download PDF </span>\n</a>\n```\n\n　　这里也放一下pdf转html的一个网站吧，速度蛮快的：\n\n[迅捷PDF在线转换器](http://app.xunjiepdf.com/pdf2html)\n\n　　转化完下载下来是一个压缩包，解压放到工程中，然后到主配置文件修改：\n\n![Result pic 2](/contentimg/19/2.png \"_config.yml\")\n\n\n　　提醒hexo忽略编译该文件夹。然后清理整个工程：hexo clean。再生成和发布，就可以使用了。\n\n# 优化版\n\n　　目前这个在移动端无法适配大小。而且如果每个pdf都拿去转html，效率一般般。如果只需要完成电脑端的查看，可以直接\n\n``` html\n<p><div style=\"width:100%; height:950px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"800\" src=\"filepath.pdf\"/></div></p>\n```\n\n　　这种做法，实际hexo有个插件已经集成自动转化这种代码。但是不推荐这种做法！理由是iframe+pdf原文件，在手机端打开，不是提示下载，就是提示不支持。\n\n　　但是日常生活中，我们看到那些做得好的网站，是能在线浏览pdf的？都是后台转html？不是，这里有个开源插件：[pdf.js下载](http://mozilla.github.io/pdf.js/getting_started/#download) 源码120+m，有兴趣的前端工程师可以去github下载来看。这个链接是已经build的。拿到手后，修改一些参数后就可以使用了。\n\n![Result pic 2](/contentimg/19/3.png \"解压后，全部复制到source目录下\")\n\n\n　　要改的地方只有一个：找到示例中的pdf文件，删掉，同时在viewer.js脚本中找到这个文件的指向，删掉。\n\n![Result pic 2](/contentimg/19/4.png \"设为空string\")\n\n![Result pic 2](/contentimg/19/5.png \"使用示例\")\n\n\n　　然后到配置文件设置不编译这个目录，重新生成，就可以启用了。使用方法是在src中，先定位到该viewer.html，然后传你要显示的pdf给它。这样在电脑端或者移动端，都是可以实时预览，而且下次引用也方便。只需要指定新的pdf目录即可。\n\n\n\n\n\n\n","slug":"19markdownextend","published":1,"updated":"2018-10-27T11:20:43.537Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgqsq0009jo9clfo8rspu","content":"<p>　　本文分享markdown的妙用：插入本地文件。</p>\n<a id=\"more\"></a>\n<p>　　前一篇博客，我插入了一个pdf文件。</p>\n<p>实际上是这样写的：</p>\n<p><img src=\"/contentimg/19/1.png\" alt=\"Result pic 1\" title=\"源文件\"></p>\n<p>　　还能这样写（使用html，并加入图标）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a id=&quot;download&quot; href=&quot;/contentimg/18/Office-2019.pdf&quot;&gt;&lt;i class=&quot;fa fa-download&quot;&gt;&lt;/i&gt;&lt;span&gt; Download PDF &lt;/span&gt;</span><br><span class=\"line\">&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n<p>　　这里也放一下pdf转html的一个网站吧，速度蛮快的：</p>\n<p><a href=\"http://app.xunjiepdf.com/pdf2html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">迅捷PDF在线转换器</a></p>\n<p>　　转化完下载下来是一个压缩包，解压放到工程中，然后到主配置文件修改：</p>\n<p><img src=\"/contentimg/19/2.png\" alt=\"Result pic 2\" title=\"_config.yml\"></p>\n<p>　　提醒hexo忽略编译该文件夹。然后清理整个工程：hexo clean。再生成和发布，就可以使用了。</p>\n<h1 id=\"优化版\"><a href=\"#优化版\" class=\"headerlink\" title=\"优化版\"></a>优化版</h1><p>　　目前这个在移动端无法适配大小。而且如果每个pdf都拿去转html，效率一般般。如果只需要完成电脑端的查看，可以直接</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:100%; height:950px;border:none;text-align:center\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">allowtransparency</span>=<span class=\"string\">\"yes\"</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"800\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"filepath.pdf\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>　　这种做法，实际hexo有个插件已经集成自动转化这种代码。但是不推荐这种做法！理由是iframe+pdf原文件，在手机端打开，不是提示下载，就是提示不支持。</p>\n<p>　　但是日常生活中，我们看到那些做得好的网站，是能在线浏览pdf的？都是后台转html？不是，这里有个开源插件：<a href=\"http://mozilla.github.io/pdf.js/getting_started/#download\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">pdf.js下载</a> 源码120+m，有兴趣的前端工程师可以去github下载来看。这个链接是已经build的。拿到手后，修改一些参数后就可以使用了。</p>\n<p><img src=\"/contentimg/19/3.png\" alt=\"Result pic 2\" title=\"解压后，全部复制到source目录下\"></p>\n<p>　　要改的地方只有一个：找到示例中的pdf文件，删掉，同时在viewer.js脚本中找到这个文件的指向，删掉。</p>\n<p><img src=\"/contentimg/19/4.png\" alt=\"Result pic 2\" title=\"设为空string\"></p>\n<p><img src=\"/contentimg/19/5.png\" alt=\"Result pic 2\" title=\"使用示例\"></p>\n<p>　　然后到配置文件设置不编译这个目录，重新生成，就可以启用了。使用方法是在src中，先定位到该viewer.html，然后传你要显示的pdf给它。这样在电脑端或者移动端，都是可以实时预览，而且下次引用也方便。只需要指定新的pdf目录即可。</p>\n","site":{"data":{}},"excerpt":"<p>　　本文分享markdown的妙用：插入本地文件。</p>","more":"<p>　　前一篇博客，我插入了一个pdf文件。</p>\n<p>实际上是这样写的：</p>\n<p><img src=\"/contentimg/19/1.png\" alt=\"Result pic 1\" title=\"源文件\"></p>\n<p>　　还能这样写（使用html，并加入图标）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a id=&quot;download&quot; href=&quot;/contentimg/18/Office-2019.pdf&quot;&gt;&lt;i class=&quot;fa fa-download&quot;&gt;&lt;/i&gt;&lt;span&gt; Download PDF &lt;/span&gt;</span><br><span class=\"line\">&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n<p>　　这里也放一下pdf转html的一个网站吧，速度蛮快的：</p>\n<p><a href=\"http://app.xunjiepdf.com/pdf2html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">迅捷PDF在线转换器</a></p>\n<p>　　转化完下载下来是一个压缩包，解压放到工程中，然后到主配置文件修改：</p>\n<p><img src=\"/contentimg/19/2.png\" alt=\"Result pic 2\" title=\"_config.yml\"></p>\n<p>　　提醒hexo忽略编译该文件夹。然后清理整个工程：hexo clean。再生成和发布，就可以使用了。</p>\n<h1 id=\"优化版\"><a href=\"#优化版\" class=\"headerlink\" title=\"优化版\"></a>优化版</h1><p>　　目前这个在移动端无法适配大小。而且如果每个pdf都拿去转html，效率一般般。如果只需要完成电脑端的查看，可以直接</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:100%; height:950px;border:none;text-align:center\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">allowtransparency</span>=<span class=\"string\">\"yes\"</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"800\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"filepath.pdf\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>　　这种做法，实际hexo有个插件已经集成自动转化这种代码。但是不推荐这种做法！理由是iframe+pdf原文件，在手机端打开，不是提示下载，就是提示不支持。</p>\n<p>　　但是日常生活中，我们看到那些做得好的网站，是能在线浏览pdf的？都是后台转html？不是，这里有个开源插件：<a href=\"http://mozilla.github.io/pdf.js/getting_started/#download\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">pdf.js下载</a> 源码120+m，有兴趣的前端工程师可以去github下载来看。这个链接是已经build的。拿到手后，修改一些参数后就可以使用了。</p>\n<p><img src=\"/contentimg/19/3.png\" alt=\"Result pic 2\" title=\"解压后，全部复制到source目录下\"></p>\n<p>　　要改的地方只有一个：找到示例中的pdf文件，删掉，同时在viewer.js脚本中找到这个文件的指向，删掉。</p>\n<p><img src=\"/contentimg/19/4.png\" alt=\"Result pic 2\" title=\"设为空string\"></p>\n<p><img src=\"/contentimg/19/5.png\" alt=\"Result pic 2\" title=\"使用示例\"></p>\n<p>　　然后到配置文件设置不编译这个目录，重新生成，就可以启用了。使用方法是在src中，先定位到该viewer.html，然后传你要显示的pdf给它。这样在电脑端或者移动端，都是可以实时预览，而且下次引用也方便。只需要指定新的pdf目录即可。</p>"},{"title":"修改蜘蛛网悬浮于顶层","date":"2018-10-18T16:01:59.000Z","_content":"\t\n　　本文记录我如何修改当前主题NexT中引用的canvas-nest的一些细节。\n\n<!-- more -->\n\n　　默认NexT主题，蜘蛛网是跟随鼠标运动的，但是我感觉那样不好玩，如果静置的话，会变成一个圈，不好看。然后我浏览了一下整个目录结构，找到\n\n![Result pic 1](/contentimg/13/1.png \"引用目录结构\")\n\n\n　　看到有[canvas-nest](https://github.com/hustcc/canvas-nest.js) 还有[fancybox](http://fancybox.net/)  。\n\n　　canvas-nest：蜘蛛网的实现js代码。\n\n　　fancybox：淡入淡出功能模块。\n\n　　于是我就想到把蜘蛛网的鼠标部分代码去掉。引入fancybox的淡入淡出动画，点击的时候出现“赞”的图标。\n\n　　“赞”部分的代码如下：\n\n``` javascripts\n$(document).bind(\"click\",function(e){var $i = $(\"<a style='border:none;border-bottom:0px'>\").prepend(\"<img src='/images/redhand.png'/>\");var x=e.pageX,y=e.pageY;$i.css({\"z-index\":99999,  \n \"top\":y-15,\"left\":x,\"position\":\"absolute\",\"color\":\"red\"});$(\"body\").append($i);$i.animate({\"top\":y-180,\"opacity\":0},1500,function(){$i.remove();});e.stopPropagation();});\n```\n\n　　然后又想到把蜘蛛网放到顶层\n\n>  zIndex=99\n\n　　结果发现这时候鼠标不能选中代码和文字进行复制了。推测是canvas层挡住了，所以得给它设置穿透：\n\n>  pointer-events:none;\n\n\n[pointer-events](http://www.css88.com/book/css/properties/user-interface/pointer-events.htm)\n\n![Result pic 2](/contentimg/13/2.png \"pointer-events\")\n\n","source":"_posts/13jsclickpass.md","raw":"---\ntitle: 修改蜘蛛网悬浮于顶层\ndate: 2018-10-19 00:01:59\ncategories:\n  - 前端\ntags:\n  - js\n  - canvas-nest\n---\n\t\n　　本文记录我如何修改当前主题NexT中引用的canvas-nest的一些细节。\n\n<!-- more -->\n\n　　默认NexT主题，蜘蛛网是跟随鼠标运动的，但是我感觉那样不好玩，如果静置的话，会变成一个圈，不好看。然后我浏览了一下整个目录结构，找到\n\n![Result pic 1](/contentimg/13/1.png \"引用目录结构\")\n\n\n　　看到有[canvas-nest](https://github.com/hustcc/canvas-nest.js) 还有[fancybox](http://fancybox.net/)  。\n\n　　canvas-nest：蜘蛛网的实现js代码。\n\n　　fancybox：淡入淡出功能模块。\n\n　　于是我就想到把蜘蛛网的鼠标部分代码去掉。引入fancybox的淡入淡出动画，点击的时候出现“赞”的图标。\n\n　　“赞”部分的代码如下：\n\n``` javascripts\n$(document).bind(\"click\",function(e){var $i = $(\"<a style='border:none;border-bottom:0px'>\").prepend(\"<img src='/images/redhand.png'/>\");var x=e.pageX,y=e.pageY;$i.css({\"z-index\":99999,  \n \"top\":y-15,\"left\":x,\"position\":\"absolute\",\"color\":\"red\"});$(\"body\").append($i);$i.animate({\"top\":y-180,\"opacity\":0},1500,function(){$i.remove();});e.stopPropagation();});\n```\n\n　　然后又想到把蜘蛛网放到顶层\n\n>  zIndex=99\n\n　　结果发现这时候鼠标不能选中代码和文字进行复制了。推测是canvas层挡住了，所以得给它设置穿透：\n\n>  pointer-events:none;\n\n\n[pointer-events](http://www.css88.com/book/css/properties/user-interface/pointer-events.htm)\n\n![Result pic 2](/contentimg/13/2.png \"pointer-events\")\n\n","slug":"13jsclickpass","published":1,"updated":"2018-10-18T09:01:38.675Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgqsr000ajo9cvqgp543v","content":"<p>　　本文记录我如何修改当前主题NexT中引用的canvas-nest的一些细节。</p>\n<a id=\"more\"></a>\n<p>　　默认NexT主题，蜘蛛网是跟随鼠标运动的，但是我感觉那样不好玩，如果静置的话，会变成一个圈，不好看。然后我浏览了一下整个目录结构，找到</p>\n<p><img src=\"/contentimg/13/1.png\" alt=\"Result pic 1\" title=\"引用目录结构\"></p>\n<p>　　看到有<a href=\"https://github.com/hustcc/canvas-nest.js\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">canvas-nest</a> 还有<a href=\"http://fancybox.net/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">fancybox</a>  。</p>\n<p>　　canvas-nest：蜘蛛网的实现js代码。</p>\n<p>　　fancybox：淡入淡出功能模块。</p>\n<p>　　于是我就想到把蜘蛛网的鼠标部分代码去掉。引入fancybox的淡入淡出动画，点击的时候出现“赞”的图标。</p>\n<p>　　“赞”部分的代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(document).bind(&quot;click&quot;,function(e)&#123;var $i = $(&quot;&lt;a style=&apos;border:none;border-bottom:0px&apos;&gt;&quot;).prepend(&quot;&lt;img src=&apos;/images/redhand.png&apos;/&gt;&quot;);var x=e.pageX,y=e.pageY;$i.css(&#123;&quot;z-index&quot;:99999,  </span><br><span class=\"line\"> &quot;top&quot;:y-15,&quot;left&quot;:x,&quot;position&quot;:&quot;absolute&quot;,&quot;color&quot;:&quot;red&quot;&#125;);$(&quot;body&quot;).append($i);$i.animate(&#123;&quot;top&quot;:y-180,&quot;opacity&quot;:0&#125;,1500,function()&#123;$i.remove();&#125;);e.stopPropagation();&#125;);</span><br></pre></td></tr></table></figure>\n<p>　　然后又想到把蜘蛛网放到顶层</p>\n<blockquote>\n<p> zIndex=99</p>\n</blockquote>\n<p>　　结果发现这时候鼠标不能选中代码和文字进行复制了。推测是canvas层挡住了，所以得给它设置穿透：</p>\n<blockquote>\n<p> pointer-events:none;</p>\n</blockquote>\n<p><a href=\"http://www.css88.com/book/css/properties/user-interface/pointer-events.htm\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">pointer-events</a></p>\n<p><img src=\"/contentimg/13/2.png\" alt=\"Result pic 2\" title=\"pointer-events\"></p>\n","site":{"data":{}},"excerpt":"<p>　　本文记录我如何修改当前主题NexT中引用的canvas-nest的一些细节。</p>","more":"<p>　　默认NexT主题，蜘蛛网是跟随鼠标运动的，但是我感觉那样不好玩，如果静置的话，会变成一个圈，不好看。然后我浏览了一下整个目录结构，找到</p>\n<p><img src=\"/contentimg/13/1.png\" alt=\"Result pic 1\" title=\"引用目录结构\"></p>\n<p>　　看到有<a href=\"https://github.com/hustcc/canvas-nest.js\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">canvas-nest</a> 还有<a href=\"http://fancybox.net/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">fancybox</a>  。</p>\n<p>　　canvas-nest：蜘蛛网的实现js代码。</p>\n<p>　　fancybox：淡入淡出功能模块。</p>\n<p>　　于是我就想到把蜘蛛网的鼠标部分代码去掉。引入fancybox的淡入淡出动画，点击的时候出现“赞”的图标。</p>\n<p>　　“赞”部分的代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(document).bind(&quot;click&quot;,function(e)&#123;var $i = $(&quot;&lt;a style=&apos;border:none;border-bottom:0px&apos;&gt;&quot;).prepend(&quot;&lt;img src=&apos;/images/redhand.png&apos;/&gt;&quot;);var x=e.pageX,y=e.pageY;$i.css(&#123;&quot;z-index&quot;:99999,  </span><br><span class=\"line\"> &quot;top&quot;:y-15,&quot;left&quot;:x,&quot;position&quot;:&quot;absolute&quot;,&quot;color&quot;:&quot;red&quot;&#125;);$(&quot;body&quot;).append($i);$i.animate(&#123;&quot;top&quot;:y-180,&quot;opacity&quot;:0&#125;,1500,function()&#123;$i.remove();&#125;);e.stopPropagation();&#125;);</span><br></pre></td></tr></table></figure>\n<p>　　然后又想到把蜘蛛网放到顶层</p>\n<blockquote>\n<p> zIndex=99</p>\n</blockquote>\n<p>　　结果发现这时候鼠标不能选中代码和文字进行复制了。推测是canvas层挡住了，所以得给它设置穿透：</p>\n<blockquote>\n<p> pointer-events:none;</p>\n</blockquote>\n<p><a href=\"http://www.css88.com/book/css/properties/user-interface/pointer-events.htm\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">pointer-events</a></p>\n<p><img src=\"/contentimg/13/2.png\" alt=\"Result pic 2\" title=\"pointer-events\"></p>"},{"title":"可随身携带的windows系统","date":"2018-10-18T16:03:59.000Z","_content":"\t\n　　本文记录将SSD利用wto配置成可随身携带的系统。同时介绍一些SSD的知识。\n\n<!-- more -->\n\n　　开头贴一下百度百科。\n\n[Windows To Go](https://baike.baidu.com/item/Windows%20To%20Go/9911487?fr=aladdin)\n\n　　Windows To Go是Windows 8/8.1、Windows 10的一种企业功能，被内置于Windows 8企业版、Windows 8.1企业版、Windows 10企业版、教育版与专业版（1607以后）中。对于满足Windows 8硬件要求的电脑，Windows To Go可使Windows 8、Windows 8.1、Windows10从USB驱动器中启动并运行，不必考虑电脑上运行的操作系统（2012款之前的Mac和Windows RT不被支持）。\n\n　　Windows To Go的设计并不旨在代替台式计算机、便携式计算机，或取代其他移动产品。恰恰相反，它为有效使用备用的工作场所方案资源提供有力支持。\n\n***\n\n　　wto就是win8新版本开始提供的便携式系统，可以装在U盘上，然后随便找个主机插上去，就能登录这个系统进行使用。脱离了硬件上的捆绑。\n\n　　个人建议最好弄成win10的，后面更新新版本那种。不过，按照我尝试后发现，首先得和你系统版本对应，并不是你去网上下载一个最新版就能使用的。我的win10是1703版本的，下载的包1803的就不能用，重启后进不了安装界面。\n\n　　所以最好找你系统当时安装的那个包来做系统包。\n\n　　启动wto的方式，在win菜单那里直接打“win”就会出来：\n\n![Result pic 1](/contentimg/15/1.png \"启动wto\")\n\n\n　　当然也可以去控制面板找。\n\n![Result pic 2](/contentimg/15/2.png \"wto界面\")\n\n\n　　下一步，选择iso。这里需要挂载一下iso，它才能识别到。不能直接定位到iso压缩包。\n\n![Result pic 3](/contentimg/15/3.png \"wto搜索镜像\")\n\n\n　　安装过程很简单。这里不记录。重点是这个U盘安装了这个后，会隐藏起来，在现在使用的系统中就不会显式显示出来：\n\n![Result pic 4](/contentimg/15/4.png \"U盘隐藏\")\n\n\n　　不过既然还是能识别到，就可以使用，直接右键给它分配一个盘符就可以使用了。利用这个特性，就可以跳过登陆验证，直接获取电脑上其他盘的文件了。\n\n　　这个方式比用PE取消登陆密码要好。又不会破坏原系统的东西。适合用于电脑卡在更新界面无法登陆时，用U盘系统启动，然后分配给C盘盘符，进去把更新的文件删掉；然后回原系统启动，就不会更新了。具体步骤可以百度。以前是只能去F8安全模式弄，现在可以直接U盘启动弄了，容易很多。而且是和U盘速度挂钩的，如果用SSD，那就是秒开了，挂在那些老电脑上完全满分。\n\n***\n\n　　下面介绍一下这个U盘的一些知识吧。我用的是SSD，所以特意查了下相关的东西。目前市面上，能达到直连效果的只有3.1的gen2。当然比较推荐圆头的那种typeC接口，就是手机上那种接口（注意，SSD还真能连在手机上用，驱动得起来）。\n\n\n　　这里有个软件可以检测：\n\n![Result pic 5](/contentimg/15/5.png \"U盘接口速度检测\")\n\n\n[aida](https://www.aida64.com/) \n\n　　注意这里电脑USB口的影响也有的，软件里面会提醒。当能达到3.1最高时，是能和直连那样达到几百兆的传输速度的。\n\n　　这个软件，密钥搜一下很多，可以直接用。不用破解。\n\n当然也有个检测磁盘评分的，不过觉得不太适合，那个是直连时检测4K对齐等等参数的：\n\n![Result pic 6](/contentimg/15/6.png \"SSD速度检测\")\n\n\n　　对WTO还是蛮看好的。随身携带，电脑那么重，现在却只用带个U盘就行，省力很多。而且如果用的SSD，挂在老电脑上，完全就是脱胎换骨。\n\n","source":"_posts/15SSDforwto.md","raw":"---\ntitle: 可随身携带的windows系统\ndate: 2018-10-19 00:03:59\ncategories:\n  - windows系统妙用\ntags:\n  - wto\n  - SSD\n---\n\t\n　　本文记录将SSD利用wto配置成可随身携带的系统。同时介绍一些SSD的知识。\n\n<!-- more -->\n\n　　开头贴一下百度百科。\n\n[Windows To Go](https://baike.baidu.com/item/Windows%20To%20Go/9911487?fr=aladdin)\n\n　　Windows To Go是Windows 8/8.1、Windows 10的一种企业功能，被内置于Windows 8企业版、Windows 8.1企业版、Windows 10企业版、教育版与专业版（1607以后）中。对于满足Windows 8硬件要求的电脑，Windows To Go可使Windows 8、Windows 8.1、Windows10从USB驱动器中启动并运行，不必考虑电脑上运行的操作系统（2012款之前的Mac和Windows RT不被支持）。\n\n　　Windows To Go的设计并不旨在代替台式计算机、便携式计算机，或取代其他移动产品。恰恰相反，它为有效使用备用的工作场所方案资源提供有力支持。\n\n***\n\n　　wto就是win8新版本开始提供的便携式系统，可以装在U盘上，然后随便找个主机插上去，就能登录这个系统进行使用。脱离了硬件上的捆绑。\n\n　　个人建议最好弄成win10的，后面更新新版本那种。不过，按照我尝试后发现，首先得和你系统版本对应，并不是你去网上下载一个最新版就能使用的。我的win10是1703版本的，下载的包1803的就不能用，重启后进不了安装界面。\n\n　　所以最好找你系统当时安装的那个包来做系统包。\n\n　　启动wto的方式，在win菜单那里直接打“win”就会出来：\n\n![Result pic 1](/contentimg/15/1.png \"启动wto\")\n\n\n　　当然也可以去控制面板找。\n\n![Result pic 2](/contentimg/15/2.png \"wto界面\")\n\n\n　　下一步，选择iso。这里需要挂载一下iso，它才能识别到。不能直接定位到iso压缩包。\n\n![Result pic 3](/contentimg/15/3.png \"wto搜索镜像\")\n\n\n　　安装过程很简单。这里不记录。重点是这个U盘安装了这个后，会隐藏起来，在现在使用的系统中就不会显式显示出来：\n\n![Result pic 4](/contentimg/15/4.png \"U盘隐藏\")\n\n\n　　不过既然还是能识别到，就可以使用，直接右键给它分配一个盘符就可以使用了。利用这个特性，就可以跳过登陆验证，直接获取电脑上其他盘的文件了。\n\n　　这个方式比用PE取消登陆密码要好。又不会破坏原系统的东西。适合用于电脑卡在更新界面无法登陆时，用U盘系统启动，然后分配给C盘盘符，进去把更新的文件删掉；然后回原系统启动，就不会更新了。具体步骤可以百度。以前是只能去F8安全模式弄，现在可以直接U盘启动弄了，容易很多。而且是和U盘速度挂钩的，如果用SSD，那就是秒开了，挂在那些老电脑上完全满分。\n\n***\n\n　　下面介绍一下这个U盘的一些知识吧。我用的是SSD，所以特意查了下相关的东西。目前市面上，能达到直连效果的只有3.1的gen2。当然比较推荐圆头的那种typeC接口，就是手机上那种接口（注意，SSD还真能连在手机上用，驱动得起来）。\n\n\n　　这里有个软件可以检测：\n\n![Result pic 5](/contentimg/15/5.png \"U盘接口速度检测\")\n\n\n[aida](https://www.aida64.com/) \n\n　　注意这里电脑USB口的影响也有的，软件里面会提醒。当能达到3.1最高时，是能和直连那样达到几百兆的传输速度的。\n\n　　这个软件，密钥搜一下很多，可以直接用。不用破解。\n\n当然也有个检测磁盘评分的，不过觉得不太适合，那个是直连时检测4K对齐等等参数的：\n\n![Result pic 6](/contentimg/15/6.png \"SSD速度检测\")\n\n\n　　对WTO还是蛮看好的。随身携带，电脑那么重，现在却只用带个U盘就行，省力很多。而且如果用的SSD，挂在老电脑上，完全就是脱胎换骨。\n\n","slug":"15SSDforwto","published":1,"updated":"2018-10-19T08:02:50.896Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgqsu000djo9cdypwf0ax","content":"<p>　　本文记录将SSD利用wto配置成可随身携带的系统。同时介绍一些SSD的知识。</p>\n<a id=\"more\"></a>\n<p>　　开头贴一下百度百科。</p>\n<p><a href=\"https://baike.baidu.com/item/Windows%20To%20Go/9911487?fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Windows To Go</a></p>\n<p>　　Windows To Go是Windows 8/8.1、Windows 10的一种企业功能，被内置于Windows 8企业版、Windows 8.1企业版、Windows 10企业版、教育版与专业版（1607以后）中。对于满足Windows 8硬件要求的电脑，Windows To Go可使Windows 8、Windows 8.1、Windows10从USB驱动器中启动并运行，不必考虑电脑上运行的操作系统（2012款之前的Mac和Windows RT不被支持）。</p>\n<p>　　Windows To Go的设计并不旨在代替台式计算机、便携式计算机，或取代其他移动产品。恰恰相反，它为有效使用备用的工作场所方案资源提供有力支持。</p>\n<hr>\n<p>　　wto就是win8新版本开始提供的便携式系统，可以装在U盘上，然后随便找个主机插上去，就能登录这个系统进行使用。脱离了硬件上的捆绑。</p>\n<p>　　个人建议最好弄成win10的，后面更新新版本那种。不过，按照我尝试后发现，首先得和你系统版本对应，并不是你去网上下载一个最新版就能使用的。我的win10是1703版本的，下载的包1803的就不能用，重启后进不了安装界面。</p>\n<p>　　所以最好找你系统当时安装的那个包来做系统包。</p>\n<p>　　启动wto的方式，在win菜单那里直接打“win”就会出来：</p>\n<p><img src=\"/contentimg/15/1.png\" alt=\"Result pic 1\" title=\"启动wto\"></p>\n<p>　　当然也可以去控制面板找。</p>\n<p><img src=\"/contentimg/15/2.png\" alt=\"Result pic 2\" title=\"wto界面\"></p>\n<p>　　下一步，选择iso。这里需要挂载一下iso，它才能识别到。不能直接定位到iso压缩包。</p>\n<p><img src=\"/contentimg/15/3.png\" alt=\"Result pic 3\" title=\"wto搜索镜像\"></p>\n<p>　　安装过程很简单。这里不记录。重点是这个U盘安装了这个后，会隐藏起来，在现在使用的系统中就不会显式显示出来：</p>\n<p><img src=\"/contentimg/15/4.png\" alt=\"Result pic 4\" title=\"U盘隐藏\"></p>\n<p>　　不过既然还是能识别到，就可以使用，直接右键给它分配一个盘符就可以使用了。利用这个特性，就可以跳过登陆验证，直接获取电脑上其他盘的文件了。</p>\n<p>　　这个方式比用PE取消登陆密码要好。又不会破坏原系统的东西。适合用于电脑卡在更新界面无法登陆时，用U盘系统启动，然后分配给C盘盘符，进去把更新的文件删掉；然后回原系统启动，就不会更新了。具体步骤可以百度。以前是只能去F8安全模式弄，现在可以直接U盘启动弄了，容易很多。而且是和U盘速度挂钩的，如果用SSD，那就是秒开了，挂在那些老电脑上完全满分。</p>\n<hr>\n<p>　　下面介绍一下这个U盘的一些知识吧。我用的是SSD，所以特意查了下相关的东西。目前市面上，能达到直连效果的只有3.1的gen2。当然比较推荐圆头的那种typeC接口，就是手机上那种接口（注意，SSD还真能连在手机上用，驱动得起来）。</p>\n<p>　　这里有个软件可以检测：</p>\n<p><img src=\"/contentimg/15/5.png\" alt=\"Result pic 5\" title=\"U盘接口速度检测\"></p>\n<p><a href=\"https://www.aida64.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">aida</a> </p>\n<p>　　注意这里电脑USB口的影响也有的，软件里面会提醒。当能达到3.1最高时，是能和直连那样达到几百兆的传输速度的。</p>\n<p>　　这个软件，密钥搜一下很多，可以直接用。不用破解。</p>\n<p>当然也有个检测磁盘评分的，不过觉得不太适合，那个是直连时检测4K对齐等等参数的：</p>\n<p><img src=\"/contentimg/15/6.png\" alt=\"Result pic 6\" title=\"SSD速度检测\"></p>\n<p>　　对WTO还是蛮看好的。随身携带，电脑那么重，现在却只用带个U盘就行，省力很多。而且如果用的SSD，挂在老电脑上，完全就是脱胎换骨。</p>\n","site":{"data":{}},"excerpt":"<p>　　本文记录将SSD利用wto配置成可随身携带的系统。同时介绍一些SSD的知识。</p>","more":"<p>　　开头贴一下百度百科。</p>\n<p><a href=\"https://baike.baidu.com/item/Windows%20To%20Go/9911487?fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Windows To Go</a></p>\n<p>　　Windows To Go是Windows 8/8.1、Windows 10的一种企业功能，被内置于Windows 8企业版、Windows 8.1企业版、Windows 10企业版、教育版与专业版（1607以后）中。对于满足Windows 8硬件要求的电脑，Windows To Go可使Windows 8、Windows 8.1、Windows10从USB驱动器中启动并运行，不必考虑电脑上运行的操作系统（2012款之前的Mac和Windows RT不被支持）。</p>\n<p>　　Windows To Go的设计并不旨在代替台式计算机、便携式计算机，或取代其他移动产品。恰恰相反，它为有效使用备用的工作场所方案资源提供有力支持。</p>\n<hr>\n<p>　　wto就是win8新版本开始提供的便携式系统，可以装在U盘上，然后随便找个主机插上去，就能登录这个系统进行使用。脱离了硬件上的捆绑。</p>\n<p>　　个人建议最好弄成win10的，后面更新新版本那种。不过，按照我尝试后发现，首先得和你系统版本对应，并不是你去网上下载一个最新版就能使用的。我的win10是1703版本的，下载的包1803的就不能用，重启后进不了安装界面。</p>\n<p>　　所以最好找你系统当时安装的那个包来做系统包。</p>\n<p>　　启动wto的方式，在win菜单那里直接打“win”就会出来：</p>\n<p><img src=\"/contentimg/15/1.png\" alt=\"Result pic 1\" title=\"启动wto\"></p>\n<p>　　当然也可以去控制面板找。</p>\n<p><img src=\"/contentimg/15/2.png\" alt=\"Result pic 2\" title=\"wto界面\"></p>\n<p>　　下一步，选择iso。这里需要挂载一下iso，它才能识别到。不能直接定位到iso压缩包。</p>\n<p><img src=\"/contentimg/15/3.png\" alt=\"Result pic 3\" title=\"wto搜索镜像\"></p>\n<p>　　安装过程很简单。这里不记录。重点是这个U盘安装了这个后，会隐藏起来，在现在使用的系统中就不会显式显示出来：</p>\n<p><img src=\"/contentimg/15/4.png\" alt=\"Result pic 4\" title=\"U盘隐藏\"></p>\n<p>　　不过既然还是能识别到，就可以使用，直接右键给它分配一个盘符就可以使用了。利用这个特性，就可以跳过登陆验证，直接获取电脑上其他盘的文件了。</p>\n<p>　　这个方式比用PE取消登陆密码要好。又不会破坏原系统的东西。适合用于电脑卡在更新界面无法登陆时，用U盘系统启动，然后分配给C盘盘符，进去把更新的文件删掉；然后回原系统启动，就不会更新了。具体步骤可以百度。以前是只能去F8安全模式弄，现在可以直接U盘启动弄了，容易很多。而且是和U盘速度挂钩的，如果用SSD，那就是秒开了，挂在那些老电脑上完全满分。</p>\n<hr>\n<p>　　下面介绍一下这个U盘的一些知识吧。我用的是SSD，所以特意查了下相关的东西。目前市面上，能达到直连效果的只有3.1的gen2。当然比较推荐圆头的那种typeC接口，就是手机上那种接口（注意，SSD还真能连在手机上用，驱动得起来）。</p>\n<p>　　这里有个软件可以检测：</p>\n<p><img src=\"/contentimg/15/5.png\" alt=\"Result pic 5\" title=\"U盘接口速度检测\"></p>\n<p><a href=\"https://www.aida64.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">aida</a> </p>\n<p>　　注意这里电脑USB口的影响也有的，软件里面会提醒。当能达到3.1最高时，是能和直连那样达到几百兆的传输速度的。</p>\n<p>　　这个软件，密钥搜一下很多，可以直接用。不用破解。</p>\n<p>当然也有个检测磁盘评分的，不过觉得不太适合，那个是直连时检测4K对齐等等参数的：</p>\n<p><img src=\"/contentimg/15/6.png\" alt=\"Result pic 6\" title=\"SSD速度检测\"></p>\n<p>　　对WTO还是蛮看好的。随身携带，电脑那么重，现在却只用带个U盘就行，省力很多。而且如果用的SSD，挂在老电脑上，完全就是脱胎换骨。</p>"},{"title":"office2019破解安装版","date":"2018-10-18T16:06:59.000Z","_content":"\n　　本文分享破解吧看到的office2019的破解安装。\n\n<!-- more -->\n\n　　在这里得感谢破解吧。上面好多破解版软件。在此提醒大家，请用于个人学习，勿用于商业用途。\n\n　　下面引用破解吧的教程：\n\n<p><div style=\"width:100%; height:950px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"800\" src=\"/unitydemo/pdfjs-web/web/viewer.html?file=/contentimg/18/Office-2019.pdf\"/></div></p>\n\n　　[原文地址](https://www.52pojie.cn/forum.php?mod=viewthread&tid=781052&tdsourcetag=s_pcqq_aiomsg) \n\n　　[OTP地址](https://otp.landian.la/zh-cn/) \n\n　　<a id=\"download\" href=\"/contentimg/18/Office-2019.pdf\" download=\"Office-2019.pdf\"><i class=\"fa fa-download\"></i><span> Download PDF </span>\n</a>\n","source":"_posts/18office2019.md","raw":"---\ntitle: office2019破解安装版\ndate: 2018-10-19 00:06:59\ncategories:\n  - 软件破解包\ntags:\n  - office\n  - 破解吧\n---\n\n　　本文分享破解吧看到的office2019的破解安装。\n\n<!-- more -->\n\n　　在这里得感谢破解吧。上面好多破解版软件。在此提醒大家，请用于个人学习，勿用于商业用途。\n\n　　下面引用破解吧的教程：\n\n<p><div style=\"width:100%; height:950px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"800\" src=\"/unitydemo/pdfjs-web/web/viewer.html?file=/contentimg/18/Office-2019.pdf\"/></div></p>\n\n　　[原文地址](https://www.52pojie.cn/forum.php?mod=viewthread&tid=781052&tdsourcetag=s_pcqq_aiomsg) \n\n　　[OTP地址](https://otp.landian.la/zh-cn/) \n\n　　<a id=\"download\" href=\"/contentimg/18/Office-2019.pdf\" download=\"Office-2019.pdf\"><i class=\"fa fa-download\"></i><span> Download PDF </span>\n</a>\n","slug":"18office2019","published":1,"updated":"2018-11-05T16:55:40.690Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgqsv000ejo9cic2uu60a","content":"<p>　　本文分享破解吧看到的office2019的破解安装。</p>\n<a id=\"more\"></a>\n<p>　　在这里得感谢破解吧。上面好多破解版软件。在此提醒大家，请用于个人学习，勿用于商业用途。</p>\n<p>　　下面引用破解吧的教程：</p>\n<p><div style=\"width:100%; height:950px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"800\" src=\"/unitydemo/pdfjs-web/web/viewer.html?file=/contentimg/18/Office-2019.pdf\"></iframe></div></p>\n\n<p>　　<a href=\"https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=781052&amp;tdsourcetag=s_pcqq_aiomsg\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">原文地址</a> </p>\n<p>　　<a href=\"https://otp.landian.la/zh-cn/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">OTP地址</a> </p>\n<p>　　<a id=\"download\" href=\"/contentimg/18/Office-2019.pdf\" download=\"Office-2019.pdf\"><i class=\"fa fa-download\"></i><span> Download PDF </span><br></a></p>\n","site":{"data":{}},"excerpt":"<p>　　本文分享破解吧看到的office2019的破解安装。</p>","more":"<p>　　在这里得感谢破解吧。上面好多破解版软件。在此提醒大家，请用于个人学习，勿用于商业用途。</p>\n<p>　　下面引用破解吧的教程：</p>\n<p><div style=\"width:100%; height:950px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"800\" src=\"/unitydemo/pdfjs-web/web/viewer.html?file=/contentimg/18/Office-2019.pdf\"></iframe></div></p>\n\n<p>　　<a href=\"https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=781052&amp;tdsourcetag=s_pcqq_aiomsg\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">原文地址</a> </p>\n<p>　　<a href=\"https://otp.landian.la/zh-cn/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">OTP地址</a> </p>\n<p>　　<a id=\"download\" href=\"/contentimg/18/Office-2019.pdf\" download=\"Office-2019.pdf\"><i class=\"fa fa-download\"></i><span> Download PDF </span><br></a></p>"},{"title":"github security alert 解决之路","date":"2018-10-18T16:05:59.000Z","_content":"\t\n![Result pic 1](/contentimg/17/1.png \"github security alert \")\n\t\n\n　　本文记录我遇到github的“security alert”时，怎么处理解决。\n\n<!-- more -->\n\n　　邮箱收到这个警告的时候蛮懵的，因为代码什么的没改过。最近做的操作，就是手动修改了“package.json”，以及删除“package-lock.json”文件和“node_modules”整个文件夹。后面重新安装，npm正常跑起来，博客也能正常更新，怎么就突然发警告了？\n\n　　登陆git查看具体警告内容：\n\n![Result pic 2](/contentimg/17/2.png \"具体警告内容\")\n\n\n　　原来是提示需要更新插件版本而已。\n\n那就手动更新吧：\n\n``` bash\nnpm update XXX\n```\n\n　　不对，说好的添加文件的提示怎么没出来，直接就回车返回了？\n\n　　那强制更新到某版本\n\n``` bash\nnpm update XXX@1.2.3\n```\n\n　　还是一样？那就只能用install了。\n\n``` bash\nnpm install XXX@1.2.3\n```\n\n![Result pic 4](/contentimg/17/4.png \"成功更新\")\n\n\n　　再次提交博客环境工程，这次git不报警告了。\n\n![Result pic 3](/contentimg/17/3.png \"问题解决\")\n\n\n最后贴一下“package.json”和“package-lock.json”关系的几个链接吧：\n\n[【前端】简单了解package.json与package-lock.json](https://blog.csdn.net/m18633778874/article/details/81625421) \n \n[package-lock.json的作用](https://www.cnblogs.com/cangqinglang/p/8336754.html) \n\n　　简单讲就是package.json负责安装我们需要的工具，package-lock.json着负责把那些工具需要的包记录安装起来。由于lock文件很大，东西很多，一般我们不会去看，所以这时候就会遇到一些依赖包版本过低的问题。\n\n\n![Result pic 5](/contentimg/17/5.png \"依赖关系\")\n\n\n","source":"_posts/17git-securityalert.md","raw":"---\ntitle: github security alert 解决之路\ndate: 2018-10-19 00:05:59\ncategories:\n  - github疑难杂症\ntags:\n  - github\n  - security alert\n---\n\t\n![Result pic 1](/contentimg/17/1.png \"github security alert \")\n\t\n\n　　本文记录我遇到github的“security alert”时，怎么处理解决。\n\n<!-- more -->\n\n　　邮箱收到这个警告的时候蛮懵的，因为代码什么的没改过。最近做的操作，就是手动修改了“package.json”，以及删除“package-lock.json”文件和“node_modules”整个文件夹。后面重新安装，npm正常跑起来，博客也能正常更新，怎么就突然发警告了？\n\n　　登陆git查看具体警告内容：\n\n![Result pic 2](/contentimg/17/2.png \"具体警告内容\")\n\n\n　　原来是提示需要更新插件版本而已。\n\n那就手动更新吧：\n\n``` bash\nnpm update XXX\n```\n\n　　不对，说好的添加文件的提示怎么没出来，直接就回车返回了？\n\n　　那强制更新到某版本\n\n``` bash\nnpm update XXX@1.2.3\n```\n\n　　还是一样？那就只能用install了。\n\n``` bash\nnpm install XXX@1.2.3\n```\n\n![Result pic 4](/contentimg/17/4.png \"成功更新\")\n\n\n　　再次提交博客环境工程，这次git不报警告了。\n\n![Result pic 3](/contentimg/17/3.png \"问题解决\")\n\n\n最后贴一下“package.json”和“package-lock.json”关系的几个链接吧：\n\n[【前端】简单了解package.json与package-lock.json](https://blog.csdn.net/m18633778874/article/details/81625421) \n \n[package-lock.json的作用](https://www.cnblogs.com/cangqinglang/p/8336754.html) \n\n　　简单讲就是package.json负责安装我们需要的工具，package-lock.json着负责把那些工具需要的包记录安装起来。由于lock文件很大，东西很多，一般我们不会去看，所以这时候就会遇到一些依赖包版本过低的问题。\n\n\n![Result pic 5](/contentimg/17/5.png \"依赖关系\")\n\n\n","slug":"17git-securityalert","published":1,"updated":"2018-10-19T06:12:54.316Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgqsx000ijo9cpa16u9mm","content":"<p><img src=\"/contentimg/17/1.png\" alt=\"Result pic 1\" title=\"github security alert \"></p>\n<p>　　本文记录我遇到github的“security alert”时，怎么处理解决。</p>\n<a id=\"more\"></a>\n<p>　　邮箱收到这个警告的时候蛮懵的，因为代码什么的没改过。最近做的操作，就是手动修改了“package.json”，以及删除“package-lock.json”文件和“node_modules”整个文件夹。后面重新安装，npm正常跑起来，博客也能正常更新，怎么就突然发警告了？</p>\n<p>　　登陆git查看具体警告内容：</p>\n<p><img src=\"/contentimg/17/2.png\" alt=\"Result pic 2\" title=\"具体警告内容\"></p>\n<p>　　原来是提示需要更新插件版本而已。</p>\n<p>那就手动更新吧：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm update XXX</span><br></pre></td></tr></table></figure>\n<p>　　不对，说好的添加文件的提示怎么没出来，直接就回车返回了？</p>\n<p>　　那强制更新到某版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm update XXX@1.2.3</span><br></pre></td></tr></table></figure>\n<p>　　还是一样？那就只能用install了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install XXX@1.2.3</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/17/4.png\" alt=\"Result pic 4\" title=\"成功更新\"></p>\n<p>　　再次提交博客环境工程，这次git不报警告了。</p>\n<p><img src=\"/contentimg/17/3.png\" alt=\"Result pic 3\" title=\"问题解决\"></p>\n<p>最后贴一下“package.json”和“package-lock.json”关系的几个链接吧：</p>\n<p><a href=\"https://blog.csdn.net/m18633778874/article/details/81625421\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">【前端】简单了解package.json与package-lock.json</a> </p>\n<p><a href=\"https://www.cnblogs.com/cangqinglang/p/8336754.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">package-lock.json的作用</a> </p>\n<p>　　简单讲就是package.json负责安装我们需要的工具，package-lock.json着负责把那些工具需要的包记录安装起来。由于lock文件很大，东西很多，一般我们不会去看，所以这时候就会遇到一些依赖包版本过低的问题。</p>\n<p><img src=\"/contentimg/17/5.png\" alt=\"Result pic 5\" title=\"依赖关系\"></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/contentimg/17/1.png\" alt=\"Result pic 1\" title=\"github security alert \"></p>\n<p>　　本文记录我遇到github的“security alert”时，怎么处理解决。</p>","more":"<p>　　邮箱收到这个警告的时候蛮懵的，因为代码什么的没改过。最近做的操作，就是手动修改了“package.json”，以及删除“package-lock.json”文件和“node_modules”整个文件夹。后面重新安装，npm正常跑起来，博客也能正常更新，怎么就突然发警告了？</p>\n<p>　　登陆git查看具体警告内容：</p>\n<p><img src=\"/contentimg/17/2.png\" alt=\"Result pic 2\" title=\"具体警告内容\"></p>\n<p>　　原来是提示需要更新插件版本而已。</p>\n<p>那就手动更新吧：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm update XXX</span><br></pre></td></tr></table></figure>\n<p>　　不对，说好的添加文件的提示怎么没出来，直接就回车返回了？</p>\n<p>　　那强制更新到某版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm update XXX@1.2.3</span><br></pre></td></tr></table></figure>\n<p>　　还是一样？那就只能用install了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install XXX@1.2.3</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/17/4.png\" alt=\"Result pic 4\" title=\"成功更新\"></p>\n<p>　　再次提交博客环境工程，这次git不报警告了。</p>\n<p><img src=\"/contentimg/17/3.png\" alt=\"Result pic 3\" title=\"问题解决\"></p>\n<p>最后贴一下“package.json”和“package-lock.json”关系的几个链接吧：</p>\n<p><a href=\"https://blog.csdn.net/m18633778874/article/details/81625421\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">【前端】简单了解package.json与package-lock.json</a> </p>\n<p><a href=\"https://www.cnblogs.com/cangqinglang/p/8336754.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">package-lock.json的作用</a> </p>\n<p>　　简单讲就是package.json负责安装我们需要的工具，package-lock.json着负责把那些工具需要的包记录安装起来。由于lock文件很大，东西很多，一般我们不会去看，所以这时候就会遇到一些依赖包版本过低的问题。</p>\n<p><img src=\"/contentimg/17/5.png\" alt=\"Result pic 5\" title=\"依赖关系\"></p>"},{"title":"百度sitemap和谷歌sitemap同时使用不同的url","date":"2018-10-19T16:07:59.000Z","_content":"\n　　本文分享如果在同一次hexo g中，百度sitemap和谷歌sitemap使用不同的url。\n\n<!-- more -->\n\n　　目前我挂谷歌是挂github的链接，而挂百度使用域名。但是默认配置文件中的url只有一个。这样每次生成，他们都会使用那个默认url。这样得生成两次，分开提交才能做好。\n\n　　真有必要这么麻烦吗？\n\n　　于是我开始找“node_modules”文件夹里面的源码。\n\n　　谷歌的sitemap生成源码里：\n\n![Result pic 1](/contentimg/20/1.png \"hexo-generator-sitemap源码\")\n\n\n　　是直接拿到hexo.config.sitemap，然后就是generator.js，这样绕进去找。得绕有点久。那先看看百度那边。\n\n![Result pic 1](/contentimg/20/2.png \"hexo-generator-baidu-sitemap源码\")\n\n![Result pic 1](/contentimg/20/3.png \"baidusitemap.ejs源码\")\n\n　　有戏，使用的不是同一个sitemap，然后在baidusitemap.ejs里面又读了一次url！\n\n　　那就好办了，在百度sitemap那里多写一个url就搞定了：\n\n![Result pic 1](/contentimg/20/4.png \"baidusitemap下多加一个url\")\n\n\n　　搞定，一次hexo g。两个sitemap的域名是不同的了。\n","source":"_posts/20sitemap2url.md","raw":"---\ntitle: 百度sitemap和谷歌sitemap同时使用不同的url\ndate: 2018-10-20 00:07:59\ncategories:\n  - 源码分析\ntags:\n  - hexo源码\n---\n\n　　本文分享如果在同一次hexo g中，百度sitemap和谷歌sitemap使用不同的url。\n\n<!-- more -->\n\n　　目前我挂谷歌是挂github的链接，而挂百度使用域名。但是默认配置文件中的url只有一个。这样每次生成，他们都会使用那个默认url。这样得生成两次，分开提交才能做好。\n\n　　真有必要这么麻烦吗？\n\n　　于是我开始找“node_modules”文件夹里面的源码。\n\n　　谷歌的sitemap生成源码里：\n\n![Result pic 1](/contentimg/20/1.png \"hexo-generator-sitemap源码\")\n\n\n　　是直接拿到hexo.config.sitemap，然后就是generator.js，这样绕进去找。得绕有点久。那先看看百度那边。\n\n![Result pic 1](/contentimg/20/2.png \"hexo-generator-baidu-sitemap源码\")\n\n![Result pic 1](/contentimg/20/3.png \"baidusitemap.ejs源码\")\n\n　　有戏，使用的不是同一个sitemap，然后在baidusitemap.ejs里面又读了一次url！\n\n　　那就好办了，在百度sitemap那里多写一个url就搞定了：\n\n![Result pic 1](/contentimg/20/4.png \"baidusitemap下多加一个url\")\n\n\n　　搞定，一次hexo g。两个sitemap的域名是不同的了。\n","slug":"20sitemap2url","published":1,"updated":"2018-10-20T13:35:30.441Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgqsz000kjo9c282cau3a","content":"<p>　　本文分享如果在同一次hexo g中，百度sitemap和谷歌sitemap使用不同的url。</p>\n<a id=\"more\"></a>\n<p>　　目前我挂谷歌是挂github的链接，而挂百度使用域名。但是默认配置文件中的url只有一个。这样每次生成，他们都会使用那个默认url。这样得生成两次，分开提交才能做好。</p>\n<p>　　真有必要这么麻烦吗？</p>\n<p>　　于是我开始找“node_modules”文件夹里面的源码。</p>\n<p>　　谷歌的sitemap生成源码里：</p>\n<p><img src=\"/contentimg/20/1.png\" alt=\"Result pic 1\" title=\"hexo-generator-sitemap源码\"></p>\n<p>　　是直接拿到hexo.config.sitemap，然后就是generator.js，这样绕进去找。得绕有点久。那先看看百度那边。</p>\n<p><img src=\"/contentimg/20/2.png\" alt=\"Result pic 1\" title=\"hexo-generator-baidu-sitemap源码\"></p>\n<p><img src=\"/contentimg/20/3.png\" alt=\"Result pic 1\" title=\"baidusitemap.ejs源码\"></p>\n<p>　　有戏，使用的不是同一个sitemap，然后在baidusitemap.ejs里面又读了一次url！</p>\n<p>　　那就好办了，在百度sitemap那里多写一个url就搞定了：</p>\n<p><img src=\"/contentimg/20/4.png\" alt=\"Result pic 1\" title=\"baidusitemap下多加一个url\"></p>\n<p>　　搞定，一次hexo g。两个sitemap的域名是不同的了。</p>\n","site":{"data":{}},"excerpt":"<p>　　本文分享如果在同一次hexo g中，百度sitemap和谷歌sitemap使用不同的url。</p>","more":"<p>　　目前我挂谷歌是挂github的链接，而挂百度使用域名。但是默认配置文件中的url只有一个。这样每次生成，他们都会使用那个默认url。这样得生成两次，分开提交才能做好。</p>\n<p>　　真有必要这么麻烦吗？</p>\n<p>　　于是我开始找“node_modules”文件夹里面的源码。</p>\n<p>　　谷歌的sitemap生成源码里：</p>\n<p><img src=\"/contentimg/20/1.png\" alt=\"Result pic 1\" title=\"hexo-generator-sitemap源码\"></p>\n<p>　　是直接拿到hexo.config.sitemap，然后就是generator.js，这样绕进去找。得绕有点久。那先看看百度那边。</p>\n<p><img src=\"/contentimg/20/2.png\" alt=\"Result pic 1\" title=\"hexo-generator-baidu-sitemap源码\"></p>\n<p><img src=\"/contentimg/20/3.png\" alt=\"Result pic 1\" title=\"baidusitemap.ejs源码\"></p>\n<p>　　有戏，使用的不是同一个sitemap，然后在baidusitemap.ejs里面又读了一次url！</p>\n<p>　　那就好办了，在百度sitemap那里多写一个url就搞定了：</p>\n<p><img src=\"/contentimg/20/4.png\" alt=\"Result pic 1\" title=\"baidusitemap下多加一个url\"></p>\n<p>　　搞定，一次hexo g。两个sitemap的域名是不同的了。</p>"},{"title":"Unity发布WebGL---360等部分浏览器不支持","date":"2018-10-22T13:07:59.000Z","_content":"\n　　本文介绍三种版本Unity发布WebGL对浏览器的影响问题：\n\n1. 2018.2全新支持WebAssembly，支持内存动态调配，极大压缩包大小。\n1. 5.5.0能发布Release版本，但是在360等浏览器上会抛异常；再往上的版本只能发布Build版本。\n1. 5.4.6以下版本，发布Release版本，支持360等浏览器运行。\n\n<!-- more -->\n\n　　准备在博客上发一个小游戏demo，结果在360抛异常了，在chrome上是可以的，手机上也行。所以webgl是没问题的，推测是unity编译器的问题。但是搜索上找不到关键字。可能没什么人关注这个问题吧，毕竟都是用在手游上的。\n\n　　通过浏览器调试工具，排查到是缺少“decompress.js”，比较了一下，编译出来\".unityweb\"后缀的，都是没有“UnityConfig”文件夹。由于不同版本生成的UnityLoader.js不同，调用工具的步骤已经不同了，才导致360等低版本的浏览器打不开新Unity特性的WebGL程序。\n\n![Result pic 1](/contentimg/23/12.png \"WebGLSupport目录比较\")\n\n\n　　由于C++方面和编译器有关，好多用2008可以编译，但是2010开始的会抛异常。所以就尝试用5.x的来编译。结果很神奇，出来的包不一样，是Release文件夹！之前用2017是Build文件夹。没想到360竟然这次跑成功了！\n\n　　由此推断是webgl版本问题。接着是一个一个版本的更新看，5.5的更新还有提到gz，后面的没提到，下载了5.6的，编译出来是build；所以再找5.5的，终于是Release，但是360上抛异常了。那往前一个版本，5.4.6，正常运行！\n\n　　下面是3个版本的运行情况：\n\n### 2018.2.13f1-WebAssembly模式\n\n　　由于WebAssembly的比较亮点：包小很多，而且能动态申请内存，可以一开始就申请32m（其他版本的都得申请64m）。这里就选该模式。\n\n![Result pic 1](/contentimg/23/1.png \"Chrome控制台输出\")\n\n![Result pic 1](/contentimg/23/2.png \"文件包大小\")\n\n![Result pic 1](/contentimg/23/3.png \"浏览器请求情况\")\n\n\n### 2017.4.3f1\n\n　　WebAssembly模式在该版本是测试版，编译出来的包太大，而且运行还抛异常，这里就不提这个。\n\n![Result pic 1](/contentimg/23/4.png \"Chrome控制台输出\")\n\n![Result pic 1](/contentimg/23/5.png \"文件包大小\")\n\n![Result pic 1](/contentimg/23/6.png \"浏览器请求情况\")\n\n\n### 5.4.6f3\n\n　　能编译出来360正常运行的版本中最新的一个。\n\n![Result pic 1](/contentimg/23/7.png \"Chrome控制台输出\")\n\n![Result pic 1](/contentimg/23/8.png \"文件包大小\")\n\n![Result pic 1](/contentimg/23/9.png \"浏览器请求情况\")\n\n\n## 结论\n\n　　通过前面三个版本的比较。推荐：\n\n1. 简单的小游戏用5.4.6发布，请求量少，支持的浏览器多；\n1. 复杂的游戏用2018.2发布，包压缩率高，动态内存，但是手机上打开会提示请求摄像头权限？（可能存在扫描设备的代码）\n1. 中间的版本优势不大。通过Profiler工具的比较，2018的优势>>5.4.6\n\n\n![Result pic 1](/contentimg/23/10.png \"2018内存分配\")\n\n![Result pic 1](/contentimg/23/11.png \"5.4.6内存分配\")\n\n\n　　两个的代码和设置是一样的，但是Textures相差一倍，Textures是优化中最重要的一个，2018的竟然能帮我们直接优化了一倍。还有Assets的数量，也是一倍的差距。\n\n　　再加上OpenGL ES3.0的优势，所以，复杂点的游戏，还是推荐用2018.2！\n\n　　文末贴一下介绍2018.2的WebAssembly的一个中文链接：\n\n [Unity 2018.2正式支持WebAssembly](http://forum.china.unity3d.com/thread-32663-1-1.html)\n\n\n","source":"_posts/23unitywebgl360error.md","raw":"---\ntitle: Unity发布WebGL---360等部分浏览器不支持\ndate: 2018-10-22 21:07:59\ncategories:\n  - Unity3D\ntags:\n  - webgl\n  - 环境\n---\n\n　　本文介绍三种版本Unity发布WebGL对浏览器的影响问题：\n\n1. 2018.2全新支持WebAssembly，支持内存动态调配，极大压缩包大小。\n1. 5.5.0能发布Release版本，但是在360等浏览器上会抛异常；再往上的版本只能发布Build版本。\n1. 5.4.6以下版本，发布Release版本，支持360等浏览器运行。\n\n<!-- more -->\n\n　　准备在博客上发一个小游戏demo，结果在360抛异常了，在chrome上是可以的，手机上也行。所以webgl是没问题的，推测是unity编译器的问题。但是搜索上找不到关键字。可能没什么人关注这个问题吧，毕竟都是用在手游上的。\n\n　　通过浏览器调试工具，排查到是缺少“decompress.js”，比较了一下，编译出来\".unityweb\"后缀的，都是没有“UnityConfig”文件夹。由于不同版本生成的UnityLoader.js不同，调用工具的步骤已经不同了，才导致360等低版本的浏览器打不开新Unity特性的WebGL程序。\n\n![Result pic 1](/contentimg/23/12.png \"WebGLSupport目录比较\")\n\n\n　　由于C++方面和编译器有关，好多用2008可以编译，但是2010开始的会抛异常。所以就尝试用5.x的来编译。结果很神奇，出来的包不一样，是Release文件夹！之前用2017是Build文件夹。没想到360竟然这次跑成功了！\n\n　　由此推断是webgl版本问题。接着是一个一个版本的更新看，5.5的更新还有提到gz，后面的没提到，下载了5.6的，编译出来是build；所以再找5.5的，终于是Release，但是360上抛异常了。那往前一个版本，5.4.6，正常运行！\n\n　　下面是3个版本的运行情况：\n\n### 2018.2.13f1-WebAssembly模式\n\n　　由于WebAssembly的比较亮点：包小很多，而且能动态申请内存，可以一开始就申请32m（其他版本的都得申请64m）。这里就选该模式。\n\n![Result pic 1](/contentimg/23/1.png \"Chrome控制台输出\")\n\n![Result pic 1](/contentimg/23/2.png \"文件包大小\")\n\n![Result pic 1](/contentimg/23/3.png \"浏览器请求情况\")\n\n\n### 2017.4.3f1\n\n　　WebAssembly模式在该版本是测试版，编译出来的包太大，而且运行还抛异常，这里就不提这个。\n\n![Result pic 1](/contentimg/23/4.png \"Chrome控制台输出\")\n\n![Result pic 1](/contentimg/23/5.png \"文件包大小\")\n\n![Result pic 1](/contentimg/23/6.png \"浏览器请求情况\")\n\n\n### 5.4.6f3\n\n　　能编译出来360正常运行的版本中最新的一个。\n\n![Result pic 1](/contentimg/23/7.png \"Chrome控制台输出\")\n\n![Result pic 1](/contentimg/23/8.png \"文件包大小\")\n\n![Result pic 1](/contentimg/23/9.png \"浏览器请求情况\")\n\n\n## 结论\n\n　　通过前面三个版本的比较。推荐：\n\n1. 简单的小游戏用5.4.6发布，请求量少，支持的浏览器多；\n1. 复杂的游戏用2018.2发布，包压缩率高，动态内存，但是手机上打开会提示请求摄像头权限？（可能存在扫描设备的代码）\n1. 中间的版本优势不大。通过Profiler工具的比较，2018的优势>>5.4.6\n\n\n![Result pic 1](/contentimg/23/10.png \"2018内存分配\")\n\n![Result pic 1](/contentimg/23/11.png \"5.4.6内存分配\")\n\n\n　　两个的代码和设置是一样的，但是Textures相差一倍，Textures是优化中最重要的一个，2018的竟然能帮我们直接优化了一倍。还有Assets的数量，也是一倍的差距。\n\n　　再加上OpenGL ES3.0的优势，所以，复杂点的游戏，还是推荐用2018.2！\n\n　　文末贴一下介绍2018.2的WebAssembly的一个中文链接：\n\n [Unity 2018.2正式支持WebAssembly](http://forum.china.unity3d.com/thread-32663-1-1.html)\n\n\n","slug":"23unitywebgl360error","published":1,"updated":"2018-10-22T16:00:27.728Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgqt1000ojo9ck1odmqvr","content":"<p>　　本文介绍三种版本Unity发布WebGL对浏览器的影响问题：</p>\n<ol>\n<li>2018.2全新支持WebAssembly，支持内存动态调配，极大压缩包大小。</li>\n<li>5.5.0能发布Release版本，但是在360等浏览器上会抛异常；再往上的版本只能发布Build版本。</li>\n<li>5.4.6以下版本，发布Release版本，支持360等浏览器运行。</li>\n</ol>\n<a id=\"more\"></a>\n<p>　　准备在博客上发一个小游戏demo，结果在360抛异常了，在chrome上是可以的，手机上也行。所以webgl是没问题的，推测是unity编译器的问题。但是搜索上找不到关键字。可能没什么人关注这个问题吧，毕竟都是用在手游上的。</p>\n<p>　　通过浏览器调试工具，排查到是缺少“decompress.js”，比较了一下，编译出来”.unityweb”后缀的，都是没有“UnityConfig”文件夹。由于不同版本生成的UnityLoader.js不同，调用工具的步骤已经不同了，才导致360等低版本的浏览器打不开新Unity特性的WebGL程序。</p>\n<p><img src=\"/contentimg/23/12.png\" alt=\"Result pic 1\" title=\"WebGLSupport目录比较\"></p>\n<p>　　由于C++方面和编译器有关，好多用2008可以编译，但是2010开始的会抛异常。所以就尝试用5.x的来编译。结果很神奇，出来的包不一样，是Release文件夹！之前用2017是Build文件夹。没想到360竟然这次跑成功了！</p>\n<p>　　由此推断是webgl版本问题。接着是一个一个版本的更新看，5.5的更新还有提到gz，后面的没提到，下载了5.6的，编译出来是build；所以再找5.5的，终于是Release，但是360上抛异常了。那往前一个版本，5.4.6，正常运行！</p>\n<p>　　下面是3个版本的运行情况：</p>\n<h3 id=\"2018-2-13f1-WebAssembly模式\"><a href=\"#2018-2-13f1-WebAssembly模式\" class=\"headerlink\" title=\"2018.2.13f1-WebAssembly模式\"></a>2018.2.13f1-WebAssembly模式</h3><p>　　由于WebAssembly的比较亮点：包小很多，而且能动态申请内存，可以一开始就申请32m（其他版本的都得申请64m）。这里就选该模式。</p>\n<p><img src=\"/contentimg/23/1.png\" alt=\"Result pic 1\" title=\"Chrome控制台输出\"></p>\n<p><img src=\"/contentimg/23/2.png\" alt=\"Result pic 1\" title=\"文件包大小\"></p>\n<p><img src=\"/contentimg/23/3.png\" alt=\"Result pic 1\" title=\"浏览器请求情况\"></p>\n<h3 id=\"2017-4-3f1\"><a href=\"#2017-4-3f1\" class=\"headerlink\" title=\"2017.4.3f1\"></a>2017.4.3f1</h3><p>　　WebAssembly模式在该版本是测试版，编译出来的包太大，而且运行还抛异常，这里就不提这个。</p>\n<p><img src=\"/contentimg/23/4.png\" alt=\"Result pic 1\" title=\"Chrome控制台输出\"></p>\n<p><img src=\"/contentimg/23/5.png\" alt=\"Result pic 1\" title=\"文件包大小\"></p>\n<p><img src=\"/contentimg/23/6.png\" alt=\"Result pic 1\" title=\"浏览器请求情况\"></p>\n<h3 id=\"5-4-6f3\"><a href=\"#5-4-6f3\" class=\"headerlink\" title=\"5.4.6f3\"></a>5.4.6f3</h3><p>　　能编译出来360正常运行的版本中最新的一个。</p>\n<p><img src=\"/contentimg/23/7.png\" alt=\"Result pic 1\" title=\"Chrome控制台输出\"></p>\n<p><img src=\"/contentimg/23/8.png\" alt=\"Result pic 1\" title=\"文件包大小\"></p>\n<p><img src=\"/contentimg/23/9.png\" alt=\"Result pic 1\" title=\"浏览器请求情况\"></p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>　　通过前面三个版本的比较。推荐：</p>\n<ol>\n<li>简单的小游戏用5.4.6发布，请求量少，支持的浏览器多；</li>\n<li>复杂的游戏用2018.2发布，包压缩率高，动态内存，但是手机上打开会提示请求摄像头权限？（可能存在扫描设备的代码）</li>\n<li>中间的版本优势不大。通过Profiler工具的比较，2018的优势&gt;&gt;5.4.6</li>\n</ol>\n<p><img src=\"/contentimg/23/10.png\" alt=\"Result pic 1\" title=\"2018内存分配\"></p>\n<p><img src=\"/contentimg/23/11.png\" alt=\"Result pic 1\" title=\"5.4.6内存分配\"></p>\n<p>　　两个的代码和设置是一样的，但是Textures相差一倍，Textures是优化中最重要的一个，2018的竟然能帮我们直接优化了一倍。还有Assets的数量，也是一倍的差距。</p>\n<p>　　再加上OpenGL ES3.0的优势，所以，复杂点的游戏，还是推荐用2018.2！</p>\n<p>　　文末贴一下介绍2018.2的WebAssembly的一个中文链接：</p>\n<p> <a href=\"http://forum.china.unity3d.com/thread-32663-1-1.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity 2018.2正式支持WebAssembly</a></p>\n","site":{"data":{}},"excerpt":"<p>　　本文介绍三种版本Unity发布WebGL对浏览器的影响问题：</p>\n<ol>\n<li>2018.2全新支持WebAssembly，支持内存动态调配，极大压缩包大小。</li>\n<li>5.5.0能发布Release版本，但是在360等浏览器上会抛异常；再往上的版本只能发布Build版本。</li>\n<li>5.4.6以下版本，发布Release版本，支持360等浏览器运行。</li>\n</ol>","more":"<p>　　准备在博客上发一个小游戏demo，结果在360抛异常了，在chrome上是可以的，手机上也行。所以webgl是没问题的，推测是unity编译器的问题。但是搜索上找不到关键字。可能没什么人关注这个问题吧，毕竟都是用在手游上的。</p>\n<p>　　通过浏览器调试工具，排查到是缺少“decompress.js”，比较了一下，编译出来”.unityweb”后缀的，都是没有“UnityConfig”文件夹。由于不同版本生成的UnityLoader.js不同，调用工具的步骤已经不同了，才导致360等低版本的浏览器打不开新Unity特性的WebGL程序。</p>\n<p><img src=\"/contentimg/23/12.png\" alt=\"Result pic 1\" title=\"WebGLSupport目录比较\"></p>\n<p>　　由于C++方面和编译器有关，好多用2008可以编译，但是2010开始的会抛异常。所以就尝试用5.x的来编译。结果很神奇，出来的包不一样，是Release文件夹！之前用2017是Build文件夹。没想到360竟然这次跑成功了！</p>\n<p>　　由此推断是webgl版本问题。接着是一个一个版本的更新看，5.5的更新还有提到gz，后面的没提到，下载了5.6的，编译出来是build；所以再找5.5的，终于是Release，但是360上抛异常了。那往前一个版本，5.4.6，正常运行！</p>\n<p>　　下面是3个版本的运行情况：</p>\n<h3 id=\"2018-2-13f1-WebAssembly模式\"><a href=\"#2018-2-13f1-WebAssembly模式\" class=\"headerlink\" title=\"2018.2.13f1-WebAssembly模式\"></a>2018.2.13f1-WebAssembly模式</h3><p>　　由于WebAssembly的比较亮点：包小很多，而且能动态申请内存，可以一开始就申请32m（其他版本的都得申请64m）。这里就选该模式。</p>\n<p><img src=\"/contentimg/23/1.png\" alt=\"Result pic 1\" title=\"Chrome控制台输出\"></p>\n<p><img src=\"/contentimg/23/2.png\" alt=\"Result pic 1\" title=\"文件包大小\"></p>\n<p><img src=\"/contentimg/23/3.png\" alt=\"Result pic 1\" title=\"浏览器请求情况\"></p>\n<h3 id=\"2017-4-3f1\"><a href=\"#2017-4-3f1\" class=\"headerlink\" title=\"2017.4.3f1\"></a>2017.4.3f1</h3><p>　　WebAssembly模式在该版本是测试版，编译出来的包太大，而且运行还抛异常，这里就不提这个。</p>\n<p><img src=\"/contentimg/23/4.png\" alt=\"Result pic 1\" title=\"Chrome控制台输出\"></p>\n<p><img src=\"/contentimg/23/5.png\" alt=\"Result pic 1\" title=\"文件包大小\"></p>\n<p><img src=\"/contentimg/23/6.png\" alt=\"Result pic 1\" title=\"浏览器请求情况\"></p>\n<h3 id=\"5-4-6f3\"><a href=\"#5-4-6f3\" class=\"headerlink\" title=\"5.4.6f3\"></a>5.4.6f3</h3><p>　　能编译出来360正常运行的版本中最新的一个。</p>\n<p><img src=\"/contentimg/23/7.png\" alt=\"Result pic 1\" title=\"Chrome控制台输出\"></p>\n<p><img src=\"/contentimg/23/8.png\" alt=\"Result pic 1\" title=\"文件包大小\"></p>\n<p><img src=\"/contentimg/23/9.png\" alt=\"Result pic 1\" title=\"浏览器请求情况\"></p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>　　通过前面三个版本的比较。推荐：</p>\n<ol>\n<li>简单的小游戏用5.4.6发布，请求量少，支持的浏览器多；</li>\n<li>复杂的游戏用2018.2发布，包压缩率高，动态内存，但是手机上打开会提示请求摄像头权限？（可能存在扫描设备的代码）</li>\n<li>中间的版本优势不大。通过Profiler工具的比较，2018的优势&gt;&gt;5.4.6</li>\n</ol>\n<p><img src=\"/contentimg/23/10.png\" alt=\"Result pic 1\" title=\"2018内存分配\"></p>\n<p><img src=\"/contentimg/23/11.png\" alt=\"Result pic 1\" title=\"5.4.6内存分配\"></p>\n<p>　　两个的代码和设置是一样的，但是Textures相差一倍，Textures是优化中最重要的一个，2018的竟然能帮我们直接优化了一倍。还有Assets的数量，也是一倍的差距。</p>\n<p>　　再加上OpenGL ES3.0的优势，所以，复杂点的游戏，还是推荐用2018.2！</p>\n<p>　　文末贴一下介绍2018.2的WebAssembly的一个中文链接：</p>\n<p> <a href=\"http://forum.china.unity3d.com/thread-32663-1-1.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity 2018.2正式支持WebAssembly</a></p>"},{"title":"Unity入门官方案例---2D Roguelike","date":"2018-10-20T16:07:59.000Z","_content":"\n　　介绍一下接触到的好的Unity官方作品：[2D Roguelike](https://assetstore.unity.com/packages/essentials/tutorial-projects/2d-roguelike-29825)   。\n\n<!-- more -->\n\n\n![Result pic 1](/contentimg/22/1.jpg \"2D Roguelike\")\n\n## 游戏简介\n\n　　该小游戏是2D类型，操作只有上下左右4个方向的移动，每动一下消耗1点能量，能量通过吃到食物补充；场景中有墙阻挡，需要撞4下墙才能销毁该障碍，同时还有怪物追击，被攻击到会大量消耗能量；但是怪物移动速度缓慢。\n\n　　由于场景中的食物是固定的，吃了就没了，所以就设置了一个刷新点：“exit出口”，每到达一次，就能刷新一下全图场景，同时作为天数记录+1天；相应的，存活天数越多，怪物也会越多！\n\n　　目前游戏以天数为关卡记录。\n\n## 游戏体验\n\n  <p><div style=\"width:100%; height:500px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"500\" height=\"500\" src=\"/unitydemo/2/index.html\"/></div></p>\n\n## 游戏制作\n\n　　原材料真的很少，才一张图集。里面打包集合了全部墙和地板、人物的贴图。然后就是一些背景音乐了。\n\n### 1.游戏规则细化\n\n　　写代码前，需要先了解要做什么功能。\n\n　　这是一个逃亡游戏，为了限制逃亡，需要加上“移动能量消耗”这个限制；竟然是逃亡，那就有怪物，先用最简单的，降低怪物移动速度（玩家移动两次，怪物才移动一次），怪物接触玩家，玩家损失能量；接下来，场景中需要有障碍物，但是这些障碍物是可以通过消耗能量来击穿，防止堵死。\n\n　　剩下就是全游戏最重要的能量了，设置两种食物，拾取到就增加能量。能量归零，游戏结束。\n\n　　为了简化游戏，把全部对象设置了统一单位移动。全部材料统一单位。全场景10x10单位，减掉外围的一层墙，内部是8x8单位的地板，随机布置障碍物、食物和怪物。\n\n　　增加存活天数为关卡难度设置，天数越多，难度越大；难度以怪物数量来体现。\n\n### 2.代码\n\n　　这个代码架构很不错。使用抽象层，由于怪物和玩家都是一样的移动，一样的碰撞，该部分能通过泛型T抽象出来处理。而碰撞，玩家的碰撞和怪物的碰撞又是一样的逻辑，又可以抽象处理。\n\n![Result pic 1](/contentimg/22/1.png \"两个抽象层函数\")\n\n　　细节的代码逻辑这里就不提了。这里简单讲讲里面一些知识点吧。\n\n#### RuntimeInitializeOnLoadMethod\n\n　　该特性，实际是让函数在物体在OnLoad的时候自己执行该函数。这里有篇文章[Unity的RuntimeInitializeOnLoadMethod属性初探](https://www.cnblogs.com/meteoric_cry/p/7602122.html)  简单讲。\n\n#### Input.GetAxisRaw\n\n　　Raw不经过处理的，会直接返回-1，0，1。\n\n　　Input.GetAxis则是-1~+1的范围缓慢变化。两者有区别。由于我们限制了单位移动，所以用raw的才适合。\n\n#### float.Epsilon\n\n![Result pic 1](/contentimg/22/2.png \"移动动画\")\n\n\n　　这里使用StartCoroutine来处理，防止while卡死线程。注意StartCoroutine和多线程不是同样的概念。但是可以简单理解成另外开一个线程去处理这个一帧一帧移动的动画。判断是否移动到目的的时候，不是用==，而是用float.Epsilon，避免了一些数据溢出的bug。注意,实际上会出现 double 1.0!= 1.0，所以只能会一个很小的范围来判断是否 double 1.0 ≈ 1.0。\n\n#### Physics2D.Linecast\n\n![Result pic 1](/contentimg/22/3.png \"射线检测碰撞\")\n\n\n　　游戏中使用的是碰撞器，所以移动前可以事先检查目的单位是否存在碰撞器。但是需要注意，物体自身的碰撞器会先被射线检测到，所以需要提前屏蔽自身的碰撞器，检测后才启用。\n\n#### 输入检测\n\n![Result pic 1](/contentimg/22/4.png \"输入检测判断\")\n\n\n　　这里我修改了原来的代码。原来是通过平台处理，移动端使用滑动手势。我觉得不好用，还是统一成单点判断处理。通过判断点击的部位在人物的相对位置来处理。\n\n#### 鼠标点击转化为相对坐标\n\n>  touchEnd = Camera.main.ScreenToWorldPoint(Input.mousePosition);\n\n　　这里，其实整个游戏的坐标，是通过相机上的单位来换算统一成单位坐标的。所以可以直接使用相机的相对坐标来处理。\n\n#### 代码小缺陷处理\n\n　　我发现，当你剩下最后1能量，刚好移动到Exit就为0时，是能加载到下一关，然后就全部不动了。因为这里缺少了判断。\n\n　　由于我使用了游戏结束后重新开始，我改的是下面这里。\n\n![Result pic 1](/contentimg/22/5.png \"场景重载时检查playerFoodPoints\")\n\n\n\n### 3.开始制作游戏\n\n　　这里比较简单，把图集拆开，制作预制体。两个步骤而已。\n\n#### 拆图集\n\n　　拆图集，这里需要了解一个概念：Pixels Per Unit\n\n![Result pic 1](/contentimg/22/6.png \"Pixels Per Unit\")\n\n\n　　这里我为什么设置成32？\n\n　　首先，我们看原文件大小：\n\n![Result pic 1](/contentimg/22/7.png \"256 x 224\")\n\n\n　　是指位深度？不是这样算。我们数一下图集里面的单元，共7 x 8 。\n\n　　对应：256==》8 & 224 ==》 7\n\n　　刚好整除，得到32像素就是一个图片的单位，也刚好图片都是正方形大小。所以这里的Pixels Per Unit，就是指多少像素一个Unit。\n\n　　这里也有个文章介绍这个 [Unity UGUI 原理篇(二)：Canvas Scaler 縮放核心](http://gad.qq.com/article/detail/21059) \n\n　　其他优化部分就不记录。因为有另外分开文章记录发布优化。\n\n#### 制作预制体\n\n　　该部分简单，就是拖拖图片而已。注意里面碰撞器是和图片岔开的，偏移一半。\n\n![Result pic 1](/contentimg/22/8.png \"碰撞器岔开原单位\")\n\n\n　　为什么要岔开，因为初始状态下，射线检测的出发点，是在左上角。这样一开始就碰到左边的物体了。所以需要岔开。增加一半单位的距离。\n\n#### 整合Scene\n\n![Result pic 1](/contentimg/22/9.png \"摄像头的Size\")\n\n\n　　这里有疑问的，就是这个Size的值，应该设多少？\n\n　　这个Size的意义，是显示界面高度的一半，共多少个单位。这里5，得到显示界面的高度是10个单位，正好对应游戏中10x10的比例。\n\n　　为什么不是宽度？这个就得去问官方了。本问不纠结这个问题。\n\n　　为什么开头演示那里是正方形的大小，但是默认工程是长方形的？\n\n　　这个是发布时的设置。\n\n![Result pic 1](/contentimg/22/10.png \"发布显示大小\")\n\n\n\n　　当然，该游戏实际上不用碰撞器也行，因为单位长度都是1，实际可以用数组集合来记录处理。有点像扫雷游戏那样。具体后面分享到扫雷游戏再提这种写法。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/22Roguelike.md","raw":"---\ntitle: Unity入门官方案例---2D Roguelike\ndate: 2018-10-21 00:07:59\ncategories:\n  - Unity3D\ntags:\n  - 游戏开发\n  - 2D\n  - 入门级\n---\n\n　　介绍一下接触到的好的Unity官方作品：[2D Roguelike](https://assetstore.unity.com/packages/essentials/tutorial-projects/2d-roguelike-29825)   。\n\n<!-- more -->\n\n\n![Result pic 1](/contentimg/22/1.jpg \"2D Roguelike\")\n\n## 游戏简介\n\n　　该小游戏是2D类型，操作只有上下左右4个方向的移动，每动一下消耗1点能量，能量通过吃到食物补充；场景中有墙阻挡，需要撞4下墙才能销毁该障碍，同时还有怪物追击，被攻击到会大量消耗能量；但是怪物移动速度缓慢。\n\n　　由于场景中的食物是固定的，吃了就没了，所以就设置了一个刷新点：“exit出口”，每到达一次，就能刷新一下全图场景，同时作为天数记录+1天；相应的，存活天数越多，怪物也会越多！\n\n　　目前游戏以天数为关卡记录。\n\n## 游戏体验\n\n  <p><div style=\"width:100%; height:500px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"500\" height=\"500\" src=\"/unitydemo/2/index.html\"/></div></p>\n\n## 游戏制作\n\n　　原材料真的很少，才一张图集。里面打包集合了全部墙和地板、人物的贴图。然后就是一些背景音乐了。\n\n### 1.游戏规则细化\n\n　　写代码前，需要先了解要做什么功能。\n\n　　这是一个逃亡游戏，为了限制逃亡，需要加上“移动能量消耗”这个限制；竟然是逃亡，那就有怪物，先用最简单的，降低怪物移动速度（玩家移动两次，怪物才移动一次），怪物接触玩家，玩家损失能量；接下来，场景中需要有障碍物，但是这些障碍物是可以通过消耗能量来击穿，防止堵死。\n\n　　剩下就是全游戏最重要的能量了，设置两种食物，拾取到就增加能量。能量归零，游戏结束。\n\n　　为了简化游戏，把全部对象设置了统一单位移动。全部材料统一单位。全场景10x10单位，减掉外围的一层墙，内部是8x8单位的地板，随机布置障碍物、食物和怪物。\n\n　　增加存活天数为关卡难度设置，天数越多，难度越大；难度以怪物数量来体现。\n\n### 2.代码\n\n　　这个代码架构很不错。使用抽象层，由于怪物和玩家都是一样的移动，一样的碰撞，该部分能通过泛型T抽象出来处理。而碰撞，玩家的碰撞和怪物的碰撞又是一样的逻辑，又可以抽象处理。\n\n![Result pic 1](/contentimg/22/1.png \"两个抽象层函数\")\n\n　　细节的代码逻辑这里就不提了。这里简单讲讲里面一些知识点吧。\n\n#### RuntimeInitializeOnLoadMethod\n\n　　该特性，实际是让函数在物体在OnLoad的时候自己执行该函数。这里有篇文章[Unity的RuntimeInitializeOnLoadMethod属性初探](https://www.cnblogs.com/meteoric_cry/p/7602122.html)  简单讲。\n\n#### Input.GetAxisRaw\n\n　　Raw不经过处理的，会直接返回-1，0，1。\n\n　　Input.GetAxis则是-1~+1的范围缓慢变化。两者有区别。由于我们限制了单位移动，所以用raw的才适合。\n\n#### float.Epsilon\n\n![Result pic 1](/contentimg/22/2.png \"移动动画\")\n\n\n　　这里使用StartCoroutine来处理，防止while卡死线程。注意StartCoroutine和多线程不是同样的概念。但是可以简单理解成另外开一个线程去处理这个一帧一帧移动的动画。判断是否移动到目的的时候，不是用==，而是用float.Epsilon，避免了一些数据溢出的bug。注意,实际上会出现 double 1.0!= 1.0，所以只能会一个很小的范围来判断是否 double 1.0 ≈ 1.0。\n\n#### Physics2D.Linecast\n\n![Result pic 1](/contentimg/22/3.png \"射线检测碰撞\")\n\n\n　　游戏中使用的是碰撞器，所以移动前可以事先检查目的单位是否存在碰撞器。但是需要注意，物体自身的碰撞器会先被射线检测到，所以需要提前屏蔽自身的碰撞器，检测后才启用。\n\n#### 输入检测\n\n![Result pic 1](/contentimg/22/4.png \"输入检测判断\")\n\n\n　　这里我修改了原来的代码。原来是通过平台处理，移动端使用滑动手势。我觉得不好用，还是统一成单点判断处理。通过判断点击的部位在人物的相对位置来处理。\n\n#### 鼠标点击转化为相对坐标\n\n>  touchEnd = Camera.main.ScreenToWorldPoint(Input.mousePosition);\n\n　　这里，其实整个游戏的坐标，是通过相机上的单位来换算统一成单位坐标的。所以可以直接使用相机的相对坐标来处理。\n\n#### 代码小缺陷处理\n\n　　我发现，当你剩下最后1能量，刚好移动到Exit就为0时，是能加载到下一关，然后就全部不动了。因为这里缺少了判断。\n\n　　由于我使用了游戏结束后重新开始，我改的是下面这里。\n\n![Result pic 1](/contentimg/22/5.png \"场景重载时检查playerFoodPoints\")\n\n\n\n### 3.开始制作游戏\n\n　　这里比较简单，把图集拆开，制作预制体。两个步骤而已。\n\n#### 拆图集\n\n　　拆图集，这里需要了解一个概念：Pixels Per Unit\n\n![Result pic 1](/contentimg/22/6.png \"Pixels Per Unit\")\n\n\n　　这里我为什么设置成32？\n\n　　首先，我们看原文件大小：\n\n![Result pic 1](/contentimg/22/7.png \"256 x 224\")\n\n\n　　是指位深度？不是这样算。我们数一下图集里面的单元，共7 x 8 。\n\n　　对应：256==》8 & 224 ==》 7\n\n　　刚好整除，得到32像素就是一个图片的单位，也刚好图片都是正方形大小。所以这里的Pixels Per Unit，就是指多少像素一个Unit。\n\n　　这里也有个文章介绍这个 [Unity UGUI 原理篇(二)：Canvas Scaler 縮放核心](http://gad.qq.com/article/detail/21059) \n\n　　其他优化部分就不记录。因为有另外分开文章记录发布优化。\n\n#### 制作预制体\n\n　　该部分简单，就是拖拖图片而已。注意里面碰撞器是和图片岔开的，偏移一半。\n\n![Result pic 1](/contentimg/22/8.png \"碰撞器岔开原单位\")\n\n\n　　为什么要岔开，因为初始状态下，射线检测的出发点，是在左上角。这样一开始就碰到左边的物体了。所以需要岔开。增加一半单位的距离。\n\n#### 整合Scene\n\n![Result pic 1](/contentimg/22/9.png \"摄像头的Size\")\n\n\n　　这里有疑问的，就是这个Size的值，应该设多少？\n\n　　这个Size的意义，是显示界面高度的一半，共多少个单位。这里5，得到显示界面的高度是10个单位，正好对应游戏中10x10的比例。\n\n　　为什么不是宽度？这个就得去问官方了。本问不纠结这个问题。\n\n　　为什么开头演示那里是正方形的大小，但是默认工程是长方形的？\n\n　　这个是发布时的设置。\n\n![Result pic 1](/contentimg/22/10.png \"发布显示大小\")\n\n\n\n　　当然，该游戏实际上不用碰撞器也行，因为单位长度都是1，实际可以用数组集合来记录处理。有点像扫雷游戏那样。具体后面分享到扫雷游戏再提这种写法。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"22Roguelike","published":1,"updated":"2018-10-29T04:28:14.925Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgqt2000qjo9cyvo739vx","content":"<p>　　介绍一下接触到的好的Unity官方作品：<a href=\"https://assetstore.unity.com/packages/essentials/tutorial-projects/2d-roguelike-29825\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">2D Roguelike</a>   。</p>\n<a id=\"more\"></a>\n<p><img src=\"/contentimg/22/1.jpg\" alt=\"Result pic 1\" title=\"2D Roguelike\"></p>\n<h2 id=\"游戏简介\"><a href=\"#游戏简介\" class=\"headerlink\" title=\"游戏简介\"></a>游戏简介</h2><p>　　该小游戏是2D类型，操作只有上下左右4个方向的移动，每动一下消耗1点能量，能量通过吃到食物补充；场景中有墙阻挡，需要撞4下墙才能销毁该障碍，同时还有怪物追击，被攻击到会大量消耗能量；但是怪物移动速度缓慢。</p>\n<p>　　由于场景中的食物是固定的，吃了就没了，所以就设置了一个刷新点：“exit出口”，每到达一次，就能刷新一下全图场景，同时作为天数记录+1天；相应的，存活天数越多，怪物也会越多！</p>\n<p>　　目前游戏以天数为关卡记录。</p>\n<h2 id=\"游戏体验\"><a href=\"#游戏体验\" class=\"headerlink\" title=\"游戏体验\"></a>游戏体验</h2>  <p><div style=\"width:100%; height:500px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"500\" height=\"500\" src=\"/unitydemo/2/index.html\"></iframe></div></p>\n\n<h2 id=\"游戏制作\"><a href=\"#游戏制作\" class=\"headerlink\" title=\"游戏制作\"></a>游戏制作</h2><p>　　原材料真的很少，才一张图集。里面打包集合了全部墙和地板、人物的贴图。然后就是一些背景音乐了。</p>\n<h3 id=\"1-游戏规则细化\"><a href=\"#1-游戏规则细化\" class=\"headerlink\" title=\"1.游戏规则细化\"></a>1.游戏规则细化</h3><p>　　写代码前，需要先了解要做什么功能。</p>\n<p>　　这是一个逃亡游戏，为了限制逃亡，需要加上“移动能量消耗”这个限制；竟然是逃亡，那就有怪物，先用最简单的，降低怪物移动速度（玩家移动两次，怪物才移动一次），怪物接触玩家，玩家损失能量；接下来，场景中需要有障碍物，但是这些障碍物是可以通过消耗能量来击穿，防止堵死。</p>\n<p>　　剩下就是全游戏最重要的能量了，设置两种食物，拾取到就增加能量。能量归零，游戏结束。</p>\n<p>　　为了简化游戏，把全部对象设置了统一单位移动。全部材料统一单位。全场景10x10单位，减掉外围的一层墙，内部是8x8单位的地板，随机布置障碍物、食物和怪物。</p>\n<p>　　增加存活天数为关卡难度设置，天数越多，难度越大；难度以怪物数量来体现。</p>\n<h3 id=\"2-代码\"><a href=\"#2-代码\" class=\"headerlink\" title=\"2.代码\"></a>2.代码</h3><p>　　这个代码架构很不错。使用抽象层，由于怪物和玩家都是一样的移动，一样的碰撞，该部分能通过泛型T抽象出来处理。而碰撞，玩家的碰撞和怪物的碰撞又是一样的逻辑，又可以抽象处理。</p>\n<p><img src=\"/contentimg/22/1.png\" alt=\"Result pic 1\" title=\"两个抽象层函数\"></p>\n<p>　　细节的代码逻辑这里就不提了。这里简单讲讲里面一些知识点吧。</p>\n<h4 id=\"RuntimeInitializeOnLoadMethod\"><a href=\"#RuntimeInitializeOnLoadMethod\" class=\"headerlink\" title=\"RuntimeInitializeOnLoadMethod\"></a>RuntimeInitializeOnLoadMethod</h4><p>　　该特性，实际是让函数在物体在OnLoad的时候自己执行该函数。这里有篇文章<a href=\"https://www.cnblogs.com/meteoric_cry/p/7602122.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity的RuntimeInitializeOnLoadMethod属性初探</a>  简单讲。</p>\n<h4 id=\"Input-GetAxisRaw\"><a href=\"#Input-GetAxisRaw\" class=\"headerlink\" title=\"Input.GetAxisRaw\"></a>Input.GetAxisRaw</h4><p>　　Raw不经过处理的，会直接返回-1，0，1。</p>\n<p>　　Input.GetAxis则是-1~+1的范围缓慢变化。两者有区别。由于我们限制了单位移动，所以用raw的才适合。</p>\n<h4 id=\"float-Epsilon\"><a href=\"#float-Epsilon\" class=\"headerlink\" title=\"float.Epsilon\"></a>float.Epsilon</h4><p><img src=\"/contentimg/22/2.png\" alt=\"Result pic 1\" title=\"移动动画\"></p>\n<p>　　这里使用StartCoroutine来处理，防止while卡死线程。注意StartCoroutine和多线程不是同样的概念。但是可以简单理解成另外开一个线程去处理这个一帧一帧移动的动画。判断是否移动到目的的时候，不是用==，而是用float.Epsilon，避免了一些数据溢出的bug。注意,实际上会出现 double 1.0!= 1.0，所以只能会一个很小的范围来判断是否 double 1.0 ≈ 1.0。</p>\n<h4 id=\"Physics2D-Linecast\"><a href=\"#Physics2D-Linecast\" class=\"headerlink\" title=\"Physics2D.Linecast\"></a>Physics2D.Linecast</h4><p><img src=\"/contentimg/22/3.png\" alt=\"Result pic 1\" title=\"射线检测碰撞\"></p>\n<p>　　游戏中使用的是碰撞器，所以移动前可以事先检查目的单位是否存在碰撞器。但是需要注意，物体自身的碰撞器会先被射线检测到，所以需要提前屏蔽自身的碰撞器，检测后才启用。</p>\n<h4 id=\"输入检测\"><a href=\"#输入检测\" class=\"headerlink\" title=\"输入检测\"></a>输入检测</h4><p><img src=\"/contentimg/22/4.png\" alt=\"Result pic 1\" title=\"输入检测判断\"></p>\n<p>　　这里我修改了原来的代码。原来是通过平台处理，移动端使用滑动手势。我觉得不好用，还是统一成单点判断处理。通过判断点击的部位在人物的相对位置来处理。</p>\n<h4 id=\"鼠标点击转化为相对坐标\"><a href=\"#鼠标点击转化为相对坐标\" class=\"headerlink\" title=\"鼠标点击转化为相对坐标\"></a>鼠标点击转化为相对坐标</h4><blockquote>\n<p> touchEnd = Camera.main.ScreenToWorldPoint(Input.mousePosition);</p>\n</blockquote>\n<p>　　这里，其实整个游戏的坐标，是通过相机上的单位来换算统一成单位坐标的。所以可以直接使用相机的相对坐标来处理。</p>\n<h4 id=\"代码小缺陷处理\"><a href=\"#代码小缺陷处理\" class=\"headerlink\" title=\"代码小缺陷处理\"></a>代码小缺陷处理</h4><p>　　我发现，当你剩下最后1能量，刚好移动到Exit就为0时，是能加载到下一关，然后就全部不动了。因为这里缺少了判断。</p>\n<p>　　由于我使用了游戏结束后重新开始，我改的是下面这里。</p>\n<p><img src=\"/contentimg/22/5.png\" alt=\"Result pic 1\" title=\"场景重载时检查playerFoodPoints\"></p>\n<h3 id=\"3-开始制作游戏\"><a href=\"#3-开始制作游戏\" class=\"headerlink\" title=\"3.开始制作游戏\"></a>3.开始制作游戏</h3><p>　　这里比较简单，把图集拆开，制作预制体。两个步骤而已。</p>\n<h4 id=\"拆图集\"><a href=\"#拆图集\" class=\"headerlink\" title=\"拆图集\"></a>拆图集</h4><p>　　拆图集，这里需要了解一个概念：Pixels Per Unit</p>\n<p><img src=\"/contentimg/22/6.png\" alt=\"Result pic 1\" title=\"Pixels Per Unit\"></p>\n<p>　　这里我为什么设置成32？</p>\n<p>　　首先，我们看原文件大小：</p>\n<p><img src=\"/contentimg/22/7.png\" alt=\"Result pic 1\" title=\"256 x 224\"></p>\n<p>　　是指位深度？不是这样算。我们数一下图集里面的单元，共7 x 8 。</p>\n<p>　　对应：256==》8 &amp; 224 ==》 7</p>\n<p>　　刚好整除，得到32像素就是一个图片的单位，也刚好图片都是正方形大小。所以这里的Pixels Per Unit，就是指多少像素一个Unit。</p>\n<p>　　这里也有个文章介绍这个 <a href=\"http://gad.qq.com/article/detail/21059\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity UGUI 原理篇(二)：Canvas Scaler 縮放核心</a> </p>\n<p>　　其他优化部分就不记录。因为有另外分开文章记录发布优化。</p>\n<h4 id=\"制作预制体\"><a href=\"#制作预制体\" class=\"headerlink\" title=\"制作预制体\"></a>制作预制体</h4><p>　　该部分简单，就是拖拖图片而已。注意里面碰撞器是和图片岔开的，偏移一半。</p>\n<p><img src=\"/contentimg/22/8.png\" alt=\"Result pic 1\" title=\"碰撞器岔开原单位\"></p>\n<p>　　为什么要岔开，因为初始状态下，射线检测的出发点，是在左上角。这样一开始就碰到左边的物体了。所以需要岔开。增加一半单位的距离。</p>\n<h4 id=\"整合Scene\"><a href=\"#整合Scene\" class=\"headerlink\" title=\"整合Scene\"></a>整合Scene</h4><p><img src=\"/contentimg/22/9.png\" alt=\"Result pic 1\" title=\"摄像头的Size\"></p>\n<p>　　这里有疑问的，就是这个Size的值，应该设多少？</p>\n<p>　　这个Size的意义，是显示界面高度的一半，共多少个单位。这里5，得到显示界面的高度是10个单位，正好对应游戏中10x10的比例。</p>\n<p>　　为什么不是宽度？这个就得去问官方了。本问不纠结这个问题。</p>\n<p>　　为什么开头演示那里是正方形的大小，但是默认工程是长方形的？</p>\n<p>　　这个是发布时的设置。</p>\n<p><img src=\"/contentimg/22/10.png\" alt=\"Result pic 1\" title=\"发布显示大小\"></p>\n<p>　　当然，该游戏实际上不用碰撞器也行，因为单位长度都是1，实际可以用数组集合来记录处理。有点像扫雷游戏那样。具体后面分享到扫雷游戏再提这种写法。</p>\n","site":{"data":{}},"excerpt":"<p>　　介绍一下接触到的好的Unity官方作品：<a href=\"https://assetstore.unity.com/packages/essentials/tutorial-projects/2d-roguelike-29825\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">2D Roguelike</a>   。</p>","more":"<p><img src=\"/contentimg/22/1.jpg\" alt=\"Result pic 1\" title=\"2D Roguelike\"></p>\n<h2 id=\"游戏简介\"><a href=\"#游戏简介\" class=\"headerlink\" title=\"游戏简介\"></a>游戏简介</h2><p>　　该小游戏是2D类型，操作只有上下左右4个方向的移动，每动一下消耗1点能量，能量通过吃到食物补充；场景中有墙阻挡，需要撞4下墙才能销毁该障碍，同时还有怪物追击，被攻击到会大量消耗能量；但是怪物移动速度缓慢。</p>\n<p>　　由于场景中的食物是固定的，吃了就没了，所以就设置了一个刷新点：“exit出口”，每到达一次，就能刷新一下全图场景，同时作为天数记录+1天；相应的，存活天数越多，怪物也会越多！</p>\n<p>　　目前游戏以天数为关卡记录。</p>\n<h2 id=\"游戏体验\"><a href=\"#游戏体验\" class=\"headerlink\" title=\"游戏体验\"></a>游戏体验</h2>  <p><div style=\"width:100%; height:500px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"500\" height=\"500\" src=\"/unitydemo/2/index.html\"></iframe></div></p>\n\n<h2 id=\"游戏制作\"><a href=\"#游戏制作\" class=\"headerlink\" title=\"游戏制作\"></a>游戏制作</h2><p>　　原材料真的很少，才一张图集。里面打包集合了全部墙和地板、人物的贴图。然后就是一些背景音乐了。</p>\n<h3 id=\"1-游戏规则细化\"><a href=\"#1-游戏规则细化\" class=\"headerlink\" title=\"1.游戏规则细化\"></a>1.游戏规则细化</h3><p>　　写代码前，需要先了解要做什么功能。</p>\n<p>　　这是一个逃亡游戏，为了限制逃亡，需要加上“移动能量消耗”这个限制；竟然是逃亡，那就有怪物，先用最简单的，降低怪物移动速度（玩家移动两次，怪物才移动一次），怪物接触玩家，玩家损失能量；接下来，场景中需要有障碍物，但是这些障碍物是可以通过消耗能量来击穿，防止堵死。</p>\n<p>　　剩下就是全游戏最重要的能量了，设置两种食物，拾取到就增加能量。能量归零，游戏结束。</p>\n<p>　　为了简化游戏，把全部对象设置了统一单位移动。全部材料统一单位。全场景10x10单位，减掉外围的一层墙，内部是8x8单位的地板，随机布置障碍物、食物和怪物。</p>\n<p>　　增加存活天数为关卡难度设置，天数越多，难度越大；难度以怪物数量来体现。</p>\n<h3 id=\"2-代码\"><a href=\"#2-代码\" class=\"headerlink\" title=\"2.代码\"></a>2.代码</h3><p>　　这个代码架构很不错。使用抽象层，由于怪物和玩家都是一样的移动，一样的碰撞，该部分能通过泛型T抽象出来处理。而碰撞，玩家的碰撞和怪物的碰撞又是一样的逻辑，又可以抽象处理。</p>\n<p><img src=\"/contentimg/22/1.png\" alt=\"Result pic 1\" title=\"两个抽象层函数\"></p>\n<p>　　细节的代码逻辑这里就不提了。这里简单讲讲里面一些知识点吧。</p>\n<h4 id=\"RuntimeInitializeOnLoadMethod\"><a href=\"#RuntimeInitializeOnLoadMethod\" class=\"headerlink\" title=\"RuntimeInitializeOnLoadMethod\"></a>RuntimeInitializeOnLoadMethod</h4><p>　　该特性，实际是让函数在物体在OnLoad的时候自己执行该函数。这里有篇文章<a href=\"https://www.cnblogs.com/meteoric_cry/p/7602122.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity的RuntimeInitializeOnLoadMethod属性初探</a>  简单讲。</p>\n<h4 id=\"Input-GetAxisRaw\"><a href=\"#Input-GetAxisRaw\" class=\"headerlink\" title=\"Input.GetAxisRaw\"></a>Input.GetAxisRaw</h4><p>　　Raw不经过处理的，会直接返回-1，0，1。</p>\n<p>　　Input.GetAxis则是-1~+1的范围缓慢变化。两者有区别。由于我们限制了单位移动，所以用raw的才适合。</p>\n<h4 id=\"float-Epsilon\"><a href=\"#float-Epsilon\" class=\"headerlink\" title=\"float.Epsilon\"></a>float.Epsilon</h4><p><img src=\"/contentimg/22/2.png\" alt=\"Result pic 1\" title=\"移动动画\"></p>\n<p>　　这里使用StartCoroutine来处理，防止while卡死线程。注意StartCoroutine和多线程不是同样的概念。但是可以简单理解成另外开一个线程去处理这个一帧一帧移动的动画。判断是否移动到目的的时候，不是用==，而是用float.Epsilon，避免了一些数据溢出的bug。注意,实际上会出现 double 1.0!= 1.0，所以只能会一个很小的范围来判断是否 double 1.0 ≈ 1.0。</p>\n<h4 id=\"Physics2D-Linecast\"><a href=\"#Physics2D-Linecast\" class=\"headerlink\" title=\"Physics2D.Linecast\"></a>Physics2D.Linecast</h4><p><img src=\"/contentimg/22/3.png\" alt=\"Result pic 1\" title=\"射线检测碰撞\"></p>\n<p>　　游戏中使用的是碰撞器，所以移动前可以事先检查目的单位是否存在碰撞器。但是需要注意，物体自身的碰撞器会先被射线检测到，所以需要提前屏蔽自身的碰撞器，检测后才启用。</p>\n<h4 id=\"输入检测\"><a href=\"#输入检测\" class=\"headerlink\" title=\"输入检测\"></a>输入检测</h4><p><img src=\"/contentimg/22/4.png\" alt=\"Result pic 1\" title=\"输入检测判断\"></p>\n<p>　　这里我修改了原来的代码。原来是通过平台处理，移动端使用滑动手势。我觉得不好用，还是统一成单点判断处理。通过判断点击的部位在人物的相对位置来处理。</p>\n<h4 id=\"鼠标点击转化为相对坐标\"><a href=\"#鼠标点击转化为相对坐标\" class=\"headerlink\" title=\"鼠标点击转化为相对坐标\"></a>鼠标点击转化为相对坐标</h4><blockquote>\n<p> touchEnd = Camera.main.ScreenToWorldPoint(Input.mousePosition);</p>\n</blockquote>\n<p>　　这里，其实整个游戏的坐标，是通过相机上的单位来换算统一成单位坐标的。所以可以直接使用相机的相对坐标来处理。</p>\n<h4 id=\"代码小缺陷处理\"><a href=\"#代码小缺陷处理\" class=\"headerlink\" title=\"代码小缺陷处理\"></a>代码小缺陷处理</h4><p>　　我发现，当你剩下最后1能量，刚好移动到Exit就为0时，是能加载到下一关，然后就全部不动了。因为这里缺少了判断。</p>\n<p>　　由于我使用了游戏结束后重新开始，我改的是下面这里。</p>\n<p><img src=\"/contentimg/22/5.png\" alt=\"Result pic 1\" title=\"场景重载时检查playerFoodPoints\"></p>\n<h3 id=\"3-开始制作游戏\"><a href=\"#3-开始制作游戏\" class=\"headerlink\" title=\"3.开始制作游戏\"></a>3.开始制作游戏</h3><p>　　这里比较简单，把图集拆开，制作预制体。两个步骤而已。</p>\n<h4 id=\"拆图集\"><a href=\"#拆图集\" class=\"headerlink\" title=\"拆图集\"></a>拆图集</h4><p>　　拆图集，这里需要了解一个概念：Pixels Per Unit</p>\n<p><img src=\"/contentimg/22/6.png\" alt=\"Result pic 1\" title=\"Pixels Per Unit\"></p>\n<p>　　这里我为什么设置成32？</p>\n<p>　　首先，我们看原文件大小：</p>\n<p><img src=\"/contentimg/22/7.png\" alt=\"Result pic 1\" title=\"256 x 224\"></p>\n<p>　　是指位深度？不是这样算。我们数一下图集里面的单元，共7 x 8 。</p>\n<p>　　对应：256==》8 &amp; 224 ==》 7</p>\n<p>　　刚好整除，得到32像素就是一个图片的单位，也刚好图片都是正方形大小。所以这里的Pixels Per Unit，就是指多少像素一个Unit。</p>\n<p>　　这里也有个文章介绍这个 <a href=\"http://gad.qq.com/article/detail/21059\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity UGUI 原理篇(二)：Canvas Scaler 縮放核心</a> </p>\n<p>　　其他优化部分就不记录。因为有另外分开文章记录发布优化。</p>\n<h4 id=\"制作预制体\"><a href=\"#制作预制体\" class=\"headerlink\" title=\"制作预制体\"></a>制作预制体</h4><p>　　该部分简单，就是拖拖图片而已。注意里面碰撞器是和图片岔开的，偏移一半。</p>\n<p><img src=\"/contentimg/22/8.png\" alt=\"Result pic 1\" title=\"碰撞器岔开原单位\"></p>\n<p>　　为什么要岔开，因为初始状态下，射线检测的出发点，是在左上角。这样一开始就碰到左边的物体了。所以需要岔开。增加一半单位的距离。</p>\n<h4 id=\"整合Scene\"><a href=\"#整合Scene\" class=\"headerlink\" title=\"整合Scene\"></a>整合Scene</h4><p><img src=\"/contentimg/22/9.png\" alt=\"Result pic 1\" title=\"摄像头的Size\"></p>\n<p>　　这里有疑问的，就是这个Size的值，应该设多少？</p>\n<p>　　这个Size的意义，是显示界面高度的一半，共多少个单位。这里5，得到显示界面的高度是10个单位，正好对应游戏中10x10的比例。</p>\n<p>　　为什么不是宽度？这个就得去问官方了。本问不纠结这个问题。</p>\n<p>　　为什么开头演示那里是正方形的大小，但是默认工程是长方形的？</p>\n<p>　　这个是发布时的设置。</p>\n<p><img src=\"/contentimg/22/10.png\" alt=\"Result pic 1\" title=\"发布显示大小\"></p>\n<p>　　当然，该游戏实际上不用碰撞器也行，因为单位长度都是1，实际可以用数组集合来记录处理。有点像扫雷游戏那样。具体后面分享到扫雷游戏再提这种写法。</p>"},{"title":"Unity平台预编译指令","date":"2018-10-23T05:07:59.000Z","_content":"\n　　本文记录Unity的平台预编译指令。\n\n<!-- more -->\n\n[官方文档](https://docs.unity3d.com/Manual/PlatformDependentCompilation.html) \n\n　　在脚本中，经常看到define指令，具体到底有多少指令？下面简单转载一下官方文档。\n\n<style>\ntable th:first-of-type {\n    width: 200px;\n}\n</style>\n\n\n| 定义 | 作用 | \n| ------:| :------ | \n| UNITY_EDITOR | #define指令，用于从游戏代码中调用Unity Editor脚本。 | \n| UNITY_EDITOR_WIN | Windows上编辑器代码的#define指令。 | \n| UNITY_EDITOR_OSX | Mac OS X上编辑器代码的#define指令。 | \n| UNITY_STANDALONE_OSX | #define指令，用于编译/执行专门用于Mac OS X的代码（包括Universal，PPC和Intel架构）。 | \n| UNITY_STANDALONE_WIN | #define指令，用于专门为Windows独立应用程序编译/执行代码。 | \n| UNITY_STANDALONE_LINUX | #define指令，用于专门为Linux独立应用程序编译/执行代码。 | \n| UNITY_STANDALONE | #define指令，用于编译/执行任何独立平台（Mac OS X，Windows或Linux）的代码。 | \n| UNITY_WII | #define指令，用于编译/执行Wii控制台的代码。 | \n| UNITY_IOS | #define指令，用于编译/执行iOS平台的代码。 | \n| UNITY_IPHONE | 已过时。请改用UNITY_IOS。 | \n| UNITY_ANDROID | 适用于Android平台的#define指令。 | \n| UNITY_PS4 | \t用于运行PlayStation 4代码的#define指令。 | \n| UNITY_XBOXONE | 执行Xbox One #define指令代码。 | \n| UNITY_TIZEN | Tizen平台的#define指令。 | \n| UNITY_TVOS | Apple TV平台的#define指令。 | \n| UNITY_WSA | 通用Windows平台 #define指令。此外，NETFX_CORE是在针对.NET Core编译C＃文件和使用.NET 脚本后端时定义的。 | \n| UNITY_WSA_10_0 | 通用Windows平台的#define指令。另外，在针对.NET Core编译C＃文件时定义了WINDOWS_UWP。 | \n| UNITY_WINRT | 与UNITY_WSA相同。 | \n| UNITY_WINRT_10_0 | 相当于UNITY_WSA_10_0 | \n| UNITY_WEBGL | \tWebGL #define指令。 | \n| UNITY_FACEBOOK | Facebook平台的#define指令（WebGL或Windows独立版）。 | \n| UNITY_ADS | #define指令，用于从您的游戏代码中调用Unity Ads方法。5.2及更高版本。 | \n| UNITY_ANALYTICS | 用于调用Unity Analytics的 #define指令为游戏代码方法。5.2及更高版本。 | \n| UNITY_ASSERTIONS | 断言控制进程的#define指令。 | \n\n\n　　这里插入一下MarkDown插入表格的技巧：[Markdown 表格之调整宽度技巧](https://blog.csdn.net/maxsky/article/details/54666998)\n\n![Result pic 1](/contentimg/25/1.png \"源文件\")\n\n\n还有给定版本号XYZ\n\n>  Unity以下列格式公开三个全局#define指令：UNITY_X，UNITY_X_Y和UNITY_X_Y_Z\n\n例如：Unity 5.0.1指令的示例：\n\n| 定义 | 作用 | \n| ------:| :------ | \n| UNITY_5 | 每个5.XY版本都公开了Unity 5发行版的#define指令。 | \n| UNITY_5_0 | 主要版本Unity 5.0的#define指令，在每个5.0.Z版本中公开。 | \n| UNITY_5_0_1 | Unity 5.0.1次要版本的#define指令。| \n\n\n还能以UNITY_X_Y_OR_NEWER格式来有选择地编译代码。\n\n| 定义 | 作用 | \n| ------:| :------ | \n| ENABLE_MONO | 为Mono编写后端#define脚本。 | \n| ENABLE_IL2CPP | 用于IL2CPP的脚本后端#define 。 | \n| ENABLE_DOTNET | 脚本编写后端#define for .NET。 | \n| NETFX_CORE | 在.NET上针对.NET Core类库构建脚本时定义。 | \n| NET_2_0 | 在Mono和IL2CPP上针对.NET 2.0 API兼容级别构建脚本时定义。 | \n| NET_2_0_SUBSET | 在Mono和IL2CPP上针对.NET 2.0 Subset API兼容级别构建脚本时定义。 | \n| NET_4_6 | 在Mono和IL2CPP上针对.NET 4.x API兼容级别构建脚本时定义。| \n| NET_STANDARD_2_0 | 在Mono和IL2CPP上针对.NET Standard 2.0 API兼容级别构建脚本时定义。 | \n| ENABLE_WINMD_SUPPORT | 在IL2CPP和.NET上启用Windows运行时支持时定义。有关详细信息，请参阅[Windows运行时支持](https://docs.unity3d.com/Manual/IL2CPP-WindowsRuntimeSupport.html)  。| \n\n\n","source":"_posts/25UnityPlatform_define.md","raw":"---\ntitle: Unity平台预编译指令\ndate: 2018-10-23 13:07:59\ncategories:\n  - Unity\ntags:\n  - 指令\n---\n\n　　本文记录Unity的平台预编译指令。\n\n<!-- more -->\n\n[官方文档](https://docs.unity3d.com/Manual/PlatformDependentCompilation.html) \n\n　　在脚本中，经常看到define指令，具体到底有多少指令？下面简单转载一下官方文档。\n\n<style>\ntable th:first-of-type {\n    width: 200px;\n}\n</style>\n\n\n| 定义 | 作用 | \n| ------:| :------ | \n| UNITY_EDITOR | #define指令，用于从游戏代码中调用Unity Editor脚本。 | \n| UNITY_EDITOR_WIN | Windows上编辑器代码的#define指令。 | \n| UNITY_EDITOR_OSX | Mac OS X上编辑器代码的#define指令。 | \n| UNITY_STANDALONE_OSX | #define指令，用于编译/执行专门用于Mac OS X的代码（包括Universal，PPC和Intel架构）。 | \n| UNITY_STANDALONE_WIN | #define指令，用于专门为Windows独立应用程序编译/执行代码。 | \n| UNITY_STANDALONE_LINUX | #define指令，用于专门为Linux独立应用程序编译/执行代码。 | \n| UNITY_STANDALONE | #define指令，用于编译/执行任何独立平台（Mac OS X，Windows或Linux）的代码。 | \n| UNITY_WII | #define指令，用于编译/执行Wii控制台的代码。 | \n| UNITY_IOS | #define指令，用于编译/执行iOS平台的代码。 | \n| UNITY_IPHONE | 已过时。请改用UNITY_IOS。 | \n| UNITY_ANDROID | 适用于Android平台的#define指令。 | \n| UNITY_PS4 | \t用于运行PlayStation 4代码的#define指令。 | \n| UNITY_XBOXONE | 执行Xbox One #define指令代码。 | \n| UNITY_TIZEN | Tizen平台的#define指令。 | \n| UNITY_TVOS | Apple TV平台的#define指令。 | \n| UNITY_WSA | 通用Windows平台 #define指令。此外，NETFX_CORE是在针对.NET Core编译C＃文件和使用.NET 脚本后端时定义的。 | \n| UNITY_WSA_10_0 | 通用Windows平台的#define指令。另外，在针对.NET Core编译C＃文件时定义了WINDOWS_UWP。 | \n| UNITY_WINRT | 与UNITY_WSA相同。 | \n| UNITY_WINRT_10_0 | 相当于UNITY_WSA_10_0 | \n| UNITY_WEBGL | \tWebGL #define指令。 | \n| UNITY_FACEBOOK | Facebook平台的#define指令（WebGL或Windows独立版）。 | \n| UNITY_ADS | #define指令，用于从您的游戏代码中调用Unity Ads方法。5.2及更高版本。 | \n| UNITY_ANALYTICS | 用于调用Unity Analytics的 #define指令为游戏代码方法。5.2及更高版本。 | \n| UNITY_ASSERTIONS | 断言控制进程的#define指令。 | \n\n\n　　这里插入一下MarkDown插入表格的技巧：[Markdown 表格之调整宽度技巧](https://blog.csdn.net/maxsky/article/details/54666998)\n\n![Result pic 1](/contentimg/25/1.png \"源文件\")\n\n\n还有给定版本号XYZ\n\n>  Unity以下列格式公开三个全局#define指令：UNITY_X，UNITY_X_Y和UNITY_X_Y_Z\n\n例如：Unity 5.0.1指令的示例：\n\n| 定义 | 作用 | \n| ------:| :------ | \n| UNITY_5 | 每个5.XY版本都公开了Unity 5发行版的#define指令。 | \n| UNITY_5_0 | 主要版本Unity 5.0的#define指令，在每个5.0.Z版本中公开。 | \n| UNITY_5_0_1 | Unity 5.0.1次要版本的#define指令。| \n\n\n还能以UNITY_X_Y_OR_NEWER格式来有选择地编译代码。\n\n| 定义 | 作用 | \n| ------:| :------ | \n| ENABLE_MONO | 为Mono编写后端#define脚本。 | \n| ENABLE_IL2CPP | 用于IL2CPP的脚本后端#define 。 | \n| ENABLE_DOTNET | 脚本编写后端#define for .NET。 | \n| NETFX_CORE | 在.NET上针对.NET Core类库构建脚本时定义。 | \n| NET_2_0 | 在Mono和IL2CPP上针对.NET 2.0 API兼容级别构建脚本时定义。 | \n| NET_2_0_SUBSET | 在Mono和IL2CPP上针对.NET 2.0 Subset API兼容级别构建脚本时定义。 | \n| NET_4_6 | 在Mono和IL2CPP上针对.NET 4.x API兼容级别构建脚本时定义。| \n| NET_STANDARD_2_0 | 在Mono和IL2CPP上针对.NET Standard 2.0 API兼容级别构建脚本时定义。 | \n| ENABLE_WINMD_SUPPORT | 在IL2CPP和.NET上启用Windows运行时支持时定义。有关详细信息，请参阅[Windows运行时支持](https://docs.unity3d.com/Manual/IL2CPP-WindowsRuntimeSupport.html)  。| \n\n\n","slug":"25UnityPlatform_define","published":1,"updated":"2018-10-23T05:30:01.855Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgqt4000vjo9cly8kmdwc","content":"<p>　　本文记录Unity的平台预编译指令。</p>\n<a id=\"more\"></a>\n<p><a href=\"https://docs.unity3d.com/Manual/PlatformDependentCompilation.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">官方文档</a> </p>\n<p>　　在脚本中，经常看到define指令，具体到底有多少指令？下面简单转载一下官方文档。</p>\n<style>\ntable th:first-of-type {\n    width: 200px;\n}\n</style>\n\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right\">定义</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right\">UNITY_EDITOR</td>\n<td style=\"text-align:left\">#define指令，用于从游戏代码中调用Unity Editor脚本。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_EDITOR_WIN</td>\n<td style=\"text-align:left\">Windows上编辑器代码的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_EDITOR_OSX</td>\n<td style=\"text-align:left\">Mac OS X上编辑器代码的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_STANDALONE_OSX</td>\n<td style=\"text-align:left\">#define指令，用于编译/执行专门用于Mac OS X的代码（包括Universal，PPC和Intel架构）。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_STANDALONE_WIN</td>\n<td style=\"text-align:left\">#define指令，用于专门为Windows独立应用程序编译/执行代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_STANDALONE_LINUX</td>\n<td style=\"text-align:left\">#define指令，用于专门为Linux独立应用程序编译/执行代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_STANDALONE</td>\n<td style=\"text-align:left\">#define指令，用于编译/执行任何独立平台（Mac OS X，Windows或Linux）的代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_WII</td>\n<td style=\"text-align:left\">#define指令，用于编译/执行Wii控制台的代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_IOS</td>\n<td style=\"text-align:left\">#define指令，用于编译/执行iOS平台的代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_IPHONE</td>\n<td style=\"text-align:left\">已过时。请改用UNITY_IOS。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_ANDROID</td>\n<td style=\"text-align:left\">适用于Android平台的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_PS4</td>\n<td style=\"text-align:left\">用于运行PlayStation 4代码的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_XBOXONE</td>\n<td style=\"text-align:left\">执行Xbox One #define指令代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_TIZEN</td>\n<td style=\"text-align:left\">Tizen平台的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_TVOS</td>\n<td style=\"text-align:left\">Apple TV平台的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_WSA</td>\n<td style=\"text-align:left\">通用Windows平台 #define指令。此外，NETFX_CORE是在针对.NET Core编译C＃文件和使用.NET 脚本后端时定义的。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_WSA_10_0</td>\n<td style=\"text-align:left\">通用Windows平台的#define指令。另外，在针对.NET Core编译C＃文件时定义了WINDOWS_UWP。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_WINRT</td>\n<td style=\"text-align:left\">与UNITY_WSA相同。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_WINRT_10_0</td>\n<td style=\"text-align:left\">相当于UNITY_WSA_10_0</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_WEBGL</td>\n<td style=\"text-align:left\">WebGL #define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_FACEBOOK</td>\n<td style=\"text-align:left\">Facebook平台的#define指令（WebGL或Windows独立版）。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_ADS</td>\n<td style=\"text-align:left\">#define指令，用于从您的游戏代码中调用Unity Ads方法。5.2及更高版本。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_ANALYTICS</td>\n<td style=\"text-align:left\">用于调用Unity Analytics的 #define指令为游戏代码方法。5.2及更高版本。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_ASSERTIONS</td>\n<td style=\"text-align:left\">断言控制进程的#define指令。</td>\n</tr>\n</tbody>\n</table>\n<p>　　这里插入一下MarkDown插入表格的技巧：<a href=\"https://blog.csdn.net/maxsky/article/details/54666998\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Markdown 表格之调整宽度技巧</a></p>\n<p><img src=\"/contentimg/25/1.png\" alt=\"Result pic 1\" title=\"源文件\"></p>\n<p>还有给定版本号XYZ</p>\n<blockquote>\n<p> Unity以下列格式公开三个全局#define指令：UNITY_X，UNITY_X_Y和UNITY_X_Y_Z</p>\n</blockquote>\n<p>例如：Unity 5.0.1指令的示例：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right\">定义</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right\">UNITY_5</td>\n<td style=\"text-align:left\">每个5.XY版本都公开了Unity 5发行版的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_5_0</td>\n<td style=\"text-align:left\">主要版本Unity 5.0的#define指令，在每个5.0.Z版本中公开。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_5_0_1</td>\n<td style=\"text-align:left\">Unity 5.0.1次要版本的#define指令。</td>\n</tr>\n</tbody>\n</table>\n<p>还能以UNITY_X_Y_OR_NEWER格式来有选择地编译代码。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right\">定义</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right\">ENABLE_MONO</td>\n<td style=\"text-align:left\">为Mono编写后端#define脚本。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">ENABLE_IL2CPP</td>\n<td style=\"text-align:left\">用于IL2CPP的脚本后端#define 。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">ENABLE_DOTNET</td>\n<td style=\"text-align:left\">脚本编写后端#define for .NET。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">NETFX_CORE</td>\n<td style=\"text-align:left\">在.NET上针对.NET Core类库构建脚本时定义。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">NET_2_0</td>\n<td style=\"text-align:left\">在Mono和IL2CPP上针对.NET 2.0 API兼容级别构建脚本时定义。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">NET_2_0_SUBSET</td>\n<td style=\"text-align:left\">在Mono和IL2CPP上针对.NET 2.0 Subset API兼容级别构建脚本时定义。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">NET_4_6</td>\n<td style=\"text-align:left\">在Mono和IL2CPP上针对.NET 4.x API兼容级别构建脚本时定义。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">NET_STANDARD_2_0</td>\n<td style=\"text-align:left\">在Mono和IL2CPP上针对.NET Standard 2.0 API兼容级别构建脚本时定义。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">ENABLE_WINMD_SUPPORT</td>\n<td style=\"text-align:left\">在IL2CPP和.NET上启用Windows运行时支持时定义。有关详细信息，请参阅<a href=\"https://docs.unity3d.com/Manual/IL2CPP-WindowsRuntimeSupport.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Windows运行时支持</a>  。</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<p>　　本文记录Unity的平台预编译指令。</p>","more":"<p><a href=\"https://docs.unity3d.com/Manual/PlatformDependentCompilation.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">官方文档</a> </p>\n<p>　　在脚本中，经常看到define指令，具体到底有多少指令？下面简单转载一下官方文档。</p>\n<style>\ntable th:first-of-type {\n    width: 200px;\n}\n</style>\n\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right\">定义</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right\">UNITY_EDITOR</td>\n<td style=\"text-align:left\">#define指令，用于从游戏代码中调用Unity Editor脚本。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_EDITOR_WIN</td>\n<td style=\"text-align:left\">Windows上编辑器代码的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_EDITOR_OSX</td>\n<td style=\"text-align:left\">Mac OS X上编辑器代码的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_STANDALONE_OSX</td>\n<td style=\"text-align:left\">#define指令，用于编译/执行专门用于Mac OS X的代码（包括Universal，PPC和Intel架构）。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_STANDALONE_WIN</td>\n<td style=\"text-align:left\">#define指令，用于专门为Windows独立应用程序编译/执行代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_STANDALONE_LINUX</td>\n<td style=\"text-align:left\">#define指令，用于专门为Linux独立应用程序编译/执行代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_STANDALONE</td>\n<td style=\"text-align:left\">#define指令，用于编译/执行任何独立平台（Mac OS X，Windows或Linux）的代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_WII</td>\n<td style=\"text-align:left\">#define指令，用于编译/执行Wii控制台的代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_IOS</td>\n<td style=\"text-align:left\">#define指令，用于编译/执行iOS平台的代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_IPHONE</td>\n<td style=\"text-align:left\">已过时。请改用UNITY_IOS。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_ANDROID</td>\n<td style=\"text-align:left\">适用于Android平台的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_PS4</td>\n<td style=\"text-align:left\">用于运行PlayStation 4代码的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_XBOXONE</td>\n<td style=\"text-align:left\">执行Xbox One #define指令代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_TIZEN</td>\n<td style=\"text-align:left\">Tizen平台的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_TVOS</td>\n<td style=\"text-align:left\">Apple TV平台的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_WSA</td>\n<td style=\"text-align:left\">通用Windows平台 #define指令。此外，NETFX_CORE是在针对.NET Core编译C＃文件和使用.NET 脚本后端时定义的。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_WSA_10_0</td>\n<td style=\"text-align:left\">通用Windows平台的#define指令。另外，在针对.NET Core编译C＃文件时定义了WINDOWS_UWP。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_WINRT</td>\n<td style=\"text-align:left\">与UNITY_WSA相同。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_WINRT_10_0</td>\n<td style=\"text-align:left\">相当于UNITY_WSA_10_0</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_WEBGL</td>\n<td style=\"text-align:left\">WebGL #define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_FACEBOOK</td>\n<td style=\"text-align:left\">Facebook平台的#define指令（WebGL或Windows独立版）。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_ADS</td>\n<td style=\"text-align:left\">#define指令，用于从您的游戏代码中调用Unity Ads方法。5.2及更高版本。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_ANALYTICS</td>\n<td style=\"text-align:left\">用于调用Unity Analytics的 #define指令为游戏代码方法。5.2及更高版本。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_ASSERTIONS</td>\n<td style=\"text-align:left\">断言控制进程的#define指令。</td>\n</tr>\n</tbody>\n</table>\n<p>　　这里插入一下MarkDown插入表格的技巧：<a href=\"https://blog.csdn.net/maxsky/article/details/54666998\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Markdown 表格之调整宽度技巧</a></p>\n<p><img src=\"/contentimg/25/1.png\" alt=\"Result pic 1\" title=\"源文件\"></p>\n<p>还有给定版本号XYZ</p>\n<blockquote>\n<p> Unity以下列格式公开三个全局#define指令：UNITY_X，UNITY_X_Y和UNITY_X_Y_Z</p>\n</blockquote>\n<p>例如：Unity 5.0.1指令的示例：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right\">定义</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right\">UNITY_5</td>\n<td style=\"text-align:left\">每个5.XY版本都公开了Unity 5发行版的#define指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_5_0</td>\n<td style=\"text-align:left\">主要版本Unity 5.0的#define指令，在每个5.0.Z版本中公开。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">UNITY_5_0_1</td>\n<td style=\"text-align:left\">Unity 5.0.1次要版本的#define指令。</td>\n</tr>\n</tbody>\n</table>\n<p>还能以UNITY_X_Y_OR_NEWER格式来有选择地编译代码。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right\">定义</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right\">ENABLE_MONO</td>\n<td style=\"text-align:left\">为Mono编写后端#define脚本。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">ENABLE_IL2CPP</td>\n<td style=\"text-align:left\">用于IL2CPP的脚本后端#define 。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">ENABLE_DOTNET</td>\n<td style=\"text-align:left\">脚本编写后端#define for .NET。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">NETFX_CORE</td>\n<td style=\"text-align:left\">在.NET上针对.NET Core类库构建脚本时定义。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">NET_2_0</td>\n<td style=\"text-align:left\">在Mono和IL2CPP上针对.NET 2.0 API兼容级别构建脚本时定义。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">NET_2_0_SUBSET</td>\n<td style=\"text-align:left\">在Mono和IL2CPP上针对.NET 2.0 Subset API兼容级别构建脚本时定义。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">NET_4_6</td>\n<td style=\"text-align:left\">在Mono和IL2CPP上针对.NET 4.x API兼容级别构建脚本时定义。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">NET_STANDARD_2_0</td>\n<td style=\"text-align:left\">在Mono和IL2CPP上针对.NET Standard 2.0 API兼容级别构建脚本时定义。</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">ENABLE_WINMD_SUPPORT</td>\n<td style=\"text-align:left\">在IL2CPP和.NET上启用Windows运行时支持时定义。有关详细信息，请参阅<a href=\"https://docs.unity3d.com/Manual/IL2CPP-WindowsRuntimeSupport.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Windows运行时支持</a>  。</td>\n</tr>\n</tbody>\n</table>"},{"title":"VMWare安装Linux系统和mac系统","date":"2018-10-18T16:04:59.000Z","_content":"\t\n　　本文记录如何在VM虚拟机中装Linux系统和Mac系统。全文截图解说，打开会比较慢。\n\n<!-- more -->\n\n　　开头贴一下下载链接吧，版本有点老了：\n\n[百度云盘](https://pan.baidu.com/s/1a6BF-GQ2Uwd25h8dw1WWKw)  提取码：y9y9\n\n　　系统就不提供了，可以去msdn等等地方下载。\n\n　　下面开始贴图说明安装过程：\n\n## Mac安装\n\n![Result pic 1](/contentimg/16/1/1.png \"使用unlock打补丁\")\n\n![Result pic 1](/contentimg/16/1/2.png \"VMWare出现mac的选项\")\n\n![Result pic 1](/contentimg/16/1/3.png \"开始安装\")\n\n![Result pic 1](/contentimg/16/1/4.png \"选择语言\")\n\n![Result pic 1](/contentimg/16/1/5.png \"安装初始化界面\")\n\n　　第一次装的时候，由于系统磁盘格式问题，会出问题：\n\n![Result pic 1](/contentimg/16/1/6.png \"直接选择“重新安装os x”\")\n\n![Result pic 1](/contentimg/16/1/7.png \"没显示磁盘？？？\")\n\n　　所以得返回：（当然一开始就得先搞磁盘，再来安装才对）\n\n![Result pic 1](/contentimg/16/1/8.png \"左上角退出安装\")\n\n![Result pic 1](/contentimg/16/1/9.png \"选择磁盘工具\")\n　　\n![Result pic 1](/contentimg/16/1/10.png \"格式化磁盘\")\n\n![Result pic 1](/contentimg/16/1/11.png \"格式化后出现可识别磁盘\")\n\n![Result pic 1](/contentimg/16/1/12.png \"回到安装系统界面\")\n\n![Result pic 1](/contentimg/16/1/13.png \"选择刚才的磁盘开始安装\")\n\n![Result pic 1](/contentimg/16/1/14.png \"安装开始\")\n\n![Result pic 1](/contentimg/16/1/15.png \"完成\")\n\n![Result pic 1](/contentimg/16/1/16.png \"重启，选择语言\")\n\n![Result pic 1](/contentimg/16/1/17.png \"选择时区\")\n\n\n　　注意中国在右边。\n\n![Result pic 1](/contentimg/16/1/18.png \"进入系统界面\")\n\n![Result pic 1](/contentimg/16/1/19.png \"安装VMtool\")\n\n\n　　右下角，把光驱引用的文件定位到打补丁时增加的darwin文件。具体在安装目录下能找到。\n\n![Result pic 1](/contentimg/16/1/20.png \"重新连接光驱\")\n\n![Result pic 1](/contentimg/16/1/21.png \"选择安装位置\")\n\n![Result pic 1](/contentimg/16/1/22.png \"完成安装\")\n\n![Result pic 1](/contentimg/16/1/23.png \"重启\")\n\n![Result pic 1](/contentimg/16/1/24.png \"开始使用\")\n\n\n## CentOS安装\n\n　　Linux的安装比较无趣。步骤也简单\n\n![Result pic 1](/contentimg/16/2/1.png \"VM选择系统\")\n\n![Result pic 1](/contentimg/16/2/2.png \"选择CentOS系统\")\n\n![Result pic 1](/contentimg/16/2/3.png \"开始安装\")\n\n![Result pic 1](/contentimg/16/2/4.png \"磁盘检查\")\n\n![Result pic 1](/contentimg/16/2/5.png \"选择语言\")\n\n![Result pic 1](/contentimg/16/2/6.png \"设置\")\n\n\n　　这里得选择安装位置，才能下一步。\n\n![Result pic 1](/contentimg/16/2/7.png \"设置密码\")\n\n![Result pic 1](/contentimg/16/2/8.png \"设置账户\")\n\n![Result pic 1](/contentimg/16/2/9.png \"完成安装\")\n\n![Result pic 1](/contentimg/16/2/10.png \"开始使用\")\n\n","source":"_posts/16VM_macandlinux.md","raw":"---\ntitle: VMWare安装Linux系统和mac系统\ndate: 2018-10-19 00:04:59\ncategories:\n  - 虚拟机\ntags:\n  - VMWare\n  - Linux\n  - Mac\n---\n\t\n　　本文记录如何在VM虚拟机中装Linux系统和Mac系统。全文截图解说，打开会比较慢。\n\n<!-- more -->\n\n　　开头贴一下下载链接吧，版本有点老了：\n\n[百度云盘](https://pan.baidu.com/s/1a6BF-GQ2Uwd25h8dw1WWKw)  提取码：y9y9\n\n　　系统就不提供了，可以去msdn等等地方下载。\n\n　　下面开始贴图说明安装过程：\n\n## Mac安装\n\n![Result pic 1](/contentimg/16/1/1.png \"使用unlock打补丁\")\n\n![Result pic 1](/contentimg/16/1/2.png \"VMWare出现mac的选项\")\n\n![Result pic 1](/contentimg/16/1/3.png \"开始安装\")\n\n![Result pic 1](/contentimg/16/1/4.png \"选择语言\")\n\n![Result pic 1](/contentimg/16/1/5.png \"安装初始化界面\")\n\n　　第一次装的时候，由于系统磁盘格式问题，会出问题：\n\n![Result pic 1](/contentimg/16/1/6.png \"直接选择“重新安装os x”\")\n\n![Result pic 1](/contentimg/16/1/7.png \"没显示磁盘？？？\")\n\n　　所以得返回：（当然一开始就得先搞磁盘，再来安装才对）\n\n![Result pic 1](/contentimg/16/1/8.png \"左上角退出安装\")\n\n![Result pic 1](/contentimg/16/1/9.png \"选择磁盘工具\")\n　　\n![Result pic 1](/contentimg/16/1/10.png \"格式化磁盘\")\n\n![Result pic 1](/contentimg/16/1/11.png \"格式化后出现可识别磁盘\")\n\n![Result pic 1](/contentimg/16/1/12.png \"回到安装系统界面\")\n\n![Result pic 1](/contentimg/16/1/13.png \"选择刚才的磁盘开始安装\")\n\n![Result pic 1](/contentimg/16/1/14.png \"安装开始\")\n\n![Result pic 1](/contentimg/16/1/15.png \"完成\")\n\n![Result pic 1](/contentimg/16/1/16.png \"重启，选择语言\")\n\n![Result pic 1](/contentimg/16/1/17.png \"选择时区\")\n\n\n　　注意中国在右边。\n\n![Result pic 1](/contentimg/16/1/18.png \"进入系统界面\")\n\n![Result pic 1](/contentimg/16/1/19.png \"安装VMtool\")\n\n\n　　右下角，把光驱引用的文件定位到打补丁时增加的darwin文件。具体在安装目录下能找到。\n\n![Result pic 1](/contentimg/16/1/20.png \"重新连接光驱\")\n\n![Result pic 1](/contentimg/16/1/21.png \"选择安装位置\")\n\n![Result pic 1](/contentimg/16/1/22.png \"完成安装\")\n\n![Result pic 1](/contentimg/16/1/23.png \"重启\")\n\n![Result pic 1](/contentimg/16/1/24.png \"开始使用\")\n\n\n## CentOS安装\n\n　　Linux的安装比较无趣。步骤也简单\n\n![Result pic 1](/contentimg/16/2/1.png \"VM选择系统\")\n\n![Result pic 1](/contentimg/16/2/2.png \"选择CentOS系统\")\n\n![Result pic 1](/contentimg/16/2/3.png \"开始安装\")\n\n![Result pic 1](/contentimg/16/2/4.png \"磁盘检查\")\n\n![Result pic 1](/contentimg/16/2/5.png \"选择语言\")\n\n![Result pic 1](/contentimg/16/2/6.png \"设置\")\n\n\n　　这里得选择安装位置，才能下一步。\n\n![Result pic 1](/contentimg/16/2/7.png \"设置密码\")\n\n![Result pic 1](/contentimg/16/2/8.png \"设置账户\")\n\n![Result pic 1](/contentimg/16/2/9.png \"完成安装\")\n\n![Result pic 1](/contentimg/16/2/10.png \"开始使用\")\n\n","slug":"16VM_macandlinux","published":1,"updated":"2018-10-19T08:42:20.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgr1h002ejo9cu7fd05bl","content":"<p>　　本文记录如何在VM虚拟机中装Linux系统和Mac系统。全文截图解说，打开会比较慢。</p>\n<a id=\"more\"></a>\n<p>　　开头贴一下下载链接吧，版本有点老了：</p>\n<p><a href=\"https://pan.baidu.com/s/1a6BF-GQ2Uwd25h8dw1WWKw\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">百度云盘</a>  提取码：y9y9</p>\n<p>　　系统就不提供了，可以去msdn等等地方下载。</p>\n<p>　　下面开始贴图说明安装过程：</p>\n<h2 id=\"Mac安装\"><a href=\"#Mac安装\" class=\"headerlink\" title=\"Mac安装\"></a>Mac安装</h2><p><img src=\"/contentimg/16/1/1.png\" alt=\"Result pic 1\" title=\"使用unlock打补丁\"></p>\n<p><img src=\"/contentimg/16/1/2.png\" alt=\"Result pic 1\" title=\"VMWare出现mac的选项\"></p>\n<p><img src=\"/contentimg/16/1/3.png\" alt=\"Result pic 1\" title=\"开始安装\"></p>\n<p><img src=\"/contentimg/16/1/4.png\" alt=\"Result pic 1\" title=\"选择语言\"></p>\n<p><img src=\"/contentimg/16/1/5.png\" alt=\"Result pic 1\" title=\"安装初始化界面\"></p>\n<p>　　第一次装的时候，由于系统磁盘格式问题，会出问题：</p>\n<p><img src=\"/contentimg/16/1/6.png\" alt=\"Result pic 1\" title=\"直接选择“重新安装os x”\"></p>\n<p><img src=\"/contentimg/16/1/7.png\" alt=\"Result pic 1\" title=\"没显示磁盘？？？\"></p>\n<p>　　所以得返回：（当然一开始就得先搞磁盘，再来安装才对）</p>\n<p><img src=\"/contentimg/16/1/8.png\" alt=\"Result pic 1\" title=\"左上角退出安装\"></p>\n<p><img src=\"/contentimg/16/1/9.png\" alt=\"Result pic 1\" title=\"选择磁盘工具\"><br>　　<br><img src=\"/contentimg/16/1/10.png\" alt=\"Result pic 1\" title=\"格式化磁盘\"></p>\n<p><img src=\"/contentimg/16/1/11.png\" alt=\"Result pic 1\" title=\"格式化后出现可识别磁盘\"></p>\n<p><img src=\"/contentimg/16/1/12.png\" alt=\"Result pic 1\" title=\"回到安装系统界面\"></p>\n<p><img src=\"/contentimg/16/1/13.png\" alt=\"Result pic 1\" title=\"选择刚才的磁盘开始安装\"></p>\n<p><img src=\"/contentimg/16/1/14.png\" alt=\"Result pic 1\" title=\"安装开始\"></p>\n<p><img src=\"/contentimg/16/1/15.png\" alt=\"Result pic 1\" title=\"完成\"></p>\n<p><img src=\"/contentimg/16/1/16.png\" alt=\"Result pic 1\" title=\"重启，选择语言\"></p>\n<p><img src=\"/contentimg/16/1/17.png\" alt=\"Result pic 1\" title=\"选择时区\"></p>\n<p>　　注意中国在右边。</p>\n<p><img src=\"/contentimg/16/1/18.png\" alt=\"Result pic 1\" title=\"进入系统界面\"></p>\n<p><img src=\"/contentimg/16/1/19.png\" alt=\"Result pic 1\" title=\"安装VMtool\"></p>\n<p>　　右下角，把光驱引用的文件定位到打补丁时增加的darwin文件。具体在安装目录下能找到。</p>\n<p><img src=\"/contentimg/16/1/20.png\" alt=\"Result pic 1\" title=\"重新连接光驱\"></p>\n<p><img src=\"/contentimg/16/1/21.png\" alt=\"Result pic 1\" title=\"选择安装位置\"></p>\n<p><img src=\"/contentimg/16/1/22.png\" alt=\"Result pic 1\" title=\"完成安装\"></p>\n<p><img src=\"/contentimg/16/1/23.png\" alt=\"Result pic 1\" title=\"重启\"></p>\n<p><img src=\"/contentimg/16/1/24.png\" alt=\"Result pic 1\" title=\"开始使用\"></p>\n<h2 id=\"CentOS安装\"><a href=\"#CentOS安装\" class=\"headerlink\" title=\"CentOS安装\"></a>CentOS安装</h2><p>　　Linux的安装比较无趣。步骤也简单</p>\n<p><img src=\"/contentimg/16/2/1.png\" alt=\"Result pic 1\" title=\"VM选择系统\"></p>\n<p><img src=\"/contentimg/16/2/2.png\" alt=\"Result pic 1\" title=\"选择CentOS系统\"></p>\n<p><img src=\"/contentimg/16/2/3.png\" alt=\"Result pic 1\" title=\"开始安装\"></p>\n<p><img src=\"/contentimg/16/2/4.png\" alt=\"Result pic 1\" title=\"磁盘检查\"></p>\n<p><img src=\"/contentimg/16/2/5.png\" alt=\"Result pic 1\" title=\"选择语言\"></p>\n<p><img src=\"/contentimg/16/2/6.png\" alt=\"Result pic 1\" title=\"设置\"></p>\n<p>　　这里得选择安装位置，才能下一步。</p>\n<p><img src=\"/contentimg/16/2/7.png\" alt=\"Result pic 1\" title=\"设置密码\"></p>\n<p><img src=\"/contentimg/16/2/8.png\" alt=\"Result pic 1\" title=\"设置账户\"></p>\n<p><img src=\"/contentimg/16/2/9.png\" alt=\"Result pic 1\" title=\"完成安装\"></p>\n<p><img src=\"/contentimg/16/2/10.png\" alt=\"Result pic 1\" title=\"开始使用\"></p>\n","site":{"data":{}},"excerpt":"<p>　　本文记录如何在VM虚拟机中装Linux系统和Mac系统。全文截图解说，打开会比较慢。</p>","more":"<p>　　开头贴一下下载链接吧，版本有点老了：</p>\n<p><a href=\"https://pan.baidu.com/s/1a6BF-GQ2Uwd25h8dw1WWKw\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">百度云盘</a>  提取码：y9y9</p>\n<p>　　系统就不提供了，可以去msdn等等地方下载。</p>\n<p>　　下面开始贴图说明安装过程：</p>\n<h2 id=\"Mac安装\"><a href=\"#Mac安装\" class=\"headerlink\" title=\"Mac安装\"></a>Mac安装</h2><p><img src=\"/contentimg/16/1/1.png\" alt=\"Result pic 1\" title=\"使用unlock打补丁\"></p>\n<p><img src=\"/contentimg/16/1/2.png\" alt=\"Result pic 1\" title=\"VMWare出现mac的选项\"></p>\n<p><img src=\"/contentimg/16/1/3.png\" alt=\"Result pic 1\" title=\"开始安装\"></p>\n<p><img src=\"/contentimg/16/1/4.png\" alt=\"Result pic 1\" title=\"选择语言\"></p>\n<p><img src=\"/contentimg/16/1/5.png\" alt=\"Result pic 1\" title=\"安装初始化界面\"></p>\n<p>　　第一次装的时候，由于系统磁盘格式问题，会出问题：</p>\n<p><img src=\"/contentimg/16/1/6.png\" alt=\"Result pic 1\" title=\"直接选择“重新安装os x”\"></p>\n<p><img src=\"/contentimg/16/1/7.png\" alt=\"Result pic 1\" title=\"没显示磁盘？？？\"></p>\n<p>　　所以得返回：（当然一开始就得先搞磁盘，再来安装才对）</p>\n<p><img src=\"/contentimg/16/1/8.png\" alt=\"Result pic 1\" title=\"左上角退出安装\"></p>\n<p><img src=\"/contentimg/16/1/9.png\" alt=\"Result pic 1\" title=\"选择磁盘工具\"><br>　　<br><img src=\"/contentimg/16/1/10.png\" alt=\"Result pic 1\" title=\"格式化磁盘\"></p>\n<p><img src=\"/contentimg/16/1/11.png\" alt=\"Result pic 1\" title=\"格式化后出现可识别磁盘\"></p>\n<p><img src=\"/contentimg/16/1/12.png\" alt=\"Result pic 1\" title=\"回到安装系统界面\"></p>\n<p><img src=\"/contentimg/16/1/13.png\" alt=\"Result pic 1\" title=\"选择刚才的磁盘开始安装\"></p>\n<p><img src=\"/contentimg/16/1/14.png\" alt=\"Result pic 1\" title=\"安装开始\"></p>\n<p><img src=\"/contentimg/16/1/15.png\" alt=\"Result pic 1\" title=\"完成\"></p>\n<p><img src=\"/contentimg/16/1/16.png\" alt=\"Result pic 1\" title=\"重启，选择语言\"></p>\n<p><img src=\"/contentimg/16/1/17.png\" alt=\"Result pic 1\" title=\"选择时区\"></p>\n<p>　　注意中国在右边。</p>\n<p><img src=\"/contentimg/16/1/18.png\" alt=\"Result pic 1\" title=\"进入系统界面\"></p>\n<p><img src=\"/contentimg/16/1/19.png\" alt=\"Result pic 1\" title=\"安装VMtool\"></p>\n<p>　　右下角，把光驱引用的文件定位到打补丁时增加的darwin文件。具体在安装目录下能找到。</p>\n<p><img src=\"/contentimg/16/1/20.png\" alt=\"Result pic 1\" title=\"重新连接光驱\"></p>\n<p><img src=\"/contentimg/16/1/21.png\" alt=\"Result pic 1\" title=\"选择安装位置\"></p>\n<p><img src=\"/contentimg/16/1/22.png\" alt=\"Result pic 1\" title=\"完成安装\"></p>\n<p><img src=\"/contentimg/16/1/23.png\" alt=\"Result pic 1\" title=\"重启\"></p>\n<p><img src=\"/contentimg/16/1/24.png\" alt=\"Result pic 1\" title=\"开始使用\"></p>\n<h2 id=\"CentOS安装\"><a href=\"#CentOS安装\" class=\"headerlink\" title=\"CentOS安装\"></a>CentOS安装</h2><p>　　Linux的安装比较无趣。步骤也简单</p>\n<p><img src=\"/contentimg/16/2/1.png\" alt=\"Result pic 1\" title=\"VM选择系统\"></p>\n<p><img src=\"/contentimg/16/2/2.png\" alt=\"Result pic 1\" title=\"选择CentOS系统\"></p>\n<p><img src=\"/contentimg/16/2/3.png\" alt=\"Result pic 1\" title=\"开始安装\"></p>\n<p><img src=\"/contentimg/16/2/4.png\" alt=\"Result pic 1\" title=\"磁盘检查\"></p>\n<p><img src=\"/contentimg/16/2/5.png\" alt=\"Result pic 1\" title=\"选择语言\"></p>\n<p><img src=\"/contentimg/16/2/6.png\" alt=\"Result pic 1\" title=\"设置\"></p>\n<p>　　这里得选择安装位置，才能下一步。</p>\n<p><img src=\"/contentimg/16/2/7.png\" alt=\"Result pic 1\" title=\"设置密码\"></p>\n<p><img src=\"/contentimg/16/2/8.png\" alt=\"Result pic 1\" title=\"设置账户\"></p>\n<p><img src=\"/contentimg/16/2/9.png\" alt=\"Result pic 1\" title=\"完成安装\"></p>\n<p><img src=\"/contentimg/16/2/10.png\" alt=\"Result pic 1\" title=\"开始使用\"></p>"},{"title":"Unity异常处理---灯光渲染抛异常","date":"2018-10-25T02:07:59.000Z","_content":"\n　　本文记录怎么处理“Unkown Mixed bake mode in LightModeUtil.MapSettings() UnityEditor.DockArea”异常。\n\n<!-- more -->\n\n![Result pic 1](/contentimg/29/2.png \"报错情况\")\n\n　　当时是修改灯光渲染的时候抛的异常。没头绪，后来找到一篇[文章](https://blog.csdn.net/yuhan61659/article/details/80337839) 介绍这个。\n\n\n![Result pic 1](/contentimg/29/1.png \"取消勾选\")\n\n\n　　老版本Unity上没这个问题，我是在2017上遇到的。\n\n","source":"_posts/29Unity_error_1.md","raw":"---\ntitle: Unity异常处理---灯光渲染抛异常\ndate: 2018-10-25 10:07:59\ncategories:\n  - 异常处理\ntags:\n  - unity\n  - 异常处理\n---\n\n　　本文记录怎么处理“Unkown Mixed bake mode in LightModeUtil.MapSettings() UnityEditor.DockArea”异常。\n\n<!-- more -->\n\n![Result pic 1](/contentimg/29/2.png \"报错情况\")\n\n　　当时是修改灯光渲染的时候抛的异常。没头绪，后来找到一篇[文章](https://blog.csdn.net/yuhan61659/article/details/80337839) 介绍这个。\n\n\n![Result pic 1](/contentimg/29/1.png \"取消勾选\")\n\n\n　　老版本Unity上没这个问题，我是在2017上遇到的。\n\n","slug":"29Unity_error_1","published":1,"updated":"2018-10-25T08:42:14.758Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgr1i002fjo9cx833q4je","content":"<p>　　本文记录怎么处理“Unkown Mixed bake mode in LightModeUtil.MapSettings() UnityEditor.DockArea”异常。</p>\n<a id=\"more\"></a>\n<p><img src=\"/contentimg/29/2.png\" alt=\"Result pic 1\" title=\"报错情况\"></p>\n<p>　　当时是修改灯光渲染的时候抛的异常。没头绪，后来找到一篇<a href=\"https://blog.csdn.net/yuhan61659/article/details/80337839\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">文章</a> 介绍这个。</p>\n<p><img src=\"/contentimg/29/1.png\" alt=\"Result pic 1\" title=\"取消勾选\"></p>\n<p>　　老版本Unity上没这个问题，我是在2017上遇到的。</p>\n","site":{"data":{}},"excerpt":"<p>　　本文记录怎么处理“Unkown Mixed bake mode in LightModeUtil.MapSettings() UnityEditor.DockArea”异常。</p>","more":"<p><img src=\"/contentimg/29/2.png\" alt=\"Result pic 1\" title=\"报错情况\"></p>\n<p>　　当时是修改灯光渲染的时候抛的异常。没头绪，后来找到一篇<a href=\"https://blog.csdn.net/yuhan61659/article/details/80337839\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">文章</a> 介绍这个。</p>\n<p><img src=\"/contentimg/29/1.png\" alt=\"Result pic 1\" title=\"取消勾选\"></p>\n<p>　　老版本Unity上没这个问题，我是在2017上遇到的。</p>"},{"title":"http接口调试---天气API获取","date":"2018-10-24T01:20:59.000Z","_content":"\n　　本文通过天气API的获取，记录分享http接口该怎么看文档，怎么调试使用。\n\n<!-- more -->\n\n## 数据来源\n\n### 国内接口\n\n[中国天气网](http://www.weather.com.cn/)\n\n　　当然还有其他超级多的接口。具体这里有篇文章也在介绍总结：[免费、稳定的天气预报API](https://www.jianshu.com/p/e3e04cf3fc0f)\n\n　　这里还得记录一下接口中的地区编号怎么查询。幸好git上有人整理分享了这个：[地区编码整理](https://github.com/seeways/PythonDemo/blob/master/other_tools/weather_city.json)\n\n\n### 国外接口\n\n[openweathermap](https://openweathermap.org/api)\n\n　　同样得有一个查询地区编号的地方，这个在示例里面有：[地区编码查询](http://bulk.openweathermap.org/sample/) 。下载下来后，解压用文本格式打开，Ctrl F就能找到想要的地区的编号：\n\n![Result pic 1](/contentimg/27/1.png \"查找地区编号\")\n\n\n\n## http接口调试工具---Fiddler\n\n　　有了接口规范和调试地址，现在就可以开始调试了。下面以Fiddler的调试为例，简单记录怎么看文档，怎么使用该工具获取到数据。\n\n### 获取key\n\n　　api接口使用，大部分是需要先注册账号，购买（有免费的，但是得点击“购买”，以获取key）。绝大部分都会要求key，有的key是附带在get模式下，附带在http连接最后面；有的是post模式下，作为一个key附加。\n\n　　这个key的作用，就是标记跟踪使用。服务端保存一个key，用户端必须也有对应的key，才给权限操作。\n\n　　类似使用场景有：用户登录后的定时权限检验（每次登录会刷新key，在这段时间内操作，必须有这个key才有权限操作，通常30s服务端该key会变化，防止用户穿过登录来直接操作），这里为什么不用用户名+密码？因为密码必须要加密，这样每个接口都要进行密码的解密验证，性能消耗大；而用加密后的字符串直接比对的话，存在一种情况，当用户登录后，该连接信息被窃取（网络截获），这样就可以直接跳过登录，使用该字符串当key直接超权限操作了；同时下线长时间离线无操作客户端的功能，也是用到该key，长时间离线下，应该无权限操作，因为key和服务端上的不匹配，必须登录获取最新key才能操作。\n\n　　下面直接使用国外那个接口的来记录：\n\n　　注册登录后（这里可能需要VPN），可以去申请自己的key。这里使用默认分配的key来演示。\n\n![Result pic 1](/contentimg/27/2.png \"找到key\")\n\n\n　　记录保存该key。然后点击API导航。\n\n![Result pic 1](/contentimg/27/3.png \"回到API界面\")\n\n\n### 看文档\n\n　　这里我选中Current weather data来记录：\n\n![Result pic 1](/contentimg/27/4.png \"Current weather data\")\n\n\n　　文档已经提示了接口格式，但是发现直接这样使用是报错的，提示的401。401错误就是提示未登录，想想前面提到了key，但是这里怎么就没使用？\n\n![Result pic 1](/contentimg/27/5.png \"接口报错401\")\n\n\n　　打开一下示例的链接（Example）：\n\n![Result pic 1](/contentimg/27/6.png \"示例\")\n\n\n　　发现是需要附带&appid= XXXXX。\n\n　　这种就是get模式下key的附带方式，放在最后，前提是需要找到这个key对应的“appid”这个字符串是叫什么，不同接口使用的字符串不同。\n\n### 使用工具预调试\n\n　　下面就使用Fiddler来记录，做网页的朋友应该用的较多是postman。\n\n![Result pic 1](/contentimg/27/7.png \"Fiddler\")\n\n\n　　该工具作用很大，能捕捉电脑上的全部http通讯。也能作为http调试工具使用。\n\n　　这里简单介绍作为调试工具使用的记录：\n\n　　上面分析得到的http链接，其实在空网页上打开已经能获取到data了，但是一般情况会乱码；而且，如果是post模式，就不会直接显示在网页上，找起来很麻烦，所以一般都是直接用调试工具。使用工具，主要原因也是因为这些接口不单单是一个http字符串来的，还是附带好多其他设置项：\n\n　　这里使用广东省，查上面文档，中间是有空格的，需要转码。\n\n![Result pic 1](/contentimg/27/8.png \"填入地址\")\n\n\n　　首先需要知道是get还是post，然后就是HTTP规范1.1。get模式直接复制http串进去就行了，直接回车或者Execute。就可以看到左边的“Result为200”的串，双击就能看到结果了。而post模式下，就需要把附加key全部复制进去下面那个框。\n\n![Result pic 1](/contentimg/27/9.png \"收到结果\")\n\n\n　　调试工具已经识别出来返回的是json，自动帮我们解析了，当然也可以看原文本，选择“TextView”。旁边那些Headers等等也有蛮多有用信息可以看的，如果出错的话，就需要关注这些信息了。\n\n　　http接口，一般要注意编码，还有http串里面一些特殊字符串，http在开发中使用超级多。这里只是简单提及。Fiddler的功能实际也是超级多的，有兴趣的可以多多摸索，该工具免费，同时该工具的同家族中也有个免费的反编译工具，也有收费的界面工具（实际某度可以搜到老版本的破解），做界面的朋友可以关注一下。做客户端的朋友们，可能有人会发现Win10更新到某版本后，IE内核那个dll变化比较大，导致自定义浏览器的一些网页会出问题，Fiddler解决了该问题，目前还没找到Fiddler怎么处理的，只知道打开Fiddler捕捉时，那些网页就正常，关掉后就恢复原来的异常状态了。老外在做浏览器这方面还是很牛逼的，不得不佩服。\n\n　　结尾附加一下中国天气网的api查询接口示例，不用key：\n\n![Result pic 1](/contentimg/27/10.png \"中国天气网api查询结果\")\n\n\n　　后面我再另外设文章分享怎么用C#写http接口服务端，Restful的普通json模式，以及table提交模式。当然还有使用xml格式的soap。\n","source":"_posts/27getweatherapi.md","raw":"---\ntitle: http接口调试---天气API获取\ndate: 2018-10-24 9:20:59\ncategories:\n  - 联调\ntags:\n  - 接口调试\n  - API使用\n  - http调试\n---\n\n　　本文通过天气API的获取，记录分享http接口该怎么看文档，怎么调试使用。\n\n<!-- more -->\n\n## 数据来源\n\n### 国内接口\n\n[中国天气网](http://www.weather.com.cn/)\n\n　　当然还有其他超级多的接口。具体这里有篇文章也在介绍总结：[免费、稳定的天气预报API](https://www.jianshu.com/p/e3e04cf3fc0f)\n\n　　这里还得记录一下接口中的地区编号怎么查询。幸好git上有人整理分享了这个：[地区编码整理](https://github.com/seeways/PythonDemo/blob/master/other_tools/weather_city.json)\n\n\n### 国外接口\n\n[openweathermap](https://openweathermap.org/api)\n\n　　同样得有一个查询地区编号的地方，这个在示例里面有：[地区编码查询](http://bulk.openweathermap.org/sample/) 。下载下来后，解压用文本格式打开，Ctrl F就能找到想要的地区的编号：\n\n![Result pic 1](/contentimg/27/1.png \"查找地区编号\")\n\n\n\n## http接口调试工具---Fiddler\n\n　　有了接口规范和调试地址，现在就可以开始调试了。下面以Fiddler的调试为例，简单记录怎么看文档，怎么使用该工具获取到数据。\n\n### 获取key\n\n　　api接口使用，大部分是需要先注册账号，购买（有免费的，但是得点击“购买”，以获取key）。绝大部分都会要求key，有的key是附带在get模式下，附带在http连接最后面；有的是post模式下，作为一个key附加。\n\n　　这个key的作用，就是标记跟踪使用。服务端保存一个key，用户端必须也有对应的key，才给权限操作。\n\n　　类似使用场景有：用户登录后的定时权限检验（每次登录会刷新key，在这段时间内操作，必须有这个key才有权限操作，通常30s服务端该key会变化，防止用户穿过登录来直接操作），这里为什么不用用户名+密码？因为密码必须要加密，这样每个接口都要进行密码的解密验证，性能消耗大；而用加密后的字符串直接比对的话，存在一种情况，当用户登录后，该连接信息被窃取（网络截获），这样就可以直接跳过登录，使用该字符串当key直接超权限操作了；同时下线长时间离线无操作客户端的功能，也是用到该key，长时间离线下，应该无权限操作，因为key和服务端上的不匹配，必须登录获取最新key才能操作。\n\n　　下面直接使用国外那个接口的来记录：\n\n　　注册登录后（这里可能需要VPN），可以去申请自己的key。这里使用默认分配的key来演示。\n\n![Result pic 1](/contentimg/27/2.png \"找到key\")\n\n\n　　记录保存该key。然后点击API导航。\n\n![Result pic 1](/contentimg/27/3.png \"回到API界面\")\n\n\n### 看文档\n\n　　这里我选中Current weather data来记录：\n\n![Result pic 1](/contentimg/27/4.png \"Current weather data\")\n\n\n　　文档已经提示了接口格式，但是发现直接这样使用是报错的，提示的401。401错误就是提示未登录，想想前面提到了key，但是这里怎么就没使用？\n\n![Result pic 1](/contentimg/27/5.png \"接口报错401\")\n\n\n　　打开一下示例的链接（Example）：\n\n![Result pic 1](/contentimg/27/6.png \"示例\")\n\n\n　　发现是需要附带&appid= XXXXX。\n\n　　这种就是get模式下key的附带方式，放在最后，前提是需要找到这个key对应的“appid”这个字符串是叫什么，不同接口使用的字符串不同。\n\n### 使用工具预调试\n\n　　下面就使用Fiddler来记录，做网页的朋友应该用的较多是postman。\n\n![Result pic 1](/contentimg/27/7.png \"Fiddler\")\n\n\n　　该工具作用很大，能捕捉电脑上的全部http通讯。也能作为http调试工具使用。\n\n　　这里简单介绍作为调试工具使用的记录：\n\n　　上面分析得到的http链接，其实在空网页上打开已经能获取到data了，但是一般情况会乱码；而且，如果是post模式，就不会直接显示在网页上，找起来很麻烦，所以一般都是直接用调试工具。使用工具，主要原因也是因为这些接口不单单是一个http字符串来的，还是附带好多其他设置项：\n\n　　这里使用广东省，查上面文档，中间是有空格的，需要转码。\n\n![Result pic 1](/contentimg/27/8.png \"填入地址\")\n\n\n　　首先需要知道是get还是post，然后就是HTTP规范1.1。get模式直接复制http串进去就行了，直接回车或者Execute。就可以看到左边的“Result为200”的串，双击就能看到结果了。而post模式下，就需要把附加key全部复制进去下面那个框。\n\n![Result pic 1](/contentimg/27/9.png \"收到结果\")\n\n\n　　调试工具已经识别出来返回的是json，自动帮我们解析了，当然也可以看原文本，选择“TextView”。旁边那些Headers等等也有蛮多有用信息可以看的，如果出错的话，就需要关注这些信息了。\n\n　　http接口，一般要注意编码，还有http串里面一些特殊字符串，http在开发中使用超级多。这里只是简单提及。Fiddler的功能实际也是超级多的，有兴趣的可以多多摸索，该工具免费，同时该工具的同家族中也有个免费的反编译工具，也有收费的界面工具（实际某度可以搜到老版本的破解），做界面的朋友可以关注一下。做客户端的朋友们，可能有人会发现Win10更新到某版本后，IE内核那个dll变化比较大，导致自定义浏览器的一些网页会出问题，Fiddler解决了该问题，目前还没找到Fiddler怎么处理的，只知道打开Fiddler捕捉时，那些网页就正常，关掉后就恢复原来的异常状态了。老外在做浏览器这方面还是很牛逼的，不得不佩服。\n\n　　结尾附加一下中国天气网的api查询接口示例，不用key：\n\n![Result pic 1](/contentimg/27/10.png \"中国天气网api查询结果\")\n\n\n　　后面我再另外设文章分享怎么用C#写http接口服务端，Restful的普通json模式，以及table提交模式。当然还有使用xml格式的soap。\n","slug":"27getweatherapi","published":1,"updated":"2018-10-24T02:11:54.948Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgr1l002ijo9cypgxavtt","content":"<p>　　本文通过天气API的获取，记录分享http接口该怎么看文档，怎么调试使用。</p>\n<a id=\"more\"></a>\n<h2 id=\"数据来源\"><a href=\"#数据来源\" class=\"headerlink\" title=\"数据来源\"></a>数据来源</h2><h3 id=\"国内接口\"><a href=\"#国内接口\" class=\"headerlink\" title=\"国内接口\"></a>国内接口</h3><p><a href=\"http://www.weather.com.cn/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">中国天气网</a></p>\n<p>　　当然还有其他超级多的接口。具体这里有篇文章也在介绍总结：<a href=\"https://www.jianshu.com/p/e3e04cf3fc0f\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">免费、稳定的天气预报API</a></p>\n<p>　　这里还得记录一下接口中的地区编号怎么查询。幸好git上有人整理分享了这个：<a href=\"https://github.com/seeways/PythonDemo/blob/master/other_tools/weather_city.json\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">地区编码整理</a></p>\n<h3 id=\"国外接口\"><a href=\"#国外接口\" class=\"headerlink\" title=\"国外接口\"></a>国外接口</h3><p><a href=\"https://openweathermap.org/api\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">openweathermap</a></p>\n<p>　　同样得有一个查询地区编号的地方，这个在示例里面有：<a href=\"http://bulk.openweathermap.org/sample/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">地区编码查询</a> 。下载下来后，解压用文本格式打开，Ctrl F就能找到想要的地区的编号：</p>\n<p><img src=\"/contentimg/27/1.png\" alt=\"Result pic 1\" title=\"查找地区编号\"></p>\n<h2 id=\"http接口调试工具—Fiddler\"><a href=\"#http接口调试工具—Fiddler\" class=\"headerlink\" title=\"http接口调试工具—Fiddler\"></a>http接口调试工具—Fiddler</h2><p>　　有了接口规范和调试地址，现在就可以开始调试了。下面以Fiddler的调试为例，简单记录怎么看文档，怎么使用该工具获取到数据。</p>\n<h3 id=\"获取key\"><a href=\"#获取key\" class=\"headerlink\" title=\"获取key\"></a>获取key</h3><p>　　api接口使用，大部分是需要先注册账号，购买（有免费的，但是得点击“购买”，以获取key）。绝大部分都会要求key，有的key是附带在get模式下，附带在http连接最后面；有的是post模式下，作为一个key附加。</p>\n<p>　　这个key的作用，就是标记跟踪使用。服务端保存一个key，用户端必须也有对应的key，才给权限操作。</p>\n<p>　　类似使用场景有：用户登录后的定时权限检验（每次登录会刷新key，在这段时间内操作，必须有这个key才有权限操作，通常30s服务端该key会变化，防止用户穿过登录来直接操作），这里为什么不用用户名+密码？因为密码必须要加密，这样每个接口都要进行密码的解密验证，性能消耗大；而用加密后的字符串直接比对的话，存在一种情况，当用户登录后，该连接信息被窃取（网络截获），这样就可以直接跳过登录，使用该字符串当key直接超权限操作了；同时下线长时间离线无操作客户端的功能，也是用到该key，长时间离线下，应该无权限操作，因为key和服务端上的不匹配，必须登录获取最新key才能操作。</p>\n<p>　　下面直接使用国外那个接口的来记录：</p>\n<p>　　注册登录后（这里可能需要VPN），可以去申请自己的key。这里使用默认分配的key来演示。</p>\n<p><img src=\"/contentimg/27/2.png\" alt=\"Result pic 1\" title=\"找到key\"></p>\n<p>　　记录保存该key。然后点击API导航。</p>\n<p><img src=\"/contentimg/27/3.png\" alt=\"Result pic 1\" title=\"回到API界面\"></p>\n<h3 id=\"看文档\"><a href=\"#看文档\" class=\"headerlink\" title=\"看文档\"></a>看文档</h3><p>　　这里我选中Current weather data来记录：</p>\n<p><img src=\"/contentimg/27/4.png\" alt=\"Result pic 1\" title=\"Current weather data\"></p>\n<p>　　文档已经提示了接口格式，但是发现直接这样使用是报错的，提示的401。401错误就是提示未登录，想想前面提到了key，但是这里怎么就没使用？</p>\n<p><img src=\"/contentimg/27/5.png\" alt=\"Result pic 1\" title=\"接口报错401\"></p>\n<p>　　打开一下示例的链接（Example）：</p>\n<p><img src=\"/contentimg/27/6.png\" alt=\"Result pic 1\" title=\"示例\"></p>\n<p>　　发现是需要附带&amp;appid= XXXXX。</p>\n<p>　　这种就是get模式下key的附带方式，放在最后，前提是需要找到这个key对应的“appid”这个字符串是叫什么，不同接口使用的字符串不同。</p>\n<h3 id=\"使用工具预调试\"><a href=\"#使用工具预调试\" class=\"headerlink\" title=\"使用工具预调试\"></a>使用工具预调试</h3><p>　　下面就使用Fiddler来记录，做网页的朋友应该用的较多是postman。</p>\n<p><img src=\"/contentimg/27/7.png\" alt=\"Result pic 1\" title=\"Fiddler\"></p>\n<p>　　该工具作用很大，能捕捉电脑上的全部http通讯。也能作为http调试工具使用。</p>\n<p>　　这里简单介绍作为调试工具使用的记录：</p>\n<p>　　上面分析得到的http链接，其实在空网页上打开已经能获取到data了，但是一般情况会乱码；而且，如果是post模式，就不会直接显示在网页上，找起来很麻烦，所以一般都是直接用调试工具。使用工具，主要原因也是因为这些接口不单单是一个http字符串来的，还是附带好多其他设置项：</p>\n<p>　　这里使用广东省，查上面文档，中间是有空格的，需要转码。</p>\n<p><img src=\"/contentimg/27/8.png\" alt=\"Result pic 1\" title=\"填入地址\"></p>\n<p>　　首先需要知道是get还是post，然后就是HTTP规范1.1。get模式直接复制http串进去就行了，直接回车或者Execute。就可以看到左边的“Result为200”的串，双击就能看到结果了。而post模式下，就需要把附加key全部复制进去下面那个框。</p>\n<p><img src=\"/contentimg/27/9.png\" alt=\"Result pic 1\" title=\"收到结果\"></p>\n<p>　　调试工具已经识别出来返回的是json，自动帮我们解析了，当然也可以看原文本，选择“TextView”。旁边那些Headers等等也有蛮多有用信息可以看的，如果出错的话，就需要关注这些信息了。</p>\n<p>　　http接口，一般要注意编码，还有http串里面一些特殊字符串，http在开发中使用超级多。这里只是简单提及。Fiddler的功能实际也是超级多的，有兴趣的可以多多摸索，该工具免费，同时该工具的同家族中也有个免费的反编译工具，也有收费的界面工具（实际某度可以搜到老版本的破解），做界面的朋友可以关注一下。做客户端的朋友们，可能有人会发现Win10更新到某版本后，IE内核那个dll变化比较大，导致自定义浏览器的一些网页会出问题，Fiddler解决了该问题，目前还没找到Fiddler怎么处理的，只知道打开Fiddler捕捉时，那些网页就正常，关掉后就恢复原来的异常状态了。老外在做浏览器这方面还是很牛逼的，不得不佩服。</p>\n<p>　　结尾附加一下中国天气网的api查询接口示例，不用key：</p>\n<p><img src=\"/contentimg/27/10.png\" alt=\"Result pic 1\" title=\"中国天气网api查询结果\"></p>\n<p>　　后面我再另外设文章分享怎么用C#写http接口服务端，Restful的普通json模式，以及table提交模式。当然还有使用xml格式的soap。</p>\n","site":{"data":{}},"excerpt":"<p>　　本文通过天气API的获取，记录分享http接口该怎么看文档，怎么调试使用。</p>","more":"<h2 id=\"数据来源\"><a href=\"#数据来源\" class=\"headerlink\" title=\"数据来源\"></a>数据来源</h2><h3 id=\"国内接口\"><a href=\"#国内接口\" class=\"headerlink\" title=\"国内接口\"></a>国内接口</h3><p><a href=\"http://www.weather.com.cn/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">中国天气网</a></p>\n<p>　　当然还有其他超级多的接口。具体这里有篇文章也在介绍总结：<a href=\"https://www.jianshu.com/p/e3e04cf3fc0f\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">免费、稳定的天气预报API</a></p>\n<p>　　这里还得记录一下接口中的地区编号怎么查询。幸好git上有人整理分享了这个：<a href=\"https://github.com/seeways/PythonDemo/blob/master/other_tools/weather_city.json\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">地区编码整理</a></p>\n<h3 id=\"国外接口\"><a href=\"#国外接口\" class=\"headerlink\" title=\"国外接口\"></a>国外接口</h3><p><a href=\"https://openweathermap.org/api\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">openweathermap</a></p>\n<p>　　同样得有一个查询地区编号的地方，这个在示例里面有：<a href=\"http://bulk.openweathermap.org/sample/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">地区编码查询</a> 。下载下来后，解压用文本格式打开，Ctrl F就能找到想要的地区的编号：</p>\n<p><img src=\"/contentimg/27/1.png\" alt=\"Result pic 1\" title=\"查找地区编号\"></p>\n<h2 id=\"http接口调试工具—Fiddler\"><a href=\"#http接口调试工具—Fiddler\" class=\"headerlink\" title=\"http接口调试工具—Fiddler\"></a>http接口调试工具—Fiddler</h2><p>　　有了接口规范和调试地址，现在就可以开始调试了。下面以Fiddler的调试为例，简单记录怎么看文档，怎么使用该工具获取到数据。</p>\n<h3 id=\"获取key\"><a href=\"#获取key\" class=\"headerlink\" title=\"获取key\"></a>获取key</h3><p>　　api接口使用，大部分是需要先注册账号，购买（有免费的，但是得点击“购买”，以获取key）。绝大部分都会要求key，有的key是附带在get模式下，附带在http连接最后面；有的是post模式下，作为一个key附加。</p>\n<p>　　这个key的作用，就是标记跟踪使用。服务端保存一个key，用户端必须也有对应的key，才给权限操作。</p>\n<p>　　类似使用场景有：用户登录后的定时权限检验（每次登录会刷新key，在这段时间内操作，必须有这个key才有权限操作，通常30s服务端该key会变化，防止用户穿过登录来直接操作），这里为什么不用用户名+密码？因为密码必须要加密，这样每个接口都要进行密码的解密验证，性能消耗大；而用加密后的字符串直接比对的话，存在一种情况，当用户登录后，该连接信息被窃取（网络截获），这样就可以直接跳过登录，使用该字符串当key直接超权限操作了；同时下线长时间离线无操作客户端的功能，也是用到该key，长时间离线下，应该无权限操作，因为key和服务端上的不匹配，必须登录获取最新key才能操作。</p>\n<p>　　下面直接使用国外那个接口的来记录：</p>\n<p>　　注册登录后（这里可能需要VPN），可以去申请自己的key。这里使用默认分配的key来演示。</p>\n<p><img src=\"/contentimg/27/2.png\" alt=\"Result pic 1\" title=\"找到key\"></p>\n<p>　　记录保存该key。然后点击API导航。</p>\n<p><img src=\"/contentimg/27/3.png\" alt=\"Result pic 1\" title=\"回到API界面\"></p>\n<h3 id=\"看文档\"><a href=\"#看文档\" class=\"headerlink\" title=\"看文档\"></a>看文档</h3><p>　　这里我选中Current weather data来记录：</p>\n<p><img src=\"/contentimg/27/4.png\" alt=\"Result pic 1\" title=\"Current weather data\"></p>\n<p>　　文档已经提示了接口格式，但是发现直接这样使用是报错的，提示的401。401错误就是提示未登录，想想前面提到了key，但是这里怎么就没使用？</p>\n<p><img src=\"/contentimg/27/5.png\" alt=\"Result pic 1\" title=\"接口报错401\"></p>\n<p>　　打开一下示例的链接（Example）：</p>\n<p><img src=\"/contentimg/27/6.png\" alt=\"Result pic 1\" title=\"示例\"></p>\n<p>　　发现是需要附带&amp;appid= XXXXX。</p>\n<p>　　这种就是get模式下key的附带方式，放在最后，前提是需要找到这个key对应的“appid”这个字符串是叫什么，不同接口使用的字符串不同。</p>\n<h3 id=\"使用工具预调试\"><a href=\"#使用工具预调试\" class=\"headerlink\" title=\"使用工具预调试\"></a>使用工具预调试</h3><p>　　下面就使用Fiddler来记录，做网页的朋友应该用的较多是postman。</p>\n<p><img src=\"/contentimg/27/7.png\" alt=\"Result pic 1\" title=\"Fiddler\"></p>\n<p>　　该工具作用很大，能捕捉电脑上的全部http通讯。也能作为http调试工具使用。</p>\n<p>　　这里简单介绍作为调试工具使用的记录：</p>\n<p>　　上面分析得到的http链接，其实在空网页上打开已经能获取到data了，但是一般情况会乱码；而且，如果是post模式，就不会直接显示在网页上，找起来很麻烦，所以一般都是直接用调试工具。使用工具，主要原因也是因为这些接口不单单是一个http字符串来的，还是附带好多其他设置项：</p>\n<p>　　这里使用广东省，查上面文档，中间是有空格的，需要转码。</p>\n<p><img src=\"/contentimg/27/8.png\" alt=\"Result pic 1\" title=\"填入地址\"></p>\n<p>　　首先需要知道是get还是post，然后就是HTTP规范1.1。get模式直接复制http串进去就行了，直接回车或者Execute。就可以看到左边的“Result为200”的串，双击就能看到结果了。而post模式下，就需要把附加key全部复制进去下面那个框。</p>\n<p><img src=\"/contentimg/27/9.png\" alt=\"Result pic 1\" title=\"收到结果\"></p>\n<p>　　调试工具已经识别出来返回的是json，自动帮我们解析了，当然也可以看原文本，选择“TextView”。旁边那些Headers等等也有蛮多有用信息可以看的，如果出错的话，就需要关注这些信息了。</p>\n<p>　　http接口，一般要注意编码，还有http串里面一些特殊字符串，http在开发中使用超级多。这里只是简单提及。Fiddler的功能实际也是超级多的，有兴趣的可以多多摸索，该工具免费，同时该工具的同家族中也有个免费的反编译工具，也有收费的界面工具（实际某度可以搜到老版本的破解），做界面的朋友可以关注一下。做客户端的朋友们，可能有人会发现Win10更新到某版本后，IE内核那个dll变化比较大，导致自定义浏览器的一些网页会出问题，Fiddler解决了该问题，目前还没找到Fiddler怎么处理的，只知道打开Fiddler捕捉时，那些网页就正常，关掉后就恢复原来的异常状态了。老外在做浏览器这方面还是很牛逼的，不得不佩服。</p>\n<p>　　结尾附加一下中国天气网的api查询接口示例，不用key：</p>\n<p><img src=\"/contentimg/27/10.png\" alt=\"Result pic 1\" title=\"中国天气网api查询结果\"></p>\n<p>　　后面我再另外设文章分享怎么用C#写http接口服务端，Restful的普通json模式，以及table提交模式。当然还有使用xml格式的soap。</p>"},{"title":"Live2D插件介绍","date":"2018-10-26T02:07:59.000Z","_content":"\n　　本文介绍如何在Unity中使用二次元风格的[Live2D](http://www.live2d.com/)  。   \n\n<!-- more -->\n\n![Result pic 1](/contentimg/30/1.gif \"效果展示\")\n\n![Result pic 1](/contentimg/30/1.png \"实际三维情况\")\n\n\n　　在一些博客上会遇到网页宠物挂饰，大部分是比较老旧的flash效果，但是现在有个蛮不错的新技术也实现了这个效果，这就是Live2D插件。\n\n　　当然它不仅仅只用在博客上当挂饰，现在那些游戏登陆界面、或者手机app打开缓冲界面，经常会有能动的人物视觉，好多其实都是用该插件实现的！\n\n　　这里放一下两个下载链接：\n\n1. [2.1SDK下载指导文档](http://www.live2d.com/usermanual/cubism2_cn/lets-do-it/my-first-lapp/02.html) \n  \n1. [3.0unitypackage包下载指导文档](http://docs.live2d.com/cubism-sdk-tutorials/getting-started/) \n\n　　请先根据上面链接的教程，对应去下载SDK包。当然也可以去github下载最新包。在GitHubPage中，也刚好有人开源做这个插件的挂饰效果，已经集成在hexo中了。在我置顶博文中，底部的几个链接都有提到这个使用教程。本文只简单根据Unity中使用的情况来介绍该插件。\n\n　　教程网页很人性化，是有中文和英文版本的，图文并茂，虽然部分链接点开需要VPN。这里就不讲复杂的怎么做模型，怎么应用等等。只在下载的两个包的基础上进行简单分析。\n\n![Result pic 1](/contentimg/30/2.png \"下载的两个包\")\n\n\n　　如果不会VPN，unitypackage包不要也行，它只是多了部分功能的集成而已（[json转AnimationClip功能](http://docs.live2d.com/cubism-sdk-tutorials/animation/)  等等其他好多功能的集成）。简单的接触，从官网主页下载的2.1sdk包就能正常运行了。\n\n　　在sample里面是几个使用例子。每个都能独立正常运行的。\n\n### 新建工程\n\n![Result pic 1](/contentimg/30/3.png \"引用拆解\")\n\n\n　　可以新建工程，复制这些需要的东西来处理。这里也提一下老版本，如果识别不了dll，需要拖出来外面，然后使用面板上的Import new asset重新导入。\n\n　　代码部分就不讲解了，这里简单提一下它的流程吧。\n\n### 运用\n\n![Result pic 1](/contentimg/30/4.png \"Create Live2D Canvas\")\n\n\n　　这里是建了一个透明的背景材质，然后通过脚本来Load模型，并贴上去。Load函数在示例程序里面也有了，LAppModelProxy类。就是传model.json的地址给它，然后它找到这个文件后，解析，根据文件里面的记录，去找对应的其他信息：找模型、表情动作参数、声音等等。\n\n![Result pic 1](/contentimg/30/5.png \"总信息记录\")\n\n\n　　示例程序这里的动画效果比较少，实际上，在unitypackage包里面就可以看到，是和骨骼动画一样，每一个关节都可以运动的！\n\n　　这里是记录播放该动画时，运行的时间fade，以及变动的键值。\n\n![Result pic 1](/contentimg/30/6.png \"动画信息内容\")\n\n\n　　expressins文件夹的4个动画效果，只是其中抽出来的示例动画，实际上只要我们想到，都可以编出来，然后加进去。2.1版本的还是读json，但是官方提倡使用动画机，在3.0就建议直接使用动画机来完成动画的编制了。原理都是找到对应的key，传递新value。就是多了一层解析封装，让动画机能直接调用并修改key的value。\n\n　　这里可以自己封装，在motions里面可以提取key，然后包装，调用L2DMotionManager的startMotionPrio函数。相当于3.0的OnRenderObject自动调用TaskableModel.TryWriteParametersAndParts(Parameters, Parts);\n\n\n![Result pic 1](/contentimg/30/17.png \"2.1修改value函数\")\n\n![Result pic 1](/contentimg/30/16.png \"3.0修改value函数\")\n\n![Result pic 1](/contentimg/30/2.gif \"键值修改效果\")\n\n\n　　效果完全和IK动画里面的绑定骨骼是一样的。这里编制动画，就和普通的编UI动画一样。\n\n![Result pic 1](/contentimg/30/3.gif \"键值修改效果\")\n\n\n### 发布\n\n　　这个插件在美术方面的玩法比较高级（编制各种动画效果），在程序方面需要写的代码基本没有，因为都封装好了。\n\n　　如果想发布出来，是需要对贴图材质压缩一下的，能从原来的77+M，压缩到后面20+M的。操作不多，就是对贴图使用压缩、设置static等。能节省大半的资源，提倡使用的时候必须进行优化压缩。\n\n\n　　实例程序中使用了鼠标跟踪、单击、重力传感器，来调用不同的动作（expressions文件夹中的4个，实际只有3个有有效动作）。可以自己修改，使用其他方式来调用。亦或直接找到全部键值，直接做动画。\n\n　　[体验demo](/unitydemo/3/index.html) ，请用Chrome或者手机浏览器打开。\n\n### 改进\n\n　　实际使用当然不是这么简单。这里举例，Lol英雄人物界面，是“底部的背景图”+中间能动的人物+“置顶的技能、血条等数值”。是三层结构的。\n\n　　现在这个demo，直接拖图片进去，是不行的，那个会动的人物永远是置顶的。所以需要结合其他技术来处理。使用Layer吗？尝试了一下，没生效，相机不渲染该layer，人物还是在。找到dll里面设置layer的，直接提示无效，下载老版本的，提示该函数已过期。怎么办？\n\n![Result pic 1](/contentimg/30/7.png \"设置Layer\")\n\n\n　　只能去翻说明文档了，幸好找到了。\n\n![Result pic 1](/contentimg/30/8.png \"SDK更新日志\")\n\n\n　　回头翻了一下实例工程！原来早就存在了这个功能的示例了。前面太心急，没仔细看示例工程才没发现。\n\n![Result pic 1](/contentimg/30/13.png \"通过RenderTexture渲染\")\n\n\n　　新建摄像机，把liv2d拉成为它的子项，然后拖出去main摄像头视野外面。接下来就是弄RenderTexture了。\n\n　　右键新建RenderTexture，按如下设置：其实可以弄成512x512的，再小下去就失真了（为什么是512？因为原图是1024x1024，512损失还没那么明显，256就大了）。\n\n![Result pic 1](/contentimg/30/9.png \"新建RenderTexture\")\n\n![Result pic 1](/contentimg/30/10.png \"新建材质\")\n\n\n　　然后把RenderTexture拖给刚才建的摄像头。这里我选择取消全部layer渲染，culling mask设置为nothing，确保不会有其他东西进来这个摄像头的视觉。\n\n![Result pic 1](/contentimg/30/11.png \"赋值摄像头\")\n\n\n　　新建panel，赋值刚才的材质。\n\n![Result pic 1](/contentimg/30/12.png \"赋值材质\")\n\n\n　　运行，看到人物终于夹在中间了！\n\n　　但是这时候发现人物的眼睛跟踪鼠标，一直是看往左边的，因为实际的live2d在右边远处。这里就得去修改代码了。\n\n　　这里的问题，就是坐标对应的是真实的Live2d。需要修改参照物为假的panel，或者直接把鼠标位置移过去。我选择了把鼠标点击计算值偏移过去的方案。\n\n![Result pic 1](/contentimg/30/14.png \"修改参照物摄像头\")\n\n![Result pic 1](/contentimg/30/15.png \"偏移鼠标点击位置的值\")\n\n![Result pic 1](/contentimg/30/4.gif \"修改后效果\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/30Lived2d_for_unity.md","raw":"---\ntitle: Live2D插件介绍\ndate: 2018-10-26 10:07:59\ncategories:\n  - 第三方插件\ntags:\n  - unity\n  - Live2D\n---\n\n　　本文介绍如何在Unity中使用二次元风格的[Live2D](http://www.live2d.com/)  。   \n\n<!-- more -->\n\n![Result pic 1](/contentimg/30/1.gif \"效果展示\")\n\n![Result pic 1](/contentimg/30/1.png \"实际三维情况\")\n\n\n　　在一些博客上会遇到网页宠物挂饰，大部分是比较老旧的flash效果，但是现在有个蛮不错的新技术也实现了这个效果，这就是Live2D插件。\n\n　　当然它不仅仅只用在博客上当挂饰，现在那些游戏登陆界面、或者手机app打开缓冲界面，经常会有能动的人物视觉，好多其实都是用该插件实现的！\n\n　　这里放一下两个下载链接：\n\n1. [2.1SDK下载指导文档](http://www.live2d.com/usermanual/cubism2_cn/lets-do-it/my-first-lapp/02.html) \n  \n1. [3.0unitypackage包下载指导文档](http://docs.live2d.com/cubism-sdk-tutorials/getting-started/) \n\n　　请先根据上面链接的教程，对应去下载SDK包。当然也可以去github下载最新包。在GitHubPage中，也刚好有人开源做这个插件的挂饰效果，已经集成在hexo中了。在我置顶博文中，底部的几个链接都有提到这个使用教程。本文只简单根据Unity中使用的情况来介绍该插件。\n\n　　教程网页很人性化，是有中文和英文版本的，图文并茂，虽然部分链接点开需要VPN。这里就不讲复杂的怎么做模型，怎么应用等等。只在下载的两个包的基础上进行简单分析。\n\n![Result pic 1](/contentimg/30/2.png \"下载的两个包\")\n\n\n　　如果不会VPN，unitypackage包不要也行，它只是多了部分功能的集成而已（[json转AnimationClip功能](http://docs.live2d.com/cubism-sdk-tutorials/animation/)  等等其他好多功能的集成）。简单的接触，从官网主页下载的2.1sdk包就能正常运行了。\n\n　　在sample里面是几个使用例子。每个都能独立正常运行的。\n\n### 新建工程\n\n![Result pic 1](/contentimg/30/3.png \"引用拆解\")\n\n\n　　可以新建工程，复制这些需要的东西来处理。这里也提一下老版本，如果识别不了dll，需要拖出来外面，然后使用面板上的Import new asset重新导入。\n\n　　代码部分就不讲解了，这里简单提一下它的流程吧。\n\n### 运用\n\n![Result pic 1](/contentimg/30/4.png \"Create Live2D Canvas\")\n\n\n　　这里是建了一个透明的背景材质，然后通过脚本来Load模型，并贴上去。Load函数在示例程序里面也有了，LAppModelProxy类。就是传model.json的地址给它，然后它找到这个文件后，解析，根据文件里面的记录，去找对应的其他信息：找模型、表情动作参数、声音等等。\n\n![Result pic 1](/contentimg/30/5.png \"总信息记录\")\n\n\n　　示例程序这里的动画效果比较少，实际上，在unitypackage包里面就可以看到，是和骨骼动画一样，每一个关节都可以运动的！\n\n　　这里是记录播放该动画时，运行的时间fade，以及变动的键值。\n\n![Result pic 1](/contentimg/30/6.png \"动画信息内容\")\n\n\n　　expressins文件夹的4个动画效果，只是其中抽出来的示例动画，实际上只要我们想到，都可以编出来，然后加进去。2.1版本的还是读json，但是官方提倡使用动画机，在3.0就建议直接使用动画机来完成动画的编制了。原理都是找到对应的key，传递新value。就是多了一层解析封装，让动画机能直接调用并修改key的value。\n\n　　这里可以自己封装，在motions里面可以提取key，然后包装，调用L2DMotionManager的startMotionPrio函数。相当于3.0的OnRenderObject自动调用TaskableModel.TryWriteParametersAndParts(Parameters, Parts);\n\n\n![Result pic 1](/contentimg/30/17.png \"2.1修改value函数\")\n\n![Result pic 1](/contentimg/30/16.png \"3.0修改value函数\")\n\n![Result pic 1](/contentimg/30/2.gif \"键值修改效果\")\n\n\n　　效果完全和IK动画里面的绑定骨骼是一样的。这里编制动画，就和普通的编UI动画一样。\n\n![Result pic 1](/contentimg/30/3.gif \"键值修改效果\")\n\n\n### 发布\n\n　　这个插件在美术方面的玩法比较高级（编制各种动画效果），在程序方面需要写的代码基本没有，因为都封装好了。\n\n　　如果想发布出来，是需要对贴图材质压缩一下的，能从原来的77+M，压缩到后面20+M的。操作不多，就是对贴图使用压缩、设置static等。能节省大半的资源，提倡使用的时候必须进行优化压缩。\n\n\n　　实例程序中使用了鼠标跟踪、单击、重力传感器，来调用不同的动作（expressions文件夹中的4个，实际只有3个有有效动作）。可以自己修改，使用其他方式来调用。亦或直接找到全部键值，直接做动画。\n\n　　[体验demo](/unitydemo/3/index.html) ，请用Chrome或者手机浏览器打开。\n\n### 改进\n\n　　实际使用当然不是这么简单。这里举例，Lol英雄人物界面，是“底部的背景图”+中间能动的人物+“置顶的技能、血条等数值”。是三层结构的。\n\n　　现在这个demo，直接拖图片进去，是不行的，那个会动的人物永远是置顶的。所以需要结合其他技术来处理。使用Layer吗？尝试了一下，没生效，相机不渲染该layer，人物还是在。找到dll里面设置layer的，直接提示无效，下载老版本的，提示该函数已过期。怎么办？\n\n![Result pic 1](/contentimg/30/7.png \"设置Layer\")\n\n\n　　只能去翻说明文档了，幸好找到了。\n\n![Result pic 1](/contentimg/30/8.png \"SDK更新日志\")\n\n\n　　回头翻了一下实例工程！原来早就存在了这个功能的示例了。前面太心急，没仔细看示例工程才没发现。\n\n![Result pic 1](/contentimg/30/13.png \"通过RenderTexture渲染\")\n\n\n　　新建摄像机，把liv2d拉成为它的子项，然后拖出去main摄像头视野外面。接下来就是弄RenderTexture了。\n\n　　右键新建RenderTexture，按如下设置：其实可以弄成512x512的，再小下去就失真了（为什么是512？因为原图是1024x1024，512损失还没那么明显，256就大了）。\n\n![Result pic 1](/contentimg/30/9.png \"新建RenderTexture\")\n\n![Result pic 1](/contentimg/30/10.png \"新建材质\")\n\n\n　　然后把RenderTexture拖给刚才建的摄像头。这里我选择取消全部layer渲染，culling mask设置为nothing，确保不会有其他东西进来这个摄像头的视觉。\n\n![Result pic 1](/contentimg/30/11.png \"赋值摄像头\")\n\n\n　　新建panel，赋值刚才的材质。\n\n![Result pic 1](/contentimg/30/12.png \"赋值材质\")\n\n\n　　运行，看到人物终于夹在中间了！\n\n　　但是这时候发现人物的眼睛跟踪鼠标，一直是看往左边的，因为实际的live2d在右边远处。这里就得去修改代码了。\n\n　　这里的问题，就是坐标对应的是真实的Live2d。需要修改参照物为假的panel，或者直接把鼠标位置移过去。我选择了把鼠标点击计算值偏移过去的方案。\n\n![Result pic 1](/contentimg/30/14.png \"修改参照物摄像头\")\n\n![Result pic 1](/contentimg/30/15.png \"偏移鼠标点击位置的值\")\n\n![Result pic 1](/contentimg/30/4.gif \"修改后效果\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"30Lived2d_for_unity","published":1,"updated":"2018-10-27T05:29:14.427Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgr1m002jjo9ctbqw61nl","content":"<p>　　本文介绍如何在Unity中使用二次元风格的<a href=\"http://www.live2d.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Live2D</a>  。   </p>\n<a id=\"more\"></a>\n<p><img src=\"/contentimg/30/1.gif\" alt=\"Result pic 1\" title=\"效果展示\"></p>\n<p><img src=\"/contentimg/30/1.png\" alt=\"Result pic 1\" title=\"实际三维情况\"></p>\n<p>　　在一些博客上会遇到网页宠物挂饰，大部分是比较老旧的flash效果，但是现在有个蛮不错的新技术也实现了这个效果，这就是Live2D插件。</p>\n<p>　　当然它不仅仅只用在博客上当挂饰，现在那些游戏登陆界面、或者手机app打开缓冲界面，经常会有能动的人物视觉，好多其实都是用该插件实现的！</p>\n<p>　　这里放一下两个下载链接：</p>\n<ol>\n<li><p><a href=\"http://www.live2d.com/usermanual/cubism2_cn/lets-do-it/my-first-lapp/02.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">2.1SDK下载指导文档</a> </p>\n</li>\n<li><p><a href=\"http://docs.live2d.com/cubism-sdk-tutorials/getting-started/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">3.0unitypackage包下载指导文档</a> </p>\n</li>\n</ol>\n<p>　　请先根据上面链接的教程，对应去下载SDK包。当然也可以去github下载最新包。在GitHubPage中，也刚好有人开源做这个插件的挂饰效果，已经集成在hexo中了。在我置顶博文中，底部的几个链接都有提到这个使用教程。本文只简单根据Unity中使用的情况来介绍该插件。</p>\n<p>　　教程网页很人性化，是有中文和英文版本的，图文并茂，虽然部分链接点开需要VPN。这里就不讲复杂的怎么做模型，怎么应用等等。只在下载的两个包的基础上进行简单分析。</p>\n<p><img src=\"/contentimg/30/2.png\" alt=\"Result pic 1\" title=\"下载的两个包\"></p>\n<p>　　如果不会VPN，unitypackage包不要也行，它只是多了部分功能的集成而已（<a href=\"http://docs.live2d.com/cubism-sdk-tutorials/animation/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">json转AnimationClip功能</a>  等等其他好多功能的集成）。简单的接触，从官网主页下载的2.1sdk包就能正常运行了。</p>\n<p>　　在sample里面是几个使用例子。每个都能独立正常运行的。</p>\n<h3 id=\"新建工程\"><a href=\"#新建工程\" class=\"headerlink\" title=\"新建工程\"></a>新建工程</h3><p><img src=\"/contentimg/30/3.png\" alt=\"Result pic 1\" title=\"引用拆解\"></p>\n<p>　　可以新建工程，复制这些需要的东西来处理。这里也提一下老版本，如果识别不了dll，需要拖出来外面，然后使用面板上的Import new asset重新导入。</p>\n<p>　　代码部分就不讲解了，这里简单提一下它的流程吧。</p>\n<h3 id=\"运用\"><a href=\"#运用\" class=\"headerlink\" title=\"运用\"></a>运用</h3><p><img src=\"/contentimg/30/4.png\" alt=\"Result pic 1\" title=\"Create Live2D Canvas\"></p>\n<p>　　这里是建了一个透明的背景材质，然后通过脚本来Load模型，并贴上去。Load函数在示例程序里面也有了，LAppModelProxy类。就是传model.json的地址给它，然后它找到这个文件后，解析，根据文件里面的记录，去找对应的其他信息：找模型、表情动作参数、声音等等。</p>\n<p><img src=\"/contentimg/30/5.png\" alt=\"Result pic 1\" title=\"总信息记录\"></p>\n<p>　　示例程序这里的动画效果比较少，实际上，在unitypackage包里面就可以看到，是和骨骼动画一样，每一个关节都可以运动的！</p>\n<p>　　这里是记录播放该动画时，运行的时间fade，以及变动的键值。</p>\n<p><img src=\"/contentimg/30/6.png\" alt=\"Result pic 1\" title=\"动画信息内容\"></p>\n<p>　　expressins文件夹的4个动画效果，只是其中抽出来的示例动画，实际上只要我们想到，都可以编出来，然后加进去。2.1版本的还是读json，但是官方提倡使用动画机，在3.0就建议直接使用动画机来完成动画的编制了。原理都是找到对应的key，传递新value。就是多了一层解析封装，让动画机能直接调用并修改key的value。</p>\n<p>　　这里可以自己封装，在motions里面可以提取key，然后包装，调用L2DMotionManager的startMotionPrio函数。相当于3.0的OnRenderObject自动调用TaskableModel.TryWriteParametersAndParts(Parameters, Parts);</p>\n<p><img src=\"/contentimg/30/17.png\" alt=\"Result pic 1\" title=\"2.1修改value函数\"></p>\n<p><img src=\"/contentimg/30/16.png\" alt=\"Result pic 1\" title=\"3.0修改value函数\"></p>\n<p><img src=\"/contentimg/30/2.gif\" alt=\"Result pic 1\" title=\"键值修改效果\"></p>\n<p>　　效果完全和IK动画里面的绑定骨骼是一样的。这里编制动画，就和普通的编UI动画一样。</p>\n<p><img src=\"/contentimg/30/3.gif\" alt=\"Result pic 1\" title=\"键值修改效果\"></p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p>　　这个插件在美术方面的玩法比较高级（编制各种动画效果），在程序方面需要写的代码基本没有，因为都封装好了。</p>\n<p>　　如果想发布出来，是需要对贴图材质压缩一下的，能从原来的77+M，压缩到后面20+M的。操作不多，就是对贴图使用压缩、设置static等。能节省大半的资源，提倡使用的时候必须进行优化压缩。</p>\n<p>　　实例程序中使用了鼠标跟踪、单击、重力传感器，来调用不同的动作（expressions文件夹中的4个，实际只有3个有有效动作）。可以自己修改，使用其他方式来调用。亦或直接找到全部键值，直接做动画。</p>\n<p>　　<a href=\"/unitydemo/3/index.html\">体验demo</a> ，请用Chrome或者手机浏览器打开。</p>\n<h3 id=\"改进\"><a href=\"#改进\" class=\"headerlink\" title=\"改进\"></a>改进</h3><p>　　实际使用当然不是这么简单。这里举例，Lol英雄人物界面，是“底部的背景图”+中间能动的人物+“置顶的技能、血条等数值”。是三层结构的。</p>\n<p>　　现在这个demo，直接拖图片进去，是不行的，那个会动的人物永远是置顶的。所以需要结合其他技术来处理。使用Layer吗？尝试了一下，没生效，相机不渲染该layer，人物还是在。找到dll里面设置layer的，直接提示无效，下载老版本的，提示该函数已过期。怎么办？</p>\n<p><img src=\"/contentimg/30/7.png\" alt=\"Result pic 1\" title=\"设置Layer\"></p>\n<p>　　只能去翻说明文档了，幸好找到了。</p>\n<p><img src=\"/contentimg/30/8.png\" alt=\"Result pic 1\" title=\"SDK更新日志\"></p>\n<p>　　回头翻了一下实例工程！原来早就存在了这个功能的示例了。前面太心急，没仔细看示例工程才没发现。</p>\n<p><img src=\"/contentimg/30/13.png\" alt=\"Result pic 1\" title=\"通过RenderTexture渲染\"></p>\n<p>　　新建摄像机，把liv2d拉成为它的子项，然后拖出去main摄像头视野外面。接下来就是弄RenderTexture了。</p>\n<p>　　右键新建RenderTexture，按如下设置：其实可以弄成512x512的，再小下去就失真了（为什么是512？因为原图是1024x1024，512损失还没那么明显，256就大了）。</p>\n<p><img src=\"/contentimg/30/9.png\" alt=\"Result pic 1\" title=\"新建RenderTexture\"></p>\n<p><img src=\"/contentimg/30/10.png\" alt=\"Result pic 1\" title=\"新建材质\"></p>\n<p>　　然后把RenderTexture拖给刚才建的摄像头。这里我选择取消全部layer渲染，culling mask设置为nothing，确保不会有其他东西进来这个摄像头的视觉。</p>\n<p><img src=\"/contentimg/30/11.png\" alt=\"Result pic 1\" title=\"赋值摄像头\"></p>\n<p>　　新建panel，赋值刚才的材质。</p>\n<p><img src=\"/contentimg/30/12.png\" alt=\"Result pic 1\" title=\"赋值材质\"></p>\n<p>　　运行，看到人物终于夹在中间了！</p>\n<p>　　但是这时候发现人物的眼睛跟踪鼠标，一直是看往左边的，因为实际的live2d在右边远处。这里就得去修改代码了。</p>\n<p>　　这里的问题，就是坐标对应的是真实的Live2d。需要修改参照物为假的panel，或者直接把鼠标位置移过去。我选择了把鼠标点击计算值偏移过去的方案。</p>\n<p><img src=\"/contentimg/30/14.png\" alt=\"Result pic 1\" title=\"修改参照物摄像头\"></p>\n<p><img src=\"/contentimg/30/15.png\" alt=\"Result pic 1\" title=\"偏移鼠标点击位置的值\"></p>\n<p><img src=\"/contentimg/30/4.gif\" alt=\"Result pic 1\" title=\"修改后效果\"></p>\n","site":{"data":{}},"excerpt":"<p>　　本文介绍如何在Unity中使用二次元风格的<a href=\"http://www.live2d.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Live2D</a>  。   </p>","more":"<p><img src=\"/contentimg/30/1.gif\" alt=\"Result pic 1\" title=\"效果展示\"></p>\n<p><img src=\"/contentimg/30/1.png\" alt=\"Result pic 1\" title=\"实际三维情况\"></p>\n<p>　　在一些博客上会遇到网页宠物挂饰，大部分是比较老旧的flash效果，但是现在有个蛮不错的新技术也实现了这个效果，这就是Live2D插件。</p>\n<p>　　当然它不仅仅只用在博客上当挂饰，现在那些游戏登陆界面、或者手机app打开缓冲界面，经常会有能动的人物视觉，好多其实都是用该插件实现的！</p>\n<p>　　这里放一下两个下载链接：</p>\n<ol>\n<li><p><a href=\"http://www.live2d.com/usermanual/cubism2_cn/lets-do-it/my-first-lapp/02.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">2.1SDK下载指导文档</a> </p>\n</li>\n<li><p><a href=\"http://docs.live2d.com/cubism-sdk-tutorials/getting-started/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">3.0unitypackage包下载指导文档</a> </p>\n</li>\n</ol>\n<p>　　请先根据上面链接的教程，对应去下载SDK包。当然也可以去github下载最新包。在GitHubPage中，也刚好有人开源做这个插件的挂饰效果，已经集成在hexo中了。在我置顶博文中，底部的几个链接都有提到这个使用教程。本文只简单根据Unity中使用的情况来介绍该插件。</p>\n<p>　　教程网页很人性化，是有中文和英文版本的，图文并茂，虽然部分链接点开需要VPN。这里就不讲复杂的怎么做模型，怎么应用等等。只在下载的两个包的基础上进行简单分析。</p>\n<p><img src=\"/contentimg/30/2.png\" alt=\"Result pic 1\" title=\"下载的两个包\"></p>\n<p>　　如果不会VPN，unitypackage包不要也行，它只是多了部分功能的集成而已（<a href=\"http://docs.live2d.com/cubism-sdk-tutorials/animation/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">json转AnimationClip功能</a>  等等其他好多功能的集成）。简单的接触，从官网主页下载的2.1sdk包就能正常运行了。</p>\n<p>　　在sample里面是几个使用例子。每个都能独立正常运行的。</p>\n<h3 id=\"新建工程\"><a href=\"#新建工程\" class=\"headerlink\" title=\"新建工程\"></a>新建工程</h3><p><img src=\"/contentimg/30/3.png\" alt=\"Result pic 1\" title=\"引用拆解\"></p>\n<p>　　可以新建工程，复制这些需要的东西来处理。这里也提一下老版本，如果识别不了dll，需要拖出来外面，然后使用面板上的Import new asset重新导入。</p>\n<p>　　代码部分就不讲解了，这里简单提一下它的流程吧。</p>\n<h3 id=\"运用\"><a href=\"#运用\" class=\"headerlink\" title=\"运用\"></a>运用</h3><p><img src=\"/contentimg/30/4.png\" alt=\"Result pic 1\" title=\"Create Live2D Canvas\"></p>\n<p>　　这里是建了一个透明的背景材质，然后通过脚本来Load模型，并贴上去。Load函数在示例程序里面也有了，LAppModelProxy类。就是传model.json的地址给它，然后它找到这个文件后，解析，根据文件里面的记录，去找对应的其他信息：找模型、表情动作参数、声音等等。</p>\n<p><img src=\"/contentimg/30/5.png\" alt=\"Result pic 1\" title=\"总信息记录\"></p>\n<p>　　示例程序这里的动画效果比较少，实际上，在unitypackage包里面就可以看到，是和骨骼动画一样，每一个关节都可以运动的！</p>\n<p>　　这里是记录播放该动画时，运行的时间fade，以及变动的键值。</p>\n<p><img src=\"/contentimg/30/6.png\" alt=\"Result pic 1\" title=\"动画信息内容\"></p>\n<p>　　expressins文件夹的4个动画效果，只是其中抽出来的示例动画，实际上只要我们想到，都可以编出来，然后加进去。2.1版本的还是读json，但是官方提倡使用动画机，在3.0就建议直接使用动画机来完成动画的编制了。原理都是找到对应的key，传递新value。就是多了一层解析封装，让动画机能直接调用并修改key的value。</p>\n<p>　　这里可以自己封装，在motions里面可以提取key，然后包装，调用L2DMotionManager的startMotionPrio函数。相当于3.0的OnRenderObject自动调用TaskableModel.TryWriteParametersAndParts(Parameters, Parts);</p>\n<p><img src=\"/contentimg/30/17.png\" alt=\"Result pic 1\" title=\"2.1修改value函数\"></p>\n<p><img src=\"/contentimg/30/16.png\" alt=\"Result pic 1\" title=\"3.0修改value函数\"></p>\n<p><img src=\"/contentimg/30/2.gif\" alt=\"Result pic 1\" title=\"键值修改效果\"></p>\n<p>　　效果完全和IK动画里面的绑定骨骼是一样的。这里编制动画，就和普通的编UI动画一样。</p>\n<p><img src=\"/contentimg/30/3.gif\" alt=\"Result pic 1\" title=\"键值修改效果\"></p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p>　　这个插件在美术方面的玩法比较高级（编制各种动画效果），在程序方面需要写的代码基本没有，因为都封装好了。</p>\n<p>　　如果想发布出来，是需要对贴图材质压缩一下的，能从原来的77+M，压缩到后面20+M的。操作不多，就是对贴图使用压缩、设置static等。能节省大半的资源，提倡使用的时候必须进行优化压缩。</p>\n<p>　　实例程序中使用了鼠标跟踪、单击、重力传感器，来调用不同的动作（expressions文件夹中的4个，实际只有3个有有效动作）。可以自己修改，使用其他方式来调用。亦或直接找到全部键值，直接做动画。</p>\n<p>　　<a href=\"/unitydemo/3/index.html\">体验demo</a> ，请用Chrome或者手机浏览器打开。</p>\n<h3 id=\"改进\"><a href=\"#改进\" class=\"headerlink\" title=\"改进\"></a>改进</h3><p>　　实际使用当然不是这么简单。这里举例，Lol英雄人物界面，是“底部的背景图”+中间能动的人物+“置顶的技能、血条等数值”。是三层结构的。</p>\n<p>　　现在这个demo，直接拖图片进去，是不行的，那个会动的人物永远是置顶的。所以需要结合其他技术来处理。使用Layer吗？尝试了一下，没生效，相机不渲染该layer，人物还是在。找到dll里面设置layer的，直接提示无效，下载老版本的，提示该函数已过期。怎么办？</p>\n<p><img src=\"/contentimg/30/7.png\" alt=\"Result pic 1\" title=\"设置Layer\"></p>\n<p>　　只能去翻说明文档了，幸好找到了。</p>\n<p><img src=\"/contentimg/30/8.png\" alt=\"Result pic 1\" title=\"SDK更新日志\"></p>\n<p>　　回头翻了一下实例工程！原来早就存在了这个功能的示例了。前面太心急，没仔细看示例工程才没发现。</p>\n<p><img src=\"/contentimg/30/13.png\" alt=\"Result pic 1\" title=\"通过RenderTexture渲染\"></p>\n<p>　　新建摄像机，把liv2d拉成为它的子项，然后拖出去main摄像头视野外面。接下来就是弄RenderTexture了。</p>\n<p>　　右键新建RenderTexture，按如下设置：其实可以弄成512x512的，再小下去就失真了（为什么是512？因为原图是1024x1024，512损失还没那么明显，256就大了）。</p>\n<p><img src=\"/contentimg/30/9.png\" alt=\"Result pic 1\" title=\"新建RenderTexture\"></p>\n<p><img src=\"/contentimg/30/10.png\" alt=\"Result pic 1\" title=\"新建材质\"></p>\n<p>　　然后把RenderTexture拖给刚才建的摄像头。这里我选择取消全部layer渲染，culling mask设置为nothing，确保不会有其他东西进来这个摄像头的视觉。</p>\n<p><img src=\"/contentimg/30/11.png\" alt=\"Result pic 1\" title=\"赋值摄像头\"></p>\n<p>　　新建panel，赋值刚才的材质。</p>\n<p><img src=\"/contentimg/30/12.png\" alt=\"Result pic 1\" title=\"赋值材质\"></p>\n<p>　　运行，看到人物终于夹在中间了！</p>\n<p>　　但是这时候发现人物的眼睛跟踪鼠标，一直是看往左边的，因为实际的live2d在右边远处。这里就得去修改代码了。</p>\n<p>　　这里的问题，就是坐标对应的是真实的Live2d。需要修改参照物为假的panel，或者直接把鼠标位置移过去。我选择了把鼠标点击计算值偏移过去的方案。</p>\n<p><img src=\"/contentimg/30/14.png\" alt=\"Result pic 1\" title=\"修改参照物摄像头\"></p>\n<p><img src=\"/contentimg/30/15.png\" alt=\"Result pic 1\" title=\"偏移鼠标点击位置的值\"></p>\n<p><img src=\"/contentimg/30/4.gif\" alt=\"Result pic 1\" title=\"修改后效果\"></p>"},{"title":"WallBall小游戏介绍","date":"2018-10-28T13:07:59.000Z","_content":"\n　　本文介绍Unity商店的一款小游戏[Wall Ball](https://assetstore.unity.com/packages/templates/packs/wall-ball-49573)  。   \n\n<!-- more -->\n\n![Result pic 1](/contentimg/31/1.jpg \"Wall Ball\")\n\n\n## 游戏简介\n\n　　该小游戏是3D类型，主角是一个小球，通过在独木桥地板上滚动逃亡生存，地板会下沉掉落，所以小球得一直向前滚动。\n\n　　玩家通过点击屏幕，指导小球左右2个方向的变换，帮助它安全踏上地板逃亡，同时一路收集小星星攒积分。伴随着逃亡之路的还有场景光线的变换，会有日夜更替，所以玩家要小心晚上会看不清道路而失足掉落。\n\n## 游戏体验\n\n　　[体验demo](/unitydemo/4/index.html) ，请用Chrome或者手机浏览器打开。\n\n## 游戏制作\n\n　　只有一些UI的图标，还有小球的数字8贴图。其他东西都可以在unity内部创建。\n\n### 1.游戏规则细化\n\n　　写代码前，需要先了解这个游戏怎么玩：\n\n　　这是一个逃亡游戏，主角所待的地板会不断往下掉，所以只能不停的往前跑。为了增强游戏感，特地设置了独木桥类型的前路，主角只要跑错方向就会掉下无尽深渊。为了加大难度，增加了昼夜替换，晚上的时候光线变暗。同时为了防止逃亡久了后的精神麻痹现象，增加了建筑材料的颜色变幻的设定。\n\n　　玩家可以通过点击屏幕，操作小球前面的方向是向左还是向右。同时路上会有小星星，收集能增加积分。积分用来记录玩家挑战最佳值。\n\n所以规划如下：\n\n1. 地板在小球滚过后会下落消失；同时在尽头会随机在左边或者右边生成新地板，并且一次只能生成紧凑的一块。 \n1. 设定时间间隔，控制环境灯光的变化，分白天的正常亮度+晚上的黑暗情况。\n1. 增加地板颜色的变化设定。\n1. 地板上有小星星，碰到就加积分。游戏结束要保存积分，最后统计玩家积分，汇总出挑战最高分。\n1. 小球受向下的力，踩不到地板就掉下去，游戏结束。\n1. 玩家点击屏幕，控制变换小球向左或者向右。\n\n### 2.代码\n\n\n　　这个游戏代码架构不是很好，由于游戏简单，所以使用的是最简单的直接写代码的方式，直接高效。一个脚本对应一个功能，同时有一个管理全局的总脚本。在生成地板的地方有bug，不是按照数量来生成，而是固定间隔生成，会导致出现数量只增不减的情况---》当小球不滚动时，这时不会有地板消失，但是地板生成是照旧的。所以本文不对代码进行详解。\n\n#### PlayerPrefs\n\n　　在电脑上，是直接保存到注册表，在浏览器上，保存成cookies。原本以为发布成webgl得修改，写js来完成这个操作，没想到能正常执行。\n\n![Result pic 1](/contentimg/31/2.png \"playerprefs\")\n\n\n#### Rigidbody.velocity\n\n![Result pic 1](/contentimg/31/3.png \"Rigidbody.velocity\")\n\n\n　　这里控制小球滚动，不是通过position++。而是给小球施加一个力。注意，x/y/z ==》右/上/前，这里x=》右，z=》前。向下就是对应y，所以这里给小球y轴一个向下的重力Physics.gravity.y。\n\n　　游戏中的向左向右，就单独在x或者z轴上施加。通过一个bool值来判断应该加那个方向上的力就行。\n\n　　另外要注意，施加力，必须在FixedUpdate上进行。不能在Update等其他地方。不然会出现抖动跳跃的现象。\n\n\n### 3.开始制作游戏\n\n　　工程中，素材比较不规则，作者是通过Unity的Packing系统打包图集。鉴于这个游戏可以记录的东西少，这里就分享一下怎么使用工具打包图集吧。\n\n#### TexturePackerGUI\n\n　　惯例，排序一下图片，排除掉特殊的图片。\n\n![Result pic 1](/contentimg/31/4.png \"图片排序\")\n\n![Result pic 1](/contentimg/31/5.png \"特殊图片\")\n\n\n　　很明显，“8.jpg”必须搞出来。\n\n![Result pic 1](/contentimg/31/6.png \"排除特殊图片\")\n\n\n　　但是这里还有一张不太适合，放进去后导致右边大量的留白。可以通过直接在图集中选中，来知道是哪一张。\n\n![Result pic 1](/contentimg/31/7.png \"找到不合适的图\")\n\n\n　　去掉不合适的后，剩下的就可以打包成一个图了。不过，实际使用中的打包，是将一起用的图打包成一个图集，体积权重较低。\n\n![Result pic 1](/contentimg/31/8.png \"操作流程\")\n\n![Result pic 1](/contentimg/31/9.png \"data format\")\n\n![Result pic 1](/contentimg/31/10.png \"发布\")\n\n\n　　发布出来是两个，一个png（带透明通道）+一个“.tpsheet”后缀的文件，用记事本格式打开，是记录每张照片的位置信息。\n\n![Result pic 1](/contentimg/31/11.png \"tpsheet内容\")\n\n\n　　将这两个文件直接导入unity。然后回到unity，添加插件[TexturePackerImporter](https://assetstore.unity.com/packages/tools/sprite-management/texturepacker-importer-16641) 。这时候你会发现，前面导入的图集，unity自动切好了。\n\n![Result pic 1](/contentimg/31/12.png \"使用情况\")\n\n\n　　上面是直接拖到面板使用的。但是如果想代码里面使用呢。平时是Resources.Load(path)；但是会发现这时候不知道path是哪个才对。\n\n　　但是这时候是用Resources.LoadAll(path)！\n\n![Result pic 1](/contentimg/31/13.png \"代码读取图片\")\n\n\n　　load这个图集，返回的不是集合，也无法使用。必须loadall后才能获取到，然后再来找到对应名字的。\n\n#### 制作预制体\n\n略\n\n#### 整合Scene\n\n略\n\n### 压缩优化发布\n\n略\n\n### 追加\n\n　　在电脑上跑的时候没注意，发布上去后，在手机点开，结果浏览器奔溃了？？？\n\n　　推测fps值太高了，卡掉浏览器。\n\n#### 设置FPS\n\n　　FPS，就是控制每秒调用多少次Update的。调用次数越多，cpu越高，同时说明代码越流畅，中间没明显卡顿。在电脑上，fps是越高越好的，但是移动端就不行了，要控制在稳定的值。webgl建议越低越好。\n\n　　这里计算方式，用一个int，每次update的时候++；然后计算程序运行时间，相除。最好是用一个间隔，保证两个数都是比较小的容易除的数字。\n\n　　属性设置就一条代码：\n\n>          Application.targetFrameRate = 50;\n\n![Result pic 1](/contentimg/31/14.png \"同时需要注意这里的设置\")\n\n\n　　同时要去修改这里。设置为Don't Sync。不然上面的代码就不起作用了。\n\n　　但是没效果，还是闪退。而且设置后，反而报错\n\n>  rendering without using requestAnimationFrame for the main loop\n\n　　搜了一下[论坛](https://forum.unity.com/threads/rendering-without-using-requestanimationframe-for-the-main-loop.373331/)  。禁用代码设置fps，就不会报这个错了。\n\n#### 原因\n\n　　想到当前页面有浮动蜘蛛网脚本，该脚本耗cpu。应该是抢占了。所以独立跳转出去。\n\n　　同时修改代码。原来的是不断instantiate，这样会消耗大量cpu，换成数组来保存，然后SetActive来控制显示与消失。\n\n　　问题解决。不会奔溃了。也不用设置fps。\n\n修改代码：\n\n　　一开始就生成50个，tile+gem，然后如果这个tile有概率挂有星星，就通过var gem = this.transform.Find(\"GemHolder\");找到gem，然后SetActive。\n\n　　注意每次开局都要把全部set false。同时要注意这个集合，要从头到尾，再从头到尾，不能跳。不然会出现断层。注意被set false的物体，是不能自己激活自己的，需要外面来激活它。\n\n[三种查找物体的方式](https://blog.csdn.net/w1594731007/article/details/71216169)  \n\n","source":"_posts/31WallBallDemo.md","raw":"---\ntitle: WallBall小游戏介绍\ndate: 2018-10-28 21:07:59\ncategories:\n  - Unity3D\ntags:\n  - 游戏开发\n  - 2D\n  - 入门级\n  - 小游戏\n---\n\n　　本文介绍Unity商店的一款小游戏[Wall Ball](https://assetstore.unity.com/packages/templates/packs/wall-ball-49573)  。   \n\n<!-- more -->\n\n![Result pic 1](/contentimg/31/1.jpg \"Wall Ball\")\n\n\n## 游戏简介\n\n　　该小游戏是3D类型，主角是一个小球，通过在独木桥地板上滚动逃亡生存，地板会下沉掉落，所以小球得一直向前滚动。\n\n　　玩家通过点击屏幕，指导小球左右2个方向的变换，帮助它安全踏上地板逃亡，同时一路收集小星星攒积分。伴随着逃亡之路的还有场景光线的变换，会有日夜更替，所以玩家要小心晚上会看不清道路而失足掉落。\n\n## 游戏体验\n\n　　[体验demo](/unitydemo/4/index.html) ，请用Chrome或者手机浏览器打开。\n\n## 游戏制作\n\n　　只有一些UI的图标，还有小球的数字8贴图。其他东西都可以在unity内部创建。\n\n### 1.游戏规则细化\n\n　　写代码前，需要先了解这个游戏怎么玩：\n\n　　这是一个逃亡游戏，主角所待的地板会不断往下掉，所以只能不停的往前跑。为了增强游戏感，特地设置了独木桥类型的前路，主角只要跑错方向就会掉下无尽深渊。为了加大难度，增加了昼夜替换，晚上的时候光线变暗。同时为了防止逃亡久了后的精神麻痹现象，增加了建筑材料的颜色变幻的设定。\n\n　　玩家可以通过点击屏幕，操作小球前面的方向是向左还是向右。同时路上会有小星星，收集能增加积分。积分用来记录玩家挑战最佳值。\n\n所以规划如下：\n\n1. 地板在小球滚过后会下落消失；同时在尽头会随机在左边或者右边生成新地板，并且一次只能生成紧凑的一块。 \n1. 设定时间间隔，控制环境灯光的变化，分白天的正常亮度+晚上的黑暗情况。\n1. 增加地板颜色的变化设定。\n1. 地板上有小星星，碰到就加积分。游戏结束要保存积分，最后统计玩家积分，汇总出挑战最高分。\n1. 小球受向下的力，踩不到地板就掉下去，游戏结束。\n1. 玩家点击屏幕，控制变换小球向左或者向右。\n\n### 2.代码\n\n\n　　这个游戏代码架构不是很好，由于游戏简单，所以使用的是最简单的直接写代码的方式，直接高效。一个脚本对应一个功能，同时有一个管理全局的总脚本。在生成地板的地方有bug，不是按照数量来生成，而是固定间隔生成，会导致出现数量只增不减的情况---》当小球不滚动时，这时不会有地板消失，但是地板生成是照旧的。所以本文不对代码进行详解。\n\n#### PlayerPrefs\n\n　　在电脑上，是直接保存到注册表，在浏览器上，保存成cookies。原本以为发布成webgl得修改，写js来完成这个操作，没想到能正常执行。\n\n![Result pic 1](/contentimg/31/2.png \"playerprefs\")\n\n\n#### Rigidbody.velocity\n\n![Result pic 1](/contentimg/31/3.png \"Rigidbody.velocity\")\n\n\n　　这里控制小球滚动，不是通过position++。而是给小球施加一个力。注意，x/y/z ==》右/上/前，这里x=》右，z=》前。向下就是对应y，所以这里给小球y轴一个向下的重力Physics.gravity.y。\n\n　　游戏中的向左向右，就单独在x或者z轴上施加。通过一个bool值来判断应该加那个方向上的力就行。\n\n　　另外要注意，施加力，必须在FixedUpdate上进行。不能在Update等其他地方。不然会出现抖动跳跃的现象。\n\n\n### 3.开始制作游戏\n\n　　工程中，素材比较不规则，作者是通过Unity的Packing系统打包图集。鉴于这个游戏可以记录的东西少，这里就分享一下怎么使用工具打包图集吧。\n\n#### TexturePackerGUI\n\n　　惯例，排序一下图片，排除掉特殊的图片。\n\n![Result pic 1](/contentimg/31/4.png \"图片排序\")\n\n![Result pic 1](/contentimg/31/5.png \"特殊图片\")\n\n\n　　很明显，“8.jpg”必须搞出来。\n\n![Result pic 1](/contentimg/31/6.png \"排除特殊图片\")\n\n\n　　但是这里还有一张不太适合，放进去后导致右边大量的留白。可以通过直接在图集中选中，来知道是哪一张。\n\n![Result pic 1](/contentimg/31/7.png \"找到不合适的图\")\n\n\n　　去掉不合适的后，剩下的就可以打包成一个图了。不过，实际使用中的打包，是将一起用的图打包成一个图集，体积权重较低。\n\n![Result pic 1](/contentimg/31/8.png \"操作流程\")\n\n![Result pic 1](/contentimg/31/9.png \"data format\")\n\n![Result pic 1](/contentimg/31/10.png \"发布\")\n\n\n　　发布出来是两个，一个png（带透明通道）+一个“.tpsheet”后缀的文件，用记事本格式打开，是记录每张照片的位置信息。\n\n![Result pic 1](/contentimg/31/11.png \"tpsheet内容\")\n\n\n　　将这两个文件直接导入unity。然后回到unity，添加插件[TexturePackerImporter](https://assetstore.unity.com/packages/tools/sprite-management/texturepacker-importer-16641) 。这时候你会发现，前面导入的图集，unity自动切好了。\n\n![Result pic 1](/contentimg/31/12.png \"使用情况\")\n\n\n　　上面是直接拖到面板使用的。但是如果想代码里面使用呢。平时是Resources.Load(path)；但是会发现这时候不知道path是哪个才对。\n\n　　但是这时候是用Resources.LoadAll(path)！\n\n![Result pic 1](/contentimg/31/13.png \"代码读取图片\")\n\n\n　　load这个图集，返回的不是集合，也无法使用。必须loadall后才能获取到，然后再来找到对应名字的。\n\n#### 制作预制体\n\n略\n\n#### 整合Scene\n\n略\n\n### 压缩优化发布\n\n略\n\n### 追加\n\n　　在电脑上跑的时候没注意，发布上去后，在手机点开，结果浏览器奔溃了？？？\n\n　　推测fps值太高了，卡掉浏览器。\n\n#### 设置FPS\n\n　　FPS，就是控制每秒调用多少次Update的。调用次数越多，cpu越高，同时说明代码越流畅，中间没明显卡顿。在电脑上，fps是越高越好的，但是移动端就不行了，要控制在稳定的值。webgl建议越低越好。\n\n　　这里计算方式，用一个int，每次update的时候++；然后计算程序运行时间，相除。最好是用一个间隔，保证两个数都是比较小的容易除的数字。\n\n　　属性设置就一条代码：\n\n>          Application.targetFrameRate = 50;\n\n![Result pic 1](/contentimg/31/14.png \"同时需要注意这里的设置\")\n\n\n　　同时要去修改这里。设置为Don't Sync。不然上面的代码就不起作用了。\n\n　　但是没效果，还是闪退。而且设置后，反而报错\n\n>  rendering without using requestAnimationFrame for the main loop\n\n　　搜了一下[论坛](https://forum.unity.com/threads/rendering-without-using-requestanimationframe-for-the-main-loop.373331/)  。禁用代码设置fps，就不会报这个错了。\n\n#### 原因\n\n　　想到当前页面有浮动蜘蛛网脚本，该脚本耗cpu。应该是抢占了。所以独立跳转出去。\n\n　　同时修改代码。原来的是不断instantiate，这样会消耗大量cpu，换成数组来保存，然后SetActive来控制显示与消失。\n\n　　问题解决。不会奔溃了。也不用设置fps。\n\n修改代码：\n\n　　一开始就生成50个，tile+gem，然后如果这个tile有概率挂有星星，就通过var gem = this.transform.Find(\"GemHolder\");找到gem，然后SetActive。\n\n　　注意每次开局都要把全部set false。同时要注意这个集合，要从头到尾，再从头到尾，不能跳。不然会出现断层。注意被set false的物体，是不能自己激活自己的，需要外面来激活它。\n\n[三种查找物体的方式](https://blog.csdn.net/w1594731007/article/details/71216169)  \n\n","slug":"31WallBallDemo","published":1,"updated":"2018-10-29T07:17:42.397Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgr1n002kjo9cuxrfq3qo","content":"<p>　　本文介绍Unity商店的一款小游戏<a href=\"https://assetstore.unity.com/packages/templates/packs/wall-ball-49573\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Wall Ball</a>  。   </p>\n<a id=\"more\"></a>\n<p><img src=\"/contentimg/31/1.jpg\" alt=\"Result pic 1\" title=\"Wall Ball\"></p>\n<h2 id=\"游戏简介\"><a href=\"#游戏简介\" class=\"headerlink\" title=\"游戏简介\"></a>游戏简介</h2><p>　　该小游戏是3D类型，主角是一个小球，通过在独木桥地板上滚动逃亡生存，地板会下沉掉落，所以小球得一直向前滚动。</p>\n<p>　　玩家通过点击屏幕，指导小球左右2个方向的变换，帮助它安全踏上地板逃亡，同时一路收集小星星攒积分。伴随着逃亡之路的还有场景光线的变换，会有日夜更替，所以玩家要小心晚上会看不清道路而失足掉落。</p>\n<h2 id=\"游戏体验\"><a href=\"#游戏体验\" class=\"headerlink\" title=\"游戏体验\"></a>游戏体验</h2><p>　　<a href=\"/unitydemo/4/index.html\">体验demo</a> ，请用Chrome或者手机浏览器打开。</p>\n<h2 id=\"游戏制作\"><a href=\"#游戏制作\" class=\"headerlink\" title=\"游戏制作\"></a>游戏制作</h2><p>　　只有一些UI的图标，还有小球的数字8贴图。其他东西都可以在unity内部创建。</p>\n<h3 id=\"1-游戏规则细化\"><a href=\"#1-游戏规则细化\" class=\"headerlink\" title=\"1.游戏规则细化\"></a>1.游戏规则细化</h3><p>　　写代码前，需要先了解这个游戏怎么玩：</p>\n<p>　　这是一个逃亡游戏，主角所待的地板会不断往下掉，所以只能不停的往前跑。为了增强游戏感，特地设置了独木桥类型的前路，主角只要跑错方向就会掉下无尽深渊。为了加大难度，增加了昼夜替换，晚上的时候光线变暗。同时为了防止逃亡久了后的精神麻痹现象，增加了建筑材料的颜色变幻的设定。</p>\n<p>　　玩家可以通过点击屏幕，操作小球前面的方向是向左还是向右。同时路上会有小星星，收集能增加积分。积分用来记录玩家挑战最佳值。</p>\n<p>所以规划如下：</p>\n<ol>\n<li>地板在小球滚过后会下落消失；同时在尽头会随机在左边或者右边生成新地板，并且一次只能生成紧凑的一块。 </li>\n<li>设定时间间隔，控制环境灯光的变化，分白天的正常亮度+晚上的黑暗情况。</li>\n<li>增加地板颜色的变化设定。</li>\n<li>地板上有小星星，碰到就加积分。游戏结束要保存积分，最后统计玩家积分，汇总出挑战最高分。</li>\n<li>小球受向下的力，踩不到地板就掉下去，游戏结束。</li>\n<li>玩家点击屏幕，控制变换小球向左或者向右。</li>\n</ol>\n<h3 id=\"2-代码\"><a href=\"#2-代码\" class=\"headerlink\" title=\"2.代码\"></a>2.代码</h3><p>　　这个游戏代码架构不是很好，由于游戏简单，所以使用的是最简单的直接写代码的方式，直接高效。一个脚本对应一个功能，同时有一个管理全局的总脚本。在生成地板的地方有bug，不是按照数量来生成，而是固定间隔生成，会导致出现数量只增不减的情况—》当小球不滚动时，这时不会有地板消失，但是地板生成是照旧的。所以本文不对代码进行详解。</p>\n<h4 id=\"PlayerPrefs\"><a href=\"#PlayerPrefs\" class=\"headerlink\" title=\"PlayerPrefs\"></a>PlayerPrefs</h4><p>　　在电脑上，是直接保存到注册表，在浏览器上，保存成cookies。原本以为发布成webgl得修改，写js来完成这个操作，没想到能正常执行。</p>\n<p><img src=\"/contentimg/31/2.png\" alt=\"Result pic 1\" title=\"playerprefs\"></p>\n<h4 id=\"Rigidbody-velocity\"><a href=\"#Rigidbody-velocity\" class=\"headerlink\" title=\"Rigidbody.velocity\"></a>Rigidbody.velocity</h4><p><img src=\"/contentimg/31/3.png\" alt=\"Result pic 1\" title=\"Rigidbody.velocity\"></p>\n<p>　　这里控制小球滚动，不是通过position++。而是给小球施加一个力。注意，x/y/z ==》右/上/前，这里x=》右，z=》前。向下就是对应y，所以这里给小球y轴一个向下的重力Physics.gravity.y。</p>\n<p>　　游戏中的向左向右，就单独在x或者z轴上施加。通过一个bool值来判断应该加那个方向上的力就行。</p>\n<p>　　另外要注意，施加力，必须在FixedUpdate上进行。不能在Update等其他地方。不然会出现抖动跳跃的现象。</p>\n<h3 id=\"3-开始制作游戏\"><a href=\"#3-开始制作游戏\" class=\"headerlink\" title=\"3.开始制作游戏\"></a>3.开始制作游戏</h3><p>　　工程中，素材比较不规则，作者是通过Unity的Packing系统打包图集。鉴于这个游戏可以记录的东西少，这里就分享一下怎么使用工具打包图集吧。</p>\n<h4 id=\"TexturePackerGUI\"><a href=\"#TexturePackerGUI\" class=\"headerlink\" title=\"TexturePackerGUI\"></a>TexturePackerGUI</h4><p>　　惯例，排序一下图片，排除掉特殊的图片。</p>\n<p><img src=\"/contentimg/31/4.png\" alt=\"Result pic 1\" title=\"图片排序\"></p>\n<p><img src=\"/contentimg/31/5.png\" alt=\"Result pic 1\" title=\"特殊图片\"></p>\n<p>　　很明显，“8.jpg”必须搞出来。</p>\n<p><img src=\"/contentimg/31/6.png\" alt=\"Result pic 1\" title=\"排除特殊图片\"></p>\n<p>　　但是这里还有一张不太适合，放进去后导致右边大量的留白。可以通过直接在图集中选中，来知道是哪一张。</p>\n<p><img src=\"/contentimg/31/7.png\" alt=\"Result pic 1\" title=\"找到不合适的图\"></p>\n<p>　　去掉不合适的后，剩下的就可以打包成一个图了。不过，实际使用中的打包，是将一起用的图打包成一个图集，体积权重较低。</p>\n<p><img src=\"/contentimg/31/8.png\" alt=\"Result pic 1\" title=\"操作流程\"></p>\n<p><img src=\"/contentimg/31/9.png\" alt=\"Result pic 1\" title=\"data format\"></p>\n<p><img src=\"/contentimg/31/10.png\" alt=\"Result pic 1\" title=\"发布\"></p>\n<p>　　发布出来是两个，一个png（带透明通道）+一个“.tpsheet”后缀的文件，用记事本格式打开，是记录每张照片的位置信息。</p>\n<p><img src=\"/contentimg/31/11.png\" alt=\"Result pic 1\" title=\"tpsheet内容\"></p>\n<p>　　将这两个文件直接导入unity。然后回到unity，添加插件<a href=\"https://assetstore.unity.com/packages/tools/sprite-management/texturepacker-importer-16641\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">TexturePackerImporter</a> 。这时候你会发现，前面导入的图集，unity自动切好了。</p>\n<p><img src=\"/contentimg/31/12.png\" alt=\"Result pic 1\" title=\"使用情况\"></p>\n<p>　　上面是直接拖到面板使用的。但是如果想代码里面使用呢。平时是Resources.Load(path)；但是会发现这时候不知道path是哪个才对。</p>\n<p>　　但是这时候是用Resources.LoadAll(path)！</p>\n<p><img src=\"/contentimg/31/13.png\" alt=\"Result pic 1\" title=\"代码读取图片\"></p>\n<p>　　load这个图集，返回的不是集合，也无法使用。必须loadall后才能获取到，然后再来找到对应名字的。</p>\n<h4 id=\"制作预制体\"><a href=\"#制作预制体\" class=\"headerlink\" title=\"制作预制体\"></a>制作预制体</h4><p>略</p>\n<h4 id=\"整合Scene\"><a href=\"#整合Scene\" class=\"headerlink\" title=\"整合Scene\"></a>整合Scene</h4><p>略</p>\n<h3 id=\"压缩优化发布\"><a href=\"#压缩优化发布\" class=\"headerlink\" title=\"压缩优化发布\"></a>压缩优化发布</h3><p>略</p>\n<h3 id=\"追加\"><a href=\"#追加\" class=\"headerlink\" title=\"追加\"></a>追加</h3><p>　　在电脑上跑的时候没注意，发布上去后，在手机点开，结果浏览器奔溃了？？？</p>\n<p>　　推测fps值太高了，卡掉浏览器。</p>\n<h4 id=\"设置FPS\"><a href=\"#设置FPS\" class=\"headerlink\" title=\"设置FPS\"></a>设置FPS</h4><p>　　FPS，就是控制每秒调用多少次Update的。调用次数越多，cpu越高，同时说明代码越流畅，中间没明显卡顿。在电脑上，fps是越高越好的，但是移动端就不行了，要控制在稳定的值。webgl建议越低越好。</p>\n<p>　　这里计算方式，用一个int，每次update的时候++；然后计算程序运行时间，相除。最好是用一个间隔，保证两个数都是比较小的容易除的数字。</p>\n<p>　　属性设置就一条代码：</p>\n<blockquote>\n<pre><code>Application.targetFrameRate = 50;\n</code></pre></blockquote>\n<p><img src=\"/contentimg/31/14.png\" alt=\"Result pic 1\" title=\"同时需要注意这里的设置\"></p>\n<p>　　同时要去修改这里。设置为Don’t Sync。不然上面的代码就不起作用了。</p>\n<p>　　但是没效果，还是闪退。而且设置后，反而报错</p>\n<blockquote>\n<p> rendering without using requestAnimationFrame for the main loop</p>\n</blockquote>\n<p>　　搜了一下<a href=\"https://forum.unity.com/threads/rendering-without-using-requestanimationframe-for-the-main-loop.373331/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">论坛</a>  。禁用代码设置fps，就不会报这个错了。</p>\n<h4 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>　　想到当前页面有浮动蜘蛛网脚本，该脚本耗cpu。应该是抢占了。所以独立跳转出去。</p>\n<p>　　同时修改代码。原来的是不断instantiate，这样会消耗大量cpu，换成数组来保存，然后SetActive来控制显示与消失。</p>\n<p>　　问题解决。不会奔溃了。也不用设置fps。</p>\n<p>修改代码：</p>\n<p>　　一开始就生成50个，tile+gem，然后如果这个tile有概率挂有星星，就通过var gem = this.transform.Find(“GemHolder”);找到gem，然后SetActive。</p>\n<p>　　注意每次开局都要把全部set false。同时要注意这个集合，要从头到尾，再从头到尾，不能跳。不然会出现断层。注意被set false的物体，是不能自己激活自己的，需要外面来激活它。</p>\n<p><a href=\"https://blog.csdn.net/w1594731007/article/details/71216169\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">三种查找物体的方式</a>  </p>\n","site":{"data":{}},"excerpt":"<p>　　本文介绍Unity商店的一款小游戏<a href=\"https://assetstore.unity.com/packages/templates/packs/wall-ball-49573\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Wall Ball</a>  。   </p>","more":"<p><img src=\"/contentimg/31/1.jpg\" alt=\"Result pic 1\" title=\"Wall Ball\"></p>\n<h2 id=\"游戏简介\"><a href=\"#游戏简介\" class=\"headerlink\" title=\"游戏简介\"></a>游戏简介</h2><p>　　该小游戏是3D类型，主角是一个小球，通过在独木桥地板上滚动逃亡生存，地板会下沉掉落，所以小球得一直向前滚动。</p>\n<p>　　玩家通过点击屏幕，指导小球左右2个方向的变换，帮助它安全踏上地板逃亡，同时一路收集小星星攒积分。伴随着逃亡之路的还有场景光线的变换，会有日夜更替，所以玩家要小心晚上会看不清道路而失足掉落。</p>\n<h2 id=\"游戏体验\"><a href=\"#游戏体验\" class=\"headerlink\" title=\"游戏体验\"></a>游戏体验</h2><p>　　<a href=\"/unitydemo/4/index.html\">体验demo</a> ，请用Chrome或者手机浏览器打开。</p>\n<h2 id=\"游戏制作\"><a href=\"#游戏制作\" class=\"headerlink\" title=\"游戏制作\"></a>游戏制作</h2><p>　　只有一些UI的图标，还有小球的数字8贴图。其他东西都可以在unity内部创建。</p>\n<h3 id=\"1-游戏规则细化\"><a href=\"#1-游戏规则细化\" class=\"headerlink\" title=\"1.游戏规则细化\"></a>1.游戏规则细化</h3><p>　　写代码前，需要先了解这个游戏怎么玩：</p>\n<p>　　这是一个逃亡游戏，主角所待的地板会不断往下掉，所以只能不停的往前跑。为了增强游戏感，特地设置了独木桥类型的前路，主角只要跑错方向就会掉下无尽深渊。为了加大难度，增加了昼夜替换，晚上的时候光线变暗。同时为了防止逃亡久了后的精神麻痹现象，增加了建筑材料的颜色变幻的设定。</p>\n<p>　　玩家可以通过点击屏幕，操作小球前面的方向是向左还是向右。同时路上会有小星星，收集能增加积分。积分用来记录玩家挑战最佳值。</p>\n<p>所以规划如下：</p>\n<ol>\n<li>地板在小球滚过后会下落消失；同时在尽头会随机在左边或者右边生成新地板，并且一次只能生成紧凑的一块。 </li>\n<li>设定时间间隔，控制环境灯光的变化，分白天的正常亮度+晚上的黑暗情况。</li>\n<li>增加地板颜色的变化设定。</li>\n<li>地板上有小星星，碰到就加积分。游戏结束要保存积分，最后统计玩家积分，汇总出挑战最高分。</li>\n<li>小球受向下的力，踩不到地板就掉下去，游戏结束。</li>\n<li>玩家点击屏幕，控制变换小球向左或者向右。</li>\n</ol>\n<h3 id=\"2-代码\"><a href=\"#2-代码\" class=\"headerlink\" title=\"2.代码\"></a>2.代码</h3><p>　　这个游戏代码架构不是很好，由于游戏简单，所以使用的是最简单的直接写代码的方式，直接高效。一个脚本对应一个功能，同时有一个管理全局的总脚本。在生成地板的地方有bug，不是按照数量来生成，而是固定间隔生成，会导致出现数量只增不减的情况—》当小球不滚动时，这时不会有地板消失，但是地板生成是照旧的。所以本文不对代码进行详解。</p>\n<h4 id=\"PlayerPrefs\"><a href=\"#PlayerPrefs\" class=\"headerlink\" title=\"PlayerPrefs\"></a>PlayerPrefs</h4><p>　　在电脑上，是直接保存到注册表，在浏览器上，保存成cookies。原本以为发布成webgl得修改，写js来完成这个操作，没想到能正常执行。</p>\n<p><img src=\"/contentimg/31/2.png\" alt=\"Result pic 1\" title=\"playerprefs\"></p>\n<h4 id=\"Rigidbody-velocity\"><a href=\"#Rigidbody-velocity\" class=\"headerlink\" title=\"Rigidbody.velocity\"></a>Rigidbody.velocity</h4><p><img src=\"/contentimg/31/3.png\" alt=\"Result pic 1\" title=\"Rigidbody.velocity\"></p>\n<p>　　这里控制小球滚动，不是通过position++。而是给小球施加一个力。注意，x/y/z ==》右/上/前，这里x=》右，z=》前。向下就是对应y，所以这里给小球y轴一个向下的重力Physics.gravity.y。</p>\n<p>　　游戏中的向左向右，就单独在x或者z轴上施加。通过一个bool值来判断应该加那个方向上的力就行。</p>\n<p>　　另外要注意，施加力，必须在FixedUpdate上进行。不能在Update等其他地方。不然会出现抖动跳跃的现象。</p>\n<h3 id=\"3-开始制作游戏\"><a href=\"#3-开始制作游戏\" class=\"headerlink\" title=\"3.开始制作游戏\"></a>3.开始制作游戏</h3><p>　　工程中，素材比较不规则，作者是通过Unity的Packing系统打包图集。鉴于这个游戏可以记录的东西少，这里就分享一下怎么使用工具打包图集吧。</p>\n<h4 id=\"TexturePackerGUI\"><a href=\"#TexturePackerGUI\" class=\"headerlink\" title=\"TexturePackerGUI\"></a>TexturePackerGUI</h4><p>　　惯例，排序一下图片，排除掉特殊的图片。</p>\n<p><img src=\"/contentimg/31/4.png\" alt=\"Result pic 1\" title=\"图片排序\"></p>\n<p><img src=\"/contentimg/31/5.png\" alt=\"Result pic 1\" title=\"特殊图片\"></p>\n<p>　　很明显，“8.jpg”必须搞出来。</p>\n<p><img src=\"/contentimg/31/6.png\" alt=\"Result pic 1\" title=\"排除特殊图片\"></p>\n<p>　　但是这里还有一张不太适合，放进去后导致右边大量的留白。可以通过直接在图集中选中，来知道是哪一张。</p>\n<p><img src=\"/contentimg/31/7.png\" alt=\"Result pic 1\" title=\"找到不合适的图\"></p>\n<p>　　去掉不合适的后，剩下的就可以打包成一个图了。不过，实际使用中的打包，是将一起用的图打包成一个图集，体积权重较低。</p>\n<p><img src=\"/contentimg/31/8.png\" alt=\"Result pic 1\" title=\"操作流程\"></p>\n<p><img src=\"/contentimg/31/9.png\" alt=\"Result pic 1\" title=\"data format\"></p>\n<p><img src=\"/contentimg/31/10.png\" alt=\"Result pic 1\" title=\"发布\"></p>\n<p>　　发布出来是两个，一个png（带透明通道）+一个“.tpsheet”后缀的文件，用记事本格式打开，是记录每张照片的位置信息。</p>\n<p><img src=\"/contentimg/31/11.png\" alt=\"Result pic 1\" title=\"tpsheet内容\"></p>\n<p>　　将这两个文件直接导入unity。然后回到unity，添加插件<a href=\"https://assetstore.unity.com/packages/tools/sprite-management/texturepacker-importer-16641\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">TexturePackerImporter</a> 。这时候你会发现，前面导入的图集，unity自动切好了。</p>\n<p><img src=\"/contentimg/31/12.png\" alt=\"Result pic 1\" title=\"使用情况\"></p>\n<p>　　上面是直接拖到面板使用的。但是如果想代码里面使用呢。平时是Resources.Load(path)；但是会发现这时候不知道path是哪个才对。</p>\n<p>　　但是这时候是用Resources.LoadAll(path)！</p>\n<p><img src=\"/contentimg/31/13.png\" alt=\"Result pic 1\" title=\"代码读取图片\"></p>\n<p>　　load这个图集，返回的不是集合，也无法使用。必须loadall后才能获取到，然后再来找到对应名字的。</p>\n<h4 id=\"制作预制体\"><a href=\"#制作预制体\" class=\"headerlink\" title=\"制作预制体\"></a>制作预制体</h4><p>略</p>\n<h4 id=\"整合Scene\"><a href=\"#整合Scene\" class=\"headerlink\" title=\"整合Scene\"></a>整合Scene</h4><p>略</p>\n<h3 id=\"压缩优化发布\"><a href=\"#压缩优化发布\" class=\"headerlink\" title=\"压缩优化发布\"></a>压缩优化发布</h3><p>略</p>\n<h3 id=\"追加\"><a href=\"#追加\" class=\"headerlink\" title=\"追加\"></a>追加</h3><p>　　在电脑上跑的时候没注意，发布上去后，在手机点开，结果浏览器奔溃了？？？</p>\n<p>　　推测fps值太高了，卡掉浏览器。</p>\n<h4 id=\"设置FPS\"><a href=\"#设置FPS\" class=\"headerlink\" title=\"设置FPS\"></a>设置FPS</h4><p>　　FPS，就是控制每秒调用多少次Update的。调用次数越多，cpu越高，同时说明代码越流畅，中间没明显卡顿。在电脑上，fps是越高越好的，但是移动端就不行了，要控制在稳定的值。webgl建议越低越好。</p>\n<p>　　这里计算方式，用一个int，每次update的时候++；然后计算程序运行时间，相除。最好是用一个间隔，保证两个数都是比较小的容易除的数字。</p>\n<p>　　属性设置就一条代码：</p>\n<blockquote>\n<pre><code>Application.targetFrameRate = 50;\n</code></pre></blockquote>\n<p><img src=\"/contentimg/31/14.png\" alt=\"Result pic 1\" title=\"同时需要注意这里的设置\"></p>\n<p>　　同时要去修改这里。设置为Don’t Sync。不然上面的代码就不起作用了。</p>\n<p>　　但是没效果，还是闪退。而且设置后，反而报错</p>\n<blockquote>\n<p> rendering without using requestAnimationFrame for the main loop</p>\n</blockquote>\n<p>　　搜了一下<a href=\"https://forum.unity.com/threads/rendering-without-using-requestanimationframe-for-the-main-loop.373331/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">论坛</a>  。禁用代码设置fps，就不会报这个错了。</p>\n<h4 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>　　想到当前页面有浮动蜘蛛网脚本，该脚本耗cpu。应该是抢占了。所以独立跳转出去。</p>\n<p>　　同时修改代码。原来的是不断instantiate，这样会消耗大量cpu，换成数组来保存，然后SetActive来控制显示与消失。</p>\n<p>　　问题解决。不会奔溃了。也不用设置fps。</p>\n<p>修改代码：</p>\n<p>　　一开始就生成50个，tile+gem，然后如果这个tile有概率挂有星星，就通过var gem = this.transform.Find(“GemHolder”);找到gem，然后SetActive。</p>\n<p>　　注意每次开局都要把全部set false。同时要注意这个集合，要从头到尾，再从头到尾，不能跳。不然会出现断层。注意被set false的物体，是不能自己激活自己的，需要外面来激活它。</p>\n<p><a href=\"https://blog.csdn.net/w1594731007/article/details/71216169\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">三种查找物体的方式</a>  </p>"},{"title":"有限状态机（FMS）","date":"2018-11-06T12:02:59.000Z","_content":"\n　　 本文介绍有限状态机。一种使用于状态切换的设计模式。\n\n<!-- more -->\n\n　　 有限状态机，是在有状态切换的场景下使用。能减低系统耦合度，也有利于新状态的加入。\n\n## 场景举例\n\n　　 键盘上的“A”、“D”、“W”和“S”，通常意义上，是表示左右上下。\n\n　　 普通写法，是在函数中进行switch判断。但是这样后面新加按键，这个switch就会越来越长。\n\n　　如果我不想用switch呢，那用广播模式？让按键处理类订阅这里的按键输入，如果是自己想处理的按键，就进行处理。那就是弄一个全局委托，新的按键处理类都+=该委托，然后在回调函数中if输入==自己要处理的键，就处理，否则return。\n\n　　当然这里可以优化一下，并不需要广播，增加主题订阅就行，也就是[CSharpMessenger Extended](https://wiki.unity3d.com/index.php/CSharpMessenger_Extended) ，国内无法访问的话，我这里把网页搞下来了一份[原网站复制](/contentimg/35/CSharpMessenger_Extended.html)  。\n\n　　就是用一个字典，保存主题和对应的全局委托。使用者订阅某个主题的委托回调，发送者就是根据特定主题来广播。利用广播模式，能避免类间相互耦合交错。\n\n## 场景升级\n\n　　广播模式适用的场景确实超级多。但是也有它不适合的。\n\n　　假如这个场景中，移动的时候，需要播放转身的动画：假设一开始是朝向W的正前方方向，我按下“D”，准备向左移动，这里需要预先播放一个顺时针转90°的动画，然后才能向左移动一步。\n\n　　这样，播放动画这里，需要“前一个状态”+“下一个状态”，两个状态的记录。虽然在广播模式中可以使用传递两个参数的做法。但是其实还有更好的模式--FMS，有限状态机。\n\n　　这东西github搜了一下，好几个。\n\n1. [Unity3d-Finite-State-Machine](https://github.com/thefuntastic/Unity3d-Finite-State-Machine)  670个星\n1. [FSMsharp](https://github.com/xanathar/FSMsharp)  67个星\n1. [TinyStateMachine](https://github.com/MhmmdAb/TinyStateMachine)  22个星\n1. [Finite-State-Machine-FSM](https://github.com/MarcoMig/Finite-State-Machine-FSM)  9个星 \n\n　　都是写得蛮不错的。可以参考，不过建议了解一下wiki上的[Finite State Machine](https://wiki.unity3d.com/index.php/Finite_State_Machine)  ，这里我也把它load下来了[原网站复制](/contentimg/35/Finite_State_Machine.html) 。\n\n　　讲的是设一个类，保存当前状态，以及下一个可以切换的状态；进行状态切换时，需要执行退出当前状态时需要执行的函数，然后切换为下一个状态，并执行进入该状态需要执行的函数；当然还有惯例执行的函数。例子中是巡逻和追击两个状态切换：正常状态下是巡逻，当距离靠近时促发追击，而被拉长距离后应该丢失跟踪，并恢复巡逻。\n\n　　这里的状态切换，可以通过第三方管理类来操作，也可以在内部惯例执行函数中进行操作。例子中是第三方管理类开放接口，然后在惯例执行函数中进行判断是否需要切换状态。\n\n　　回到开头提的场景，转身动画。\n\n　　这里利用FMS，定义：\n\n1. AddTransition(Transition.W,StateID.WD)-旋转90°\n1. AddTransition(Transition.W,StateID.WS)-旋转180°\n1. AddTransition(Transition.W,StateID.WA)-旋转270°\n\n　　对应设置4x3共12种情况，每种情况中，状态切换前，播放上一个状态退出的动画，这里没有动作；然后状态切换，最后执行新状态进入的动画，就是播放旋转动画；在惯例执行函数中判断是否仍然触发同一个方向的操作，就不转动，直接前进。\n\n\n　　一般状态退出函数，是放一些归位操作，或者是一些释放操作，避免本状态的一些因素影响到新状态。\n\n　　当然这里算过度设计，一下搞了12个新类+枚举，存在大量重复代码。实际场景中，FMS是使用在复杂状态间的切换。像这里的旋转动画，简单搞两个变量，通过4个角度来判断就可以了。\n\n　　实际使用中，像“走”的时候，下一个状态可以是“跑”/“跳”/“蹲”/“停”；但是“跳”的时候，规定要等动作做完后自动转到“停”的状态，也就是必须执行完“跳”到落地的流程，转到“停”的状态，才能切换其他状态，所以“跳”只对应“停”。这样排完全部状态切换后，写逻辑处理时，就不担心写出来多余的状态切换了，因为不存在那种切换，不用额外去写函数处理判断。\n\n　　本文单单理论这样讲不是很好，后面结合吃豆人案例来详细分析该模式的使用吧。\n\n　　结尾也安利一篇博文：[【游戏设计模式】之三 状态模式、有限状态机 & Unity版本实现](https://blog.csdn.net/poem_qianmo/article/details/52824776) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/35FMS.md","raw":"---\ntitle: 有限状态机（FMS）\ndate: 2018-11-06 20:02:59\ncategories:\n  - 设计模式\ntags:\n  - FMS\n---\n\n　　 本文介绍有限状态机。一种使用于状态切换的设计模式。\n\n<!-- more -->\n\n　　 有限状态机，是在有状态切换的场景下使用。能减低系统耦合度，也有利于新状态的加入。\n\n## 场景举例\n\n　　 键盘上的“A”、“D”、“W”和“S”，通常意义上，是表示左右上下。\n\n　　 普通写法，是在函数中进行switch判断。但是这样后面新加按键，这个switch就会越来越长。\n\n　　如果我不想用switch呢，那用广播模式？让按键处理类订阅这里的按键输入，如果是自己想处理的按键，就进行处理。那就是弄一个全局委托，新的按键处理类都+=该委托，然后在回调函数中if输入==自己要处理的键，就处理，否则return。\n\n　　当然这里可以优化一下，并不需要广播，增加主题订阅就行，也就是[CSharpMessenger Extended](https://wiki.unity3d.com/index.php/CSharpMessenger_Extended) ，国内无法访问的话，我这里把网页搞下来了一份[原网站复制](/contentimg/35/CSharpMessenger_Extended.html)  。\n\n　　就是用一个字典，保存主题和对应的全局委托。使用者订阅某个主题的委托回调，发送者就是根据特定主题来广播。利用广播模式，能避免类间相互耦合交错。\n\n## 场景升级\n\n　　广播模式适用的场景确实超级多。但是也有它不适合的。\n\n　　假如这个场景中，移动的时候，需要播放转身的动画：假设一开始是朝向W的正前方方向，我按下“D”，准备向左移动，这里需要预先播放一个顺时针转90°的动画，然后才能向左移动一步。\n\n　　这样，播放动画这里，需要“前一个状态”+“下一个状态”，两个状态的记录。虽然在广播模式中可以使用传递两个参数的做法。但是其实还有更好的模式--FMS，有限状态机。\n\n　　这东西github搜了一下，好几个。\n\n1. [Unity3d-Finite-State-Machine](https://github.com/thefuntastic/Unity3d-Finite-State-Machine)  670个星\n1. [FSMsharp](https://github.com/xanathar/FSMsharp)  67个星\n1. [TinyStateMachine](https://github.com/MhmmdAb/TinyStateMachine)  22个星\n1. [Finite-State-Machine-FSM](https://github.com/MarcoMig/Finite-State-Machine-FSM)  9个星 \n\n　　都是写得蛮不错的。可以参考，不过建议了解一下wiki上的[Finite State Machine](https://wiki.unity3d.com/index.php/Finite_State_Machine)  ，这里我也把它load下来了[原网站复制](/contentimg/35/Finite_State_Machine.html) 。\n\n　　讲的是设一个类，保存当前状态，以及下一个可以切换的状态；进行状态切换时，需要执行退出当前状态时需要执行的函数，然后切换为下一个状态，并执行进入该状态需要执行的函数；当然还有惯例执行的函数。例子中是巡逻和追击两个状态切换：正常状态下是巡逻，当距离靠近时促发追击，而被拉长距离后应该丢失跟踪，并恢复巡逻。\n\n　　这里的状态切换，可以通过第三方管理类来操作，也可以在内部惯例执行函数中进行操作。例子中是第三方管理类开放接口，然后在惯例执行函数中进行判断是否需要切换状态。\n\n　　回到开头提的场景，转身动画。\n\n　　这里利用FMS，定义：\n\n1. AddTransition(Transition.W,StateID.WD)-旋转90°\n1. AddTransition(Transition.W,StateID.WS)-旋转180°\n1. AddTransition(Transition.W,StateID.WA)-旋转270°\n\n　　对应设置4x3共12种情况，每种情况中，状态切换前，播放上一个状态退出的动画，这里没有动作；然后状态切换，最后执行新状态进入的动画，就是播放旋转动画；在惯例执行函数中判断是否仍然触发同一个方向的操作，就不转动，直接前进。\n\n\n　　一般状态退出函数，是放一些归位操作，或者是一些释放操作，避免本状态的一些因素影响到新状态。\n\n　　当然这里算过度设计，一下搞了12个新类+枚举，存在大量重复代码。实际场景中，FMS是使用在复杂状态间的切换。像这里的旋转动画，简单搞两个变量，通过4个角度来判断就可以了。\n\n　　实际使用中，像“走”的时候，下一个状态可以是“跑”/“跳”/“蹲”/“停”；但是“跳”的时候，规定要等动作做完后自动转到“停”的状态，也就是必须执行完“跳”到落地的流程，转到“停”的状态，才能切换其他状态，所以“跳”只对应“停”。这样排完全部状态切换后，写逻辑处理时，就不担心写出来多余的状态切换了，因为不存在那种切换，不用额外去写函数处理判断。\n\n　　本文单单理论这样讲不是很好，后面结合吃豆人案例来详细分析该模式的使用吧。\n\n　　结尾也安利一篇博文：[【游戏设计模式】之三 状态模式、有限状态机 & Unity版本实现](https://blog.csdn.net/poem_qianmo/article/details/52824776) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"35FMS","published":1,"updated":"2018-11-08T09:01:57.516Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgr1o002njo9cw2vq6jg8","content":"<p>　　 本文介绍有限状态机。一种使用于状态切换的设计模式。</p>\n<a id=\"more\"></a>\n<p>　　 有限状态机，是在有状态切换的场景下使用。能减低系统耦合度，也有利于新状态的加入。</p>\n<h2 id=\"场景举例\"><a href=\"#场景举例\" class=\"headerlink\" title=\"场景举例\"></a>场景举例</h2><p>　　 键盘上的“A”、“D”、“W”和“S”，通常意义上，是表示左右上下。</p>\n<p>　　 普通写法，是在函数中进行switch判断。但是这样后面新加按键，这个switch就会越来越长。</p>\n<p>　　如果我不想用switch呢，那用广播模式？让按键处理类订阅这里的按键输入，如果是自己想处理的按键，就进行处理。那就是弄一个全局委托，新的按键处理类都+=该委托，然后在回调函数中if输入==自己要处理的键，就处理，否则return。</p>\n<p>　　当然这里可以优化一下，并不需要广播，增加主题订阅就行，也就是<a href=\"https://wiki.unity3d.com/index.php/CSharpMessenger_Extended\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">CSharpMessenger Extended</a> ，国内无法访问的话，我这里把网页搞下来了一份<a href=\"/contentimg/35/CSharpMessenger_Extended.html\">原网站复制</a>  。</p>\n<p>　　就是用一个字典，保存主题和对应的全局委托。使用者订阅某个主题的委托回调，发送者就是根据特定主题来广播。利用广播模式，能避免类间相互耦合交错。</p>\n<h2 id=\"场景升级\"><a href=\"#场景升级\" class=\"headerlink\" title=\"场景升级\"></a>场景升级</h2><p>　　广播模式适用的场景确实超级多。但是也有它不适合的。</p>\n<p>　　假如这个场景中，移动的时候，需要播放转身的动画：假设一开始是朝向W的正前方方向，我按下“D”，准备向左移动，这里需要预先播放一个顺时针转90°的动画，然后才能向左移动一步。</p>\n<p>　　这样，播放动画这里，需要“前一个状态”+“下一个状态”，两个状态的记录。虽然在广播模式中可以使用传递两个参数的做法。但是其实还有更好的模式–FMS，有限状态机。</p>\n<p>　　这东西github搜了一下，好几个。</p>\n<ol>\n<li><a href=\"https://github.com/thefuntastic/Unity3d-Finite-State-Machine\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity3d-Finite-State-Machine</a>  670个星</li>\n<li><a href=\"https://github.com/xanathar/FSMsharp\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">FSMsharp</a>  67个星</li>\n<li><a href=\"https://github.com/MhmmdAb/TinyStateMachine\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">TinyStateMachine</a>  22个星</li>\n<li><a href=\"https://github.com/MarcoMig/Finite-State-Machine-FSM\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Finite-State-Machine-FSM</a>  9个星 </li>\n</ol>\n<p>　　都是写得蛮不错的。可以参考，不过建议了解一下wiki上的<a href=\"https://wiki.unity3d.com/index.php/Finite_State_Machine\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Finite State Machine</a>  ，这里我也把它load下来了<a href=\"/contentimg/35/Finite_State_Machine.html\">原网站复制</a> 。</p>\n<p>　　讲的是设一个类，保存当前状态，以及下一个可以切换的状态；进行状态切换时，需要执行退出当前状态时需要执行的函数，然后切换为下一个状态，并执行进入该状态需要执行的函数；当然还有惯例执行的函数。例子中是巡逻和追击两个状态切换：正常状态下是巡逻，当距离靠近时促发追击，而被拉长距离后应该丢失跟踪，并恢复巡逻。</p>\n<p>　　这里的状态切换，可以通过第三方管理类来操作，也可以在内部惯例执行函数中进行操作。例子中是第三方管理类开放接口，然后在惯例执行函数中进行判断是否需要切换状态。</p>\n<p>　　回到开头提的场景，转身动画。</p>\n<p>　　这里利用FMS，定义：</p>\n<ol>\n<li>AddTransition(Transition.W,StateID.WD)-旋转90°</li>\n<li>AddTransition(Transition.W,StateID.WS)-旋转180°</li>\n<li>AddTransition(Transition.W,StateID.WA)-旋转270°</li>\n</ol>\n<p>　　对应设置4x3共12种情况，每种情况中，状态切换前，播放上一个状态退出的动画，这里没有动作；然后状态切换，最后执行新状态进入的动画，就是播放旋转动画；在惯例执行函数中判断是否仍然触发同一个方向的操作，就不转动，直接前进。</p>\n<p>　　一般状态退出函数，是放一些归位操作，或者是一些释放操作，避免本状态的一些因素影响到新状态。</p>\n<p>　　当然这里算过度设计，一下搞了12个新类+枚举，存在大量重复代码。实际场景中，FMS是使用在复杂状态间的切换。像这里的旋转动画，简单搞两个变量，通过4个角度来判断就可以了。</p>\n<p>　　实际使用中，像“走”的时候，下一个状态可以是“跑”/“跳”/“蹲”/“停”；但是“跳”的时候，规定要等动作做完后自动转到“停”的状态，也就是必须执行完“跳”到落地的流程，转到“停”的状态，才能切换其他状态，所以“跳”只对应“停”。这样排完全部状态切换后，写逻辑处理时，就不担心写出来多余的状态切换了，因为不存在那种切换，不用额外去写函数处理判断。</p>\n<p>　　本文单单理论这样讲不是很好，后面结合吃豆人案例来详细分析该模式的使用吧。</p>\n<p>　　结尾也安利一篇博文：<a href=\"https://blog.csdn.net/poem_qianmo/article/details/52824776\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">【游戏设计模式】之三 状态模式、有限状态机 &amp; Unity版本实现</a> </p>\n","site":{"data":{}},"excerpt":"<p>　　 本文介绍有限状态机。一种使用于状态切换的设计模式。</p>","more":"<p>　　 有限状态机，是在有状态切换的场景下使用。能减低系统耦合度，也有利于新状态的加入。</p>\n<h2 id=\"场景举例\"><a href=\"#场景举例\" class=\"headerlink\" title=\"场景举例\"></a>场景举例</h2><p>　　 键盘上的“A”、“D”、“W”和“S”，通常意义上，是表示左右上下。</p>\n<p>　　 普通写法，是在函数中进行switch判断。但是这样后面新加按键，这个switch就会越来越长。</p>\n<p>　　如果我不想用switch呢，那用广播模式？让按键处理类订阅这里的按键输入，如果是自己想处理的按键，就进行处理。那就是弄一个全局委托，新的按键处理类都+=该委托，然后在回调函数中if输入==自己要处理的键，就处理，否则return。</p>\n<p>　　当然这里可以优化一下，并不需要广播，增加主题订阅就行，也就是<a href=\"https://wiki.unity3d.com/index.php/CSharpMessenger_Extended\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">CSharpMessenger Extended</a> ，国内无法访问的话，我这里把网页搞下来了一份<a href=\"/contentimg/35/CSharpMessenger_Extended.html\">原网站复制</a>  。</p>\n<p>　　就是用一个字典，保存主题和对应的全局委托。使用者订阅某个主题的委托回调，发送者就是根据特定主题来广播。利用广播模式，能避免类间相互耦合交错。</p>\n<h2 id=\"场景升级\"><a href=\"#场景升级\" class=\"headerlink\" title=\"场景升级\"></a>场景升级</h2><p>　　广播模式适用的场景确实超级多。但是也有它不适合的。</p>\n<p>　　假如这个场景中，移动的时候，需要播放转身的动画：假设一开始是朝向W的正前方方向，我按下“D”，准备向左移动，这里需要预先播放一个顺时针转90°的动画，然后才能向左移动一步。</p>\n<p>　　这样，播放动画这里，需要“前一个状态”+“下一个状态”，两个状态的记录。虽然在广播模式中可以使用传递两个参数的做法。但是其实还有更好的模式–FMS，有限状态机。</p>\n<p>　　这东西github搜了一下，好几个。</p>\n<ol>\n<li><a href=\"https://github.com/thefuntastic/Unity3d-Finite-State-Machine\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity3d-Finite-State-Machine</a>  670个星</li>\n<li><a href=\"https://github.com/xanathar/FSMsharp\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">FSMsharp</a>  67个星</li>\n<li><a href=\"https://github.com/MhmmdAb/TinyStateMachine\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">TinyStateMachine</a>  22个星</li>\n<li><a href=\"https://github.com/MarcoMig/Finite-State-Machine-FSM\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Finite-State-Machine-FSM</a>  9个星 </li>\n</ol>\n<p>　　都是写得蛮不错的。可以参考，不过建议了解一下wiki上的<a href=\"https://wiki.unity3d.com/index.php/Finite_State_Machine\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Finite State Machine</a>  ，这里我也把它load下来了<a href=\"/contentimg/35/Finite_State_Machine.html\">原网站复制</a> 。</p>\n<p>　　讲的是设一个类，保存当前状态，以及下一个可以切换的状态；进行状态切换时，需要执行退出当前状态时需要执行的函数，然后切换为下一个状态，并执行进入该状态需要执行的函数；当然还有惯例执行的函数。例子中是巡逻和追击两个状态切换：正常状态下是巡逻，当距离靠近时促发追击，而被拉长距离后应该丢失跟踪，并恢复巡逻。</p>\n<p>　　这里的状态切换，可以通过第三方管理类来操作，也可以在内部惯例执行函数中进行操作。例子中是第三方管理类开放接口，然后在惯例执行函数中进行判断是否需要切换状态。</p>\n<p>　　回到开头提的场景，转身动画。</p>\n<p>　　这里利用FMS，定义：</p>\n<ol>\n<li>AddTransition(Transition.W,StateID.WD)-旋转90°</li>\n<li>AddTransition(Transition.W,StateID.WS)-旋转180°</li>\n<li>AddTransition(Transition.W,StateID.WA)-旋转270°</li>\n</ol>\n<p>　　对应设置4x3共12种情况，每种情况中，状态切换前，播放上一个状态退出的动画，这里没有动作；然后状态切换，最后执行新状态进入的动画，就是播放旋转动画；在惯例执行函数中判断是否仍然触发同一个方向的操作，就不转动，直接前进。</p>\n<p>　　一般状态退出函数，是放一些归位操作，或者是一些释放操作，避免本状态的一些因素影响到新状态。</p>\n<p>　　当然这里算过度设计，一下搞了12个新类+枚举，存在大量重复代码。实际场景中，FMS是使用在复杂状态间的切换。像这里的旋转动画，简单搞两个变量，通过4个角度来判断就可以了。</p>\n<p>　　实际使用中，像“走”的时候，下一个状态可以是“跑”/“跳”/“蹲”/“停”；但是“跳”的时候，规定要等动作做完后自动转到“停”的状态，也就是必须执行完“跳”到落地的流程，转到“停”的状态，才能切换其他状态，所以“跳”只对应“停”。这样排完全部状态切换后，写逻辑处理时，就不担心写出来多余的状态切换了，因为不存在那种切换，不用额外去写函数处理判断。</p>\n<p>　　本文单单理论这样讲不是很好，后面结合吃豆人案例来详细分析该模式的使用吧。</p>\n<p>　　结尾也安利一篇博文：<a href=\"https://blog.csdn.net/poem_qianmo/article/details/52824776\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">【游戏设计模式】之三 状态模式、有限状态机 &amp; Unity版本实现</a> </p>"},{"title":"A* 寻路","date":"2018-11-08T10:02:59.000Z","_content":"\n　　 本文介绍\n\n<!-- more -->\n\n　　 有限状态机，是在有状态切换的场景下使用。能减低系统耦合度，也有利于新状态的加入。\n\n## 场景举例\n\n\n","source":"_posts/36Astar.md","raw":"---\ntitle: A* 寻路\ndate: 2018-11-08 18:02:59\ncategories:\n  - 算法\ntags:\n  - 寻路\n---\n\n　　 本文介绍\n\n<!-- more -->\n\n　　 有限状态机，是在有状态切换的场景下使用。能减低系统耦合度，也有利于新状态的加入。\n\n## 场景举例\n\n\n","slug":"36Astar","published":1,"updated":"2018-11-08T09:25:38.115Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgr1p002ojo9czju08sp9","content":"<p>　　 本文介绍</p>\n<a id=\"more\"></a>\n<p>　　 有限状态机，是在有状态切换的场景下使用。能减低系统耦合度，也有利于新状态的加入。</p>\n<h2 id=\"场景举例\"><a href=\"#场景举例\" class=\"headerlink\" title=\"场景举例\"></a>场景举例</h2>","site":{"data":{}},"excerpt":"<p>　　 本文介绍</p>","more":"<p>　　 有限状态机，是在有状态切换的场景下使用。能减低系统耦合度，也有利于新状态的加入。</p>\n<h2 id=\"场景举例\"><a href=\"#场景举例\" class=\"headerlink\" title=\"场景举例\"></a>场景举例</h2>"},{"title":"闭包Closure","date":"2018-10-15T14:55:58.000Z","_content":"\t\n　　本文记录在编程中遇到的一个疑难杂症，for循环中的异步赋值结果和理想情况对不上：全部赋值成同一个值。\n\n<!-- more -->\n　　先贴代码：\n\n``` java\n    for (int i = 0; i < 10; i++)\n    {\n        System.Threading.ThreadPool.QueueUserWorkItem((o) =>\n        {\n            Console.WriteLine(i);\n        });\n    }\n```\n\n　　上面这段代码，照理是进行异步处理，开了线程池来打印。理想输出是0~10这样。\n\n　　但结果：\n\n![Result pic 1](/contentimg/5/1.png \"实际输出1\")\n\n![Result pic 2](/contentimg/5/2.png \"理想输出1\")\n\n　　这里就是闭包现象。\n\n[闭包：](https://www.cnblogs.com/jiejie_peng/p/3701070.html)\n\n>　　***内层的函数可以引用包含在它外层的函数的变量，即使外层函数的执行已经终止。但该变量提供的值并非变量创建时的值，而是在父函数范围内的最终值。***\n\n　　这里有篇博文也介绍这个，上面的[概念](https://www.cnblogs.com/jiejie_peng/p/3701070.html) 是复制该博文过来的。\n\n　　这里简单理解，就是变量i，在lamdb表达式的时候，传的是地址，而实际上，这个地址上的值已经执行完for变成10了（理想情况下，传的应该是值0~9）。\n\n　　照这样理解，可以搞一个中间缓冲值（即每次传的都不是同一个地址）来处理：（输出没按照顺序，是因为多核处理问题，这里不进行讨论）\n\n![Result pic 3](/contentimg/5/3.png \"使用中间缓冲值\")\n\n　　明显已经没有重复值了，但是记住，地址！就是说tmp的声明必须在for内，如果放到外面（或者放在线程池里面）：\n\n![Result pic 4](/contentimg/5/4.png \"错误使用中间缓冲值\")\n\n　　神秘现象，直接是9，不是10了？？？好吧，不小心给自己挖了个坑，接下来开始填坑吧。分析为什么是9，不是10：\n\n![Result pic 5](/contentimg/5/5.png \"分析：错误使用中间缓冲值\")\n\n　　循环中确实是0~9，但是最后i++变成10，进行i&lt;10的判断后false，不进入循环了，所以i最后结果为10，tmp=9.  坑解决。\n\n　　但这里又有新坑，按前面的理解，不是全部应该“in :9___10”，怎么还出现\"in :6___6\"的？\n\n![Result pic 6](/contentimg/5/6.png \"console占用较多的进程时间\")\n\n　　其实是因为console占用了时间，导致线程池的在for还未执行完的时候就开始了（线程池创建后还得等待分配资源才能启动，所以有延迟），所以就可以看到，前面数字很乱（for还在执行，所以数字还在变），到后面才变成全部9（for执行完毕）。\n\n　　这里有多线程的知识，这里暂时不讨论，简单讲，如string类型的，因为是每个线程会复制一份到自己环境中操作，修改完毕后才通知回主地址，如果这时出现A、B线程同时拷贝了数据去操作，又同时通知回来，就导致脏数据产生（互相覆盖），所以就得用多线程锁（实质是内存片段锁的处理，锁住主地址的访问，不允许拷贝处理，只能排队，变成类似单线程操作）来处理。\n\n下面贴一下内存地址部分测试的demo，证明用的是同一个地址：\n\n``` java\n    public class test\n    {\n        //地址不变\n        public int num;\n        //string的内容变时，实际是重新占用内存，然后存入新值，所以只要内容发生变化，内存肯定变\n        public string str;\n \n        public void MethodA()\n        {\n            for (int i = 0; i < 10; i++)\n            {\n                 System.Threading.ThreadPool.QueueUserWorkItem((o) =>\n                {\n                    num = i;\n                    str = i.ToString();\n                    GetAddr();\n                });\n            }\n        }\n \n        public void MethodB()\n        {\n            for (int i = 0; i < 10; i++)\n            {\n                //System.Threading.ThreadPool.QueueUserWorkItem((o) =>\n                //{\n                    num = i;\n                    str = i.ToString();\n                    GetAddr();\n                //});\n            }\n        }\n \n \n        unsafe void GetAddr()\n        {\n            //这个是类对象，放在堆里面\n            fixed (int* p = &num)\n            {\n                Console.WriteLine(\"{0}__:Address of numbe:0x{1:x}\", num, (int)p);\n            }\n \n            //fixed(char* p= str)\n            //{\n            //    Console.WriteLine(\"{0}__:Address of char:0x{1:x}\", str, (int)p);\n            //}\n \n            //GetAddrZ(num);\n        }\n \n        ////弄成函数传值的话，地址是变化的，因为是一份拷贝\n        //unsafe void GetAddrZ(int n)\n        //{\n        //    //获取栈上变量的地址\n        //    int* p = &n;\n        //    Console.WriteLine(\"{0}__:Address of n:0x{1:x}\\n\", num, (int)p);\n        //}\n    }\n```\n\n　　先使用int：\n\n![Result pic 7](/contentimg/5/7.png \"整数型地址情况\")\n\n　　接下来是string：\n\n![Result pic 8](/contentimg/5/8.png \"字符串地址情况\")\n\n　　这里的main函数是：\n\n``` java\n    static void Main(string[] args)\n    {\n        test t = new test();\n        t.MethodA();\n        Console.WriteLine();\n        Console.WriteLine();\n        t.MethodB();\n \n        Console.ReadLine();\n    }\n```\n\n　　当然这里也会出现这种情况：\n\n![Result pic 9](/contentimg/5/9.png \"代码执行顺序有变化\")\n\n　　发现这里上面本应该一致的地址，也会出现不同。\n\n　　重复多次执行经常出现这种情况。\n\n![Result pic 10](/contentimg/5/10.png \"地址发生变化\")\n\n　　这里就是引用类型在多线程情况下的问题。\n\n　　这里简单提及“原子操作volatile”：\n\n![Result pic 11](/contentimg/5/11.png \"原子操作volatile\")\n\n　　原子操作 volatile。通知编译器，不允许拷贝，全部访问都是去主地址拿。算是最简单的多线程处理操作，实质这里没使用到加锁，还是会出现问题的：\n\n![Result pic 12](/contentimg/5/12.png \"原子操作volatile出问题\")\n\n这里放一下简单的加锁操作：\n\n``` java\n    private object lockstr = new object();\n    private volatile string _str = \"\";\n    public string Str\n    {\n        get { return _str; }\n        set\n        {\n            lock (lockstr)\n            {\n                _str = value;\n            }\n        }\n    }\n```\n\n![Result pic 13](/contentimg/5/13.png \"加锁操作情况\")\n\n　　多线程内容超级多，等我整理好后再发专门的主题。这里只提初级的加锁方式lock(obj)。\n\n\n 本文测试程序工程可以从git直接获取：\n \n git代码库: [Codes](https://github.com/YaojiaxinPC/hexoblog/tree/master/TestClosure)\n ","source":"_posts/5Closure.md","raw":"---\ntitle: 闭包Closure\ndate: 2018-10-15 22:55:58\ncategories:\n  - 编程疑难杂症\ntags:\n  - C#\n  - 闭包  \n---\n\t\n　　本文记录在编程中遇到的一个疑难杂症，for循环中的异步赋值结果和理想情况对不上：全部赋值成同一个值。\n\n<!-- more -->\n　　先贴代码：\n\n``` java\n    for (int i = 0; i < 10; i++)\n    {\n        System.Threading.ThreadPool.QueueUserWorkItem((o) =>\n        {\n            Console.WriteLine(i);\n        });\n    }\n```\n\n　　上面这段代码，照理是进行异步处理，开了线程池来打印。理想输出是0~10这样。\n\n　　但结果：\n\n![Result pic 1](/contentimg/5/1.png \"实际输出1\")\n\n![Result pic 2](/contentimg/5/2.png \"理想输出1\")\n\n　　这里就是闭包现象。\n\n[闭包：](https://www.cnblogs.com/jiejie_peng/p/3701070.html)\n\n>　　***内层的函数可以引用包含在它外层的函数的变量，即使外层函数的执行已经终止。但该变量提供的值并非变量创建时的值，而是在父函数范围内的最终值。***\n\n　　这里有篇博文也介绍这个，上面的[概念](https://www.cnblogs.com/jiejie_peng/p/3701070.html) 是复制该博文过来的。\n\n　　这里简单理解，就是变量i，在lamdb表达式的时候，传的是地址，而实际上，这个地址上的值已经执行完for变成10了（理想情况下，传的应该是值0~9）。\n\n　　照这样理解，可以搞一个中间缓冲值（即每次传的都不是同一个地址）来处理：（输出没按照顺序，是因为多核处理问题，这里不进行讨论）\n\n![Result pic 3](/contentimg/5/3.png \"使用中间缓冲值\")\n\n　　明显已经没有重复值了，但是记住，地址！就是说tmp的声明必须在for内，如果放到外面（或者放在线程池里面）：\n\n![Result pic 4](/contentimg/5/4.png \"错误使用中间缓冲值\")\n\n　　神秘现象，直接是9，不是10了？？？好吧，不小心给自己挖了个坑，接下来开始填坑吧。分析为什么是9，不是10：\n\n![Result pic 5](/contentimg/5/5.png \"分析：错误使用中间缓冲值\")\n\n　　循环中确实是0~9，但是最后i++变成10，进行i&lt;10的判断后false，不进入循环了，所以i最后结果为10，tmp=9.  坑解决。\n\n　　但这里又有新坑，按前面的理解，不是全部应该“in :9___10”，怎么还出现\"in :6___6\"的？\n\n![Result pic 6](/contentimg/5/6.png \"console占用较多的进程时间\")\n\n　　其实是因为console占用了时间，导致线程池的在for还未执行完的时候就开始了（线程池创建后还得等待分配资源才能启动，所以有延迟），所以就可以看到，前面数字很乱（for还在执行，所以数字还在变），到后面才变成全部9（for执行完毕）。\n\n　　这里有多线程的知识，这里暂时不讨论，简单讲，如string类型的，因为是每个线程会复制一份到自己环境中操作，修改完毕后才通知回主地址，如果这时出现A、B线程同时拷贝了数据去操作，又同时通知回来，就导致脏数据产生（互相覆盖），所以就得用多线程锁（实质是内存片段锁的处理，锁住主地址的访问，不允许拷贝处理，只能排队，变成类似单线程操作）来处理。\n\n下面贴一下内存地址部分测试的demo，证明用的是同一个地址：\n\n``` java\n    public class test\n    {\n        //地址不变\n        public int num;\n        //string的内容变时，实际是重新占用内存，然后存入新值，所以只要内容发生变化，内存肯定变\n        public string str;\n \n        public void MethodA()\n        {\n            for (int i = 0; i < 10; i++)\n            {\n                 System.Threading.ThreadPool.QueueUserWorkItem((o) =>\n                {\n                    num = i;\n                    str = i.ToString();\n                    GetAddr();\n                });\n            }\n        }\n \n        public void MethodB()\n        {\n            for (int i = 0; i < 10; i++)\n            {\n                //System.Threading.ThreadPool.QueueUserWorkItem((o) =>\n                //{\n                    num = i;\n                    str = i.ToString();\n                    GetAddr();\n                //});\n            }\n        }\n \n \n        unsafe void GetAddr()\n        {\n            //这个是类对象，放在堆里面\n            fixed (int* p = &num)\n            {\n                Console.WriteLine(\"{0}__:Address of numbe:0x{1:x}\", num, (int)p);\n            }\n \n            //fixed(char* p= str)\n            //{\n            //    Console.WriteLine(\"{0}__:Address of char:0x{1:x}\", str, (int)p);\n            //}\n \n            //GetAddrZ(num);\n        }\n \n        ////弄成函数传值的话，地址是变化的，因为是一份拷贝\n        //unsafe void GetAddrZ(int n)\n        //{\n        //    //获取栈上变量的地址\n        //    int* p = &n;\n        //    Console.WriteLine(\"{0}__:Address of n:0x{1:x}\\n\", num, (int)p);\n        //}\n    }\n```\n\n　　先使用int：\n\n![Result pic 7](/contentimg/5/7.png \"整数型地址情况\")\n\n　　接下来是string：\n\n![Result pic 8](/contentimg/5/8.png \"字符串地址情况\")\n\n　　这里的main函数是：\n\n``` java\n    static void Main(string[] args)\n    {\n        test t = new test();\n        t.MethodA();\n        Console.WriteLine();\n        Console.WriteLine();\n        t.MethodB();\n \n        Console.ReadLine();\n    }\n```\n\n　　当然这里也会出现这种情况：\n\n![Result pic 9](/contentimg/5/9.png \"代码执行顺序有变化\")\n\n　　发现这里上面本应该一致的地址，也会出现不同。\n\n　　重复多次执行经常出现这种情况。\n\n![Result pic 10](/contentimg/5/10.png \"地址发生变化\")\n\n　　这里就是引用类型在多线程情况下的问题。\n\n　　这里简单提及“原子操作volatile”：\n\n![Result pic 11](/contentimg/5/11.png \"原子操作volatile\")\n\n　　原子操作 volatile。通知编译器，不允许拷贝，全部访问都是去主地址拿。算是最简单的多线程处理操作，实质这里没使用到加锁，还是会出现问题的：\n\n![Result pic 12](/contentimg/5/12.png \"原子操作volatile出问题\")\n\n这里放一下简单的加锁操作：\n\n``` java\n    private object lockstr = new object();\n    private volatile string _str = \"\";\n    public string Str\n    {\n        get { return _str; }\n        set\n        {\n            lock (lockstr)\n            {\n                _str = value;\n            }\n        }\n    }\n```\n\n![Result pic 13](/contentimg/5/13.png \"加锁操作情况\")\n\n　　多线程内容超级多，等我整理好后再发专门的主题。这里只提初级的加锁方式lock(obj)。\n\n\n 本文测试程序工程可以从git直接获取：\n \n git代码库: [Codes](https://github.com/YaojiaxinPC/hexoblog/tree/master/TestClosure)\n ","slug":"5Closure","published":1,"updated":"2018-10-18T01:58:18.521Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgr1r002sjo9cn80njwev","content":"<p>　　本文记录在编程中遇到的一个疑难杂症，for循环中的异步赋值结果和理想情况对不上：全部赋值成同一个值。</p>\n<a id=\"more\"></a>\n<p>　　先贴代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    System.Threading.ThreadPool.QueueUserWorkItem((o) =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(i);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　上面这段代码，照理是进行异步处理，开了线程池来打印。理想输出是0~10这样。</p>\n<p>　　但结果：</p>\n<p><img src=\"/contentimg/5/1.png\" alt=\"Result pic 1\" title=\"实际输出1\"></p>\n<p><img src=\"/contentimg/5/2.png\" alt=\"Result pic 2\" title=\"理想输出1\"></p>\n<p>　　这里就是闭包现象。</p>\n<p><a href=\"https://www.cnblogs.com/jiejie_peng/p/3701070.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">闭包：</a></p>\n<blockquote>\n<p>　　<strong><em>内层的函数可以引用包含在它外层的函数的变量，即使外层函数的执行已经终止。但该变量提供的值并非变量创建时的值，而是在父函数范围内的最终值。</em></strong></p>\n</blockquote>\n<p>　　这里有篇博文也介绍这个，上面的<a href=\"https://www.cnblogs.com/jiejie_peng/p/3701070.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">概念</a> 是复制该博文过来的。</p>\n<p>　　这里简单理解，就是变量i，在lamdb表达式的时候，传的是地址，而实际上，这个地址上的值已经执行完for变成10了（理想情况下，传的应该是值0~9）。</p>\n<p>　　照这样理解，可以搞一个中间缓冲值（即每次传的都不是同一个地址）来处理：（输出没按照顺序，是因为多核处理问题，这里不进行讨论）</p>\n<p><img src=\"/contentimg/5/3.png\" alt=\"Result pic 3\" title=\"使用中间缓冲值\"></p>\n<p>　　明显已经没有重复值了，但是记住，地址！就是说tmp的声明必须在for内，如果放到外面（或者放在线程池里面）：</p>\n<p><img src=\"/contentimg/5/4.png\" alt=\"Result pic 4\" title=\"错误使用中间缓冲值\"></p>\n<p>　　神秘现象，直接是9，不是10了？？？好吧，不小心给自己挖了个坑，接下来开始填坑吧。分析为什么是9，不是10：</p>\n<p><img src=\"/contentimg/5/5.png\" alt=\"Result pic 5\" title=\"分析：错误使用中间缓冲值\"></p>\n<p>　　循环中确实是0~9，但是最后i++变成10，进行i&lt;10的判断后false，不进入循环了，所以i最后结果为10，tmp=9.  坑解决。</p>\n<p>　　但这里又有新坑，按前面的理解，不是全部应该“in :9___10”，怎么还出现”in :6___6”的？</p>\n<p><img src=\"/contentimg/5/6.png\" alt=\"Result pic 6\" title=\"console占用较多的进程时间\"></p>\n<p>　　其实是因为console占用了时间，导致线程池的在for还未执行完的时候就开始了（线程池创建后还得等待分配资源才能启动，所以有延迟），所以就可以看到，前面数字很乱（for还在执行，所以数字还在变），到后面才变成全部9（for执行完毕）。</p>\n<p>　　这里有多线程的知识，这里暂时不讨论，简单讲，如string类型的，因为是每个线程会复制一份到自己环境中操作，修改完毕后才通知回主地址，如果这时出现A、B线程同时拷贝了数据去操作，又同时通知回来，就导致脏数据产生（互相覆盖），所以就得用多线程锁（实质是内存片段锁的处理，锁住主地址的访问，不允许拷贝处理，只能排队，变成类似单线程操作）来处理。</p>\n<p>下面贴一下内存地址部分测试的demo，证明用的是同一个地址：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//地址不变</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num;</span><br><span class=\"line\">    <span class=\"comment\">//string的内容变时，实际是重新占用内存，然后存入新值，所以只要内容发生变化，内存肯定变</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> string str;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">MethodA</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">             System.Threading.ThreadPool.QueueUserWorkItem((o) =&gt;</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                num = i;</span><br><span class=\"line\">                str = i.ToString();</span><br><span class=\"line\">                GetAddr();</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">MethodB</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//System.Threading.ThreadPool.QueueUserWorkItem((o) =&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">//&#123;</span></span><br><span class=\"line\">                num = i;</span><br><span class=\"line\">                str = i.ToString();</span><br><span class=\"line\">                GetAddr();</span><br><span class=\"line\">            <span class=\"comment\">//&#125;);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\">unsafe <span class=\"keyword\">void</span> <span class=\"title\">GetAddr</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//这个是类对象，放在堆里面</span></span><br><span class=\"line\">        fixed (<span class=\"keyword\">int</span>* p = &amp;num)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"&#123;0&#125;__:Address of numbe:0x&#123;1:x&#125;\"</span>, num, (<span class=\"keyword\">int</span>)p);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//fixed(char* p= str)</span></span><br><span class=\"line\">        <span class=\"comment\">//&#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//    Console.WriteLine(\"&#123;0&#125;__:Address of char:0x&#123;1:x&#125;\", str, (int)p);</span></span><br><span class=\"line\">        <span class=\"comment\">//&#125;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//GetAddrZ(num);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">////弄成函数传值的话，地址是变化的，因为是一份拷贝</span></span><br><span class=\"line\">    <span class=\"comment\">//unsafe void GetAddrZ(int n)</span></span><br><span class=\"line\">    <span class=\"comment\">//&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//    //获取栈上变量的地址</span></span><br><span class=\"line\">    <span class=\"comment\">//    int* p = &amp;n;</span></span><br><span class=\"line\">    <span class=\"comment\">//    Console.WriteLine(\"&#123;0&#125;__:Address of n:0x&#123;1:x&#125;\\n\", num, (int)p);</span></span><br><span class=\"line\">    <span class=\"comment\">//&#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　先使用int：</p>\n<p><img src=\"/contentimg/5/7.png\" alt=\"Result pic 7\" title=\"整数型地址情况\"></p>\n<p>　　接下来是string：</p>\n<p><img src=\"/contentimg/5/8.png\" alt=\"Result pic 8\" title=\"字符串地址情况\"></p>\n<p>　　这里的main函数是：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(string[] args)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    test t = <span class=\"keyword\">new</span> test();</span><br><span class=\"line\">    t.MethodA();</span><br><span class=\"line\">    Console.WriteLine();</span><br><span class=\"line\">    Console.WriteLine();</span><br><span class=\"line\">    t.MethodB();</span><br><span class=\"line\"> </span><br><span class=\"line\">    Console.ReadLine();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　当然这里也会出现这种情况：</p>\n<p><img src=\"/contentimg/5/9.png\" alt=\"Result pic 9\" title=\"代码执行顺序有变化\"></p>\n<p>　　发现这里上面本应该一致的地址，也会出现不同。</p>\n<p>　　重复多次执行经常出现这种情况。</p>\n<p><img src=\"/contentimg/5/10.png\" alt=\"Result pic 10\" title=\"地址发生变化\"></p>\n<p>　　这里就是引用类型在多线程情况下的问题。</p>\n<p>　　这里简单提及“原子操作volatile”：</p>\n<p><img src=\"/contentimg/5/11.png\" alt=\"Result pic 11\" title=\"原子操作volatile\"></p>\n<p>　　原子操作 volatile。通知编译器，不允许拷贝，全部访问都是去主地址拿。算是最简单的多线程处理操作，实质这里没使用到加锁，还是会出现问题的：</p>\n<p><img src=\"/contentimg/5/12.png\" alt=\"Result pic 12\" title=\"原子操作volatile出问题\"></p>\n<p>这里放一下简单的加锁操作：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> object lockstr = <span class=\"keyword\">new</span> object();</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> string _str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> string Str</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    get &#123; <span class=\"keyword\">return</span> _str; &#125;</span><br><span class=\"line\">    set</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        lock (lockstr)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _str = value;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/5/13.png\" alt=\"Result pic 13\" title=\"加锁操作情况\"></p>\n<p>　　多线程内容超级多，等我整理好后再发专门的主题。这里只提初级的加锁方式lock(obj)。</p>\n<p> 本文测试程序工程可以从git直接获取：</p>\n<p> git代码库: <a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/TestClosure\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Codes</a></p>\n","site":{"data":{}},"excerpt":"<p>　　本文记录在编程中遇到的一个疑难杂症，for循环中的异步赋值结果和理想情况对不上：全部赋值成同一个值。</p>","more":"<p>　　先贴代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    System.Threading.ThreadPool.QueueUserWorkItem((o) =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(i);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　上面这段代码，照理是进行异步处理，开了线程池来打印。理想输出是0~10这样。</p>\n<p>　　但结果：</p>\n<p><img src=\"/contentimg/5/1.png\" alt=\"Result pic 1\" title=\"实际输出1\"></p>\n<p><img src=\"/contentimg/5/2.png\" alt=\"Result pic 2\" title=\"理想输出1\"></p>\n<p>　　这里就是闭包现象。</p>\n<p><a href=\"https://www.cnblogs.com/jiejie_peng/p/3701070.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">闭包：</a></p>\n<blockquote>\n<p>　　<strong><em>内层的函数可以引用包含在它外层的函数的变量，即使外层函数的执行已经终止。但该变量提供的值并非变量创建时的值，而是在父函数范围内的最终值。</em></strong></p>\n</blockquote>\n<p>　　这里有篇博文也介绍这个，上面的<a href=\"https://www.cnblogs.com/jiejie_peng/p/3701070.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">概念</a> 是复制该博文过来的。</p>\n<p>　　这里简单理解，就是变量i，在lamdb表达式的时候，传的是地址，而实际上，这个地址上的值已经执行完for变成10了（理想情况下，传的应该是值0~9）。</p>\n<p>　　照这样理解，可以搞一个中间缓冲值（即每次传的都不是同一个地址）来处理：（输出没按照顺序，是因为多核处理问题，这里不进行讨论）</p>\n<p><img src=\"/contentimg/5/3.png\" alt=\"Result pic 3\" title=\"使用中间缓冲值\"></p>\n<p>　　明显已经没有重复值了，但是记住，地址！就是说tmp的声明必须在for内，如果放到外面（或者放在线程池里面）：</p>\n<p><img src=\"/contentimg/5/4.png\" alt=\"Result pic 4\" title=\"错误使用中间缓冲值\"></p>\n<p>　　神秘现象，直接是9，不是10了？？？好吧，不小心给自己挖了个坑，接下来开始填坑吧。分析为什么是9，不是10：</p>\n<p><img src=\"/contentimg/5/5.png\" alt=\"Result pic 5\" title=\"分析：错误使用中间缓冲值\"></p>\n<p>　　循环中确实是0~9，但是最后i++变成10，进行i&lt;10的判断后false，不进入循环了，所以i最后结果为10，tmp=9.  坑解决。</p>\n<p>　　但这里又有新坑，按前面的理解，不是全部应该“in :9___10”，怎么还出现”in :6___6”的？</p>\n<p><img src=\"/contentimg/5/6.png\" alt=\"Result pic 6\" title=\"console占用较多的进程时间\"></p>\n<p>　　其实是因为console占用了时间，导致线程池的在for还未执行完的时候就开始了（线程池创建后还得等待分配资源才能启动，所以有延迟），所以就可以看到，前面数字很乱（for还在执行，所以数字还在变），到后面才变成全部9（for执行完毕）。</p>\n<p>　　这里有多线程的知识，这里暂时不讨论，简单讲，如string类型的，因为是每个线程会复制一份到自己环境中操作，修改完毕后才通知回主地址，如果这时出现A、B线程同时拷贝了数据去操作，又同时通知回来，就导致脏数据产生（互相覆盖），所以就得用多线程锁（实质是内存片段锁的处理，锁住主地址的访问，不允许拷贝处理，只能排队，变成类似单线程操作）来处理。</p>\n<p>下面贴一下内存地址部分测试的demo，证明用的是同一个地址：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//地址不变</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num;</span><br><span class=\"line\">    <span class=\"comment\">//string的内容变时，实际是重新占用内存，然后存入新值，所以只要内容发生变化，内存肯定变</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> string str;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">MethodA</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">             System.Threading.ThreadPool.QueueUserWorkItem((o) =&gt;</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                num = i;</span><br><span class=\"line\">                str = i.ToString();</span><br><span class=\"line\">                GetAddr();</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">MethodB</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//System.Threading.ThreadPool.QueueUserWorkItem((o) =&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">//&#123;</span></span><br><span class=\"line\">                num = i;</span><br><span class=\"line\">                str = i.ToString();</span><br><span class=\"line\">                GetAddr();</span><br><span class=\"line\">            <span class=\"comment\">//&#125;);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\">unsafe <span class=\"keyword\">void</span> <span class=\"title\">GetAddr</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//这个是类对象，放在堆里面</span></span><br><span class=\"line\">        fixed (<span class=\"keyword\">int</span>* p = &amp;num)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"&#123;0&#125;__:Address of numbe:0x&#123;1:x&#125;\"</span>, num, (<span class=\"keyword\">int</span>)p);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//fixed(char* p= str)</span></span><br><span class=\"line\">        <span class=\"comment\">//&#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//    Console.WriteLine(\"&#123;0&#125;__:Address of char:0x&#123;1:x&#125;\", str, (int)p);</span></span><br><span class=\"line\">        <span class=\"comment\">//&#125;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//GetAddrZ(num);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">////弄成函数传值的话，地址是变化的，因为是一份拷贝</span></span><br><span class=\"line\">    <span class=\"comment\">//unsafe void GetAddrZ(int n)</span></span><br><span class=\"line\">    <span class=\"comment\">//&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//    //获取栈上变量的地址</span></span><br><span class=\"line\">    <span class=\"comment\">//    int* p = &amp;n;</span></span><br><span class=\"line\">    <span class=\"comment\">//    Console.WriteLine(\"&#123;0&#125;__:Address of n:0x&#123;1:x&#125;\\n\", num, (int)p);</span></span><br><span class=\"line\">    <span class=\"comment\">//&#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　先使用int：</p>\n<p><img src=\"/contentimg/5/7.png\" alt=\"Result pic 7\" title=\"整数型地址情况\"></p>\n<p>　　接下来是string：</p>\n<p><img src=\"/contentimg/5/8.png\" alt=\"Result pic 8\" title=\"字符串地址情况\"></p>\n<p>　　这里的main函数是：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(string[] args)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    test t = <span class=\"keyword\">new</span> test();</span><br><span class=\"line\">    t.MethodA();</span><br><span class=\"line\">    Console.WriteLine();</span><br><span class=\"line\">    Console.WriteLine();</span><br><span class=\"line\">    t.MethodB();</span><br><span class=\"line\"> </span><br><span class=\"line\">    Console.ReadLine();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　当然这里也会出现这种情况：</p>\n<p><img src=\"/contentimg/5/9.png\" alt=\"Result pic 9\" title=\"代码执行顺序有变化\"></p>\n<p>　　发现这里上面本应该一致的地址，也会出现不同。</p>\n<p>　　重复多次执行经常出现这种情况。</p>\n<p><img src=\"/contentimg/5/10.png\" alt=\"Result pic 10\" title=\"地址发生变化\"></p>\n<p>　　这里就是引用类型在多线程情况下的问题。</p>\n<p>　　这里简单提及“原子操作volatile”：</p>\n<p><img src=\"/contentimg/5/11.png\" alt=\"Result pic 11\" title=\"原子操作volatile\"></p>\n<p>　　原子操作 volatile。通知编译器，不允许拷贝，全部访问都是去主地址拿。算是最简单的多线程处理操作，实质这里没使用到加锁，还是会出现问题的：</p>\n<p><img src=\"/contentimg/5/12.png\" alt=\"Result pic 12\" title=\"原子操作volatile出问题\"></p>\n<p>这里放一下简单的加锁操作：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> object lockstr = <span class=\"keyword\">new</span> object();</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> string _str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> string Str</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    get &#123; <span class=\"keyword\">return</span> _str; &#125;</span><br><span class=\"line\">    set</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        lock (lockstr)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _str = value;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/5/13.png\" alt=\"Result pic 13\" title=\"加锁操作情况\"></p>\n<p>　　多线程内容超级多，等我整理好后再发专门的主题。这里只提初级的加锁方式lock(obj)。</p>\n<p> 本文测试程序工程可以从git直接获取：</p>\n<p> git代码库: <a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/TestClosure\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Codes</a></p>"},{"title":"abowman's demo","date":"2018-10-19T16:07:59.000Z","_content":"\n　　本文分享[swfobject](https://github.com/swfobject/swfobject)   插件的简单使用，展示abowman上面的3个小挂饰。\n\n<!-- more -->\n\n　　swfobject的git代码里面已经包了一个自动生成html的功能，所以实际是去找swf动画，加进去就可以看到效果了。\n\n　　小鱼挂饰：<a id=\"download\" href=\"/unitydemo/1/fish.swf\" download=\"fish.swf\"><i class=\"fa fa-download\"></i><span> Download fish.swf </span>\n</a>\n\n<p><div style=\"width:100%; height:450px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"400\" src=\"/unitydemo/1/fish.html\"/></div></p>\n\n\n　　宠物鼠挂饰：<a id=\"download\" href=\"/unitydemo/1/hamster.swf\" download=\"hamster.swf\"><i class=\"fa fa-download\"></i><span> Download hamster.swf </span>\n</a>\n\n<p><div style=\"width:100%; height:450px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"400\" src=\"/unitydemo/1/hamster.html\"/></div></p>\n\n\n　　企鹅群挂饰：<a id=\"download\" href=\"/unitydemo/1/penguins.swf\" download=\"penguins.swf\"><i class=\"fa fa-download\"></i><span> Download penguins.swf </span>\n</a>\n\n<p><div style=\"width:100%; height:450px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"400\" src=\"/unitydemo/1/penguins.html\"/></div></p>\n\n\n\n![Result pic 1](/contentimg/21/1.png \"html代码自动生成\")\n","source":"_posts/21swfobjectdemo.md","raw":"---\ntitle: abowman's demo\ndate: 2018-10-20 00:07:59\ncategories:\n  - 前端\ntags:\n  - abowman\n  - swf\n  - flash\n  - swfobject\n---\n\n　　本文分享[swfobject](https://github.com/swfobject/swfobject)   插件的简单使用，展示abowman上面的3个小挂饰。\n\n<!-- more -->\n\n　　swfobject的git代码里面已经包了一个自动生成html的功能，所以实际是去找swf动画，加进去就可以看到效果了。\n\n　　小鱼挂饰：<a id=\"download\" href=\"/unitydemo/1/fish.swf\" download=\"fish.swf\"><i class=\"fa fa-download\"></i><span> Download fish.swf </span>\n</a>\n\n<p><div style=\"width:100%; height:450px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"400\" src=\"/unitydemo/1/fish.html\"/></div></p>\n\n\n　　宠物鼠挂饰：<a id=\"download\" href=\"/unitydemo/1/hamster.swf\" download=\"hamster.swf\"><i class=\"fa fa-download\"></i><span> Download hamster.swf </span>\n</a>\n\n<p><div style=\"width:100%; height:450px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"400\" src=\"/unitydemo/1/hamster.html\"/></div></p>\n\n\n　　企鹅群挂饰：<a id=\"download\" href=\"/unitydemo/1/penguins.swf\" download=\"penguins.swf\"><i class=\"fa fa-download\"></i><span> Download penguins.swf </span>\n</a>\n\n<p><div style=\"width:100%; height:450px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"400\" src=\"/unitydemo/1/penguins.html\"/></div></p>\n\n\n\n![Result pic 1](/contentimg/21/1.png \"html代码自动生成\")\n","slug":"21swfobjectdemo","published":1,"updated":"2018-10-27T11:54:45.406Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgr1t002ujo9ceaq4xakt","content":"<p>　　本文分享<a href=\"https://github.com/swfobject/swfobject\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">swfobject</a>   插件的简单使用，展示abowman上面的3个小挂饰。</p>\n<a id=\"more\"></a>\n<p>　　swfobject的git代码里面已经包了一个自动生成html的功能，所以实际是去找swf动画，加进去就可以看到效果了。</p>\n<p>　　小鱼挂饰：<a id=\"download\" href=\"/unitydemo/1/fish.swf\" download=\"fish.swf\"><i class=\"fa fa-download\"></i><span> Download fish.swf </span><br></a></p>\n<p><div style=\"width:100%; height:450px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"400\" src=\"/unitydemo/1/fish.html\"></iframe></div></p>\n\n\n<p>　　宠物鼠挂饰：<a id=\"download\" href=\"/unitydemo/1/hamster.swf\" download=\"hamster.swf\"><i class=\"fa fa-download\"></i><span> Download hamster.swf </span><br></a></p>\n<p><div style=\"width:100%; height:450px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"400\" src=\"/unitydemo/1/hamster.html\"></iframe></div></p>\n\n\n<p>　　企鹅群挂饰：<a id=\"download\" href=\"/unitydemo/1/penguins.swf\" download=\"penguins.swf\"><i class=\"fa fa-download\"></i><span> Download penguins.swf </span><br></a></p>\n<p><div style=\"width:100%; height:450px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"400\" src=\"/unitydemo/1/penguins.html\"></iframe></div></p>\n\n\n\n<p><img src=\"/contentimg/21/1.png\" alt=\"Result pic 1\" title=\"html代码自动生成\"></p>\n","site":{"data":{}},"excerpt":"<p>　　本文分享<a href=\"https://github.com/swfobject/swfobject\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">swfobject</a>   插件的简单使用，展示abowman上面的3个小挂饰。</p>","more":"<p>　　swfobject的git代码里面已经包了一个自动生成html的功能，所以实际是去找swf动画，加进去就可以看到效果了。</p>\n<p>　　小鱼挂饰：<a id=\"download\" href=\"/unitydemo/1/fish.swf\" download=\"fish.swf\"><i class=\"fa fa-download\"></i><span> Download fish.swf </span><br></a></p>\n<p><div style=\"width:100%; height:450px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"400\" src=\"/unitydemo/1/fish.html\"></iframe></div></p>\n\n\n<p>　　宠物鼠挂饰：<a id=\"download\" href=\"/unitydemo/1/hamster.swf\" download=\"hamster.swf\"><i class=\"fa fa-download\"></i><span> Download hamster.swf </span><br></a></p>\n<p><div style=\"width:100%; height:450px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"400\" src=\"/unitydemo/1/hamster.html\"></iframe></div></p>\n\n\n<p>　　企鹅群挂饰：<a id=\"download\" href=\"/unitydemo/1/penguins.swf\" download=\"penguins.swf\"><i class=\"fa fa-download\"></i><span> Download penguins.swf </span><br></a></p>\n<p><div style=\"width:100%; height:450px;border:none;text-align:center\"><iframe allowtransparency=\"yes\" frameborder=\"0\" width=\"100%\" height=\"400\" src=\"/unitydemo/1/penguins.html\"></iframe></div></p>\n\n\n\n<p><img src=\"/contentimg/21/1.png\" alt=\"Result pic 1\" title=\"html代码自动生成\"></p>"},{"title":"ffmpeg-简单AES加解密记录","date":"2018-10-18T15:57:58.000Z","_content":"\t\n　　本文记录如何将浏览器中的视频缓存文件合并成一个mp4文件。该方式使用ffmpeg。视频片段为m3u8格式。\n\n<!-- more -->\n***\n\n　　视频分段缓存技术之中的一种格式m3u8，据说是苹果开发的。而这里由于有ffmpeg工具，运用起来很快捷，当然也可以自己写代码集成一个播放器。本文暂时只记录简单的运用ffmpeg工具加解密和播放。代码集成等后面有空再分享。\n\n观摩这项技术时参考的几篇文章分享如下：\n\n[使用ffmpeg转码m3u8并播放](https://blog.csdn.net/psh18513234633/article/details/79312607)\n\n[hls协议（最清晰的讲解）](https://blog.csdn.net/weiyuefei/article/details/70257616)\n\n[流媒体开发之--HLS--M3U8解析(2): HLS草案](https://blog.csdn.net/newarow/article/details/82805672)\n\n[ffmpeg Cheatsheet](https://gist.github.com/larvata/95df619df7109d8b74d2b965a3266354#file-ffmpeg-cheatsheet-md)\n\n[使用ffmpeg视频切片并加密](https://www.cnblogs.com/codeAB/p/9184266.html)\n\n[ffmpeg分解视频文件并加密](https://blog.csdn.net/cnhome/article/details/73250495)\n\n[FFmpeg之ffplay命令使用](https://blog.csdn.net/xuyankuanrong/article/details/77529468)\n\n还有一些cmd操作：\n\n[CMD批处理循环，太强大了](https://blog.csdn.net/xhhjin/article/details/7373524)\n\n[copy /b 命令无缝合并多个文件](http://www.360doc.com/content/14/0212/22/9849466_352039289.shtml)\n\n　　当然还有其他很多参考过的网页，但是都很散，有用信息不多，暂不分享那些网页。\n\n　　这项技术运用在很多浏览器上，所以想找东西练手，还是蛮多的（某些想下载但是没提示下载的视频，实际上是放在缓存文件夹里面，然后本地加载拼起来的）。\n\n这里我就简单分享一下如何自己用ffmepg对一个视频加密，以及解密该视频。\n\n目前我接触到3种情况：\n\n1.  未加密的视频，用PotPlayer可以直接打开观看；\n\n1.  有AES的key，没IV（其实就是使用了默认值），部分有两个m3u8；\n\n1.  有AES的key和IV，就是下面将要分享的操作。\n\n　　目前要使用的工具，首先必须要有[ffmepg](https://www.ffmpeg.org/download.html) ，下载成已经Build好的包，不然自己来生成比较麻烦，当然，有兴趣可以下载代码来看，是开源的。\n\n\n![Result pic 1](/contentimg/10/1.png \"下载ffmpeg\") \n\n\n　　生成key部分我使用了[Openssl](http://gnuwin32.sourceforge.net/packages/openssl.htm)  ，功能超级多，但是本文只用到简单的生成随机密码。好像是我下载不对，操作发现不支持hex，所以后面生成hex部分得写一下代码处理，当然也有网页生成，数据库生成，这里就不写明了。\n\n![Result pic 2](/contentimg/10/2.png \"下载openssl\") \n\n\n　　然后就是准备一个视频。我这次下载了这些东西：\n\n![Result pic 3](/contentimg/10/3.png \"全部所需东西\") \n\n\n　　接下来就开始动手：（实际不用Openssl也行，直接手动写几个编码当密码就行）\n\n![Result pic 4](/contentimg/10/4.png \"缓存目录结构\")\n\n\n　　通过上面推荐的链接，大家应该知道是主要m3u8文件，然后附带的ts文件（可以不写后缀，就是些视频片段，可以在播放器中打开观看），key（会改变视频片段的编码，导致无法播放）。\n\n　　这里的m3u8可以用播放器打开，正常是会报错的，因为视频片段被AES加密了编码模式，所以普通读取出来不是正常的头，就报错了。\n\n![Result pic 5](/contentimg/10/5.png \"无法打开加密文件\")\n\n　　如果你遇到的m3u8没有加密，那这里是打开可以播放的。上面那些ts也是可以直接播放器打开的。\n\n　　一般情况下，m3u8文件可能需要进行修改。就是当你操作的是手机端，把缓存搞在电脑上转码时（或者从C盘缓存目录拷贝出来时），里面的路径是不对的，里面记录的是绝对路径，需要修改。像下面图片，手机拷过来后是手机上的绝对路径，用记事本ctrl + H，该成电脑上的当前路径后就能用了（或者删掉变成相对路径）。\n\n![Result pic 6](/contentimg/10/6.png \"修改路径\")\n\n\n现在从头开始做吧。\n\n　　目前我们手上只有一个test.mp4，先介绍不加密的方式分段生成m3u8。\n\n## 无加密方式生成m3u8\n\n　　新建一个文件夹来放置后面要生成的ts文件。\n\n　　先用管理员身份运行cmd：\n\n　　cd到ffmpeg.exe所在的地方（不过我推荐是cd到要生成文件的地方，然后ffmpeg.exe弄成全路径来执行，效率会高一些）。\n\n　　例如我test.mp4在D:\\aa\\bb目录下：\n\n　　这样我在cmd中输入：\n\n``` cmd\nffmpeg.exe -y -i D:\\aa\\bb\\test.mp4 -hls_time 6 -hls_playlist_type vod -hls_segment_filename \"D:\\aa\\bb\\file%d\" D:\\aa\\bb\\playlist.m3u8\n```\n\n　　-hls_time  是每一段视频多长时间\n\n　　-hls_segment_filename   分段生成在哪里，命名规则%d\n\n　　以及结尾的m3u8输出路径\n\n![Result pic 7](/contentimg/10/7.png \"处理无加密方式片段\")\n\n\n　　目录下已经生成分段文件+m3u8文件了，由于这里没有加密，所以分段文件可以用播放器直接打开。当然也可以直接打开m3u8文件。\n\n![Result pic 8](/contentimg/10/8.png \"无加密playlist.m3u8\")\n\n\n这里插播一下ffplay的使用：\n\n![Result pic 9](/contentimg/10/9.png \"使用ffplay播放视频\")\n\n\n　　指令中要注意的就是路径，从前面我们知道是m3u8中记录是用相对路径，所以需要把cmd移到该目录下，然后用ffplay的全路径 + -allowed_extensions ALL （就是允许全部后缀模式，否则没后缀的不让播放） +m3u8 + 回车\n\n``` cmd\nD:\\aa\\ffmpeg-4.0.2-win64-static\\bin\\ffplay.exe -allowed_extensions ALL playlist.m3u8\n```\n\n　　既然提到分段，那就有合并了。\n\n　　由于这里没有使用加密，所以可以直接把全部ts文件合并成一个文件就行。\n\n　　可以cmd直接合并，但是需要提前处理命名规则，因为cmd按字符比较的，01和1是两种不同的概念，这里可以写个循环处理改命名，然后再用cmd的copy /b * new.mp4。\n\n　　cmd代码不好写。所以推荐还是用ffmpeg。\n\n代码如下：合并并转码成mp4格式\n``` cmd\nD:\\aa\\ffmpeg-4.0.2-win64-static\\bin\\ffmpeg.exe -allowed_extensions ALL -i playlist.m3u8 -acodec copy -vcodec copy -f mp4 output.mp4\n```\n\n![Result pic 10](/contentimg/10/10.png \"合并并转码成mp4格式\")\n\n\n## 加密方式生成m3u8\n\n　　有了前面那些截图，这里的操作其实就是多了写密码步骤而已，其他大部分一样，所以这里就不再截图了。\n\n　　加密，目前我看的是AES。概念那些大家有空去了解一下，这里只分享一下怎么用。\n\n具体步骤是：[使用ffmpeg视频切片并加密](https://www.cnblogs.com/codeAB/p/9184266.html)  \n\n　　然后里面一些参数，其实在源文件里面已经有了，可以找这些文档来弄明白设置什么参数：\n\n![Result pic 11](/contentimg/10/11.png \"源文件说明文档\")\n\n\n　　这里我多分享一下直接用一个key来加密怎么操作吧。就是手上有一个密码+一个视频，弄到最后是一个放密码的文本文件，然后就是ts+m3u8，没有IV。\n\n　　其实就是前面步骤中，enc.keyinfo中第三行的IV删掉就行。\n\n　　同时步骤一中用openssl生成key的，改成：新建文本文件，写入密码后保存，然后删掉后缀当key。\n\n其他照旧：\n\n``` cmd \nD:\\aa\\ffmpeg-4.0.2-win64-static\\bin\\ffmpeg.exe -y -i test.mp4 -hls_time 6 -hls_key_info_file k0.keyinfo -hls_playlist_type vod -hls_segment_filename \"file%d\" playlist.m3u8\n```\n\n![Result pic 12](/contentimg/10/12.png \"加密方式m3u8文件\")\n\n\n　　密码文件k0，用openssl生成的话，打开是乱码的，自己写入的就不会乱码，使用起来暂时未发现区别：\n\n![Result pic 13](/contentimg/10/13.png \"密码文件\")\n\n\n　　加密方式生成的ts文件，你会发现无法用播放器打开，只能用ffplay打开（打开方式同无加密一样的代码，都是直接传入m3u8文件即可）。\n\n　　这样解密方式，实际也和前面一样，都是围绕m3u8，是否有key，实际都是内部处理的。\n\n这里可能会遇到问题的是，网上的都是说EXT-X-KEY这里的是http，实际都可以，找得到文件就行。然后就是开头提的两个m3u8的，这个就溜一点：\n\n　　改EXT-X-KEY的文件地址为key的本地地址后，发现这样去转是失败的（提示找不到ts文件），这时可以把下面的一堆ts信息，换成另一个m3u8里面的ts信息，就可以转换了。我遇到的情况，是第一个ts信息是本地文件，第二个是一个找不到的路径的文件（但是这个带key，第一个不带），修改成本地文件后，除了#EXTINF的数字不同外，其他都一样（文件也能找到了），结果还是报错，就把那个m3u8的ts信息都复制过来（#EXTINF的数字保持一样），本个m3u8只保留EXT-X-KEY这里的URI=\"k0\"，其他都是用另一个m3u8的，就可以转换了。\n\n","source":"_posts/10ffmpeg-aes-1.md","raw":"---\ntitle: ffmpeg-简单AES加解密记录\ndate: 2018-10-18 23:57:58\ncategories:\n  - 编程人生\ntags:\n  - 视频处理\n  - 工具使用\n  - ffmpeg  \n---\n\t\n　　本文记录如何将浏览器中的视频缓存文件合并成一个mp4文件。该方式使用ffmpeg。视频片段为m3u8格式。\n\n<!-- more -->\n***\n\n　　视频分段缓存技术之中的一种格式m3u8，据说是苹果开发的。而这里由于有ffmpeg工具，运用起来很快捷，当然也可以自己写代码集成一个播放器。本文暂时只记录简单的运用ffmpeg工具加解密和播放。代码集成等后面有空再分享。\n\n观摩这项技术时参考的几篇文章分享如下：\n\n[使用ffmpeg转码m3u8并播放](https://blog.csdn.net/psh18513234633/article/details/79312607)\n\n[hls协议（最清晰的讲解）](https://blog.csdn.net/weiyuefei/article/details/70257616)\n\n[流媒体开发之--HLS--M3U8解析(2): HLS草案](https://blog.csdn.net/newarow/article/details/82805672)\n\n[ffmpeg Cheatsheet](https://gist.github.com/larvata/95df619df7109d8b74d2b965a3266354#file-ffmpeg-cheatsheet-md)\n\n[使用ffmpeg视频切片并加密](https://www.cnblogs.com/codeAB/p/9184266.html)\n\n[ffmpeg分解视频文件并加密](https://blog.csdn.net/cnhome/article/details/73250495)\n\n[FFmpeg之ffplay命令使用](https://blog.csdn.net/xuyankuanrong/article/details/77529468)\n\n还有一些cmd操作：\n\n[CMD批处理循环，太强大了](https://blog.csdn.net/xhhjin/article/details/7373524)\n\n[copy /b 命令无缝合并多个文件](http://www.360doc.com/content/14/0212/22/9849466_352039289.shtml)\n\n　　当然还有其他很多参考过的网页，但是都很散，有用信息不多，暂不分享那些网页。\n\n　　这项技术运用在很多浏览器上，所以想找东西练手，还是蛮多的（某些想下载但是没提示下载的视频，实际上是放在缓存文件夹里面，然后本地加载拼起来的）。\n\n这里我就简单分享一下如何自己用ffmepg对一个视频加密，以及解密该视频。\n\n目前我接触到3种情况：\n\n1.  未加密的视频，用PotPlayer可以直接打开观看；\n\n1.  有AES的key，没IV（其实就是使用了默认值），部分有两个m3u8；\n\n1.  有AES的key和IV，就是下面将要分享的操作。\n\n　　目前要使用的工具，首先必须要有[ffmepg](https://www.ffmpeg.org/download.html) ，下载成已经Build好的包，不然自己来生成比较麻烦，当然，有兴趣可以下载代码来看，是开源的。\n\n\n![Result pic 1](/contentimg/10/1.png \"下载ffmpeg\") \n\n\n　　生成key部分我使用了[Openssl](http://gnuwin32.sourceforge.net/packages/openssl.htm)  ，功能超级多，但是本文只用到简单的生成随机密码。好像是我下载不对，操作发现不支持hex，所以后面生成hex部分得写一下代码处理，当然也有网页生成，数据库生成，这里就不写明了。\n\n![Result pic 2](/contentimg/10/2.png \"下载openssl\") \n\n\n　　然后就是准备一个视频。我这次下载了这些东西：\n\n![Result pic 3](/contentimg/10/3.png \"全部所需东西\") \n\n\n　　接下来就开始动手：（实际不用Openssl也行，直接手动写几个编码当密码就行）\n\n![Result pic 4](/contentimg/10/4.png \"缓存目录结构\")\n\n\n　　通过上面推荐的链接，大家应该知道是主要m3u8文件，然后附带的ts文件（可以不写后缀，就是些视频片段，可以在播放器中打开观看），key（会改变视频片段的编码，导致无法播放）。\n\n　　这里的m3u8可以用播放器打开，正常是会报错的，因为视频片段被AES加密了编码模式，所以普通读取出来不是正常的头，就报错了。\n\n![Result pic 5](/contentimg/10/5.png \"无法打开加密文件\")\n\n　　如果你遇到的m3u8没有加密，那这里是打开可以播放的。上面那些ts也是可以直接播放器打开的。\n\n　　一般情况下，m3u8文件可能需要进行修改。就是当你操作的是手机端，把缓存搞在电脑上转码时（或者从C盘缓存目录拷贝出来时），里面的路径是不对的，里面记录的是绝对路径，需要修改。像下面图片，手机拷过来后是手机上的绝对路径，用记事本ctrl + H，该成电脑上的当前路径后就能用了（或者删掉变成相对路径）。\n\n![Result pic 6](/contentimg/10/6.png \"修改路径\")\n\n\n现在从头开始做吧。\n\n　　目前我们手上只有一个test.mp4，先介绍不加密的方式分段生成m3u8。\n\n## 无加密方式生成m3u8\n\n　　新建一个文件夹来放置后面要生成的ts文件。\n\n　　先用管理员身份运行cmd：\n\n　　cd到ffmpeg.exe所在的地方（不过我推荐是cd到要生成文件的地方，然后ffmpeg.exe弄成全路径来执行，效率会高一些）。\n\n　　例如我test.mp4在D:\\aa\\bb目录下：\n\n　　这样我在cmd中输入：\n\n``` cmd\nffmpeg.exe -y -i D:\\aa\\bb\\test.mp4 -hls_time 6 -hls_playlist_type vod -hls_segment_filename \"D:\\aa\\bb\\file%d\" D:\\aa\\bb\\playlist.m3u8\n```\n\n　　-hls_time  是每一段视频多长时间\n\n　　-hls_segment_filename   分段生成在哪里，命名规则%d\n\n　　以及结尾的m3u8输出路径\n\n![Result pic 7](/contentimg/10/7.png \"处理无加密方式片段\")\n\n\n　　目录下已经生成分段文件+m3u8文件了，由于这里没有加密，所以分段文件可以用播放器直接打开。当然也可以直接打开m3u8文件。\n\n![Result pic 8](/contentimg/10/8.png \"无加密playlist.m3u8\")\n\n\n这里插播一下ffplay的使用：\n\n![Result pic 9](/contentimg/10/9.png \"使用ffplay播放视频\")\n\n\n　　指令中要注意的就是路径，从前面我们知道是m3u8中记录是用相对路径，所以需要把cmd移到该目录下，然后用ffplay的全路径 + -allowed_extensions ALL （就是允许全部后缀模式，否则没后缀的不让播放） +m3u8 + 回车\n\n``` cmd\nD:\\aa\\ffmpeg-4.0.2-win64-static\\bin\\ffplay.exe -allowed_extensions ALL playlist.m3u8\n```\n\n　　既然提到分段，那就有合并了。\n\n　　由于这里没有使用加密，所以可以直接把全部ts文件合并成一个文件就行。\n\n　　可以cmd直接合并，但是需要提前处理命名规则，因为cmd按字符比较的，01和1是两种不同的概念，这里可以写个循环处理改命名，然后再用cmd的copy /b * new.mp4。\n\n　　cmd代码不好写。所以推荐还是用ffmpeg。\n\n代码如下：合并并转码成mp4格式\n``` cmd\nD:\\aa\\ffmpeg-4.0.2-win64-static\\bin\\ffmpeg.exe -allowed_extensions ALL -i playlist.m3u8 -acodec copy -vcodec copy -f mp4 output.mp4\n```\n\n![Result pic 10](/contentimg/10/10.png \"合并并转码成mp4格式\")\n\n\n## 加密方式生成m3u8\n\n　　有了前面那些截图，这里的操作其实就是多了写密码步骤而已，其他大部分一样，所以这里就不再截图了。\n\n　　加密，目前我看的是AES。概念那些大家有空去了解一下，这里只分享一下怎么用。\n\n具体步骤是：[使用ffmpeg视频切片并加密](https://www.cnblogs.com/codeAB/p/9184266.html)  \n\n　　然后里面一些参数，其实在源文件里面已经有了，可以找这些文档来弄明白设置什么参数：\n\n![Result pic 11](/contentimg/10/11.png \"源文件说明文档\")\n\n\n　　这里我多分享一下直接用一个key来加密怎么操作吧。就是手上有一个密码+一个视频，弄到最后是一个放密码的文本文件，然后就是ts+m3u8，没有IV。\n\n　　其实就是前面步骤中，enc.keyinfo中第三行的IV删掉就行。\n\n　　同时步骤一中用openssl生成key的，改成：新建文本文件，写入密码后保存，然后删掉后缀当key。\n\n其他照旧：\n\n``` cmd \nD:\\aa\\ffmpeg-4.0.2-win64-static\\bin\\ffmpeg.exe -y -i test.mp4 -hls_time 6 -hls_key_info_file k0.keyinfo -hls_playlist_type vod -hls_segment_filename \"file%d\" playlist.m3u8\n```\n\n![Result pic 12](/contentimg/10/12.png \"加密方式m3u8文件\")\n\n\n　　密码文件k0，用openssl生成的话，打开是乱码的，自己写入的就不会乱码，使用起来暂时未发现区别：\n\n![Result pic 13](/contentimg/10/13.png \"密码文件\")\n\n\n　　加密方式生成的ts文件，你会发现无法用播放器打开，只能用ffplay打开（打开方式同无加密一样的代码，都是直接传入m3u8文件即可）。\n\n　　这样解密方式，实际也和前面一样，都是围绕m3u8，是否有key，实际都是内部处理的。\n\n这里可能会遇到问题的是，网上的都是说EXT-X-KEY这里的是http，实际都可以，找得到文件就行。然后就是开头提的两个m3u8的，这个就溜一点：\n\n　　改EXT-X-KEY的文件地址为key的本地地址后，发现这样去转是失败的（提示找不到ts文件），这时可以把下面的一堆ts信息，换成另一个m3u8里面的ts信息，就可以转换了。我遇到的情况，是第一个ts信息是本地文件，第二个是一个找不到的路径的文件（但是这个带key，第一个不带），修改成本地文件后，除了#EXTINF的数字不同外，其他都一样（文件也能找到了），结果还是报错，就把那个m3u8的ts信息都复制过来（#EXTINF的数字保持一样），本个m3u8只保留EXT-X-KEY这里的URI=\"k0\"，其他都是用另一个m3u8的，就可以转换了。\n\n","slug":"10ffmpeg-aes-1","published":1,"updated":"2018-10-18T08:21:39.014Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgrd20048jo9c7keo3yuk","content":"<p>　　本文记录如何将浏览器中的视频缓存文件合并成一个mp4文件。该方式使用ffmpeg。视频片段为m3u8格式。</p>\n<a id=\"more\"></a>\n<hr>\n<p>　　视频分段缓存技术之中的一种格式m3u8，据说是苹果开发的。而这里由于有ffmpeg工具，运用起来很快捷，当然也可以自己写代码集成一个播放器。本文暂时只记录简单的运用ffmpeg工具加解密和播放。代码集成等后面有空再分享。</p>\n<p>观摩这项技术时参考的几篇文章分享如下：</p>\n<p><a href=\"https://blog.csdn.net/psh18513234633/article/details/79312607\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">使用ffmpeg转码m3u8并播放</a></p>\n<p><a href=\"https://blog.csdn.net/weiyuefei/article/details/70257616\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">hls协议（最清晰的讲解）</a></p>\n<p><a href=\"https://blog.csdn.net/newarow/article/details/82805672\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">流媒体开发之–HLS–M3U8解析(2): HLS草案</a></p>\n<p><a href=\"https://gist.github.com/larvata/95df619df7109d8b74d2b965a3266354#file-ffmpeg-cheatsheet-md\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">ffmpeg Cheatsheet</a></p>\n<p><a href=\"https://www.cnblogs.com/codeAB/p/9184266.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">使用ffmpeg视频切片并加密</a></p>\n<p><a href=\"https://blog.csdn.net/cnhome/article/details/73250495\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">ffmpeg分解视频文件并加密</a></p>\n<p><a href=\"https://blog.csdn.net/xuyankuanrong/article/details/77529468\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">FFmpeg之ffplay命令使用</a></p>\n<p>还有一些cmd操作：</p>\n<p><a href=\"https://blog.csdn.net/xhhjin/article/details/7373524\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">CMD批处理循环，太强大了</a></p>\n<p><a href=\"http://www.360doc.com/content/14/0212/22/9849466_352039289.shtml\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">copy /b 命令无缝合并多个文件</a></p>\n<p>　　当然还有其他很多参考过的网页，但是都很散，有用信息不多，暂不分享那些网页。</p>\n<p>　　这项技术运用在很多浏览器上，所以想找东西练手，还是蛮多的（某些想下载但是没提示下载的视频，实际上是放在缓存文件夹里面，然后本地加载拼起来的）。</p>\n<p>这里我就简单分享一下如何自己用ffmepg对一个视频加密，以及解密该视频。</p>\n<p>目前我接触到3种情况：</p>\n<ol>\n<li><p>未加密的视频，用PotPlayer可以直接打开观看；</p>\n</li>\n<li><p>有AES的key，没IV（其实就是使用了默认值），部分有两个m3u8；</p>\n</li>\n<li><p>有AES的key和IV，就是下面将要分享的操作。</p>\n</li>\n</ol>\n<p>　　目前要使用的工具，首先必须要有<a href=\"https://www.ffmpeg.org/download.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">ffmepg</a> ，下载成已经Build好的包，不然自己来生成比较麻烦，当然，有兴趣可以下载代码来看，是开源的。</p>\n<p><img src=\"/contentimg/10/1.png\" alt=\"Result pic 1\" title=\"下载ffmpeg\"> </p>\n<p>　　生成key部分我使用了<a href=\"http://gnuwin32.sourceforge.net/packages/openssl.htm\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Openssl</a>  ，功能超级多，但是本文只用到简单的生成随机密码。好像是我下载不对，操作发现不支持hex，所以后面生成hex部分得写一下代码处理，当然也有网页生成，数据库生成，这里就不写明了。</p>\n<p><img src=\"/contentimg/10/2.png\" alt=\"Result pic 2\" title=\"下载openssl\"> </p>\n<p>　　然后就是准备一个视频。我这次下载了这些东西：</p>\n<p><img src=\"/contentimg/10/3.png\" alt=\"Result pic 3\" title=\"全部所需东西\"> </p>\n<p>　　接下来就开始动手：（实际不用Openssl也行，直接手动写几个编码当密码就行）</p>\n<p><img src=\"/contentimg/10/4.png\" alt=\"Result pic 4\" title=\"缓存目录结构\"></p>\n<p>　　通过上面推荐的链接，大家应该知道是主要m3u8文件，然后附带的ts文件（可以不写后缀，就是些视频片段，可以在播放器中打开观看），key（会改变视频片段的编码，导致无法播放）。</p>\n<p>　　这里的m3u8可以用播放器打开，正常是会报错的，因为视频片段被AES加密了编码模式，所以普通读取出来不是正常的头，就报错了。</p>\n<p><img src=\"/contentimg/10/5.png\" alt=\"Result pic 5\" title=\"无法打开加密文件\"></p>\n<p>　　如果你遇到的m3u8没有加密，那这里是打开可以播放的。上面那些ts也是可以直接播放器打开的。</p>\n<p>　　一般情况下，m3u8文件可能需要进行修改。就是当你操作的是手机端，把缓存搞在电脑上转码时（或者从C盘缓存目录拷贝出来时），里面的路径是不对的，里面记录的是绝对路径，需要修改。像下面图片，手机拷过来后是手机上的绝对路径，用记事本ctrl + H，该成电脑上的当前路径后就能用了（或者删掉变成相对路径）。</p>\n<p><img src=\"/contentimg/10/6.png\" alt=\"Result pic 6\" title=\"修改路径\"></p>\n<p>现在从头开始做吧。</p>\n<p>　　目前我们手上只有一个test.mp4，先介绍不加密的方式分段生成m3u8。</p>\n<h2 id=\"无加密方式生成m3u8\"><a href=\"#无加密方式生成m3u8\" class=\"headerlink\" title=\"无加密方式生成m3u8\"></a>无加密方式生成m3u8</h2><p>　　新建一个文件夹来放置后面要生成的ts文件。</p>\n<p>　　先用管理员身份运行cmd：</p>\n<p>　　cd到ffmpeg.exe所在的地方（不过我推荐是cd到要生成文件的地方，然后ffmpeg.exe弄成全路径来执行，效率会高一些）。</p>\n<p>　　例如我test.mp4在D:\\aa\\bb目录下：</p>\n<p>　　这样我在cmd中输入：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg.exe -y -i D:\\aa\\bb\\test.mp4 -hls_time <span class=\"number\">6</span> -hls_playlist_type vod -hls_segment_filename \"D:\\aa\\bb\\file%d\" D:\\aa\\bb\\playlist.m3u8</span><br></pre></td></tr></table></figure>\n<p>　　-hls_time  是每一段视频多长时间</p>\n<p>　　-hls_segment_filename   分段生成在哪里，命名规则%d</p>\n<p>　　以及结尾的m3u8输出路径</p>\n<p><img src=\"/contentimg/10/7.png\" alt=\"Result pic 7\" title=\"处理无加密方式片段\"></p>\n<p>　　目录下已经生成分段文件+m3u8文件了，由于这里没有加密，所以分段文件可以用播放器直接打开。当然也可以直接打开m3u8文件。</p>\n<p><img src=\"/contentimg/10/8.png\" alt=\"Result pic 8\" title=\"无加密playlist.m3u8\"></p>\n<p>这里插播一下ffplay的使用：</p>\n<p><img src=\"/contentimg/10/9.png\" alt=\"Result pic 9\" title=\"使用ffplay播放视频\"></p>\n<p>　　指令中要注意的就是路径，从前面我们知道是m3u8中记录是用相对路径，所以需要把cmd移到该目录下，然后用ffplay的全路径 + -allowed_extensions ALL （就是允许全部后缀模式，否则没后缀的不让播放） +m3u8 + 回车</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">D:\\<span class=\"title\">aa</span>\\<span class=\"title\">ffmpeg</span>-4.0.2-<span class=\"title\">win64</span>-<span class=\"title\">static</span>\\<span class=\"title\">bin</span>\\<span class=\"title\">ffplay.exe</span> -<span class=\"title\">allowed_extensions</span> <span class=\"title\">ALL</span> <span class=\"title\">playlist.m3u8</span></span></span><br></pre></td></tr></table></figure>\n<p>　　既然提到分段，那就有合并了。</p>\n<p>　　由于这里没有使用加密，所以可以直接把全部ts文件合并成一个文件就行。</p>\n<p>　　可以cmd直接合并，但是需要提前处理命名规则，因为cmd按字符比较的，01和1是两种不同的概念，这里可以写个循环处理改命名，然后再用cmd的copy /b * new.mp4。</p>\n<p>　　cmd代码不好写。所以推荐还是用ffmpeg。</p>\n<p>代码如下：合并并转码成mp4格式<br><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">D:\\<span class=\"title\">aa</span>\\<span class=\"title\">ffmpeg</span>-4.0.2-<span class=\"title\">win64</span>-<span class=\"title\">static</span>\\<span class=\"title\">bin</span>\\<span class=\"title\">ffmpeg.exe</span> -<span class=\"title\">allowed_extensions</span> <span class=\"title\">ALL</span> -<span class=\"title\">i</span> <span class=\"title\">playlist.m3u8</span> -<span class=\"title\">acodec</span> <span class=\"title\">copy</span> -<span class=\"title\">vcodec</span> <span class=\"title\">copy</span> -<span class=\"title\">f</span> <span class=\"title\">mp4</span> <span class=\"title\">output.mp4</span></span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/contentimg/10/10.png\" alt=\"Result pic 10\" title=\"合并并转码成mp4格式\"></p>\n<h2 id=\"加密方式生成m3u8\"><a href=\"#加密方式生成m3u8\" class=\"headerlink\" title=\"加密方式生成m3u8\"></a>加密方式生成m3u8</h2><p>　　有了前面那些截图，这里的操作其实就是多了写密码步骤而已，其他大部分一样，所以这里就不再截图了。</p>\n<p>　　加密，目前我看的是AES。概念那些大家有空去了解一下，这里只分享一下怎么用。</p>\n<p>具体步骤是：<a href=\"https://www.cnblogs.com/codeAB/p/9184266.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">使用ffmpeg视频切片并加密</a>  </p>\n<p>　　然后里面一些参数，其实在源文件里面已经有了，可以找这些文档来弄明白设置什么参数：</p>\n<p><img src=\"/contentimg/10/11.png\" alt=\"Result pic 11\" title=\"源文件说明文档\"></p>\n<p>　　这里我多分享一下直接用一个key来加密怎么操作吧。就是手上有一个密码+一个视频，弄到最后是一个放密码的文本文件，然后就是ts+m3u8，没有IV。</p>\n<p>　　其实就是前面步骤中，enc.keyinfo中第三行的IV删掉就行。</p>\n<p>　　同时步骤一中用openssl生成key的，改成：新建文本文件，写入密码后保存，然后删掉后缀当key。</p>\n<p>其他照旧：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">D:\\<span class=\"title\">aa</span>\\<span class=\"title\">ffmpeg</span>-4.0.2-<span class=\"title\">win64</span>-<span class=\"title\">static</span>\\<span class=\"title\">bin</span>\\<span class=\"title\">ffmpeg.exe</span> -<span class=\"title\">y</span> -<span class=\"title\">i</span> <span class=\"title\">test.mp4</span> -<span class=\"title\">hls_time</span> 6 -<span class=\"title\">hls_key_info_file</span> <span class=\"title\">k0.keyinfo</span> -<span class=\"title\">hls_playlist_type</span> <span class=\"title\">vod</span> -<span class=\"title\">hls_segment_filename</span> \"<span class=\"title\">file</span>%<span class=\"title\">d</span>\" <span class=\"title\">playlist.m3u8</span></span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/10/12.png\" alt=\"Result pic 12\" title=\"加密方式m3u8文件\"></p>\n<p>　　密码文件k0，用openssl生成的话，打开是乱码的，自己写入的就不会乱码，使用起来暂时未发现区别：</p>\n<p><img src=\"/contentimg/10/13.png\" alt=\"Result pic 13\" title=\"密码文件\"></p>\n<p>　　加密方式生成的ts文件，你会发现无法用播放器打开，只能用ffplay打开（打开方式同无加密一样的代码，都是直接传入m3u8文件即可）。</p>\n<p>　　这样解密方式，实际也和前面一样，都是围绕m3u8，是否有key，实际都是内部处理的。</p>\n<p>这里可能会遇到问题的是，网上的都是说EXT-X-KEY这里的是http，实际都可以，找得到文件就行。然后就是开头提的两个m3u8的，这个就溜一点：</p>\n<p>　　改EXT-X-KEY的文件地址为key的本地地址后，发现这样去转是失败的（提示找不到ts文件），这时可以把下面的一堆ts信息，换成另一个m3u8里面的ts信息，就可以转换了。我遇到的情况，是第一个ts信息是本地文件，第二个是一个找不到的路径的文件（但是这个带key，第一个不带），修改成本地文件后，除了#EXTINF的数字不同外，其他都一样（文件也能找到了），结果还是报错，就把那个m3u8的ts信息都复制过来（#EXTINF的数字保持一样），本个m3u8只保留EXT-X-KEY这里的URI=”k0”，其他都是用另一个m3u8的，就可以转换了。</p>\n","site":{"data":{}},"excerpt":"<p>　　本文记录如何将浏览器中的视频缓存文件合并成一个mp4文件。该方式使用ffmpeg。视频片段为m3u8格式。</p>","more":"<hr>\n<p>　　视频分段缓存技术之中的一种格式m3u8，据说是苹果开发的。而这里由于有ffmpeg工具，运用起来很快捷，当然也可以自己写代码集成一个播放器。本文暂时只记录简单的运用ffmpeg工具加解密和播放。代码集成等后面有空再分享。</p>\n<p>观摩这项技术时参考的几篇文章分享如下：</p>\n<p><a href=\"https://blog.csdn.net/psh18513234633/article/details/79312607\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">使用ffmpeg转码m3u8并播放</a></p>\n<p><a href=\"https://blog.csdn.net/weiyuefei/article/details/70257616\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">hls协议（最清晰的讲解）</a></p>\n<p><a href=\"https://blog.csdn.net/newarow/article/details/82805672\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">流媒体开发之–HLS–M3U8解析(2): HLS草案</a></p>\n<p><a href=\"https://gist.github.com/larvata/95df619df7109d8b74d2b965a3266354#file-ffmpeg-cheatsheet-md\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">ffmpeg Cheatsheet</a></p>\n<p><a href=\"https://www.cnblogs.com/codeAB/p/9184266.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">使用ffmpeg视频切片并加密</a></p>\n<p><a href=\"https://blog.csdn.net/cnhome/article/details/73250495\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">ffmpeg分解视频文件并加密</a></p>\n<p><a href=\"https://blog.csdn.net/xuyankuanrong/article/details/77529468\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">FFmpeg之ffplay命令使用</a></p>\n<p>还有一些cmd操作：</p>\n<p><a href=\"https://blog.csdn.net/xhhjin/article/details/7373524\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">CMD批处理循环，太强大了</a></p>\n<p><a href=\"http://www.360doc.com/content/14/0212/22/9849466_352039289.shtml\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">copy /b 命令无缝合并多个文件</a></p>\n<p>　　当然还有其他很多参考过的网页，但是都很散，有用信息不多，暂不分享那些网页。</p>\n<p>　　这项技术运用在很多浏览器上，所以想找东西练手，还是蛮多的（某些想下载但是没提示下载的视频，实际上是放在缓存文件夹里面，然后本地加载拼起来的）。</p>\n<p>这里我就简单分享一下如何自己用ffmepg对一个视频加密，以及解密该视频。</p>\n<p>目前我接触到3种情况：</p>\n<ol>\n<li><p>未加密的视频，用PotPlayer可以直接打开观看；</p>\n</li>\n<li><p>有AES的key，没IV（其实就是使用了默认值），部分有两个m3u8；</p>\n</li>\n<li><p>有AES的key和IV，就是下面将要分享的操作。</p>\n</li>\n</ol>\n<p>　　目前要使用的工具，首先必须要有<a href=\"https://www.ffmpeg.org/download.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">ffmepg</a> ，下载成已经Build好的包，不然自己来生成比较麻烦，当然，有兴趣可以下载代码来看，是开源的。</p>\n<p><img src=\"/contentimg/10/1.png\" alt=\"Result pic 1\" title=\"下载ffmpeg\"> </p>\n<p>　　生成key部分我使用了<a href=\"http://gnuwin32.sourceforge.net/packages/openssl.htm\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Openssl</a>  ，功能超级多，但是本文只用到简单的生成随机密码。好像是我下载不对，操作发现不支持hex，所以后面生成hex部分得写一下代码处理，当然也有网页生成，数据库生成，这里就不写明了。</p>\n<p><img src=\"/contentimg/10/2.png\" alt=\"Result pic 2\" title=\"下载openssl\"> </p>\n<p>　　然后就是准备一个视频。我这次下载了这些东西：</p>\n<p><img src=\"/contentimg/10/3.png\" alt=\"Result pic 3\" title=\"全部所需东西\"> </p>\n<p>　　接下来就开始动手：（实际不用Openssl也行，直接手动写几个编码当密码就行）</p>\n<p><img src=\"/contentimg/10/4.png\" alt=\"Result pic 4\" title=\"缓存目录结构\"></p>\n<p>　　通过上面推荐的链接，大家应该知道是主要m3u8文件，然后附带的ts文件（可以不写后缀，就是些视频片段，可以在播放器中打开观看），key（会改变视频片段的编码，导致无法播放）。</p>\n<p>　　这里的m3u8可以用播放器打开，正常是会报错的，因为视频片段被AES加密了编码模式，所以普通读取出来不是正常的头，就报错了。</p>\n<p><img src=\"/contentimg/10/5.png\" alt=\"Result pic 5\" title=\"无法打开加密文件\"></p>\n<p>　　如果你遇到的m3u8没有加密，那这里是打开可以播放的。上面那些ts也是可以直接播放器打开的。</p>\n<p>　　一般情况下，m3u8文件可能需要进行修改。就是当你操作的是手机端，把缓存搞在电脑上转码时（或者从C盘缓存目录拷贝出来时），里面的路径是不对的，里面记录的是绝对路径，需要修改。像下面图片，手机拷过来后是手机上的绝对路径，用记事本ctrl + H，该成电脑上的当前路径后就能用了（或者删掉变成相对路径）。</p>\n<p><img src=\"/contentimg/10/6.png\" alt=\"Result pic 6\" title=\"修改路径\"></p>\n<p>现在从头开始做吧。</p>\n<p>　　目前我们手上只有一个test.mp4，先介绍不加密的方式分段生成m3u8。</p>\n<h2 id=\"无加密方式生成m3u8\"><a href=\"#无加密方式生成m3u8\" class=\"headerlink\" title=\"无加密方式生成m3u8\"></a>无加密方式生成m3u8</h2><p>　　新建一个文件夹来放置后面要生成的ts文件。</p>\n<p>　　先用管理员身份运行cmd：</p>\n<p>　　cd到ffmpeg.exe所在的地方（不过我推荐是cd到要生成文件的地方，然后ffmpeg.exe弄成全路径来执行，效率会高一些）。</p>\n<p>　　例如我test.mp4在D:\\aa\\bb目录下：</p>\n<p>　　这样我在cmd中输入：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg.exe -y -i D:\\aa\\bb\\test.mp4 -hls_time <span class=\"number\">6</span> -hls_playlist_type vod -hls_segment_filename \"D:\\aa\\bb\\file%d\" D:\\aa\\bb\\playlist.m3u8</span><br></pre></td></tr></table></figure>\n<p>　　-hls_time  是每一段视频多长时间</p>\n<p>　　-hls_segment_filename   分段生成在哪里，命名规则%d</p>\n<p>　　以及结尾的m3u8输出路径</p>\n<p><img src=\"/contentimg/10/7.png\" alt=\"Result pic 7\" title=\"处理无加密方式片段\"></p>\n<p>　　目录下已经生成分段文件+m3u8文件了，由于这里没有加密，所以分段文件可以用播放器直接打开。当然也可以直接打开m3u8文件。</p>\n<p><img src=\"/contentimg/10/8.png\" alt=\"Result pic 8\" title=\"无加密playlist.m3u8\"></p>\n<p>这里插播一下ffplay的使用：</p>\n<p><img src=\"/contentimg/10/9.png\" alt=\"Result pic 9\" title=\"使用ffplay播放视频\"></p>\n<p>　　指令中要注意的就是路径，从前面我们知道是m3u8中记录是用相对路径，所以需要把cmd移到该目录下，然后用ffplay的全路径 + -allowed_extensions ALL （就是允许全部后缀模式，否则没后缀的不让播放） +m3u8 + 回车</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">D:\\<span class=\"title\">aa</span>\\<span class=\"title\">ffmpeg</span>-4.0.2-<span class=\"title\">win64</span>-<span class=\"title\">static</span>\\<span class=\"title\">bin</span>\\<span class=\"title\">ffplay.exe</span> -<span class=\"title\">allowed_extensions</span> <span class=\"title\">ALL</span> <span class=\"title\">playlist.m3u8</span></span></span><br></pre></td></tr></table></figure>\n<p>　　既然提到分段，那就有合并了。</p>\n<p>　　由于这里没有使用加密，所以可以直接把全部ts文件合并成一个文件就行。</p>\n<p>　　可以cmd直接合并，但是需要提前处理命名规则，因为cmd按字符比较的，01和1是两种不同的概念，这里可以写个循环处理改命名，然后再用cmd的copy /b * new.mp4。</p>\n<p>　　cmd代码不好写。所以推荐还是用ffmpeg。</p>\n<p>代码如下：合并并转码成mp4格式<br><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">D:\\<span class=\"title\">aa</span>\\<span class=\"title\">ffmpeg</span>-4.0.2-<span class=\"title\">win64</span>-<span class=\"title\">static</span>\\<span class=\"title\">bin</span>\\<span class=\"title\">ffmpeg.exe</span> -<span class=\"title\">allowed_extensions</span> <span class=\"title\">ALL</span> -<span class=\"title\">i</span> <span class=\"title\">playlist.m3u8</span> -<span class=\"title\">acodec</span> <span class=\"title\">copy</span> -<span class=\"title\">vcodec</span> <span class=\"title\">copy</span> -<span class=\"title\">f</span> <span class=\"title\">mp4</span> <span class=\"title\">output.mp4</span></span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/contentimg/10/10.png\" alt=\"Result pic 10\" title=\"合并并转码成mp4格式\"></p>\n<h2 id=\"加密方式生成m3u8\"><a href=\"#加密方式生成m3u8\" class=\"headerlink\" title=\"加密方式生成m3u8\"></a>加密方式生成m3u8</h2><p>　　有了前面那些截图，这里的操作其实就是多了写密码步骤而已，其他大部分一样，所以这里就不再截图了。</p>\n<p>　　加密，目前我看的是AES。概念那些大家有空去了解一下，这里只分享一下怎么用。</p>\n<p>具体步骤是：<a href=\"https://www.cnblogs.com/codeAB/p/9184266.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">使用ffmpeg视频切片并加密</a>  </p>\n<p>　　然后里面一些参数，其实在源文件里面已经有了，可以找这些文档来弄明白设置什么参数：</p>\n<p><img src=\"/contentimg/10/11.png\" alt=\"Result pic 11\" title=\"源文件说明文档\"></p>\n<p>　　这里我多分享一下直接用一个key来加密怎么操作吧。就是手上有一个密码+一个视频，弄到最后是一个放密码的文本文件，然后就是ts+m3u8，没有IV。</p>\n<p>　　其实就是前面步骤中，enc.keyinfo中第三行的IV删掉就行。</p>\n<p>　　同时步骤一中用openssl生成key的，改成：新建文本文件，写入密码后保存，然后删掉后缀当key。</p>\n<p>其他照旧：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">D:\\<span class=\"title\">aa</span>\\<span class=\"title\">ffmpeg</span>-4.0.2-<span class=\"title\">win64</span>-<span class=\"title\">static</span>\\<span class=\"title\">bin</span>\\<span class=\"title\">ffmpeg.exe</span> -<span class=\"title\">y</span> -<span class=\"title\">i</span> <span class=\"title\">test.mp4</span> -<span class=\"title\">hls_time</span> 6 -<span class=\"title\">hls_key_info_file</span> <span class=\"title\">k0.keyinfo</span> -<span class=\"title\">hls_playlist_type</span> <span class=\"title\">vod</span> -<span class=\"title\">hls_segment_filename</span> \"<span class=\"title\">file</span>%<span class=\"title\">d</span>\" <span class=\"title\">playlist.m3u8</span></span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/10/12.png\" alt=\"Result pic 12\" title=\"加密方式m3u8文件\"></p>\n<p>　　密码文件k0，用openssl生成的话，打开是乱码的，自己写入的就不会乱码，使用起来暂时未发现区别：</p>\n<p><img src=\"/contentimg/10/13.png\" alt=\"Result pic 13\" title=\"密码文件\"></p>\n<p>　　加密方式生成的ts文件，你会发现无法用播放器打开，只能用ffplay打开（打开方式同无加密一样的代码，都是直接传入m3u8文件即可）。</p>\n<p>　　这样解密方式，实际也和前面一样，都是围绕m3u8，是否有key，实际都是内部处理的。</p>\n<p>这里可能会遇到问题的是，网上的都是说EXT-X-KEY这里的是http，实际都可以，找得到文件就行。然后就是开头提的两个m3u8的，这个就溜一点：</p>\n<p>　　改EXT-X-KEY的文件地址为key的本地地址后，发现这样去转是失败的（提示找不到ts文件），这时可以把下面的一堆ts信息，换成另一个m3u8里面的ts信息，就可以转换了。我遇到的情况，是第一个ts信息是本地文件，第二个是一个找不到的路径的文件（但是这个带key，第一个不带），修改成本地文件后，除了#EXTINF的数字不同外，其他都一样（文件也能找到了），结果还是报错，就把那个m3u8的ts信息都复制过来（#EXTINF的数字保持一样），本个m3u8只保留EXT-X-KEY这里的URI=”k0”，其他都是用另一个m3u8的，就可以转换了。</p>"},{"title":"单例模式_静态构造函数实现和IoDH实现","date":"2018-10-12T14:55:58.000Z","_content":"\t\n　　单例模式，简单字面意思就是整个程序中只进行一次初始化的操作。相对于静态类，单例模式能做到延迟加载，以及类继承。本文记录“静态构造函数下的单例模式”，以及介绍“Initialization Demand Holder(IoDH)”模式实现。该示例使用VS2017以及C#进行编程。\n<!-- more -->\n## 一.前言\n\n　　单例模式，是编程中使用频率相当高的一种最简单的设计模式。可以简单理解为静态类的设计模式化。为什么会区别于静态类？\n\n　　静态类，一般用于“工具类”。在数据库连接等等场景下需要多线程的就不能使用静态类，其他应用于单线程下的操作，如文件读取，一般使用静态类。在软件优化中，第一个问题是初始化：静态类，会在程序启动的时候就会初始化，然后全局生存到进程结束。真有这个必要吗？我们打开程序时，一般先是登陆窗口，如果这个时候，一堆静态工具类也要加载初始化，那不就要等好久，还特占内存。\n\n　　所以在这个情况下产生了能做到延迟加载的单例模式，当然，它还能进行类继承等等其他解耦操作（不过该部分涉及到其他涉及模式，本文不深入讨论）。\n\n## 二.代码记录\n\n### 2.1 静态构造函数实现单例模式\n\n#### 2.1.1 静态类何时初始化\n\n　　这里我们直接上代码，根据结果进行记录：\n\n　　字段x初始化会在构造函数前面先执行。（重点。后面单例模式里面执行代码和想象中不同，考虑是这个原因。）\n\n``` java\n#if step1\n    public class SingletonTest\n    {\n        public static string x = EchoAndReturn(\"A_In type initializer\");\n\n#if step1needstatic\n        /// <summary>\n        /// 当没有写静态构造函数时，框架会自动生成\n        /// 导致静态字段的初始化跑到了静态方法调用之前\n        /// 造成对象的提前初始化\n        /// </summary>\n        static SingletonTest()\n        {\n            x = \"A_static init\";\n            Console.WriteLine(x);\n        }\n#endif\n\n        public SingletonTest()\n        {\n            x = \"A_nonstatic init\";\n            Console.WriteLine(x);\n        }\n\n        public static string EchoAndReturn(string s)\n        {\n            Console.WriteLine(s);\n            return s;\n        }\n    }\n#endif\n```\n\n　　对应main函数如下：\n\n``` java\n#if step1\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Starting Main\");\n            //使用静态类\n            SingletonTest.EchoAndReturn(\"Echo!\");\n            Console.WriteLine(\"After echo\");\n            //取出静态类中的静态成员x\n            string y = SingletonTest.x;\n            if (!string.IsNullOrEmpty(y))\n            {\n                Console.WriteLine(y);\n            }\n            Console.ReadKey();\n        }\n#endif\n```\n\n![Result pic 1](/contentimg/1/1.png \"2.1.1.1执行情况\")\n\n　　根据main函数代码，直觉上，应该先输出“Starting Main”，然后输出“Echo!”，最后输出\"After echo\"和SingletonTest.x。总共4个输出。\n\n　　但是实际：\n\n　　1.程序运行–》2.执行main函数–》3.使用到静态SingletonTest–》4.静态字段x的初始化–》5.静态构造函数的初始化–》6.静态函数EchoAndReturn的使用\n　　–》字段x的值由于执行顺序，不是默认赋值的”A_In type initializer”，而是静态构造函数中赋值的“A_static”;\n\n　　如果这里不加静态构造函数？\n\n![Result pic 2](/contentimg/1/2.png \"2.1.1.2执行情况\")\n\n　　1.程序运行–》2.静态类型的初始化，静态SingletonTest、字段x提前初始化–》3.执行main函数。\n\n　　这里在文末的博文中提到是：\n\n>　　在类中实现静态构造函数，那beforefieldinit属性就会被precise属性替换，确保静态成员会在类第一次使用之前的那一刻进行初始化。如果不显式实现，静态成员会在类第一次使用之前的任何时间初始化（由CLR智能决定）。\n\n　　比较得出：\n\n>　　***显式静态构造函数使对象在被调用的时候才初始化，避免了static类型在程序启动的时候就提前初始化的问题。有利于程序的快速启动与内存的控制。***\n\n#### 2.1.2 简单静态类单例模式实现\n\n``` java\n    public class SingletonTest\n    {\n        private static readonly SingletonTest _instance = new SingletonTest();\n        static SingletonTest()\n        {\n        }\n        private SingletonTest()\n        {\n        }\n        public static SingletonTest Instance\n        {\n            get\n            {\n                return _instance;\n            }\n        }\n    }\n```\n\n1.  将构造函数private；\n1.  显式实现static构造函数；\n1.  创建私有静态实例_instance并初始化；\n1.  public开放实例对外访问接口 Instance 属性。\n \n这样避免了静态类型的提前初始化，同时直接在初始化时候赋值的方式也避免了需要加锁的问题。\n\n#### 2.1.3 单例模式执行顺序\n\n``` java\n    #if step21\n    public class SingletonTest\n    {\n        private static readonly SingletonTest _instance = new SingletonTest();\n        static SingletonTest()\n        {\n            x = \"static init console\";\n            Console.WriteLine(x);\n        }\n        private SingletonTest()\n        {\n            x = \"nonstatic init console\";\n            Console.WriteLine(x);\n        }\n        public static SingletonTest Instance\n        {\n            get\n            {\n                Console.WriteLine(\"Instance\");\n                return _instance;\n            }\n        }\n        //测试静态字段，对执行顺序无影响，实际使用应该为非static，同时操作应该通过XX，不能直接操作本字段\n        private static string x = \"xxxx\";\n        public string XX\n        {\n            get { return x; }\n            private set { x = value; }\n        }\n    }\n#endif\n\n```\n\n　　main函数中输出 Console.WriteLine( SingletonTest.Instance.XX);\n　　执行结果：\n\n![Result pic 3](/contentimg/1/3.png \"2.1.3执行情况\")\n\n　　1.程序启动–》2.遇到类SingletonTest–》3.优先初始化static属性_instance–》4._instance=new SingletonTest()进行实例化–》5.完成static属性的初始化后进行static构造函数的初始化–》6.调用SingletonTest.Instance–》7.获取结果XX得”static init”\n　　–》注意这里不是先static init，然后才nonstatic init。因为属性的初始化优先于static构造函数。所以最后的结果是静态构造函数得执行顺序在nonstatic的后面。\n\n#### 2.1.4 继承问题\n\n　　这里题外话记录一下继承时的表现，进一步展示函数执行顺序：\n\n　　增加子类型：\n\n``` java\n    public class SingletonTest_inherit : SingletonTest\n    {\n        static SingletonTest_inherit()\n        {\n            x = \"B_static\";\n            Console.WriteLine(\"B_static init\");\n        }\n        public SingletonTest_inherit()\n        {\n            x = \"B_nonstatic\";\n            Console.WriteLine(\"B_nonstatic init\");\n        }\n    }\n```\n　　执行结果：\n\n![Result pic 4](/contentimg/1/4.png \"2.1.4.1执行情况\")\n\n\n　　子对象的静态构造函数没有执行。\n\n　　如果这里增加实例化？\n\n![Result pic 5](/contentimg/1/5.png \"2.1.4.2执行情况\")\n\n　　1.父类型字段x初始化–》2.父类型static构造函数执行–》3.子类型static构造函数执行–》4.父类型构造函数执行–》5.子类型构造函数执行\n　　–》这里父类型和子类型共用同一个字段x，导致字段x的赋值被子类型重写。\n\n![Result pic 6](/contentimg/1/6.png \"2.1.4.3执行情况\")\n\n### 2.2 IoDH实现\n\n#### 2.2.1 单例模式实现\n\n　　推荐单例模式使用该方式。在类内部定义内部类来实现单例模式。\n\n``` java\n    public class SingletonTest\n    {\n        private class InnerCLass\n        {\n            static InnerCLass() { }\n            internal static SingletonTest instance = new SingletonTest();\n        }\n        private SingletonTest() { }\n        public static SingletonTest Instance\n        {\n            get { return InnerCLass.instance; }\n        }\n    }\n```\n\n#### 2.2.2 单例模式执行顺序\n\n``` java\n    public class SingletonTest\n    {\n        private class InnerCLass\n        {\n            static InnerCLass()\n            {\n                Console.WriteLine(\"InnerCLass static\");\n            }\n            internal static SingletonTest instance = new SingletonTest();\n        }\n        private SingletonTest() {\n            Console.WriteLine(\"SingletonTest nonstatic\");\n        }\n        public static SingletonTest Instance\n        {\n            get {\n                Console.WriteLine(\"Instance\");\n                return InnerCLass.instance; }\n        }\n        public string XX = \"aaa\";\n    }\n```\n\n![Result pic 7](/contentimg/1/7.png \"2.2.2执行情况\")\n\n\n## 三.相关参考链接\n\n 主要参考博文: [https://www.cnblogs.com/rush/archive/2011/10/30/2229565.html](https://www.cnblogs.com/rush/archive/2011/10/30/2229565.html)\n\n 提供继承方面的探讨: [https://www.cnblogs.com/jiagoushi/p/3775046.html](https://www.cnblogs.com/jiagoushi/p/3775046.html)\n\n 对第一个博文进行扩展和实践: [https://blog.csdn.net/abc524061/article/details/57086267?utm_source=itdadao&amp;utm_medium=referral](https://blog.csdn.net/abc524061/article/details/57086267?utm_source=itdadao&amp;utm_medium=referral)\n\n 本文测试程序工程可以从git直接获取：\n \n git代码库: [Codes](https://github.com/YaojiaxinPC/hexoblog/tree/master/SingletonTestDemo)\n","source":"_posts/1IoDHSingleton.md","raw":"---\ntitle: 单例模式_静态构造函数实现和IoDH实现\ndate: 2018-10-12 22:55:58\ncategories:\n  - 设计模式\ntags:\n  - C#\n  - IoDH\n---\n\t\n　　单例模式，简单字面意思就是整个程序中只进行一次初始化的操作。相对于静态类，单例模式能做到延迟加载，以及类继承。本文记录“静态构造函数下的单例模式”，以及介绍“Initialization Demand Holder(IoDH)”模式实现。该示例使用VS2017以及C#进行编程。\n<!-- more -->\n## 一.前言\n\n　　单例模式，是编程中使用频率相当高的一种最简单的设计模式。可以简单理解为静态类的设计模式化。为什么会区别于静态类？\n\n　　静态类，一般用于“工具类”。在数据库连接等等场景下需要多线程的就不能使用静态类，其他应用于单线程下的操作，如文件读取，一般使用静态类。在软件优化中，第一个问题是初始化：静态类，会在程序启动的时候就会初始化，然后全局生存到进程结束。真有这个必要吗？我们打开程序时，一般先是登陆窗口，如果这个时候，一堆静态工具类也要加载初始化，那不就要等好久，还特占内存。\n\n　　所以在这个情况下产生了能做到延迟加载的单例模式，当然，它还能进行类继承等等其他解耦操作（不过该部分涉及到其他涉及模式，本文不深入讨论）。\n\n## 二.代码记录\n\n### 2.1 静态构造函数实现单例模式\n\n#### 2.1.1 静态类何时初始化\n\n　　这里我们直接上代码，根据结果进行记录：\n\n　　字段x初始化会在构造函数前面先执行。（重点。后面单例模式里面执行代码和想象中不同，考虑是这个原因。）\n\n``` java\n#if step1\n    public class SingletonTest\n    {\n        public static string x = EchoAndReturn(\"A_In type initializer\");\n\n#if step1needstatic\n        /// <summary>\n        /// 当没有写静态构造函数时，框架会自动生成\n        /// 导致静态字段的初始化跑到了静态方法调用之前\n        /// 造成对象的提前初始化\n        /// </summary>\n        static SingletonTest()\n        {\n            x = \"A_static init\";\n            Console.WriteLine(x);\n        }\n#endif\n\n        public SingletonTest()\n        {\n            x = \"A_nonstatic init\";\n            Console.WriteLine(x);\n        }\n\n        public static string EchoAndReturn(string s)\n        {\n            Console.WriteLine(s);\n            return s;\n        }\n    }\n#endif\n```\n\n　　对应main函数如下：\n\n``` java\n#if step1\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Starting Main\");\n            //使用静态类\n            SingletonTest.EchoAndReturn(\"Echo!\");\n            Console.WriteLine(\"After echo\");\n            //取出静态类中的静态成员x\n            string y = SingletonTest.x;\n            if (!string.IsNullOrEmpty(y))\n            {\n                Console.WriteLine(y);\n            }\n            Console.ReadKey();\n        }\n#endif\n```\n\n![Result pic 1](/contentimg/1/1.png \"2.1.1.1执行情况\")\n\n　　根据main函数代码，直觉上，应该先输出“Starting Main”，然后输出“Echo!”，最后输出\"After echo\"和SingletonTest.x。总共4个输出。\n\n　　但是实际：\n\n　　1.程序运行–》2.执行main函数–》3.使用到静态SingletonTest–》4.静态字段x的初始化–》5.静态构造函数的初始化–》6.静态函数EchoAndReturn的使用\n　　–》字段x的值由于执行顺序，不是默认赋值的”A_In type initializer”，而是静态构造函数中赋值的“A_static”;\n\n　　如果这里不加静态构造函数？\n\n![Result pic 2](/contentimg/1/2.png \"2.1.1.2执行情况\")\n\n　　1.程序运行–》2.静态类型的初始化，静态SingletonTest、字段x提前初始化–》3.执行main函数。\n\n　　这里在文末的博文中提到是：\n\n>　　在类中实现静态构造函数，那beforefieldinit属性就会被precise属性替换，确保静态成员会在类第一次使用之前的那一刻进行初始化。如果不显式实现，静态成员会在类第一次使用之前的任何时间初始化（由CLR智能决定）。\n\n　　比较得出：\n\n>　　***显式静态构造函数使对象在被调用的时候才初始化，避免了static类型在程序启动的时候就提前初始化的问题。有利于程序的快速启动与内存的控制。***\n\n#### 2.1.2 简单静态类单例模式实现\n\n``` java\n    public class SingletonTest\n    {\n        private static readonly SingletonTest _instance = new SingletonTest();\n        static SingletonTest()\n        {\n        }\n        private SingletonTest()\n        {\n        }\n        public static SingletonTest Instance\n        {\n            get\n            {\n                return _instance;\n            }\n        }\n    }\n```\n\n1.  将构造函数private；\n1.  显式实现static构造函数；\n1.  创建私有静态实例_instance并初始化；\n1.  public开放实例对外访问接口 Instance 属性。\n \n这样避免了静态类型的提前初始化，同时直接在初始化时候赋值的方式也避免了需要加锁的问题。\n\n#### 2.1.3 单例模式执行顺序\n\n``` java\n    #if step21\n    public class SingletonTest\n    {\n        private static readonly SingletonTest _instance = new SingletonTest();\n        static SingletonTest()\n        {\n            x = \"static init console\";\n            Console.WriteLine(x);\n        }\n        private SingletonTest()\n        {\n            x = \"nonstatic init console\";\n            Console.WriteLine(x);\n        }\n        public static SingletonTest Instance\n        {\n            get\n            {\n                Console.WriteLine(\"Instance\");\n                return _instance;\n            }\n        }\n        //测试静态字段，对执行顺序无影响，实际使用应该为非static，同时操作应该通过XX，不能直接操作本字段\n        private static string x = \"xxxx\";\n        public string XX\n        {\n            get { return x; }\n            private set { x = value; }\n        }\n    }\n#endif\n\n```\n\n　　main函数中输出 Console.WriteLine( SingletonTest.Instance.XX);\n　　执行结果：\n\n![Result pic 3](/contentimg/1/3.png \"2.1.3执行情况\")\n\n　　1.程序启动–》2.遇到类SingletonTest–》3.优先初始化static属性_instance–》4._instance=new SingletonTest()进行实例化–》5.完成static属性的初始化后进行static构造函数的初始化–》6.调用SingletonTest.Instance–》7.获取结果XX得”static init”\n　　–》注意这里不是先static init，然后才nonstatic init。因为属性的初始化优先于static构造函数。所以最后的结果是静态构造函数得执行顺序在nonstatic的后面。\n\n#### 2.1.4 继承问题\n\n　　这里题外话记录一下继承时的表现，进一步展示函数执行顺序：\n\n　　增加子类型：\n\n``` java\n    public class SingletonTest_inherit : SingletonTest\n    {\n        static SingletonTest_inherit()\n        {\n            x = \"B_static\";\n            Console.WriteLine(\"B_static init\");\n        }\n        public SingletonTest_inherit()\n        {\n            x = \"B_nonstatic\";\n            Console.WriteLine(\"B_nonstatic init\");\n        }\n    }\n```\n　　执行结果：\n\n![Result pic 4](/contentimg/1/4.png \"2.1.4.1执行情况\")\n\n\n　　子对象的静态构造函数没有执行。\n\n　　如果这里增加实例化？\n\n![Result pic 5](/contentimg/1/5.png \"2.1.4.2执行情况\")\n\n　　1.父类型字段x初始化–》2.父类型static构造函数执行–》3.子类型static构造函数执行–》4.父类型构造函数执行–》5.子类型构造函数执行\n　　–》这里父类型和子类型共用同一个字段x，导致字段x的赋值被子类型重写。\n\n![Result pic 6](/contentimg/1/6.png \"2.1.4.3执行情况\")\n\n### 2.2 IoDH实现\n\n#### 2.2.1 单例模式实现\n\n　　推荐单例模式使用该方式。在类内部定义内部类来实现单例模式。\n\n``` java\n    public class SingletonTest\n    {\n        private class InnerCLass\n        {\n            static InnerCLass() { }\n            internal static SingletonTest instance = new SingletonTest();\n        }\n        private SingletonTest() { }\n        public static SingletonTest Instance\n        {\n            get { return InnerCLass.instance; }\n        }\n    }\n```\n\n#### 2.2.2 单例模式执行顺序\n\n``` java\n    public class SingletonTest\n    {\n        private class InnerCLass\n        {\n            static InnerCLass()\n            {\n                Console.WriteLine(\"InnerCLass static\");\n            }\n            internal static SingletonTest instance = new SingletonTest();\n        }\n        private SingletonTest() {\n            Console.WriteLine(\"SingletonTest nonstatic\");\n        }\n        public static SingletonTest Instance\n        {\n            get {\n                Console.WriteLine(\"Instance\");\n                return InnerCLass.instance; }\n        }\n        public string XX = \"aaa\";\n    }\n```\n\n![Result pic 7](/contentimg/1/7.png \"2.2.2执行情况\")\n\n\n## 三.相关参考链接\n\n 主要参考博文: [https://www.cnblogs.com/rush/archive/2011/10/30/2229565.html](https://www.cnblogs.com/rush/archive/2011/10/30/2229565.html)\n\n 提供继承方面的探讨: [https://www.cnblogs.com/jiagoushi/p/3775046.html](https://www.cnblogs.com/jiagoushi/p/3775046.html)\n\n 对第一个博文进行扩展和实践: [https://blog.csdn.net/abc524061/article/details/57086267?utm_source=itdadao&amp;utm_medium=referral](https://blog.csdn.net/abc524061/article/details/57086267?utm_source=itdadao&amp;utm_medium=referral)\n\n 本文测试程序工程可以从git直接获取：\n \n git代码库: [Codes](https://github.com/YaojiaxinPC/hexoblog/tree/master/SingletonTestDemo)\n","slug":"1IoDHSingleton","published":1,"updated":"2018-10-18T01:57:41.712Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgrhn004hjo9c4xpj9boy","content":"<p>　　单例模式，简单字面意思就是整个程序中只进行一次初始化的操作。相对于静态类，单例模式能做到延迟加载，以及类继承。本文记录“静态构造函数下的单例模式”，以及介绍“Initialization Demand Holder(IoDH)”模式实现。该示例使用VS2017以及C#进行编程。<br><a id=\"more\"></a></p>\n<h2 id=\"一-前言\"><a href=\"#一-前言\" class=\"headerlink\" title=\"一.前言\"></a>一.前言</h2><p>　　单例模式，是编程中使用频率相当高的一种最简单的设计模式。可以简单理解为静态类的设计模式化。为什么会区别于静态类？</p>\n<p>　　静态类，一般用于“工具类”。在数据库连接等等场景下需要多线程的就不能使用静态类，其他应用于单线程下的操作，如文件读取，一般使用静态类。在软件优化中，第一个问题是初始化：静态类，会在程序启动的时候就会初始化，然后全局生存到进程结束。真有这个必要吗？我们打开程序时，一般先是登陆窗口，如果这个时候，一堆静态工具类也要加载初始化，那不就要等好久，还特占内存。</p>\n<p>　　所以在这个情况下产生了能做到延迟加载的单例模式，当然，它还能进行类继承等等其他解耦操作（不过该部分涉及到其他涉及模式，本文不深入讨论）。</p>\n<h2 id=\"二-代码记录\"><a href=\"#二-代码记录\" class=\"headerlink\" title=\"二.代码记录\"></a>二.代码记录</h2><h3 id=\"2-1-静态构造函数实现单例模式\"><a href=\"#2-1-静态构造函数实现单例模式\" class=\"headerlink\" title=\"2.1 静态构造函数实现单例模式\"></a>2.1 静态构造函数实现单例模式</h3><h4 id=\"2-1-1-静态类何时初始化\"><a href=\"#2-1-1-静态类何时初始化\" class=\"headerlink\" title=\"2.1.1 静态类何时初始化\"></a>2.1.1 静态类何时初始化</h4><p>　　这里我们直接上代码，根据结果进行记录：</p>\n<p>　　字段x初始化会在构造函数前面先执行。（重点。后面单例模式里面执行代码和想象中不同，考虑是这个原因。）</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#if step1</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonTest</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string x = EchoAndReturn(<span class=\"string\">\"A_In type initializer\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">#if step1needstatic</span><br><span class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// 当没有写静态构造函数时，框架会自动生成</span></span><br><span class=\"line\">        <span class=\"comment\">/// 导致静态字段的初始化跑到了静态方法调用之前</span></span><br><span class=\"line\">        <span class=\"comment\">/// 造成对象的提前初始化</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            x = <span class=\"string\">\"A_static init\"</span>;</span><br><span class=\"line\">            Console.WriteLine(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            x = <span class=\"string\">\"A_nonstatic init\"</span>;</span><br><span class=\"line\">            Console.WriteLine(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string <span class=\"title\">EchoAndReturn</span><span class=\"params\">(string s)</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            Console.WriteLine(s);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<p>　　对应main函数如下：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#if step1</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(string[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"Starting Main\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">//使用静态类</span></span><br><span class=\"line\">            SingletonTest.EchoAndReturn(<span class=\"string\">\"Echo!\"</span>);</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"After echo\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">//取出静态类中的静态成员x</span></span><br><span class=\"line\">            string y = SingletonTest.x;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!string.IsNullOrEmpty(y))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(y);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Console.ReadKey();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/1/1.png\" alt=\"Result pic 1\" title=\"2.1.1.1执行情况\"></p>\n<p>　　根据main函数代码，直觉上，应该先输出“Starting Main”，然后输出“Echo!”，最后输出”After echo”和SingletonTest.x。总共4个输出。</p>\n<p>　　但是实际：</p>\n<p>　　1.程序运行–》2.执行main函数–》3.使用到静态SingletonTest–》4.静态字段x的初始化–》5.静态构造函数的初始化–》6.静态函数EchoAndReturn的使用<br>　　–》字段x的值由于执行顺序，不是默认赋值的”A_In type initializer”，而是静态构造函数中赋值的“A_static”;</p>\n<p>　　如果这里不加静态构造函数？</p>\n<p><img src=\"/contentimg/1/2.png\" alt=\"Result pic 2\" title=\"2.1.1.2执行情况\"></p>\n<p>　　1.程序运行–》2.静态类型的初始化，静态SingletonTest、字段x提前初始化–》3.执行main函数。</p>\n<p>　　这里在文末的博文中提到是：</p>\n<blockquote>\n<p>　　在类中实现静态构造函数，那beforefieldinit属性就会被precise属性替换，确保静态成员会在类第一次使用之前的那一刻进行初始化。如果不显式实现，静态成员会在类第一次使用之前的任何时间初始化（由CLR智能决定）。</p>\n</blockquote>\n<p>　　比较得出：</p>\n<blockquote>\n<p>　　<strong><em>显式静态构造函数使对象在被调用的时候才初始化，避免了static类型在程序启动的时候就提前初始化的问题。有利于程序的快速启动与内存的控制。</em></strong></p>\n</blockquote>\n<h4 id=\"2-1-2-简单静态类单例模式实现\"><a href=\"#2-1-2-简单静态类单例模式实现\" class=\"headerlink\" title=\"2.1.2 简单静态类单例模式实现\"></a>2.1.2 简单静态类单例模式实现</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> readonly SingletonTest _instance = <span class=\"keyword\">new</span> SingletonTest();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SingletonTest Instance</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        get</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _instance;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>将构造函数private；</li>\n<li>显式实现static构造函数；</li>\n<li>创建私有静态实例_instance并初始化；</li>\n<li>public开放实例对外访问接口 Instance 属性。</li>\n</ol>\n<p>这样避免了静态类型的提前初始化，同时直接在初始化时候赋值的方式也避免了需要加锁的问题。</p>\n<h4 id=\"2-1-3-单例模式执行顺序\"><a href=\"#2-1-3-单例模式执行顺序\" class=\"headerlink\" title=\"2.1.3 单例模式执行顺序\"></a>2.1.3 单例模式执行顺序</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    #if step21</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonTest</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> readonly SingletonTest _instance = <span class=\"keyword\">new</span> SingletonTest();</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            x = <span class=\"string\">\"static init console\"</span>;</span><br><span class=\"line\">            Console.WriteLine(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            x = <span class=\"string\">\"nonstatic init console\"</span>;</span><br><span class=\"line\">            Console.WriteLine(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SingletonTest Instance</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            get</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"Instance\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> _instance;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//测试静态字段，对执行顺序无影响，实际使用应该为非static，同时操作应该通过XX，不能直接操作本字段</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> string x = <span class=\"string\">\"xxxx\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> string XX</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            get &#123; <span class=\"keyword\">return</span> x; &#125;</span><br><span class=\"line\">            <span class=\"keyword\">private</span> set &#123; x = value; &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<p>　　main函数中输出 Console.WriteLine( SingletonTest.Instance.XX);<br>　　执行结果：</p>\n<p><img src=\"/contentimg/1/3.png\" alt=\"Result pic 3\" title=\"2.1.3执行情况\"></p>\n<p>　　1.程序启动–》2.遇到类SingletonTest–》3.优先初始化static属性_instance–》4._instance=new SingletonTest()进行实例化–》5.完成static属性的初始化后进行static构造函数的初始化–》6.调用SingletonTest.Instance–》7.获取结果XX得”static init”<br>　　–》注意这里不是先static init，然后才nonstatic init。因为属性的初始化优先于static构造函数。所以最后的结果是静态构造函数得执行顺序在nonstatic的后面。</p>\n<h4 id=\"2-1-4-继承问题\"><a href=\"#2-1-4-继承问题\" class=\"headerlink\" title=\"2.1.4 继承问题\"></a>2.1.4 继承问题</h4><p>　　这里题外话记录一下继承时的表现，进一步展示函数执行顺序：</p>\n<p>　　增加子类型：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SingletonTest_inherit : SingletonTest</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">SingletonTest_inherit</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        x = <span class=\"string\">\"B_static\"</span>;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"B_static init\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SingletonTest_inherit</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        x = <span class=\"string\">\"B_nonstatic\"</span>;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"B_nonstatic init\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　执行结果：</p>\n<p><img src=\"/contentimg/1/4.png\" alt=\"Result pic 4\" title=\"2.1.4.1执行情况\"></p>\n<p>　　子对象的静态构造函数没有执行。</p>\n<p>　　如果这里增加实例化？</p>\n<p><img src=\"/contentimg/1/5.png\" alt=\"Result pic 5\" title=\"2.1.4.2执行情况\"></p>\n<p>　　1.父类型字段x初始化–》2.父类型static构造函数执行–》3.子类型static构造函数执行–》4.父类型构造函数执行–》5.子类型构造函数执行<br>　　–》这里父类型和子类型共用同一个字段x，导致字段x的赋值被子类型重写。</p>\n<p><img src=\"/contentimg/1/6.png\" alt=\"Result pic 6\" title=\"2.1.4.3执行情况\"></p>\n<h3 id=\"2-2-IoDH实现\"><a href=\"#2-2-IoDH实现\" class=\"headerlink\" title=\"2.2 IoDH实现\"></a>2.2 IoDH实现</h3><h4 id=\"2-2-1-单例模式实现\"><a href=\"#2-2-1-单例模式实现\" class=\"headerlink\" title=\"2.2.1 单例模式实现\"></a>2.2.1 单例模式实现</h4><p>　　推荐单例模式使用该方式。在类内部定义内部类来实现单例模式。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InnerCLass</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">InnerCLass</span><span class=\"params\">()</span> </span>&#123; &#125;</span><br><span class=\"line\">        internal <span class=\"keyword\">static</span> SingletonTest instance = <span class=\"keyword\">new</span> SingletonTest();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span> </span>&#123; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SingletonTest Instance</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        get &#123; <span class=\"keyword\">return</span> InnerCLass.instance; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-2-单例模式执行顺序\"><a href=\"#2-2-2-单例模式执行顺序\" class=\"headerlink\" title=\"2.2.2 单例模式执行顺序\"></a>2.2.2 单例模式执行顺序</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InnerCLass</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">InnerCLass</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"InnerCLass static\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        internal <span class=\"keyword\">static</span> SingletonTest instance = <span class=\"keyword\">new</span> SingletonTest();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"SingletonTest nonstatic\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SingletonTest Instance</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        get &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"Instance\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> InnerCLass.instance; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> string XX = <span class=\"string\">\"aaa\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/1/7.png\" alt=\"Result pic 7\" title=\"2.2.2执行情况\"></p>\n<h2 id=\"三-相关参考链接\"><a href=\"#三-相关参考链接\" class=\"headerlink\" title=\"三.相关参考链接\"></a>三.相关参考链接</h2><p> 主要参考博文: <a href=\"https://www.cnblogs.com/rush/archive/2011/10/30/2229565.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">https://www.cnblogs.com/rush/archive/2011/10/30/2229565.html</a></p>\n<p> 提供继承方面的探讨: <a href=\"https://www.cnblogs.com/jiagoushi/p/3775046.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">https://www.cnblogs.com/jiagoushi/p/3775046.html</a></p>\n<p> 对第一个博文进行扩展和实践: <a href=\"https://blog.csdn.net/abc524061/article/details/57086267?utm_source=itdadao&amp;utm_medium=referral\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">https://blog.csdn.net/abc524061/article/details/57086267?utm_source=itdadao&amp;utm_medium=referral</a></p>\n<p> 本文测试程序工程可以从git直接获取：</p>\n<p> git代码库: <a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/SingletonTestDemo\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Codes</a></p>\n","site":{"data":{}},"excerpt":"<p>　　单例模式，简单字面意思就是整个程序中只进行一次初始化的操作。相对于静态类，单例模式能做到延迟加载，以及类继承。本文记录“静态构造函数下的单例模式”，以及介绍“Initialization Demand Holder(IoDH)”模式实现。该示例使用VS2017以及C#进行编程。<br>","more":"</p>\n<h2 id=\"一-前言\"><a href=\"#一-前言\" class=\"headerlink\" title=\"一.前言\"></a>一.前言</h2><p>　　单例模式，是编程中使用频率相当高的一种最简单的设计模式。可以简单理解为静态类的设计模式化。为什么会区别于静态类？</p>\n<p>　　静态类，一般用于“工具类”。在数据库连接等等场景下需要多线程的就不能使用静态类，其他应用于单线程下的操作，如文件读取，一般使用静态类。在软件优化中，第一个问题是初始化：静态类，会在程序启动的时候就会初始化，然后全局生存到进程结束。真有这个必要吗？我们打开程序时，一般先是登陆窗口，如果这个时候，一堆静态工具类也要加载初始化，那不就要等好久，还特占内存。</p>\n<p>　　所以在这个情况下产生了能做到延迟加载的单例模式，当然，它还能进行类继承等等其他解耦操作（不过该部分涉及到其他涉及模式，本文不深入讨论）。</p>\n<h2 id=\"二-代码记录\"><a href=\"#二-代码记录\" class=\"headerlink\" title=\"二.代码记录\"></a>二.代码记录</h2><h3 id=\"2-1-静态构造函数实现单例模式\"><a href=\"#2-1-静态构造函数实现单例模式\" class=\"headerlink\" title=\"2.1 静态构造函数实现单例模式\"></a>2.1 静态构造函数实现单例模式</h3><h4 id=\"2-1-1-静态类何时初始化\"><a href=\"#2-1-1-静态类何时初始化\" class=\"headerlink\" title=\"2.1.1 静态类何时初始化\"></a>2.1.1 静态类何时初始化</h4><p>　　这里我们直接上代码，根据结果进行记录：</p>\n<p>　　字段x初始化会在构造函数前面先执行。（重点。后面单例模式里面执行代码和想象中不同，考虑是这个原因。）</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#if step1</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonTest</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string x = EchoAndReturn(<span class=\"string\">\"A_In type initializer\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">#if step1needstatic</span><br><span class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// 当没有写静态构造函数时，框架会自动生成</span></span><br><span class=\"line\">        <span class=\"comment\">/// 导致静态字段的初始化跑到了静态方法调用之前</span></span><br><span class=\"line\">        <span class=\"comment\">/// 造成对象的提前初始化</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            x = <span class=\"string\">\"A_static init\"</span>;</span><br><span class=\"line\">            Console.WriteLine(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            x = <span class=\"string\">\"A_nonstatic init\"</span>;</span><br><span class=\"line\">            Console.WriteLine(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string <span class=\"title\">EchoAndReturn</span><span class=\"params\">(string s)</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            Console.WriteLine(s);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<p>　　对应main函数如下：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#if step1</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(string[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"Starting Main\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">//使用静态类</span></span><br><span class=\"line\">            SingletonTest.EchoAndReturn(<span class=\"string\">\"Echo!\"</span>);</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"After echo\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">//取出静态类中的静态成员x</span></span><br><span class=\"line\">            string y = SingletonTest.x;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!string.IsNullOrEmpty(y))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(y);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Console.ReadKey();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/1/1.png\" alt=\"Result pic 1\" title=\"2.1.1.1执行情况\"></p>\n<p>　　根据main函数代码，直觉上，应该先输出“Starting Main”，然后输出“Echo!”，最后输出”After echo”和SingletonTest.x。总共4个输出。</p>\n<p>　　但是实际：</p>\n<p>　　1.程序运行–》2.执行main函数–》3.使用到静态SingletonTest–》4.静态字段x的初始化–》5.静态构造函数的初始化–》6.静态函数EchoAndReturn的使用<br>　　–》字段x的值由于执行顺序，不是默认赋值的”A_In type initializer”，而是静态构造函数中赋值的“A_static”;</p>\n<p>　　如果这里不加静态构造函数？</p>\n<p><img src=\"/contentimg/1/2.png\" alt=\"Result pic 2\" title=\"2.1.1.2执行情况\"></p>\n<p>　　1.程序运行–》2.静态类型的初始化，静态SingletonTest、字段x提前初始化–》3.执行main函数。</p>\n<p>　　这里在文末的博文中提到是：</p>\n<blockquote>\n<p>　　在类中实现静态构造函数，那beforefieldinit属性就会被precise属性替换，确保静态成员会在类第一次使用之前的那一刻进行初始化。如果不显式实现，静态成员会在类第一次使用之前的任何时间初始化（由CLR智能决定）。</p>\n</blockquote>\n<p>　　比较得出：</p>\n<blockquote>\n<p>　　<strong><em>显式静态构造函数使对象在被调用的时候才初始化，避免了static类型在程序启动的时候就提前初始化的问题。有利于程序的快速启动与内存的控制。</em></strong></p>\n</blockquote>\n<h4 id=\"2-1-2-简单静态类单例模式实现\"><a href=\"#2-1-2-简单静态类单例模式实现\" class=\"headerlink\" title=\"2.1.2 简单静态类单例模式实现\"></a>2.1.2 简单静态类单例模式实现</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> readonly SingletonTest _instance = <span class=\"keyword\">new</span> SingletonTest();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SingletonTest Instance</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        get</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _instance;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>将构造函数private；</li>\n<li>显式实现static构造函数；</li>\n<li>创建私有静态实例_instance并初始化；</li>\n<li>public开放实例对外访问接口 Instance 属性。</li>\n</ol>\n<p>这样避免了静态类型的提前初始化，同时直接在初始化时候赋值的方式也避免了需要加锁的问题。</p>\n<h4 id=\"2-1-3-单例模式执行顺序\"><a href=\"#2-1-3-单例模式执行顺序\" class=\"headerlink\" title=\"2.1.3 单例模式执行顺序\"></a>2.1.3 单例模式执行顺序</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    #if step21</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonTest</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> readonly SingletonTest _instance = <span class=\"keyword\">new</span> SingletonTest();</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            x = <span class=\"string\">\"static init console\"</span>;</span><br><span class=\"line\">            Console.WriteLine(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            x = <span class=\"string\">\"nonstatic init console\"</span>;</span><br><span class=\"line\">            Console.WriteLine(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SingletonTest Instance</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            get</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"Instance\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> _instance;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//测试静态字段，对执行顺序无影响，实际使用应该为非static，同时操作应该通过XX，不能直接操作本字段</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> string x = <span class=\"string\">\"xxxx\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> string XX</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            get &#123; <span class=\"keyword\">return</span> x; &#125;</span><br><span class=\"line\">            <span class=\"keyword\">private</span> set &#123; x = value; &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<p>　　main函数中输出 Console.WriteLine( SingletonTest.Instance.XX);<br>　　执行结果：</p>\n<p><img src=\"/contentimg/1/3.png\" alt=\"Result pic 3\" title=\"2.1.3执行情况\"></p>\n<p>　　1.程序启动–》2.遇到类SingletonTest–》3.优先初始化static属性_instance–》4._instance=new SingletonTest()进行实例化–》5.完成static属性的初始化后进行static构造函数的初始化–》6.调用SingletonTest.Instance–》7.获取结果XX得”static init”<br>　　–》注意这里不是先static init，然后才nonstatic init。因为属性的初始化优先于static构造函数。所以最后的结果是静态构造函数得执行顺序在nonstatic的后面。</p>\n<h4 id=\"2-1-4-继承问题\"><a href=\"#2-1-4-继承问题\" class=\"headerlink\" title=\"2.1.4 继承问题\"></a>2.1.4 继承问题</h4><p>　　这里题外话记录一下继承时的表现，进一步展示函数执行顺序：</p>\n<p>　　增加子类型：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SingletonTest_inherit : SingletonTest</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">SingletonTest_inherit</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        x = <span class=\"string\">\"B_static\"</span>;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"B_static init\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SingletonTest_inherit</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        x = <span class=\"string\">\"B_nonstatic\"</span>;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"B_nonstatic init\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　执行结果：</p>\n<p><img src=\"/contentimg/1/4.png\" alt=\"Result pic 4\" title=\"2.1.4.1执行情况\"></p>\n<p>　　子对象的静态构造函数没有执行。</p>\n<p>　　如果这里增加实例化？</p>\n<p><img src=\"/contentimg/1/5.png\" alt=\"Result pic 5\" title=\"2.1.4.2执行情况\"></p>\n<p>　　1.父类型字段x初始化–》2.父类型static构造函数执行–》3.子类型static构造函数执行–》4.父类型构造函数执行–》5.子类型构造函数执行<br>　　–》这里父类型和子类型共用同一个字段x，导致字段x的赋值被子类型重写。</p>\n<p><img src=\"/contentimg/1/6.png\" alt=\"Result pic 6\" title=\"2.1.4.3执行情况\"></p>\n<h3 id=\"2-2-IoDH实现\"><a href=\"#2-2-IoDH实现\" class=\"headerlink\" title=\"2.2 IoDH实现\"></a>2.2 IoDH实现</h3><h4 id=\"2-2-1-单例模式实现\"><a href=\"#2-2-1-单例模式实现\" class=\"headerlink\" title=\"2.2.1 单例模式实现\"></a>2.2.1 单例模式实现</h4><p>　　推荐单例模式使用该方式。在类内部定义内部类来实现单例模式。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InnerCLass</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">InnerCLass</span><span class=\"params\">()</span> </span>&#123; &#125;</span><br><span class=\"line\">        internal <span class=\"keyword\">static</span> SingletonTest instance = <span class=\"keyword\">new</span> SingletonTest();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span> </span>&#123; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SingletonTest Instance</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        get &#123; <span class=\"keyword\">return</span> InnerCLass.instance; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-2-单例模式执行顺序\"><a href=\"#2-2-2-单例模式执行顺序\" class=\"headerlink\" title=\"2.2.2 单例模式执行顺序\"></a>2.2.2 单例模式执行顺序</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SingletonTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InnerCLass</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">InnerCLass</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"InnerCLass static\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        internal <span class=\"keyword\">static</span> SingletonTest instance = <span class=\"keyword\">new</span> SingletonTest();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">SingletonTest</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"SingletonTest nonstatic\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SingletonTest Instance</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        get &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"Instance\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> InnerCLass.instance; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> string XX = <span class=\"string\">\"aaa\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/1/7.png\" alt=\"Result pic 7\" title=\"2.2.2执行情况\"></p>\n<h2 id=\"三-相关参考链接\"><a href=\"#三-相关参考链接\" class=\"headerlink\" title=\"三.相关参考链接\"></a>三.相关参考链接</h2><p> 主要参考博文: <a href=\"https://www.cnblogs.com/rush/archive/2011/10/30/2229565.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">https://www.cnblogs.com/rush/archive/2011/10/30/2229565.html</a></p>\n<p> 提供继承方面的探讨: <a href=\"https://www.cnblogs.com/jiagoushi/p/3775046.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">https://www.cnblogs.com/jiagoushi/p/3775046.html</a></p>\n<p> 对第一个博文进行扩展和实践: <a href=\"https://blog.csdn.net/abc524061/article/details/57086267?utm_source=itdadao&amp;utm_medium=referral\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">https://blog.csdn.net/abc524061/article/details/57086267?utm_source=itdadao&amp;utm_medium=referral</a></p>\n<p> 本文测试程序工程可以从git直接获取：</p>\n<p> git代码库: <a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/SingletonTestDemo\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Codes</a></p>"},{"title":"5个简单算法","date":"2018-10-23T00:07:59.000Z","_content":"\n　　本文介绍五个算法小题目：\n\n1. 四个不同数字组成互不相等且不重复的三位数。\n1. 斐波那契数列。\n1. 字符串转整型。\n1. 简单逻辑思考题。\n1. 数组移动\n\n<!-- more -->\n\n　　分享一下博客上看到的一些算法题：\n\n## 四个数字组成三位数\n\n　　有数字：1、2、3、4，请问能组成多少个互不相同且无重复数字的三位数？请输出这些数字。\n\n### 解法\n\n　　三位数，百位数有4种选择，则十位数有3种选择，从而个位数只有2种选择。共4x3x2=24种情况。\n\n``` java\n    int count = 0;\n    for (int i = 1; i <= 4; i++)\n    {\n        for (int j = 1; j <= 4; j++)\n        {\n            if (i == j) continue;\n            for (int k = 1; k <= 4; k++)\n            {\n                if (j == k || k == i) continue;\n \n                count++;\n                Console.WriteLine(\"第{1}种情况：{0}\", i * 100 + j * 10 + k, count.ToString(\"00\"));\n            }\n        }\n    }\n```\n\n　　如果要写能处理不同输入数字数量的，就得用递归：\n\n``` java\n    /// <summary>\n    /// 题目：有数字：1、2、3、4，请问能组成多少个互不相同且无重复数字的三位数？请输出这些数字。\n    /// </summary>\n    public class NumToInt : IGetResult\n    {\n        public void ConsoleOut()\n        {\n            List<int> inputlst = new List<int>() { 1, 2, 3, 4 };\n\n            int[] inputnums = inputlst.ToArray();\n            List<int> result = NumToIntMethod(inputnums);\n            StringBuilder txt = new StringBuilder();\n            if (result.Count > 0)\n            {\n                txt.Append(\"结果共 \" + result.Count + \" 个；分别是： \");\n                for (int i = 0; i < result.Count; i++)\n                {\n                    if (i < result.Count - 1) txt.Append(result[i] + \"、 \");\n                    else\n                        txt.Append(result[i]);\n                }\n            }\n            else\n            {\n                txt.Append(\"存在重复数字，请重新输入！\");\n            }\n\n            Console.WriteLine(txt.ToString());\n        }\n\n        /// <summary>\n        /// 输入有多少数字，组合排序后输出结果\n        /// </summary>\n        /// <param name=\"inputnum\"></param>\n        /// <returns></returns>\n        private List<int> NumToIntMethod(int[] inputnum)\n        {\n            List<int> results = new List<int>();\n\n            //去除重复值\n            int[] hassamenum = inputnum.GroupBy(i => i).Select(i => i.Key).ToArray();\n\n            //不存在重复值\n            if (hassamenum.Count() == inputnum.Count())\n            {\n                GetNum(0, inputnum.ToList(),ref results);\n            }\n\n            return results;\n        }\n\n        /// <summary>\n        ///  递归调用\n        /// </summary>\n        /// <param name=\"beforenum\">前面组合的数字</param>\n        /// <param name=\"leftlst\">剔除掉已选数字后的集合</param>\n        /// <param name=\"alllst\">全部结果总集合</param>\n        private void GetNum(int beforenum, List<int> leftlst, ref List<int> alllst)\n        {\n            //只剩最后一个数字，表示可以输出结果\n            if (leftlst.Count == 1)\n            {\n                if (!alllst.Contains(beforenum))//检查是否重复，99.9%概率不会重复\n                {\n                    alllst.Add(beforenum);\n                }\n                else\n                {\n                    Console.WriteLine(\"重复！\");\n                }\n                return;\n            }\n\n            for (int i = 0; i < leftlst.Count; i++)\n            {\n                //将前面的数字组合\n                int tmpnum = beforenum * 10 + leftlst[i];\n                List<int> tmplst = new List<int>();\n                tmplst.AddRange(leftlst);\n                //剔除已组合的数字\n                tmplst.RemoveAt(i);\n\n                GetNum(tmpnum, tmplst, ref alllst);\n            }\n        }\n\n    }\n```\n\n## [斐波那契数列](https://baike.baidu.com/item/斐波那契数列/99145?fr=aladdin)\n\n　　有一列数：1、1、2、3、5......求第30个数。\n\n### 解法\n\n　　第i个数等于第(i-1)个数+第(i-2)个数。使用递归。\n\n``` java\n    private int GetNum(int index)\n    {\n        if (index <= 0) return 0;\n        else if (index <= 2) return 1;\n        else\n            return (GetNum(index - 1) + GetNum(index - 2));\n    }\n```\n\n　　这里提一下我们在朋友圈经常看到的一个斐波那契数列应用：[切割巧克力](https://zhidao.baidu.com/question/287761267.html)\n\n　　某人把一个8x8的巧克力切成4块，却能拼成一个5x13的长方形==》64 = 65?!\n\n　　其实这里就是利用了斐波那契数列的这个性质：5、8、13正是数列中相邻的三个项！每个奇数项的平方都比前后两项之积多1，每个偶数项的平方都比前后两项之积少1。加上另一个特性：前一项与后一项之比越来越接近黄金分割。\n\n\n## 字符串转整型\n\n　　将用户输入的字符串，不用系统api转化为整型。\n\n### 解法\n\n　　依靠ASCII，或者每个char与0的差值，判断是否为数字，是否10之内。\n\n``` java\n    private int GetNum(string str)\n    {\n        int num = 0;\n        int gap = 0;\n        for (int i = 0; i < str.Length; i++)\n        {\n            gap = str[i] - '0';\n            if (gap < 0 || gap >= 10) return -1;\n            num = num * 10 + gap;\n        }\n        return num;\n    }\n```\n\n## 逻辑思考题\n\n　　A、B、C、D、E五个学生计划报名参加活动，请根据以下条件判断谁真正参加活动：\n\n1. A参加，B也参加；\n\n1. B和C只有一个人参加；\n\n1. C和D或者都参加，或者都不参加；\n\n1. D和E中至少有一个人参加；\n\n1. 如果E参加，那么A和D也参加。\n\n\n### 解法\n\n　　1，0为参加或者不参加；设置5个循环进行判断，将条件转化成对应的值判断进行循环。\n\n``` java\n    char[] name = { 'A', 'B', 'C', 'D', 'E' };\n    int[] value = new int[5];\n    for (value[0] = 0; value[0] < 2; value[0]++) // < 2 取0、1两个值\n    {\n        for (value[1] = 0; value[1] < 2; value[1]++)\n        {\n            for (value[2] = 0; value[2] < 2; value[2]++)\n            {\n                for (value[3] = 0; value[3] < 2; value[3]++)\n                {\n                    for (value[4] = 0; value[4] < 2; value[4]++)\n                    {\n                        if((value[1]>=value[0]) //B不参加时，A肯定不参加；B参加时，A不一定参加\n                            &&(value[1]+value[2]==1)\n                            &&(value[2]==value[3])\n                            &&(value[3]+value[4] ==1)\n                            &&(value[4]==0 \n                            ||(value[4] == 1&&value[0] ==1 && value[3] ==1)))\n                            {\n                            for (int i = 0; i < value.Length; i++)\n                                {\n                                    if (value[i] == 1)\n                                        Console.WriteLine(\"{0}参加\",name[i]);\n                                    else\n                                        Console.WriteLine(\"{0}不参加\", name[i]);\n                                }\n                            }\n                    }\n                }\n            }\n        }\n    }\n\t\n```\n\n　　该逻辑思考题比较有趣，第一次看到这样和代码结合起来的逻辑题。\t\n\n## [数组移动](https://www.cnblogs.com/I-am-Betty/p/3611518.html)\n\n　　这个得推荐去链接中的[博客](https://www.cnblogs.com/I-am-Betty/p/3611518.html) 仔细看，想法很新奇的。\n\n这里简单拿一个来讲：\n\n　　把数组元素前后部分交换 MoveFirstPartOfArrayToTheEnd(int[] array, int index) 比如 {1,2,3,4,5,6,7} 3  => {4,5,6,7,1,2,3}\n\n### 解法\n\n\n　　简单处理：把1-2-3排后面；然后从头开始把剩下的排进去。\n\n``` java\n    private void GetNum()\n    {\n        int index = 3;\n        int[] aa = new int[7] { 1, 2, 3, 4, 5, 6, 7 };\n        int[] bb = new int[aa.Count()];\n        for (int i = 0; i < aa.Count(); i++)\n        {\n            if (i < index)\n            {\n                bb[i + (aa.Count() - index)] = aa[i];\n            }\n            else\n            {\n                bb[i - index] = aa[i];\n            }\n        }\n        foreach (var item in bb)\n        {\n            Console.WriteLine(item);\n        }\n    }\n```\n\n\n　　上面的处理思想一般般，该题主要是了解链接中反转的用法：\n\n1. 分段1，2，3---4，5，6，7\n\n1. 分段反转3，2，1 --- 7，6，5，4\n\n1. 整体反转4，5，6，7，1，2，3\n\n``` java\n    private void ReverseNums()\n    {\n        int[] aa = new int[7] { 1, 2, 3, 4, 5, 6, 7 };\n        int[] a1 = new int[3];\n        for (int i = 0; i < a1.Count(); i++)\n        {\n            a1[i] = aa[i];\n        }\n\n        int[] a2 = new int[7 - 3];\n        for (int i = 0; i < a2.Count(); i++)\n        {\n            a2[i] = aa[i + a1.Count()];\n        }\n\n        var b1 = a1.Reverse().ToArray();\n        var b2 = a2.Reverse().ToArray();\n\n        for (int i = 0; i < a1.Count(); i++)\n        {\n            aa[i] = b1[i];\n        }\n        for (int i = 0; i < a2.Count(); i++)\n        {\n            aa[i + a1.Count()] = b2[i];\n        }\n\n        var bb = aa.Reverse().ToArray();\n\n        foreach (var item in bb)\n        {\n            Console.WriteLine(item);\n        }\n    }\n```\n\t\t\n\t\n git代码库: [Codes](https://github.com/YaojiaxinPC/hexoblog/tree/master/AlgorithmDemo)\n","source":"_posts/24algorithm_1.md","raw":"---\ntitle: 5个简单算法\ndate: 2018-10-23 08:07:59\ncategories:\n  - 算法\ntags:\n  - C#\n---\n\n　　本文介绍五个算法小题目：\n\n1. 四个不同数字组成互不相等且不重复的三位数。\n1. 斐波那契数列。\n1. 字符串转整型。\n1. 简单逻辑思考题。\n1. 数组移动\n\n<!-- more -->\n\n　　分享一下博客上看到的一些算法题：\n\n## 四个数字组成三位数\n\n　　有数字：1、2、3、4，请问能组成多少个互不相同且无重复数字的三位数？请输出这些数字。\n\n### 解法\n\n　　三位数，百位数有4种选择，则十位数有3种选择，从而个位数只有2种选择。共4x3x2=24种情况。\n\n``` java\n    int count = 0;\n    for (int i = 1; i <= 4; i++)\n    {\n        for (int j = 1; j <= 4; j++)\n        {\n            if (i == j) continue;\n            for (int k = 1; k <= 4; k++)\n            {\n                if (j == k || k == i) continue;\n \n                count++;\n                Console.WriteLine(\"第{1}种情况：{0}\", i * 100 + j * 10 + k, count.ToString(\"00\"));\n            }\n        }\n    }\n```\n\n　　如果要写能处理不同输入数字数量的，就得用递归：\n\n``` java\n    /// <summary>\n    /// 题目：有数字：1、2、3、4，请问能组成多少个互不相同且无重复数字的三位数？请输出这些数字。\n    /// </summary>\n    public class NumToInt : IGetResult\n    {\n        public void ConsoleOut()\n        {\n            List<int> inputlst = new List<int>() { 1, 2, 3, 4 };\n\n            int[] inputnums = inputlst.ToArray();\n            List<int> result = NumToIntMethod(inputnums);\n            StringBuilder txt = new StringBuilder();\n            if (result.Count > 0)\n            {\n                txt.Append(\"结果共 \" + result.Count + \" 个；分别是： \");\n                for (int i = 0; i < result.Count; i++)\n                {\n                    if (i < result.Count - 1) txt.Append(result[i] + \"、 \");\n                    else\n                        txt.Append(result[i]);\n                }\n            }\n            else\n            {\n                txt.Append(\"存在重复数字，请重新输入！\");\n            }\n\n            Console.WriteLine(txt.ToString());\n        }\n\n        /// <summary>\n        /// 输入有多少数字，组合排序后输出结果\n        /// </summary>\n        /// <param name=\"inputnum\"></param>\n        /// <returns></returns>\n        private List<int> NumToIntMethod(int[] inputnum)\n        {\n            List<int> results = new List<int>();\n\n            //去除重复值\n            int[] hassamenum = inputnum.GroupBy(i => i).Select(i => i.Key).ToArray();\n\n            //不存在重复值\n            if (hassamenum.Count() == inputnum.Count())\n            {\n                GetNum(0, inputnum.ToList(),ref results);\n            }\n\n            return results;\n        }\n\n        /// <summary>\n        ///  递归调用\n        /// </summary>\n        /// <param name=\"beforenum\">前面组合的数字</param>\n        /// <param name=\"leftlst\">剔除掉已选数字后的集合</param>\n        /// <param name=\"alllst\">全部结果总集合</param>\n        private void GetNum(int beforenum, List<int> leftlst, ref List<int> alllst)\n        {\n            //只剩最后一个数字，表示可以输出结果\n            if (leftlst.Count == 1)\n            {\n                if (!alllst.Contains(beforenum))//检查是否重复，99.9%概率不会重复\n                {\n                    alllst.Add(beforenum);\n                }\n                else\n                {\n                    Console.WriteLine(\"重复！\");\n                }\n                return;\n            }\n\n            for (int i = 0; i < leftlst.Count; i++)\n            {\n                //将前面的数字组合\n                int tmpnum = beforenum * 10 + leftlst[i];\n                List<int> tmplst = new List<int>();\n                tmplst.AddRange(leftlst);\n                //剔除已组合的数字\n                tmplst.RemoveAt(i);\n\n                GetNum(tmpnum, tmplst, ref alllst);\n            }\n        }\n\n    }\n```\n\n## [斐波那契数列](https://baike.baidu.com/item/斐波那契数列/99145?fr=aladdin)\n\n　　有一列数：1、1、2、3、5......求第30个数。\n\n### 解法\n\n　　第i个数等于第(i-1)个数+第(i-2)个数。使用递归。\n\n``` java\n    private int GetNum(int index)\n    {\n        if (index <= 0) return 0;\n        else if (index <= 2) return 1;\n        else\n            return (GetNum(index - 1) + GetNum(index - 2));\n    }\n```\n\n　　这里提一下我们在朋友圈经常看到的一个斐波那契数列应用：[切割巧克力](https://zhidao.baidu.com/question/287761267.html)\n\n　　某人把一个8x8的巧克力切成4块，却能拼成一个5x13的长方形==》64 = 65?!\n\n　　其实这里就是利用了斐波那契数列的这个性质：5、8、13正是数列中相邻的三个项！每个奇数项的平方都比前后两项之积多1，每个偶数项的平方都比前后两项之积少1。加上另一个特性：前一项与后一项之比越来越接近黄金分割。\n\n\n## 字符串转整型\n\n　　将用户输入的字符串，不用系统api转化为整型。\n\n### 解法\n\n　　依靠ASCII，或者每个char与0的差值，判断是否为数字，是否10之内。\n\n``` java\n    private int GetNum(string str)\n    {\n        int num = 0;\n        int gap = 0;\n        for (int i = 0; i < str.Length; i++)\n        {\n            gap = str[i] - '0';\n            if (gap < 0 || gap >= 10) return -1;\n            num = num * 10 + gap;\n        }\n        return num;\n    }\n```\n\n## 逻辑思考题\n\n　　A、B、C、D、E五个学生计划报名参加活动，请根据以下条件判断谁真正参加活动：\n\n1. A参加，B也参加；\n\n1. B和C只有一个人参加；\n\n1. C和D或者都参加，或者都不参加；\n\n1. D和E中至少有一个人参加；\n\n1. 如果E参加，那么A和D也参加。\n\n\n### 解法\n\n　　1，0为参加或者不参加；设置5个循环进行判断，将条件转化成对应的值判断进行循环。\n\n``` java\n    char[] name = { 'A', 'B', 'C', 'D', 'E' };\n    int[] value = new int[5];\n    for (value[0] = 0; value[0] < 2; value[0]++) // < 2 取0、1两个值\n    {\n        for (value[1] = 0; value[1] < 2; value[1]++)\n        {\n            for (value[2] = 0; value[2] < 2; value[2]++)\n            {\n                for (value[3] = 0; value[3] < 2; value[3]++)\n                {\n                    for (value[4] = 0; value[4] < 2; value[4]++)\n                    {\n                        if((value[1]>=value[0]) //B不参加时，A肯定不参加；B参加时，A不一定参加\n                            &&(value[1]+value[2]==1)\n                            &&(value[2]==value[3])\n                            &&(value[3]+value[4] ==1)\n                            &&(value[4]==0 \n                            ||(value[4] == 1&&value[0] ==1 && value[3] ==1)))\n                            {\n                            for (int i = 0; i < value.Length; i++)\n                                {\n                                    if (value[i] == 1)\n                                        Console.WriteLine(\"{0}参加\",name[i]);\n                                    else\n                                        Console.WriteLine(\"{0}不参加\", name[i]);\n                                }\n                            }\n                    }\n                }\n            }\n        }\n    }\n\t\n```\n\n　　该逻辑思考题比较有趣，第一次看到这样和代码结合起来的逻辑题。\t\n\n## [数组移动](https://www.cnblogs.com/I-am-Betty/p/3611518.html)\n\n　　这个得推荐去链接中的[博客](https://www.cnblogs.com/I-am-Betty/p/3611518.html) 仔细看，想法很新奇的。\n\n这里简单拿一个来讲：\n\n　　把数组元素前后部分交换 MoveFirstPartOfArrayToTheEnd(int[] array, int index) 比如 {1,2,3,4,5,6,7} 3  => {4,5,6,7,1,2,3}\n\n### 解法\n\n\n　　简单处理：把1-2-3排后面；然后从头开始把剩下的排进去。\n\n``` java\n    private void GetNum()\n    {\n        int index = 3;\n        int[] aa = new int[7] { 1, 2, 3, 4, 5, 6, 7 };\n        int[] bb = new int[aa.Count()];\n        for (int i = 0; i < aa.Count(); i++)\n        {\n            if (i < index)\n            {\n                bb[i + (aa.Count() - index)] = aa[i];\n            }\n            else\n            {\n                bb[i - index] = aa[i];\n            }\n        }\n        foreach (var item in bb)\n        {\n            Console.WriteLine(item);\n        }\n    }\n```\n\n\n　　上面的处理思想一般般，该题主要是了解链接中反转的用法：\n\n1. 分段1，2，3---4，5，6，7\n\n1. 分段反转3，2，1 --- 7，6，5，4\n\n1. 整体反转4，5，6，7，1，2，3\n\n``` java\n    private void ReverseNums()\n    {\n        int[] aa = new int[7] { 1, 2, 3, 4, 5, 6, 7 };\n        int[] a1 = new int[3];\n        for (int i = 0; i < a1.Count(); i++)\n        {\n            a1[i] = aa[i];\n        }\n\n        int[] a2 = new int[7 - 3];\n        for (int i = 0; i < a2.Count(); i++)\n        {\n            a2[i] = aa[i + a1.Count()];\n        }\n\n        var b1 = a1.Reverse().ToArray();\n        var b2 = a2.Reverse().ToArray();\n\n        for (int i = 0; i < a1.Count(); i++)\n        {\n            aa[i] = b1[i];\n        }\n        for (int i = 0; i < a2.Count(); i++)\n        {\n            aa[i + a1.Count()] = b2[i];\n        }\n\n        var bb = aa.Reverse().ToArray();\n\n        foreach (var item in bb)\n        {\n            Console.WriteLine(item);\n        }\n    }\n```\n\t\t\n\t\n git代码库: [Codes](https://github.com/YaojiaxinPC/hexoblog/tree/master/AlgorithmDemo)\n","slug":"24algorithm_1","published":1,"updated":"2018-10-23T04:04:53.674Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgrho004ijo9cyzrp7orx","content":"<p>　　本文介绍五个算法小题目：</p>\n<ol>\n<li>四个不同数字组成互不相等且不重复的三位数。</li>\n<li>斐波那契数列。</li>\n<li>字符串转整型。</li>\n<li>简单逻辑思考题。</li>\n<li>数组移动</li>\n</ol>\n<a id=\"more\"></a>\n<p>　　分享一下博客上看到的一些算法题：</p>\n<h2 id=\"四个数字组成三位数\"><a href=\"#四个数字组成三位数\" class=\"headerlink\" title=\"四个数字组成三位数\"></a>四个数字组成三位数</h2><p>　　有数字：1、2、3、4，请问能组成多少个互不相同且无重复数字的三位数？请输出这些数字。</p>\n<h3 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>　　三位数，百位数有4种选择，则十位数有3种选择，从而个位数只有2种选择。共4x3x2=24种情况。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= <span class=\"number\">4</span>; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i == j) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">1</span>; k &lt;= <span class=\"number\">4</span>; k++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (j == k || k == i) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">            count++;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"第&#123;1&#125;种情况：&#123;0&#125;\"</span>, i * <span class=\"number\">100</span> + j * <span class=\"number\">10</span> + k, count.ToString(<span class=\"string\">\"00\"</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　如果要写能处理不同输入数字数量的，就得用递归：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 题目：有数字：1、2、3、4，请问能组成多少个互不相同且无重复数字的三位数？请输出这些数字。</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">public class NumToInt : IGetResult</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ConsoleOut</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        List&lt;<span class=\"keyword\">int</span>&gt; inputlst = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;() &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] inputnums = inputlst.ToArray();</span><br><span class=\"line\">        List&lt;<span class=\"keyword\">int</span>&gt; result = NumToIntMethod(inputnums);</span><br><span class=\"line\">        StringBuilder txt = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (result.Count &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            txt.Append(<span class=\"string\">\"结果共 \"</span> + result.Count + <span class=\"string\">\" 个；分别是： \"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; result.Count; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i &lt; result.Count - <span class=\"number\">1</span>) txt.Append(result[i] + <span class=\"string\">\"、 \"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    txt.Append(result[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            txt.Append(<span class=\"string\">\"存在重复数字，请重新输入！\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Console.WriteLine(txt.ToString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 输入有多少数字，组合排序后输出结果</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"inputnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> List&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">NumToIntMethod</span><span class=\"params\">(<span class=\"keyword\">int</span>[] inputnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        List&lt;<span class=\"keyword\">int</span>&gt; results = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//去除重复值</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] hassamenum = inputnum.GroupBy(i =&gt; i).Select(i =&gt; i.Key).ToArray();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//不存在重复值</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (hassamenum.Count() == inputnum.Count())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            GetNum(<span class=\"number\">0</span>, inputnum.ToList(),ref results);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> results;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">///  递归调用</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"beforenum\"&gt;前面组合的数字&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"leftlst\"&gt;剔除掉已选数字后的集合&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"alllst\"&gt;全部结果总集合&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">GetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beforenum, List&lt;<span class=\"keyword\">int</span>&gt; leftlst, ref List&lt;<span class=\"keyword\">int</span>&gt; alllst)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//只剩最后一个数字，表示可以输出结果</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (leftlst.Count == <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!alllst.Contains(beforenum))<span class=\"comment\">//检查是否重复，99.9%概率不会重复</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                alllst.Add(beforenum);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"重复！\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; leftlst.Count; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//将前面的数字组合</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmpnum = beforenum * <span class=\"number\">10</span> + leftlst[i];</span><br><span class=\"line\">            List&lt;<span class=\"keyword\">int</span>&gt; tmplst = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">            tmplst.AddRange(leftlst);</span><br><span class=\"line\">            <span class=\"comment\">//剔除已组合的数字</span></span><br><span class=\"line\">            tmplst.RemoveAt(i);</span><br><span class=\"line\"></span><br><span class=\"line\">            GetNum(tmpnum, tmplst, ref alllst);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"斐波那契数列\"><a href=\"#斐波那契数列\" class=\"headerlink\" title=\"斐波那契数列\"></a><a href=\"https://baike.baidu.com/item/斐波那契数列/99145?fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">斐波那契数列</a></h2><p>　　有一列数：1、1、2、3、5……求第30个数。</p>\n<h3 id=\"解法-1\"><a href=\"#解法-1\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>　　第i个数等于第(i-1)个数+第(i-2)个数。使用递归。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">GetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index &lt;= <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (index &lt;= <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (GetNum(index - <span class=\"number\">1</span>) + GetNum(index - <span class=\"number\">2</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　这里提一下我们在朋友圈经常看到的一个斐波那契数列应用：<a href=\"https://zhidao.baidu.com/question/287761267.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">切割巧克力</a></p>\n<p>　　某人把一个8x8的巧克力切成4块，却能拼成一个5x13的长方形==》64 = 65?!</p>\n<p>　　其实这里就是利用了斐波那契数列的这个性质：5、8、13正是数列中相邻的三个项！每个奇数项的平方都比前后两项之积多1，每个偶数项的平方都比前后两项之积少1。加上另一个特性：前一项与后一项之比越来越接近黄金分割。</p>\n<h2 id=\"字符串转整型\"><a href=\"#字符串转整型\" class=\"headerlink\" title=\"字符串转整型\"></a>字符串转整型</h2><p>　　将用户输入的字符串，不用系统api转化为整型。</p>\n<h3 id=\"解法-2\"><a href=\"#解法-2\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>　　依靠ASCII，或者每个char与0的差值，判断是否为数字，是否10之内。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">GetNum</span><span class=\"params\">(string str)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> gap = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; str.Length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gap = str[i] - <span class=\"string\">'0'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (gap &lt; <span class=\"number\">0</span> || gap &gt;= <span class=\"number\">10</span>) <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        num = num * <span class=\"number\">10</span> + gap;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"逻辑思考题\"><a href=\"#逻辑思考题\" class=\"headerlink\" title=\"逻辑思考题\"></a>逻辑思考题</h2><p>　　A、B、C、D、E五个学生计划报名参加活动，请根据以下条件判断谁真正参加活动：</p>\n<ol>\n<li><p>A参加，B也参加；</p>\n</li>\n<li><p>B和C只有一个人参加；</p>\n</li>\n<li><p>C和D或者都参加，或者都不参加；</p>\n</li>\n<li><p>D和E中至少有一个人参加；</p>\n</li>\n<li><p>如果E参加，那么A和D也参加。</p>\n</li>\n</ol>\n<h3 id=\"解法-3\"><a href=\"#解法-3\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>　　1，0为参加或者不参加；设置5个循环进行判断，将条件转化成对应的值判断进行循环。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span>[] name = &#123; <span class=\"string\">'A'</span>, <span class=\"string\">'B'</span>, <span class=\"string\">'C'</span>, <span class=\"string\">'D'</span>, <span class=\"string\">'E'</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span>[] value = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (value[<span class=\"number\">0</span>] = <span class=\"number\">0</span>; value[<span class=\"number\">0</span>] &lt; <span class=\"number\">2</span>; value[<span class=\"number\">0</span>]++) <span class=\"comment\">// &lt; 2 取0、1两个值</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (value[<span class=\"number\">1</span>] = <span class=\"number\">0</span>; value[<span class=\"number\">1</span>] &lt; <span class=\"number\">2</span>; value[<span class=\"number\">1</span>]++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (value[<span class=\"number\">2</span>] = <span class=\"number\">0</span>; value[<span class=\"number\">2</span>] &lt; <span class=\"number\">2</span>; value[<span class=\"number\">2</span>]++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (value[<span class=\"number\">3</span>] = <span class=\"number\">0</span>; value[<span class=\"number\">3</span>] &lt; <span class=\"number\">2</span>; value[<span class=\"number\">3</span>]++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (value[<span class=\"number\">4</span>] = <span class=\"number\">0</span>; value[<span class=\"number\">4</span>] &lt; <span class=\"number\">2</span>; value[<span class=\"number\">4</span>]++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>((value[<span class=\"number\">1</span>]&gt;=value[<span class=\"number\">0</span>]) <span class=\"comment\">//B不参加时，A肯定不参加；B参加时，A不一定参加</span></span><br><span class=\"line\">                        &amp;&amp;(value[<span class=\"number\">1</span>]+value[<span class=\"number\">2</span>]==<span class=\"number\">1</span>)</span><br><span class=\"line\">                        &amp;&amp;(value[<span class=\"number\">2</span>]==value[<span class=\"number\">3</span>])</span><br><span class=\"line\">                        &amp;&amp;(value[<span class=\"number\">3</span>]+value[<span class=\"number\">4</span>] ==<span class=\"number\">1</span>)</span><br><span class=\"line\">                        &amp;&amp;(value[<span class=\"number\">4</span>]==<span class=\"number\">0</span> </span><br><span class=\"line\">                        ||(value[<span class=\"number\">4</span>] == <span class=\"number\">1</span>&amp;&amp;value[<span class=\"number\">0</span>] ==<span class=\"number\">1</span> &amp;&amp; value[<span class=\"number\">3</span>] ==<span class=\"number\">1</span>)))</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; value.Length; i++)</span><br><span class=\"line\">                            &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (value[i] == <span class=\"number\">1</span>)</span><br><span class=\"line\">                                    Console.WriteLine(<span class=\"string\">\"&#123;0&#125;参加\"</span>,name[i]);</span><br><span class=\"line\">                                <span class=\"keyword\">else</span></span><br><span class=\"line\">                                    Console.WriteLine(<span class=\"string\">\"&#123;0&#125;不参加\"</span>, name[i]);</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　该逻辑思考题比较有趣，第一次看到这样和代码结合起来的逻辑题。    </p>\n<h2 id=\"数组移动\"><a href=\"#数组移动\" class=\"headerlink\" title=\"数组移动\"></a><a href=\"https://www.cnblogs.com/I-am-Betty/p/3611518.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">数组移动</a></h2><p>　　这个得推荐去链接中的<a href=\"https://www.cnblogs.com/I-am-Betty/p/3611518.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">博客</a> 仔细看，想法很新奇的。</p>\n<p>这里简单拿一个来讲：</p>\n<p>　　把数组元素前后部分交换 MoveFirstPartOfArrayToTheEnd(int[] array, int index) 比如 {1,2,3,4,5,6,7} 3  =&gt; {4,5,6,7,1,2,3}</p>\n<h3 id=\"解法-4\"><a href=\"#解法-4\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>　　简单处理：把1-2-3排后面；然后从头开始把剩下的排进去。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">GetNum</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] aa = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">7</span>] &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span> &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] bb = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[aa.Count()];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; aa.Count(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; index)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            bb[i + (aa.Count() - index)] = aa[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            bb[i - index] = aa[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    foreach (<span class=\"keyword\">var</span> item in bb)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　上面的处理思想一般般，该题主要是了解链接中反转的用法：</p>\n<ol>\n<li><p>分段1，2，3—4，5，6，7</p>\n</li>\n<li><p>分段反转3，2，1 — 7，6，5，4</p>\n</li>\n<li><p>整体反转4，5，6，7，1，2，3</p>\n</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">ReverseNums</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] aa = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">7</span>] &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span> &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] a1 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a1.Count(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        a1[i] = aa[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">7</span> - <span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a2.Count(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        a2[i] = aa[i + a1.Count()];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> b1 = a1.Reverse().ToArray();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b2 = a2.Reverse().ToArray();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a1.Count(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        aa[i] = b1[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a2.Count(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        aa[i + a1.Count()] = b2[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> bb = aa.Reverse().ToArray();</span><br><span class=\"line\"></span><br><span class=\"line\">    foreach (<span class=\"keyword\">var</span> item in bb)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> git代码库: <a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/AlgorithmDemo\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Codes</a></p>\n","site":{"data":{}},"excerpt":"<p>　　本文介绍五个算法小题目：</p>\n<ol>\n<li>四个不同数字组成互不相等且不重复的三位数。</li>\n<li>斐波那契数列。</li>\n<li>字符串转整型。</li>\n<li>简单逻辑思考题。</li>\n<li>数组移动</li>\n</ol>","more":"<p>　　分享一下博客上看到的一些算法题：</p>\n<h2 id=\"四个数字组成三位数\"><a href=\"#四个数字组成三位数\" class=\"headerlink\" title=\"四个数字组成三位数\"></a>四个数字组成三位数</h2><p>　　有数字：1、2、3、4，请问能组成多少个互不相同且无重复数字的三位数？请输出这些数字。</p>\n<h3 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>　　三位数，百位数有4种选择，则十位数有3种选择，从而个位数只有2种选择。共4x3x2=24种情况。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= <span class=\"number\">4</span>; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i == j) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">1</span>; k &lt;= <span class=\"number\">4</span>; k++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (j == k || k == i) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">            count++;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"第&#123;1&#125;种情况：&#123;0&#125;\"</span>, i * <span class=\"number\">100</span> + j * <span class=\"number\">10</span> + k, count.ToString(<span class=\"string\">\"00\"</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　如果要写能处理不同输入数字数量的，就得用递归：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 题目：有数字：1、2、3、4，请问能组成多少个互不相同且无重复数字的三位数？请输出这些数字。</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">public class NumToInt : IGetResult</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ConsoleOut</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        List&lt;<span class=\"keyword\">int</span>&gt; inputlst = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;() &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] inputnums = inputlst.ToArray();</span><br><span class=\"line\">        List&lt;<span class=\"keyword\">int</span>&gt; result = NumToIntMethod(inputnums);</span><br><span class=\"line\">        StringBuilder txt = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (result.Count &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            txt.Append(<span class=\"string\">\"结果共 \"</span> + result.Count + <span class=\"string\">\" 个；分别是： \"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; result.Count; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i &lt; result.Count - <span class=\"number\">1</span>) txt.Append(result[i] + <span class=\"string\">\"、 \"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    txt.Append(result[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            txt.Append(<span class=\"string\">\"存在重复数字，请重新输入！\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Console.WriteLine(txt.ToString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 输入有多少数字，组合排序后输出结果</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"inputnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> List&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">NumToIntMethod</span><span class=\"params\">(<span class=\"keyword\">int</span>[] inputnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        List&lt;<span class=\"keyword\">int</span>&gt; results = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//去除重复值</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] hassamenum = inputnum.GroupBy(i =&gt; i).Select(i =&gt; i.Key).ToArray();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//不存在重复值</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (hassamenum.Count() == inputnum.Count())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            GetNum(<span class=\"number\">0</span>, inputnum.ToList(),ref results);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> results;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">///  递归调用</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"beforenum\"&gt;前面组合的数字&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"leftlst\"&gt;剔除掉已选数字后的集合&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"alllst\"&gt;全部结果总集合&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">GetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beforenum, List&lt;<span class=\"keyword\">int</span>&gt; leftlst, ref List&lt;<span class=\"keyword\">int</span>&gt; alllst)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//只剩最后一个数字，表示可以输出结果</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (leftlst.Count == <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!alllst.Contains(beforenum))<span class=\"comment\">//检查是否重复，99.9%概率不会重复</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                alllst.Add(beforenum);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"重复！\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; leftlst.Count; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//将前面的数字组合</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmpnum = beforenum * <span class=\"number\">10</span> + leftlst[i];</span><br><span class=\"line\">            List&lt;<span class=\"keyword\">int</span>&gt; tmplst = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">            tmplst.AddRange(leftlst);</span><br><span class=\"line\">            <span class=\"comment\">//剔除已组合的数字</span></span><br><span class=\"line\">            tmplst.RemoveAt(i);</span><br><span class=\"line\"></span><br><span class=\"line\">            GetNum(tmpnum, tmplst, ref alllst);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"斐波那契数列\"><a href=\"#斐波那契数列\" class=\"headerlink\" title=\"斐波那契数列\"></a><a href=\"https://baike.baidu.com/item/斐波那契数列/99145?fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">斐波那契数列</a></h2><p>　　有一列数：1、1、2、3、5……求第30个数。</p>\n<h3 id=\"解法-1\"><a href=\"#解法-1\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>　　第i个数等于第(i-1)个数+第(i-2)个数。使用递归。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">GetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index &lt;= <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (index &lt;= <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (GetNum(index - <span class=\"number\">1</span>) + GetNum(index - <span class=\"number\">2</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　这里提一下我们在朋友圈经常看到的一个斐波那契数列应用：<a href=\"https://zhidao.baidu.com/question/287761267.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">切割巧克力</a></p>\n<p>　　某人把一个8x8的巧克力切成4块，却能拼成一个5x13的长方形==》64 = 65?!</p>\n<p>　　其实这里就是利用了斐波那契数列的这个性质：5、8、13正是数列中相邻的三个项！每个奇数项的平方都比前后两项之积多1，每个偶数项的平方都比前后两项之积少1。加上另一个特性：前一项与后一项之比越来越接近黄金分割。</p>\n<h2 id=\"字符串转整型\"><a href=\"#字符串转整型\" class=\"headerlink\" title=\"字符串转整型\"></a>字符串转整型</h2><p>　　将用户输入的字符串，不用系统api转化为整型。</p>\n<h3 id=\"解法-2\"><a href=\"#解法-2\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>　　依靠ASCII，或者每个char与0的差值，判断是否为数字，是否10之内。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">GetNum</span><span class=\"params\">(string str)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> gap = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; str.Length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gap = str[i] - <span class=\"string\">'0'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (gap &lt; <span class=\"number\">0</span> || gap &gt;= <span class=\"number\">10</span>) <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        num = num * <span class=\"number\">10</span> + gap;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"逻辑思考题\"><a href=\"#逻辑思考题\" class=\"headerlink\" title=\"逻辑思考题\"></a>逻辑思考题</h2><p>　　A、B、C、D、E五个学生计划报名参加活动，请根据以下条件判断谁真正参加活动：</p>\n<ol>\n<li><p>A参加，B也参加；</p>\n</li>\n<li><p>B和C只有一个人参加；</p>\n</li>\n<li><p>C和D或者都参加，或者都不参加；</p>\n</li>\n<li><p>D和E中至少有一个人参加；</p>\n</li>\n<li><p>如果E参加，那么A和D也参加。</p>\n</li>\n</ol>\n<h3 id=\"解法-3\"><a href=\"#解法-3\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>　　1，0为参加或者不参加；设置5个循环进行判断，将条件转化成对应的值判断进行循环。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span>[] name = &#123; <span class=\"string\">'A'</span>, <span class=\"string\">'B'</span>, <span class=\"string\">'C'</span>, <span class=\"string\">'D'</span>, <span class=\"string\">'E'</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span>[] value = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (value[<span class=\"number\">0</span>] = <span class=\"number\">0</span>; value[<span class=\"number\">0</span>] &lt; <span class=\"number\">2</span>; value[<span class=\"number\">0</span>]++) <span class=\"comment\">// &lt; 2 取0、1两个值</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (value[<span class=\"number\">1</span>] = <span class=\"number\">0</span>; value[<span class=\"number\">1</span>] &lt; <span class=\"number\">2</span>; value[<span class=\"number\">1</span>]++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (value[<span class=\"number\">2</span>] = <span class=\"number\">0</span>; value[<span class=\"number\">2</span>] &lt; <span class=\"number\">2</span>; value[<span class=\"number\">2</span>]++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (value[<span class=\"number\">3</span>] = <span class=\"number\">0</span>; value[<span class=\"number\">3</span>] &lt; <span class=\"number\">2</span>; value[<span class=\"number\">3</span>]++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (value[<span class=\"number\">4</span>] = <span class=\"number\">0</span>; value[<span class=\"number\">4</span>] &lt; <span class=\"number\">2</span>; value[<span class=\"number\">4</span>]++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>((value[<span class=\"number\">1</span>]&gt;=value[<span class=\"number\">0</span>]) <span class=\"comment\">//B不参加时，A肯定不参加；B参加时，A不一定参加</span></span><br><span class=\"line\">                        &amp;&amp;(value[<span class=\"number\">1</span>]+value[<span class=\"number\">2</span>]==<span class=\"number\">1</span>)</span><br><span class=\"line\">                        &amp;&amp;(value[<span class=\"number\">2</span>]==value[<span class=\"number\">3</span>])</span><br><span class=\"line\">                        &amp;&amp;(value[<span class=\"number\">3</span>]+value[<span class=\"number\">4</span>] ==<span class=\"number\">1</span>)</span><br><span class=\"line\">                        &amp;&amp;(value[<span class=\"number\">4</span>]==<span class=\"number\">0</span> </span><br><span class=\"line\">                        ||(value[<span class=\"number\">4</span>] == <span class=\"number\">1</span>&amp;&amp;value[<span class=\"number\">0</span>] ==<span class=\"number\">1</span> &amp;&amp; value[<span class=\"number\">3</span>] ==<span class=\"number\">1</span>)))</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; value.Length; i++)</span><br><span class=\"line\">                            &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (value[i] == <span class=\"number\">1</span>)</span><br><span class=\"line\">                                    Console.WriteLine(<span class=\"string\">\"&#123;0&#125;参加\"</span>,name[i]);</span><br><span class=\"line\">                                <span class=\"keyword\">else</span></span><br><span class=\"line\">                                    Console.WriteLine(<span class=\"string\">\"&#123;0&#125;不参加\"</span>, name[i]);</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　该逻辑思考题比较有趣，第一次看到这样和代码结合起来的逻辑题。    </p>\n<h2 id=\"数组移动\"><a href=\"#数组移动\" class=\"headerlink\" title=\"数组移动\"></a><a href=\"https://www.cnblogs.com/I-am-Betty/p/3611518.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">数组移动</a></h2><p>　　这个得推荐去链接中的<a href=\"https://www.cnblogs.com/I-am-Betty/p/3611518.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">博客</a> 仔细看，想法很新奇的。</p>\n<p>这里简单拿一个来讲：</p>\n<p>　　把数组元素前后部分交换 MoveFirstPartOfArrayToTheEnd(int[] array, int index) 比如 {1,2,3,4,5,6,7} 3  =&gt; {4,5,6,7,1,2,3}</p>\n<h3 id=\"解法-4\"><a href=\"#解法-4\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>　　简单处理：把1-2-3排后面；然后从头开始把剩下的排进去。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">GetNum</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] aa = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">7</span>] &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span> &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] bb = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[aa.Count()];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; aa.Count(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; index)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            bb[i + (aa.Count() - index)] = aa[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            bb[i - index] = aa[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    foreach (<span class=\"keyword\">var</span> item in bb)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　上面的处理思想一般般，该题主要是了解链接中反转的用法：</p>\n<ol>\n<li><p>分段1，2，3—4，5，6，7</p>\n</li>\n<li><p>分段反转3，2，1 — 7，6，5，4</p>\n</li>\n<li><p>整体反转4，5，6，7，1，2，3</p>\n</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">ReverseNums</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] aa = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">7</span>] &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span> &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] a1 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a1.Count(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        a1[i] = aa[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">7</span> - <span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a2.Count(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        a2[i] = aa[i + a1.Count()];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> b1 = a1.Reverse().ToArray();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b2 = a2.Reverse().ToArray();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a1.Count(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        aa[i] = b1[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a2.Count(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        aa[i + a1.Count()] = b2[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> bb = aa.Reverse().ToArray();</span><br><span class=\"line\"></span><br><span class=\"line\">    foreach (<span class=\"keyword\">var</span> item in bb)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> git代码库: <a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/AlgorithmDemo\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Codes</a></p>"},{"title":"简单算法---求素数","date":"2018-10-24T02:07:59.000Z","_content":"\n　　本文以“判断101-200之间有多少个素数”介绍求素数的7种解法：\n\n1. 遍历每个值进行相除。\n1. 取开方根，只遍历2~开方根。\n1. 间隔6个数只取2个值计算，结合开方根。\n1. 从头开始，保存每个素数，遍历时只需要判断是否能让集合中的素数整除。\n1. 保存素数，结合开方根优化。\n1. 简单线性筛法。\n1. 优化版线性筛法。\n\n\n<!-- more -->\n\n　　该题较简单，但是没想到仔细想的时候发现解法这么多。\n\n　　首先需要了解什么是素数：只能被1和本身整除的整数，就是素数。\n\n## 最基础解法：遍历每个值相除\n\n　　这是刚接触到题目时，每个人第一个想到的解法：用2~(该数-1)来除，如果都不能整除，这个数就是素数。\n\n``` java\n    /// <summary>\n    /// 简单处理，一个一个数字去除\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int SimpleGetNum(int beginnum, int endnum)\n    {\n        int i, j;\n        int counts = 0;\n        for (i = beginnum; i <= endnum; i++)\n        {\n            for (j = 2; j < i; j++)\n            {\n                //判断是否能整除\n                if (i % j == 0)\n                    break;\n            }\n\n            //判断前面的循环是否会提前break，提前break时，j < k ；有break说明能获得整除\n            if (j >= i && i != 0 && i != 1)\n            {\n                counts++;\n            }\n        }\n        return counts;\n    }\n```\n\n　　但是，这里存在大量多余的判断。\n\n## 遍历2~开方根\n\n　　思想：一个数=前面某个数 X n ，推断出来，肯定存在“某个数” < n，或者 n< “某个数”。这样最极端的情况，就是n=这个“某个数”，得到数 = n<sup>2</sup>；所以我们只需要除前面这n个数，后面的操作都是重复的，就可以不除了。\n\n``` java\n    /// <summary>\n    /// 结合算法思想处理，最多人使用的方式\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int NormalGetNum(int beginnum, int endnum)\n    {\n        int i, j, k;\n        int counts = 0;\n        for (i = beginnum; i <= endnum; i++)\n        {\n            k = (int)Math.Sqrt(i);\n            for (j = 2; j <= k; j++)\n            {\n                //判断是否能整除\n                if (i % j == 0)\n                    break;\n            }\n            //判断前面的循环是否会提前break，提前break时，j < k ；有break说明能获得整除\n            if (j >= k && i != 0 && i != 1)\n            {\n                counts++;\n            }\n        }\n        return counts;\n    }\n```\n\n## 间隔6个数只取2个值计算  \n\n　　该解法是看到这个博客[判断质数/素数——我知道的最快的方法](https://blog.csdn.net/songyunli1111/article/details/78690447)  才想到的。通过观察，2、3包揽了几乎绝大部分的合数。\n\n　　所有数可以大致以如下方式表示：\n\n\n| ... | 6x, | 6x+1, |6x+2, |6x+3, |6x+4, |6x+5, |6x+6|==> |\n|------|------| ------|------| ------|------| ------|------| ------|\n| ==> | 6(x+1), | 6(x+1)+1, |6(x+1)+2, |6(x+1)+3, |6(x+1)+4, |6(x+1)+5, |6(x+1)+6|... |\n\n\n　　其中6x, 6x+2, 6x+3, 6x+4都是合数，剩下 6x+1, 6x+5才存在素数的可能性。故实际，每6个数，只需要检查两个数！\n\n``` Java\n    /// <summary>\n    /// 令x≥1，将大于等于5的自然数表示如下：\n    /// ··· 6x，6x+1，6x+2，6x+3，6x+4，6x+5，6(x+1），6(x+1)+1 ···\n    /// 故只需要判断6x+1和6x+5两个数，再间隔6个数再次判断\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int SuperNormalGetNum(int beginnum, int endnum)\n    {\n        int i, j, k;\n        int counts = 0;\n        bool isnofrime = false;\n        for (i = beginnum; i <= endnum; i++)\n        {\n            if (i % 6 != 1 && i % 6 != 5)\n                continue;\n            isnofrime = false;\n            k = (int)Math.Sqrt(i);\n            for (j = 5; j <= k; j += 6)\n            {\n                //判断是否能整除\n                if (i % j == 0 || i % (j + 2) == 0)\n                {\n                    isnofrime = true;\n                    break;\n                }\n            }\n            if (!isnofrime)\n            {\n                counts++;\n            }\n        }\n        return counts;\n    }\n```\n\n## 用前面存在的素数来遍历判断\n\n　　合数能被素数整除，但是素数不能被其他素数整除。所以只需要保存前面获取的素数，后面的数直接除前面这些素数，不能整除，就也是素数！\n\n``` java\n    /// <summary>\n    /// 从2开始，获取素数，保存起来，给后面的数判断素数，一直判断到最大值。\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int ListGetNum(int beginnum, int endnum)\n    {\n        int i, j, counts;\n        List<int> primelts = new List<int>();\n        //加入第一个素数2\n        primelts.Add(2);\n        for (i = 3; i <= endnum; i++)\n        {\n            for (j = 0; j < primelts.Count; j++)\n            {\n                //能整除，不是素数\n                if (i % primelts[j] == 0)\n                {\n                    break;\n                }\n                else if (j == primelts.Count - 1)\n                {\n                    primelts.Add(i);\n                    break;\n                }\n            }\n        }\n        counts = 0;\n        for (i = 0; i < primelts.Count; i++)\n        {\n            if (primelts[i] >= beginnum)\n            {\n                counts++;\n            }\n        }\n        return counts;\n    }\n```\n\n## 结合开方根用前面存在的素数来遍历判断\n\n　　上面的方法同样存在重复判断，实际上当除以的素数大于开方根的时候，后面的素数就更加不可能了，该数直接可以断定是素数了。he = su1 x su2，当su1< sqrt(he)时，su2 > sqrt(he);当su1>sqrt(he)时，su< sqrt(he)，这里就重复了。所以当前面一段找不到结果，后面的肯定也找不到。\n\n``` java\n    /// <summary>\n    /// 从2开始，获取素数，保存起来，给后面的数判断素数，一直判断到最大值。\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int ListGetNum(int beginnum, int endnum)\n    {\n        int i, j, counts, k;\n        List<int> primelts = new List<int>();\n        //加入第一个素数2\n        primelts.Add(2);\n        for (i = 3; i <= endnum; i++)\n        {\n            k = (int)Math.Sqrt(i) + 1;\n            for (j = 0; j < primelts.Count; j++)\n            {\n                if (primelts[j] > k)\n                {\n                    primelts.Add(i);\n                    break;\n                }\n                //能整除，不是素数\n                if (i % primelts[j] == 0)\n                {\n                    break;\n                }\n                else if (j == primelts.Count - 1)\n                {\n                    primelts.Add(i);\n                    break;\n                }\n            }\n        }\n        counts = 0;\n        for (i = 0; i < primelts.Count; i++)\n        {\n            if (primelts[i] >= beginnum)\n            {\n                counts++;\n            }\n        }\n        return counts;\n    }\n```\n\n## 简单线性筛法\n\n　　从头开始，剩下的最小的数肯定是素数，然后根据这个数，翻倍剔除掉剩下集合中的合数；最后转移该素数，继续轮回执行。执行到整个集合为空为止，全部素数已经转移出来。\n\n``` java\n    /// <summary>\n    /// 简单线性筛法\n    /// 从头开始，取到一个素数后，将后面对应该素数的合数全部删掉。\n    /// 这样每一轮，剩下最小的那个数肯定是素数。\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int FilterNum(int beginnum, int endnum)\n    {\n        Dictionary<int, bool> allnums = new Dictionary<int, bool>();\n        int mininum = 2;\n        //按照顺序排放\n        for (int i = mininum; i <= endnum; i++)\n        {\n            allnums.Add(i, false);\n        }\n        List<int> primelst = new List<int>();\n        while (allnums.Count >= 1)\n        {\n            mininum = allnums.ElementAt(0).Key;\n            //第一个数是最小的，肯定是素数\n            allnums.Remove(mininum);\n            primelst.Add(mininum);\n            //int会溢出，需要设置为double才能防止溢出\n            for (int i = mininum; (double)i * mininum <= endnum; i++)\n            {\n                //将该素数对应的合数全部删除\n                allnums.Remove((int)(double)i * mininum);\n            }\n        }\n        for (int i = 0; true; i++)\n        {\n            if (primelst[0] < beginnum) primelst.RemoveAt(0);\n            else break;\n        }\n        return primelst.Count;\n    }\n```\n\n　　这里可以用递归，但是数字大的时候会内存溢出。所以我取消了递归的方式。同时还得注意int溢出的问题，会出现46957*91467==48623为true的现象。因为int有最大值，超过就会循环取值了，正转负，负转正。\n\n\n## 优化版线性筛法\n\n　　上面的解法同样存在重复操作。理想情况，一个数只用剔除一次。\n\n　　该解法是看到这个文章[线性筛法求素数的原理与实现](https://wenku.baidu.com/view/4881881daaea998fcc220e99.html)  才想到的。\n\n这里讲解一下：\n\n　　 合数 = A x B，当A/B又是合数时，重复下去，合数 = ...x...x素数 ==> 最大素数 x 第二大素数 x ... x 最小素数 \n\n　　 所以只要我们找到最小素数，把它当做B，而A又唯一（递增的i），该合数就唯一确定了。\n\n``` java\n\n    /// <summary>\n    /// 改进FilterNum存在重复操作的缺点\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int SuperFilterNum(int beginnum, int endnum)\n    {\n        Dictionary<int, bool> allnums = new Dictionary<int, bool>();\n        List<int> primelst = new List<int>();\n        //先将所有数设为素数 \n        for (int i = 0; i <= endnum; i++)\n        {\n            allnums[i] = false;\n        }\n        for (int i = 2; i <= endnum; i++)\n        {\n            if (!allnums[i])\n            {\n                //false为素数\n                primelst.Add(i);\n            }\n            // j =0  ==> primelst[0] ==> 2 * i <= endnum 过滤掉后面一半的数, 因为 合数 = A x B ，必定存在 A(或者B) <= 二分之一 ，\n            // 所以实际排查前面二分之一的值时 , 后面二分之一的也已经把合数去掉了\n            for (int j = 0; j < primelst.Count && primelst[j] * i <= endnum; j++)\n            {\n                // 用已获得的素数 x index , 排查出对应唯一确定的合数 \n                allnums[primelst[j] * i] = true;\n                // 重点！通过查找最小素数，防止了重复操作\n                // 合数 = A x B，当A/B又是合数时，重复下去，合数 = ...x...x素数 ==> 最大素数 x 第二大素数 x ... x 最小素数 \n                // i % primelst[j] 就break，说明已经找到最小素数（j从0开始++）\n                // 此时break，合数 = i x 最小素数primelst[j] ，能唯一定位到该合数。不会存在重复定位该合数\n                // 举例：合数12 (有两种定位方式)== 4 x 3 ==> 2 x 2 x3\n                //                              == 6 x 2 => 3 x 2 x 2 \n                // 实际i=4的时候，定位的是8=4x2就break；不会去定位12=4x3\n                // i=6的时候，才定位12；\n                //\n                //同理，合数18 == 6x3 ==> 2x3x3\n                //             == 9x2 ==> 3x3x2\n                //i=6，定位12就break；等到i=9才来定位18\n                if (i % primelst[j] == 0)\n                    break;\n            }\n        }\n        while (primelst[0] < beginnum)\n        {\n            primelst.RemoveAt(0);\n        }\n        return primelst.Count;\n    }\n\t\n```\n\n　　结尾得提一下，上面的算法，三个优化版本，在数据量不大的情况下（十万左右），线性筛选法优势不大，间隔6的那种最快；但是当达到百万以上，线性是最快的！\n\n![Result pic 1](/contentimg/28/4.png \"3千万\")\n\n![Result pic 1](/contentimg/28/1.png \"3百万\")\n\n![Result pic 1](/contentimg/28/2.png \"3十万\")\n\n![Result pic 1](/contentimg/28/3.png \"3万\")\n\n\n　　每次运行的时间都会有一点点的区别。注意是毫秒，千分之一秒。所以上面的数据出来是超级快的。\n\n\n git代码库: [Codes](https://github.com/YaojiaxinPC/hexoblog/tree/master/AlgorithmDemo)\n","source":"_posts/28algorithm_2.md","raw":"---\ntitle: 简单算法---求素数\ndate: 2018-10-24 10:07:59\ncategories:\n  - 算法\ntags:\n  - C#\n---\n\n　　本文以“判断101-200之间有多少个素数”介绍求素数的7种解法：\n\n1. 遍历每个值进行相除。\n1. 取开方根，只遍历2~开方根。\n1. 间隔6个数只取2个值计算，结合开方根。\n1. 从头开始，保存每个素数，遍历时只需要判断是否能让集合中的素数整除。\n1. 保存素数，结合开方根优化。\n1. 简单线性筛法。\n1. 优化版线性筛法。\n\n\n<!-- more -->\n\n　　该题较简单，但是没想到仔细想的时候发现解法这么多。\n\n　　首先需要了解什么是素数：只能被1和本身整除的整数，就是素数。\n\n## 最基础解法：遍历每个值相除\n\n　　这是刚接触到题目时，每个人第一个想到的解法：用2~(该数-1)来除，如果都不能整除，这个数就是素数。\n\n``` java\n    /// <summary>\n    /// 简单处理，一个一个数字去除\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int SimpleGetNum(int beginnum, int endnum)\n    {\n        int i, j;\n        int counts = 0;\n        for (i = beginnum; i <= endnum; i++)\n        {\n            for (j = 2; j < i; j++)\n            {\n                //判断是否能整除\n                if (i % j == 0)\n                    break;\n            }\n\n            //判断前面的循环是否会提前break，提前break时，j < k ；有break说明能获得整除\n            if (j >= i && i != 0 && i != 1)\n            {\n                counts++;\n            }\n        }\n        return counts;\n    }\n```\n\n　　但是，这里存在大量多余的判断。\n\n## 遍历2~开方根\n\n　　思想：一个数=前面某个数 X n ，推断出来，肯定存在“某个数” < n，或者 n< “某个数”。这样最极端的情况，就是n=这个“某个数”，得到数 = n<sup>2</sup>；所以我们只需要除前面这n个数，后面的操作都是重复的，就可以不除了。\n\n``` java\n    /// <summary>\n    /// 结合算法思想处理，最多人使用的方式\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int NormalGetNum(int beginnum, int endnum)\n    {\n        int i, j, k;\n        int counts = 0;\n        for (i = beginnum; i <= endnum; i++)\n        {\n            k = (int)Math.Sqrt(i);\n            for (j = 2; j <= k; j++)\n            {\n                //判断是否能整除\n                if (i % j == 0)\n                    break;\n            }\n            //判断前面的循环是否会提前break，提前break时，j < k ；有break说明能获得整除\n            if (j >= k && i != 0 && i != 1)\n            {\n                counts++;\n            }\n        }\n        return counts;\n    }\n```\n\n## 间隔6个数只取2个值计算  \n\n　　该解法是看到这个博客[判断质数/素数——我知道的最快的方法](https://blog.csdn.net/songyunli1111/article/details/78690447)  才想到的。通过观察，2、3包揽了几乎绝大部分的合数。\n\n　　所有数可以大致以如下方式表示：\n\n\n| ... | 6x, | 6x+1, |6x+2, |6x+3, |6x+4, |6x+5, |6x+6|==> |\n|------|------| ------|------| ------|------| ------|------| ------|\n| ==> | 6(x+1), | 6(x+1)+1, |6(x+1)+2, |6(x+1)+3, |6(x+1)+4, |6(x+1)+5, |6(x+1)+6|... |\n\n\n　　其中6x, 6x+2, 6x+3, 6x+4都是合数，剩下 6x+1, 6x+5才存在素数的可能性。故实际，每6个数，只需要检查两个数！\n\n``` Java\n    /// <summary>\n    /// 令x≥1，将大于等于5的自然数表示如下：\n    /// ··· 6x，6x+1，6x+2，6x+3，6x+4，6x+5，6(x+1），6(x+1)+1 ···\n    /// 故只需要判断6x+1和6x+5两个数，再间隔6个数再次判断\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int SuperNormalGetNum(int beginnum, int endnum)\n    {\n        int i, j, k;\n        int counts = 0;\n        bool isnofrime = false;\n        for (i = beginnum; i <= endnum; i++)\n        {\n            if (i % 6 != 1 && i % 6 != 5)\n                continue;\n            isnofrime = false;\n            k = (int)Math.Sqrt(i);\n            for (j = 5; j <= k; j += 6)\n            {\n                //判断是否能整除\n                if (i % j == 0 || i % (j + 2) == 0)\n                {\n                    isnofrime = true;\n                    break;\n                }\n            }\n            if (!isnofrime)\n            {\n                counts++;\n            }\n        }\n        return counts;\n    }\n```\n\n## 用前面存在的素数来遍历判断\n\n　　合数能被素数整除，但是素数不能被其他素数整除。所以只需要保存前面获取的素数，后面的数直接除前面这些素数，不能整除，就也是素数！\n\n``` java\n    /// <summary>\n    /// 从2开始，获取素数，保存起来，给后面的数判断素数，一直判断到最大值。\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int ListGetNum(int beginnum, int endnum)\n    {\n        int i, j, counts;\n        List<int> primelts = new List<int>();\n        //加入第一个素数2\n        primelts.Add(2);\n        for (i = 3; i <= endnum; i++)\n        {\n            for (j = 0; j < primelts.Count; j++)\n            {\n                //能整除，不是素数\n                if (i % primelts[j] == 0)\n                {\n                    break;\n                }\n                else if (j == primelts.Count - 1)\n                {\n                    primelts.Add(i);\n                    break;\n                }\n            }\n        }\n        counts = 0;\n        for (i = 0; i < primelts.Count; i++)\n        {\n            if (primelts[i] >= beginnum)\n            {\n                counts++;\n            }\n        }\n        return counts;\n    }\n```\n\n## 结合开方根用前面存在的素数来遍历判断\n\n　　上面的方法同样存在重复判断，实际上当除以的素数大于开方根的时候，后面的素数就更加不可能了，该数直接可以断定是素数了。he = su1 x su2，当su1< sqrt(he)时，su2 > sqrt(he);当su1>sqrt(he)时，su< sqrt(he)，这里就重复了。所以当前面一段找不到结果，后面的肯定也找不到。\n\n``` java\n    /// <summary>\n    /// 从2开始，获取素数，保存起来，给后面的数判断素数，一直判断到最大值。\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int ListGetNum(int beginnum, int endnum)\n    {\n        int i, j, counts, k;\n        List<int> primelts = new List<int>();\n        //加入第一个素数2\n        primelts.Add(2);\n        for (i = 3; i <= endnum; i++)\n        {\n            k = (int)Math.Sqrt(i) + 1;\n            for (j = 0; j < primelts.Count; j++)\n            {\n                if (primelts[j] > k)\n                {\n                    primelts.Add(i);\n                    break;\n                }\n                //能整除，不是素数\n                if (i % primelts[j] == 0)\n                {\n                    break;\n                }\n                else if (j == primelts.Count - 1)\n                {\n                    primelts.Add(i);\n                    break;\n                }\n            }\n        }\n        counts = 0;\n        for (i = 0; i < primelts.Count; i++)\n        {\n            if (primelts[i] >= beginnum)\n            {\n                counts++;\n            }\n        }\n        return counts;\n    }\n```\n\n## 简单线性筛法\n\n　　从头开始，剩下的最小的数肯定是素数，然后根据这个数，翻倍剔除掉剩下集合中的合数；最后转移该素数，继续轮回执行。执行到整个集合为空为止，全部素数已经转移出来。\n\n``` java\n    /// <summary>\n    /// 简单线性筛法\n    /// 从头开始，取到一个素数后，将后面对应该素数的合数全部删掉。\n    /// 这样每一轮，剩下最小的那个数肯定是素数。\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int FilterNum(int beginnum, int endnum)\n    {\n        Dictionary<int, bool> allnums = new Dictionary<int, bool>();\n        int mininum = 2;\n        //按照顺序排放\n        for (int i = mininum; i <= endnum; i++)\n        {\n            allnums.Add(i, false);\n        }\n        List<int> primelst = new List<int>();\n        while (allnums.Count >= 1)\n        {\n            mininum = allnums.ElementAt(0).Key;\n            //第一个数是最小的，肯定是素数\n            allnums.Remove(mininum);\n            primelst.Add(mininum);\n            //int会溢出，需要设置为double才能防止溢出\n            for (int i = mininum; (double)i * mininum <= endnum; i++)\n            {\n                //将该素数对应的合数全部删除\n                allnums.Remove((int)(double)i * mininum);\n            }\n        }\n        for (int i = 0; true; i++)\n        {\n            if (primelst[0] < beginnum) primelst.RemoveAt(0);\n            else break;\n        }\n        return primelst.Count;\n    }\n```\n\n　　这里可以用递归，但是数字大的时候会内存溢出。所以我取消了递归的方式。同时还得注意int溢出的问题，会出现46957*91467==48623为true的现象。因为int有最大值，超过就会循环取值了，正转负，负转正。\n\n\n## 优化版线性筛法\n\n　　上面的解法同样存在重复操作。理想情况，一个数只用剔除一次。\n\n　　该解法是看到这个文章[线性筛法求素数的原理与实现](https://wenku.baidu.com/view/4881881daaea998fcc220e99.html)  才想到的。\n\n这里讲解一下：\n\n　　 合数 = A x B，当A/B又是合数时，重复下去，合数 = ...x...x素数 ==> 最大素数 x 第二大素数 x ... x 最小素数 \n\n　　 所以只要我们找到最小素数，把它当做B，而A又唯一（递增的i），该合数就唯一确定了。\n\n``` java\n\n    /// <summary>\n    /// 改进FilterNum存在重复操作的缺点\n    /// </summary>\n    /// <param name=\"beginnum\"></param>\n    /// <param name=\"endnum\"></param>\n    /// <returns></returns>\n    private int SuperFilterNum(int beginnum, int endnum)\n    {\n        Dictionary<int, bool> allnums = new Dictionary<int, bool>();\n        List<int> primelst = new List<int>();\n        //先将所有数设为素数 \n        for (int i = 0; i <= endnum; i++)\n        {\n            allnums[i] = false;\n        }\n        for (int i = 2; i <= endnum; i++)\n        {\n            if (!allnums[i])\n            {\n                //false为素数\n                primelst.Add(i);\n            }\n            // j =0  ==> primelst[0] ==> 2 * i <= endnum 过滤掉后面一半的数, 因为 合数 = A x B ，必定存在 A(或者B) <= 二分之一 ，\n            // 所以实际排查前面二分之一的值时 , 后面二分之一的也已经把合数去掉了\n            for (int j = 0; j < primelst.Count && primelst[j] * i <= endnum; j++)\n            {\n                // 用已获得的素数 x index , 排查出对应唯一确定的合数 \n                allnums[primelst[j] * i] = true;\n                // 重点！通过查找最小素数，防止了重复操作\n                // 合数 = A x B，当A/B又是合数时，重复下去，合数 = ...x...x素数 ==> 最大素数 x 第二大素数 x ... x 最小素数 \n                // i % primelst[j] 就break，说明已经找到最小素数（j从0开始++）\n                // 此时break，合数 = i x 最小素数primelst[j] ，能唯一定位到该合数。不会存在重复定位该合数\n                // 举例：合数12 (有两种定位方式)== 4 x 3 ==> 2 x 2 x3\n                //                              == 6 x 2 => 3 x 2 x 2 \n                // 实际i=4的时候，定位的是8=4x2就break；不会去定位12=4x3\n                // i=6的时候，才定位12；\n                //\n                //同理，合数18 == 6x3 ==> 2x3x3\n                //             == 9x2 ==> 3x3x2\n                //i=6，定位12就break；等到i=9才来定位18\n                if (i % primelst[j] == 0)\n                    break;\n            }\n        }\n        while (primelst[0] < beginnum)\n        {\n            primelst.RemoveAt(0);\n        }\n        return primelst.Count;\n    }\n\t\n```\n\n　　结尾得提一下，上面的算法，三个优化版本，在数据量不大的情况下（十万左右），线性筛选法优势不大，间隔6的那种最快；但是当达到百万以上，线性是最快的！\n\n![Result pic 1](/contentimg/28/4.png \"3千万\")\n\n![Result pic 1](/contentimg/28/1.png \"3百万\")\n\n![Result pic 1](/contentimg/28/2.png \"3十万\")\n\n![Result pic 1](/contentimg/28/3.png \"3万\")\n\n\n　　每次运行的时间都会有一点点的区别。注意是毫秒，千分之一秒。所以上面的数据出来是超级快的。\n\n\n git代码库: [Codes](https://github.com/YaojiaxinPC/hexoblog/tree/master/AlgorithmDemo)\n","slug":"28algorithm_2","published":1,"updated":"2018-10-24T17:43:27.034Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgrhp004kjo9cdj5ich9l","content":"<p>　　本文以“判断101-200之间有多少个素数”介绍求素数的7种解法：</p>\n<ol>\n<li>遍历每个值进行相除。</li>\n<li>取开方根，只遍历2~开方根。</li>\n<li>间隔6个数只取2个值计算，结合开方根。</li>\n<li>从头开始，保存每个素数，遍历时只需要判断是否能让集合中的素数整除。</li>\n<li>保存素数，结合开方根优化。</li>\n<li>简单线性筛法。</li>\n<li>优化版线性筛法。</li>\n</ol>\n<a id=\"more\"></a>\n<p>　　该题较简单，但是没想到仔细想的时候发现解法这么多。</p>\n<p>　　首先需要了解什么是素数：只能被1和本身整除的整数，就是素数。</p>\n<h2 id=\"最基础解法：遍历每个值相除\"><a href=\"#最基础解法：遍历每个值相除\" class=\"headerlink\" title=\"最基础解法：遍历每个值相除\"></a>最基础解法：遍历每个值相除</h2><p>　　这是刚接触到题目时，每个人第一个想到的解法：用2~(该数-1)来除，如果都不能整除，这个数就是素数。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 简单处理，一个一个数字去除</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">SimpleGetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> counts = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = beginnum; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">2</span>; j &lt; i; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//判断是否能整除</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % j == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//判断前面的循环是否会提前break，提前break时，j &lt; k ；有break说明能获得整除</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j &gt;= i &amp;&amp; i != <span class=\"number\">0</span> &amp;&amp; i != <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counts++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> counts;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　但是，这里存在大量多余的判断。</p>\n<h2 id=\"遍历2-开方根\"><a href=\"#遍历2-开方根\" class=\"headerlink\" title=\"遍历2~开方根\"></a>遍历2~开方根</h2><p>　　思想：一个数=前面某个数 X n ，推断出来，肯定存在“某个数” &lt; n，或者 n&lt; “某个数”。这样最极端的情况，就是n=这个“某个数”，得到数 = n<sup>2</sup>；所以我们只需要除前面这n个数，后面的操作都是重复的，就可以不除了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 结合算法思想处理，最多人使用的方式</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">NormalGetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, k;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> counts = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = beginnum; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        k = (<span class=\"keyword\">int</span>)Math.Sqrt(i);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">2</span>; j &lt;= k; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//判断是否能整除</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % j == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//判断前面的循环是否会提前break，提前break时，j &lt; k ；有break说明能获得整除</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j &gt;= k &amp;&amp; i != <span class=\"number\">0</span> &amp;&amp; i != <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counts++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> counts;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"间隔6个数只取2个值计算\"><a href=\"#间隔6个数只取2个值计算\" class=\"headerlink\" title=\"间隔6个数只取2个值计算\"></a>间隔6个数只取2个值计算</h2><p>　　该解法是看到这个博客<a href=\"https://blog.csdn.net/songyunli1111/article/details/78690447\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">判断质数/素数——我知道的最快的方法</a>  才想到的。通过观察，2、3包揽了几乎绝大部分的合数。</p>\n<p>　　所有数可以大致以如下方式表示：</p>\n<table>\n<thead>\n<tr>\n<th>…</th>\n<th>6x,</th>\n<th>6x+1,</th>\n<th>6x+2,</th>\n<th>6x+3,</th>\n<th>6x+4,</th>\n<th>6x+5,</th>\n<th>6x+6</th>\n<th>==&gt;</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>==&gt;</td>\n<td>6(x+1),</td>\n<td>6(x+1)+1,</td>\n<td>6(x+1)+2,</td>\n<td>6(x+1)+3,</td>\n<td>6(x+1)+4,</td>\n<td>6(x+1)+5,</td>\n<td>6(x+1)+6</td>\n<td>…</td>\n</tr>\n</tbody>\n</table>\n<p>　　其中6x, 6x+2, 6x+3, 6x+4都是合数，剩下 6x+1, 6x+5才存在素数的可能性。故实际，每6个数，只需要检查两个数！</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 令x≥1，将大于等于5的自然数表示如下：</span></span><br><span class=\"line\"><span class=\"comment\">/// ··· 6x，6x+1，6x+2，6x+3，6x+4，6x+5，6(x+1），6(x+1)+1 ···</span></span><br><span class=\"line\"><span class=\"comment\">/// 故只需要判断6x+1和6x+5两个数，再间隔6个数再次判断</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">SuperNormalGetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, k;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> counts = <span class=\"number\">0</span>;</span><br><span class=\"line\">    bool isnofrime = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = beginnum; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i % <span class=\"number\">6</span> != <span class=\"number\">1</span> &amp;&amp; i % <span class=\"number\">6</span> != <span class=\"number\">5</span>)</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        isnofrime = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        k = (<span class=\"keyword\">int</span>)Math.Sqrt(i);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">5</span>; j &lt;= k; j += <span class=\"number\">6</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//判断是否能整除</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % j == <span class=\"number\">0</span> || i % (j + <span class=\"number\">2</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                isnofrime = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isnofrime)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counts++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> counts;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"用前面存在的素数来遍历判断\"><a href=\"#用前面存在的素数来遍历判断\" class=\"headerlink\" title=\"用前面存在的素数来遍历判断\"></a>用前面存在的素数来遍历判断</h2><p>　　合数能被素数整除，但是素数不能被其他素数整除。所以只需要保存前面获取的素数，后面的数直接除前面这些素数，不能整除，就也是素数！</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 从2开始，获取素数，保存起来，给后面的数判断素数，一直判断到最大值。</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">ListGetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, counts;</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">int</span>&gt; primelts = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//加入第一个素数2</span></span><br><span class=\"line\">    primelts.Add(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">3</span>; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; primelts.Count; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//能整除，不是素数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % primelts[j] == <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (j == primelts.Count - <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                primelts.Add(i);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    counts = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; primelts.Count; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (primelts[i] &gt;= beginnum)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counts++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> counts;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"结合开方根用前面存在的素数来遍历判断\"><a href=\"#结合开方根用前面存在的素数来遍历判断\" class=\"headerlink\" title=\"结合开方根用前面存在的素数来遍历判断\"></a>结合开方根用前面存在的素数来遍历判断</h2><p>　　上面的方法同样存在重复判断，实际上当除以的素数大于开方根的时候，后面的素数就更加不可能了，该数直接可以断定是素数了。he = su1 x su2，当su1&lt; sqrt(he)时，su2 &gt; sqrt(he);当su1&gt;sqrt(he)时，su&lt; sqrt(he)，这里就重复了。所以当前面一段找不到结果，后面的肯定也找不到。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 从2开始，获取素数，保存起来，给后面的数判断素数，一直判断到最大值。</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">ListGetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, counts, k;</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">int</span>&gt; primelts = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//加入第一个素数2</span></span><br><span class=\"line\">    primelts.Add(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">3</span>; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        k = (<span class=\"keyword\">int</span>)Math.Sqrt(i) + <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; primelts.Count; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (primelts[j] &gt; k)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                primelts.Add(i);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//能整除，不是素数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % primelts[j] == <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (j == primelts.Count - <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                primelts.Add(i);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    counts = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; primelts.Count; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (primelts[i] &gt;= beginnum)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counts++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> counts;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"简单线性筛法\"><a href=\"#简单线性筛法\" class=\"headerlink\" title=\"简单线性筛法\"></a>简单线性筛法</h2><p>　　从头开始，剩下的最小的数肯定是素数，然后根据这个数，翻倍剔除掉剩下集合中的合数；最后转移该素数，继续轮回执行。执行到整个集合为空为止，全部素数已经转移出来。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 简单线性筛法</span></span><br><span class=\"line\"><span class=\"comment\">/// 从头开始，取到一个素数后，将后面对应该素数的合数全部删掉。</span></span><br><span class=\"line\"><span class=\"comment\">/// 这样每一轮，剩下最小的那个数肯定是素数。</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">FilterNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Dictionary&lt;<span class=\"keyword\">int</span>, bool&gt; allnums = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"keyword\">int</span>, bool&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mininum = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"comment\">//按照顺序排放</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = mininum; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        allnums.Add(i, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">int</span>&gt; primelst = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (allnums.Count &gt;= <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        mininum = allnums.ElementAt(<span class=\"number\">0</span>).Key;</span><br><span class=\"line\">        <span class=\"comment\">//第一个数是最小的，肯定是素数</span></span><br><span class=\"line\">        allnums.Remove(mininum);</span><br><span class=\"line\">        primelst.Add(mininum);</span><br><span class=\"line\">        <span class=\"comment\">//int会溢出，需要设置为double才能防止溢出</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = mininum; (<span class=\"keyword\">double</span>)i * mininum &lt;= endnum; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//将该素数对应的合数全部删除</span></span><br><span class=\"line\">            allnums.Remove((<span class=\"keyword\">int</span>)(<span class=\"keyword\">double</span>)i * mininum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; <span class=\"keyword\">true</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (primelst[<span class=\"number\">0</span>] &lt; beginnum) primelst.RemoveAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> primelst.Count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　这里可以用递归，但是数字大的时候会内存溢出。所以我取消了递归的方式。同时还得注意int溢出的问题，会出现46957*91467==48623为true的现象。因为int有最大值，超过就会循环取值了，正转负，负转正。</p>\n<h2 id=\"优化版线性筛法\"><a href=\"#优化版线性筛法\" class=\"headerlink\" title=\"优化版线性筛法\"></a>优化版线性筛法</h2><p>　　上面的解法同样存在重复操作。理想情况，一个数只用剔除一次。</p>\n<p>　　该解法是看到这个文章<a href=\"https://wenku.baidu.com/view/4881881daaea998fcc220e99.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">线性筛法求素数的原理与实现</a>  才想到的。</p>\n<p>这里讲解一下：</p>\n<p>　　 合数 = A x B，当A/B又是合数时，重复下去，合数 = …x…x素数 ==&gt; 最大素数 x 第二大素数 x … x 最小素数 </p>\n<p>　　 所以只要我们找到最小素数，把它当做B，而A又唯一（递增的i），该合数就唯一确定了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 改进FilterNum存在重复操作的缺点</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">SuperFilterNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Dictionary&lt;<span class=\"keyword\">int</span>, bool&gt; allnums = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"keyword\">int</span>, bool&gt;();</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">int</span>&gt; primelst = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//先将所有数设为素数 </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        allnums[i] = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!allnums[i])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//false为素数</span></span><br><span class=\"line\">            primelst.Add(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// j =0  ==&gt; primelst[0] ==&gt; 2 * i &lt;= endnum 过滤掉后面一半的数, 因为 合数 = A x B ，必定存在 A(或者B) &lt;= 二分之一 ，</span></span><br><span class=\"line\">        <span class=\"comment\">// 所以实际排查前面二分之一的值时 , 后面二分之一的也已经把合数去掉了</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; primelst.Count &amp;&amp; primelst[j] * i &lt;= endnum; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 用已获得的素数 x index , 排查出对应唯一确定的合数 </span></span><br><span class=\"line\">            allnums[primelst[j] * i] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重点！通过查找最小素数，防止了重复操作</span></span><br><span class=\"line\">            <span class=\"comment\">// 合数 = A x B，当A/B又是合数时，重复下去，合数 = ...x...x素数 ==&gt; 最大素数 x 第二大素数 x ... x 最小素数 </span></span><br><span class=\"line\">            <span class=\"comment\">// i % primelst[j] 就break，说明已经找到最小素数（j从0开始++）</span></span><br><span class=\"line\">            <span class=\"comment\">// 此时break，合数 = i x 最小素数primelst[j] ，能唯一定位到该合数。不会存在重复定位该合数</span></span><br><span class=\"line\">            <span class=\"comment\">// 举例：合数12 (有两种定位方式)== 4 x 3 ==&gt; 2 x 2 x3</span></span><br><span class=\"line\">            <span class=\"comment\">//                              == 6 x 2 =&gt; 3 x 2 x 2 </span></span><br><span class=\"line\">            <span class=\"comment\">// 实际i=4的时候，定位的是8=4x2就break；不会去定位12=4x3</span></span><br><span class=\"line\">            <span class=\"comment\">// i=6的时候，才定位12；</span></span><br><span class=\"line\">            <span class=\"comment\">//</span></span><br><span class=\"line\">            <span class=\"comment\">//同理，合数18 == 6x3 ==&gt; 2x3x3</span></span><br><span class=\"line\">            <span class=\"comment\">//             == 9x2 ==&gt; 3x3x2</span></span><br><span class=\"line\">            <span class=\"comment\">//i=6，定位12就break；等到i=9才来定位18</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % primelst[j] == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (primelst[<span class=\"number\">0</span>] &lt; beginnum)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        primelst.RemoveAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> primelst.Count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　结尾得提一下，上面的算法，三个优化版本，在数据量不大的情况下（十万左右），线性筛选法优势不大，间隔6的那种最快；但是当达到百万以上，线性是最快的！</p>\n<p><img src=\"/contentimg/28/4.png\" alt=\"Result pic 1\" title=\"3千万\"></p>\n<p><img src=\"/contentimg/28/1.png\" alt=\"Result pic 1\" title=\"3百万\"></p>\n<p><img src=\"/contentimg/28/2.png\" alt=\"Result pic 1\" title=\"3十万\"></p>\n<p><img src=\"/contentimg/28/3.png\" alt=\"Result pic 1\" title=\"3万\"></p>\n<p>　　每次运行的时间都会有一点点的区别。注意是毫秒，千分之一秒。所以上面的数据出来是超级快的。</p>\n<p> git代码库: <a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/AlgorithmDemo\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Codes</a></p>\n","site":{"data":{}},"excerpt":"<p>　　本文以“判断101-200之间有多少个素数”介绍求素数的7种解法：</p>\n<ol>\n<li>遍历每个值进行相除。</li>\n<li>取开方根，只遍历2~开方根。</li>\n<li>间隔6个数只取2个值计算，结合开方根。</li>\n<li>从头开始，保存每个素数，遍历时只需要判断是否能让集合中的素数整除。</li>\n<li>保存素数，结合开方根优化。</li>\n<li>简单线性筛法。</li>\n<li>优化版线性筛法。</li>\n</ol>","more":"<p>　　该题较简单，但是没想到仔细想的时候发现解法这么多。</p>\n<p>　　首先需要了解什么是素数：只能被1和本身整除的整数，就是素数。</p>\n<h2 id=\"最基础解法：遍历每个值相除\"><a href=\"#最基础解法：遍历每个值相除\" class=\"headerlink\" title=\"最基础解法：遍历每个值相除\"></a>最基础解法：遍历每个值相除</h2><p>　　这是刚接触到题目时，每个人第一个想到的解法：用2~(该数-1)来除，如果都不能整除，这个数就是素数。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 简单处理，一个一个数字去除</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">SimpleGetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> counts = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = beginnum; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">2</span>; j &lt; i; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//判断是否能整除</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % j == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//判断前面的循环是否会提前break，提前break时，j &lt; k ；有break说明能获得整除</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j &gt;= i &amp;&amp; i != <span class=\"number\">0</span> &amp;&amp; i != <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counts++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> counts;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　但是，这里存在大量多余的判断。</p>\n<h2 id=\"遍历2-开方根\"><a href=\"#遍历2-开方根\" class=\"headerlink\" title=\"遍历2~开方根\"></a>遍历2~开方根</h2><p>　　思想：一个数=前面某个数 X n ，推断出来，肯定存在“某个数” &lt; n，或者 n&lt; “某个数”。这样最极端的情况，就是n=这个“某个数”，得到数 = n<sup>2</sup>；所以我们只需要除前面这n个数，后面的操作都是重复的，就可以不除了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 结合算法思想处理，最多人使用的方式</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">NormalGetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, k;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> counts = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = beginnum; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        k = (<span class=\"keyword\">int</span>)Math.Sqrt(i);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">2</span>; j &lt;= k; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//判断是否能整除</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % j == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//判断前面的循环是否会提前break，提前break时，j &lt; k ；有break说明能获得整除</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j &gt;= k &amp;&amp; i != <span class=\"number\">0</span> &amp;&amp; i != <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counts++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> counts;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"间隔6个数只取2个值计算\"><a href=\"#间隔6个数只取2个值计算\" class=\"headerlink\" title=\"间隔6个数只取2个值计算\"></a>间隔6个数只取2个值计算</h2><p>　　该解法是看到这个博客<a href=\"https://blog.csdn.net/songyunli1111/article/details/78690447\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">判断质数/素数——我知道的最快的方法</a>  才想到的。通过观察，2、3包揽了几乎绝大部分的合数。</p>\n<p>　　所有数可以大致以如下方式表示：</p>\n<table>\n<thead>\n<tr>\n<th>…</th>\n<th>6x,</th>\n<th>6x+1,</th>\n<th>6x+2,</th>\n<th>6x+3,</th>\n<th>6x+4,</th>\n<th>6x+5,</th>\n<th>6x+6</th>\n<th>==&gt;</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>==&gt;</td>\n<td>6(x+1),</td>\n<td>6(x+1)+1,</td>\n<td>6(x+1)+2,</td>\n<td>6(x+1)+3,</td>\n<td>6(x+1)+4,</td>\n<td>6(x+1)+5,</td>\n<td>6(x+1)+6</td>\n<td>…</td>\n</tr>\n</tbody>\n</table>\n<p>　　其中6x, 6x+2, 6x+3, 6x+4都是合数，剩下 6x+1, 6x+5才存在素数的可能性。故实际，每6个数，只需要检查两个数！</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 令x≥1，将大于等于5的自然数表示如下：</span></span><br><span class=\"line\"><span class=\"comment\">/// ··· 6x，6x+1，6x+2，6x+3，6x+4，6x+5，6(x+1），6(x+1)+1 ···</span></span><br><span class=\"line\"><span class=\"comment\">/// 故只需要判断6x+1和6x+5两个数，再间隔6个数再次判断</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">SuperNormalGetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, k;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> counts = <span class=\"number\">0</span>;</span><br><span class=\"line\">    bool isnofrime = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = beginnum; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i % <span class=\"number\">6</span> != <span class=\"number\">1</span> &amp;&amp; i % <span class=\"number\">6</span> != <span class=\"number\">5</span>)</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        isnofrime = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        k = (<span class=\"keyword\">int</span>)Math.Sqrt(i);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">5</span>; j &lt;= k; j += <span class=\"number\">6</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//判断是否能整除</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % j == <span class=\"number\">0</span> || i % (j + <span class=\"number\">2</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                isnofrime = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isnofrime)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counts++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> counts;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"用前面存在的素数来遍历判断\"><a href=\"#用前面存在的素数来遍历判断\" class=\"headerlink\" title=\"用前面存在的素数来遍历判断\"></a>用前面存在的素数来遍历判断</h2><p>　　合数能被素数整除，但是素数不能被其他素数整除。所以只需要保存前面获取的素数，后面的数直接除前面这些素数，不能整除，就也是素数！</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 从2开始，获取素数，保存起来，给后面的数判断素数，一直判断到最大值。</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">ListGetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, counts;</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">int</span>&gt; primelts = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//加入第一个素数2</span></span><br><span class=\"line\">    primelts.Add(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">3</span>; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; primelts.Count; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//能整除，不是素数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % primelts[j] == <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (j == primelts.Count - <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                primelts.Add(i);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    counts = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; primelts.Count; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (primelts[i] &gt;= beginnum)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counts++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> counts;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"结合开方根用前面存在的素数来遍历判断\"><a href=\"#结合开方根用前面存在的素数来遍历判断\" class=\"headerlink\" title=\"结合开方根用前面存在的素数来遍历判断\"></a>结合开方根用前面存在的素数来遍历判断</h2><p>　　上面的方法同样存在重复判断，实际上当除以的素数大于开方根的时候，后面的素数就更加不可能了，该数直接可以断定是素数了。he = su1 x su2，当su1&lt; sqrt(he)时，su2 &gt; sqrt(he);当su1&gt;sqrt(he)时，su&lt; sqrt(he)，这里就重复了。所以当前面一段找不到结果，后面的肯定也找不到。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 从2开始，获取素数，保存起来，给后面的数判断素数，一直判断到最大值。</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">ListGetNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, counts, k;</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">int</span>&gt; primelts = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//加入第一个素数2</span></span><br><span class=\"line\">    primelts.Add(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">3</span>; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        k = (<span class=\"keyword\">int</span>)Math.Sqrt(i) + <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; primelts.Count; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (primelts[j] &gt; k)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                primelts.Add(i);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//能整除，不是素数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % primelts[j] == <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (j == primelts.Count - <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                primelts.Add(i);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    counts = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; primelts.Count; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (primelts[i] &gt;= beginnum)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counts++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> counts;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"简单线性筛法\"><a href=\"#简单线性筛法\" class=\"headerlink\" title=\"简单线性筛法\"></a>简单线性筛法</h2><p>　　从头开始，剩下的最小的数肯定是素数，然后根据这个数，翻倍剔除掉剩下集合中的合数；最后转移该素数，继续轮回执行。执行到整个集合为空为止，全部素数已经转移出来。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 简单线性筛法</span></span><br><span class=\"line\"><span class=\"comment\">/// 从头开始，取到一个素数后，将后面对应该素数的合数全部删掉。</span></span><br><span class=\"line\"><span class=\"comment\">/// 这样每一轮，剩下最小的那个数肯定是素数。</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">FilterNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Dictionary&lt;<span class=\"keyword\">int</span>, bool&gt; allnums = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"keyword\">int</span>, bool&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mininum = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"comment\">//按照顺序排放</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = mininum; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        allnums.Add(i, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">int</span>&gt; primelst = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (allnums.Count &gt;= <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        mininum = allnums.ElementAt(<span class=\"number\">0</span>).Key;</span><br><span class=\"line\">        <span class=\"comment\">//第一个数是最小的，肯定是素数</span></span><br><span class=\"line\">        allnums.Remove(mininum);</span><br><span class=\"line\">        primelst.Add(mininum);</span><br><span class=\"line\">        <span class=\"comment\">//int会溢出，需要设置为double才能防止溢出</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = mininum; (<span class=\"keyword\">double</span>)i * mininum &lt;= endnum; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//将该素数对应的合数全部删除</span></span><br><span class=\"line\">            allnums.Remove((<span class=\"keyword\">int</span>)(<span class=\"keyword\">double</span>)i * mininum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; <span class=\"keyword\">true</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (primelst[<span class=\"number\">0</span>] &lt; beginnum) primelst.RemoveAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> primelst.Count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　这里可以用递归，但是数字大的时候会内存溢出。所以我取消了递归的方式。同时还得注意int溢出的问题，会出现46957*91467==48623为true的现象。因为int有最大值，超过就会循环取值了，正转负，负转正。</p>\n<h2 id=\"优化版线性筛法\"><a href=\"#优化版线性筛法\" class=\"headerlink\" title=\"优化版线性筛法\"></a>优化版线性筛法</h2><p>　　上面的解法同样存在重复操作。理想情况，一个数只用剔除一次。</p>\n<p>　　该解法是看到这个文章<a href=\"https://wenku.baidu.com/view/4881881daaea998fcc220e99.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">线性筛法求素数的原理与实现</a>  才想到的。</p>\n<p>这里讲解一下：</p>\n<p>　　 合数 = A x B，当A/B又是合数时，重复下去，合数 = …x…x素数 ==&gt; 最大素数 x 第二大素数 x … x 最小素数 </p>\n<p>　　 所以只要我们找到最小素数，把它当做B，而A又唯一（递增的i），该合数就唯一确定了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// 改进FilterNum存在重复操作的缺点</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"beginnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;param name=\"endnum\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">SuperFilterNum</span><span class=\"params\">(<span class=\"keyword\">int</span> beginnum, <span class=\"keyword\">int</span> endnum)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Dictionary&lt;<span class=\"keyword\">int</span>, bool&gt; allnums = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"keyword\">int</span>, bool&gt;();</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">int</span>&gt; primelst = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//先将所有数设为素数 </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        allnums[i] = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= endnum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!allnums[i])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//false为素数</span></span><br><span class=\"line\">            primelst.Add(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// j =0  ==&gt; primelst[0] ==&gt; 2 * i &lt;= endnum 过滤掉后面一半的数, 因为 合数 = A x B ，必定存在 A(或者B) &lt;= 二分之一 ，</span></span><br><span class=\"line\">        <span class=\"comment\">// 所以实际排查前面二分之一的值时 , 后面二分之一的也已经把合数去掉了</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; primelst.Count &amp;&amp; primelst[j] * i &lt;= endnum; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 用已获得的素数 x index , 排查出对应唯一确定的合数 </span></span><br><span class=\"line\">            allnums[primelst[j] * i] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重点！通过查找最小素数，防止了重复操作</span></span><br><span class=\"line\">            <span class=\"comment\">// 合数 = A x B，当A/B又是合数时，重复下去，合数 = ...x...x素数 ==&gt; 最大素数 x 第二大素数 x ... x 最小素数 </span></span><br><span class=\"line\">            <span class=\"comment\">// i % primelst[j] 就break，说明已经找到最小素数（j从0开始++）</span></span><br><span class=\"line\">            <span class=\"comment\">// 此时break，合数 = i x 最小素数primelst[j] ，能唯一定位到该合数。不会存在重复定位该合数</span></span><br><span class=\"line\">            <span class=\"comment\">// 举例：合数12 (有两种定位方式)== 4 x 3 ==&gt; 2 x 2 x3</span></span><br><span class=\"line\">            <span class=\"comment\">//                              == 6 x 2 =&gt; 3 x 2 x 2 </span></span><br><span class=\"line\">            <span class=\"comment\">// 实际i=4的时候，定位的是8=4x2就break；不会去定位12=4x3</span></span><br><span class=\"line\">            <span class=\"comment\">// i=6的时候，才定位12；</span></span><br><span class=\"line\">            <span class=\"comment\">//</span></span><br><span class=\"line\">            <span class=\"comment\">//同理，合数18 == 6x3 ==&gt; 2x3x3</span></span><br><span class=\"line\">            <span class=\"comment\">//             == 9x2 ==&gt; 3x3x2</span></span><br><span class=\"line\">            <span class=\"comment\">//i=6，定位12就break；等到i=9才来定位18</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % primelst[j] == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (primelst[<span class=\"number\">0</span>] &lt; beginnum)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        primelst.RemoveAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> primelst.Count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　结尾得提一下，上面的算法，三个优化版本，在数据量不大的情况下（十万左右），线性筛选法优势不大，间隔6的那种最快；但是当达到百万以上，线性是最快的！</p>\n<p><img src=\"/contentimg/28/4.png\" alt=\"Result pic 1\" title=\"3千万\"></p>\n<p><img src=\"/contentimg/28/1.png\" alt=\"Result pic 1\" title=\"3百万\"></p>\n<p><img src=\"/contentimg/28/2.png\" alt=\"Result pic 1\" title=\"3十万\"></p>\n<p><img src=\"/contentimg/28/3.png\" alt=\"Result pic 1\" title=\"3万\"></p>\n<p>　　每次运行的时间都会有一点点的区别。注意是毫秒，千分之一秒。所以上面的数据出来是超级快的。</p>\n<p> git代码库: <a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/AlgorithmDemo\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Codes</a></p>"},{"title":"Unity优化_WebGL发布优化","date":"2018-10-23T06:59:59.000Z","_content":"\n　　本文是记录Unity的优化第一篇：WebGL发布优化。\n\n　　后续将记录其他平台的优化，以及编程中遇到的优化。\n\n<!-- more -->\n\n　　开头分享几个博客链接：\n\n来自印度的：[App Guruz](http://www.theappguruz.com/blog/unity-optimization-initiative) \n\nUnity社区的两篇文章：\n\n[了解Unity WebGL中的内存](https://blogs.unity3d.com/cn/2016/09/20/understanding-memory-in-unity-webgl/) \n\n[Unity WebGL内存：Unity Heap](https://blogs.unity3d.com/cn/2016/12/05/unity-webgl-memory-the-unity-heap/) \n\n　　本文就不重复博文中的细节了。\n\n　　Unity发布WebGL版本，限制是很大的，必须事先定义所需内存，一旦决定，就不能减少或者增加！而且包不能太大，下载速度严重影响启动时间。特别是还有部分API限制。总体上，限制因素很多。当然，如果用2018新特性的，就能动态内存及高压缩。不过，目前还是先从普通版本做起。\n\n　　小游戏是可以发布成WebGL版本的，但是大游戏难度系数很高，特别是画面越精美的。因为要考虑web可以运行在任何低配置的场景，特别是跑在手机32位浏览器。\n\n　　针对Unity发布WebGL，细节有好多，目前我就按照遇到的问题，从初级开始，一个一个分享记录吧。\n\n　　本博客会不定时分享部分官方商店里面的小游戏，同时发布成WebGL版本让大家可以体验。\n\n　　先记录简单发布2D拾荒者遇到的问题吧。\n\n## 疑难解答\n\n### 360打不开\n\n　　该问题在前面的博客有提到，是新版本的Unity编译的包，部分浏览器暂时不支持WebGL2.0的特性，所以识别不了，就不能打开了。\n\n　　只要用老版本的Unity编译发布，就可以使用了。目前我用的是5.4.6f3。发布出来是Release包；再往上的版本发布的是Build包，就得用Chrome和手机浏览器打开了。\n\n### 抛异常--内存不足\n\n　　这个需要细谈。是本篇的重点。\n\n　　Unity发布的这个webgl，运行在浏览器上，是需要事先定义内存的，后面不能减小或者增大。所以得了解你这个程序最少需要多少内存，然后根据2的幂来取值。\n\n![Result pic 1](/contentimg/26/1.png \"定义内存大小的地方\")\n\n\n　　那怎么看程序需要多少内存？\n\n#### Profiler\n\n![Result pic 1](/contentimg/26/2.png \"Profiler\")\n\n\n　　在memory部分，可以查看当前场景使用了多少内存。一般看Texture和Audio就行，这两个是最大的，加起来的值就是至少需要的内存，往上取2的幂就能大概出一个值了。像图中，大致23m，所以往上取32m就行。\n\n#### gzip解压方式\n\n　　这里还有个办法，就是先编译一次包。然后把Release里的3个包全换成后缀gzip，解压出来，凑起来的大小就是到时在浏览器里的大小。\n\n\n![Result pic 1](/contentimg/26/3.png \"gzip解压后大小 27.6m\")\n\n\n## 优化（重点）\n\n### 删除多余文件\n\n　　第一个，首要的，删除多余文件。\n\n　　可以通过%homepath%\\AppData\\Local\\Unity\\Editor\\Editor.log，或者是在Console窗口最右边打开。\n\n![Result pic 1](/contentimg/26/4.png \"Console窗口最右边\")\n\n![Result pic 1](/contentimg/26/5.png \"Editor.log\")\n\n\n　　查看该日志，可以看到里面记录了整个编译过程，包里有什么文件，大小等等信息。\n\n### 图片压缩\n\n　　图片压缩在5.x版本的优化选项较少，在2018的就多了，可以选择压缩类型、压缩质量等等参数。\n\n　　5.x的[取消Generate Mip Maps](http://blog.sina.com.cn/s/blog_5b6cb9500102vi6i.html)  ， 因为只是普通的2D图片，不需要3D效果。\n\n![Result pic 1](/contentimg/26/6.png \"取消Generate Mip Maps\")\n\n\n\n然后就是根据自己喜好来调压缩比例了。压缩质量越低，看起来越模糊。\n\n![Result pic 1](/contentimg/26/7.png \"最高压缩\")\n\n![Result pic 1](/contentimg/26/8.png \"保持原质量\")\n\n\n\n### audio压缩\n\n　　其实也不算压缩，只是修改了音频文件的读取方式而已。\n\n　　首先要找出大文件，一般是背景音乐：\n\n![Result pic 1](/contentimg/26/9.png \"找出大文件\")\n\n\n　　这里可以修改的只有一个Load Type选项，一般情况下忽略第一个。第二第三差不多，一般都是建议大文件选第二个（Compressed in memory）；零碎的小文件选第三个（streaming）。区别就是加载时会不会存在延迟，这个在大文件上才会体现出来。\n\n![Result pic 1](/contentimg/26/10.png \"audio优化\")\n\n\n　　记住这里选第一个的话，这12个文件，会导致运行时的audio内存高达13m。选stream的话才250kb。差别很大的。\n\n### 其他优化\n\n　　在这个2D小游戏中，剩下其他的优化效果很小，就设置static选项（让系统自动优化）、取消天空盒等等细节。所以暂时不提，等后面3D部分的再说这个优化。\n\n### 编译优化\n\n　　由于这个2D小游戏很简单，没涉及其他的，所以可以直接上编译选项优化了。\n\n　　直接到Player Settings设置：\n\n![Result pic 1](/contentimg/26/11.png \"Publishing Settings\")\n\n\n　　Enable Exceptions设为None，启用Data caching。根据前面观察的内存大小，设置一个值（该值后面能在文本文件直接修改，故此处影响小，随便填）。\n\n![Result pic 1](/contentimg/26/12.png \"Other Settings\")\n\n\n　　这里只有两个是必须的：\n\n1. 启用“Strip Engine Code”，该项表示剔除不用的dll。\n\n1. 不打印log。\n\n\n　　其他的看喜好选吧。不是必要设置。然后就可以编译出包了！\n\n![Result pic 1](/contentimg/26/13.png \"记录申请内存大小的属性\")\n\n\n## html优化\n\n　　现在可以运行看到效果了，初始是不提供file模式看效果的，这里有篇文件介绍怎么设置Chrome支持file模式运行：\n\n[Unity发布WebGl注意事项](http://www.cnblogs.com/huwenya/p/9547224.html) \n\n　　细节我就不再提了。下面要说的是怎么让内容居中显示：\n\n　　初始启动，是在左上角的。体验不是很好。但是可以用F12看到，是绘制在canvas上的内容，是可以通过修改html代码来实现居中显示的。\n\n　　html居中显示的方式是：\n\n1. 增加div。\n1. 设置style=\"position: absolute;left:50%;top:50%;margin-left:0px;margin-top:0px;\"\n\n　　注意这里有个margin偏移值，因为目前的居中设置，是以该内容的左上角来居中的，所以出来效果是在第四象限的位置。就得让它根据自己的大小来偏1/2过去，就居中了。\n\n　　由于html代码不支持动态计算，所以只能写css脚本了：\n\n``` html\n  <div id=\"contdivc\" style=\"position: absolute;left:50%;top:50%;margin-left:0px;margin-top:0px;\">\n  <script type='text/javascript'>\n    window.onload=function() {\n            document.getElementById( \"contdivc\" ).style.marginLeft = \"-\"+960/2 + \"px\";\n\t\t\tdocument.getElementById( \"contdivc\" ).style.marginTop = \"-\"+600/2 + \"px\";\n        }\n  </script>\n    <canvas class=\"emscripten\" id=\"canvas\" oncontextmenu=\"event.preventDefault()\" height=\"600px\" width=\"960px\"></canvas>\n</div>\n```\n\n　　现在刷新运行，居中了！\n\n　　但是不能每次编译都来这里修改html的呀。怎么处理？\n\n　　回到开头，Unity日志里面其实有提到，是用插件来编译的，这样，是肯定存在一个模版文件的！\n\n　　该模版就在安装目录下：5.4.6f3\\Editor\\Data\\PlaybackEngines\\WebGLSupport\\BuildTools\\WebGLTemplates\n\n![Result pic 1](/contentimg/26/14.png \"母板html\")\n\n\n　　那就好办了，直接改该文件就行了：\n\n``` html\n  <div id=\"contdivc\" style=\"position: absolute;left:50%;top:50%;margin-left:0px;margin-top:0px;\">\n  <script type='text/javascript'>\n    window.onload=function() {\n            document.getElementById( \"contdivc\" ).style.marginLeft = \"-\"+%UNITY_WIDTH%/2 + \"px\";\n\t\t\tdocument.getElementById( \"contdivc\" ).style.marginTop = \"-\"+%UNITY_HEIGHT%/2 + \"px\";\n        }\n  </script>\n    <canvas class=\"emscripten\" id=\"canvas\" oncontextmenu=\"event.preventDefault()\" height=\"%UNITY_HEIGHT%px\" width=\"%UNITY_WIDTH%px\"></canvas>\n</div>\n```\n\n文末贴几个我觉得还不错的文章：\n\n\n[Unity发布WebGl注意事项](http://www.cnblogs.com/huwenya/p/9547224.html)\n\n[Unity 性能优化（力荐）](https://www.cnblogs.com/Jason-c/p/8137193.html)\n\n[unity几种优化建议](https://blog.csdn.net/ElyXiao/article/details/51980863)\n\n[Unity5.3.3 webgl 注意](https://blog.csdn.net/mayzhengxi/article/details/76616864)\n\n[[Unity优化]减少内存占用：贴图优化](https://blog.csdn.net/lyh916/article/details/44115095)\n\n[Unity3d Mesh、Texture、UI 压缩降低内存](https://blog.csdn.net/yuyingwin/article/details/78851312)\n\n[Unity游戏开发性能优化（Sprite优化）](https://blog.csdn.net/qq_33747722/article/details/70544822)\n\n[Unity游戏开发图片纹理压缩方案](https://blog.csdn.net/a673544319/article/details/82142283)\n\n","source":"_posts/26UnitySuper_1.md","raw":"---\ntitle: Unity优化_WebGL发布优化\ndate: 2018-10-23 14:59:59\ncategories:\n  - Unity优化\ntags:\n  - 发布优化\n---\n\n　　本文是记录Unity的优化第一篇：WebGL发布优化。\n\n　　后续将记录其他平台的优化，以及编程中遇到的优化。\n\n<!-- more -->\n\n　　开头分享几个博客链接：\n\n来自印度的：[App Guruz](http://www.theappguruz.com/blog/unity-optimization-initiative) \n\nUnity社区的两篇文章：\n\n[了解Unity WebGL中的内存](https://blogs.unity3d.com/cn/2016/09/20/understanding-memory-in-unity-webgl/) \n\n[Unity WebGL内存：Unity Heap](https://blogs.unity3d.com/cn/2016/12/05/unity-webgl-memory-the-unity-heap/) \n\n　　本文就不重复博文中的细节了。\n\n　　Unity发布WebGL版本，限制是很大的，必须事先定义所需内存，一旦决定，就不能减少或者增加！而且包不能太大，下载速度严重影响启动时间。特别是还有部分API限制。总体上，限制因素很多。当然，如果用2018新特性的，就能动态内存及高压缩。不过，目前还是先从普通版本做起。\n\n　　小游戏是可以发布成WebGL版本的，但是大游戏难度系数很高，特别是画面越精美的。因为要考虑web可以运行在任何低配置的场景，特别是跑在手机32位浏览器。\n\n　　针对Unity发布WebGL，细节有好多，目前我就按照遇到的问题，从初级开始，一个一个分享记录吧。\n\n　　本博客会不定时分享部分官方商店里面的小游戏，同时发布成WebGL版本让大家可以体验。\n\n　　先记录简单发布2D拾荒者遇到的问题吧。\n\n## 疑难解答\n\n### 360打不开\n\n　　该问题在前面的博客有提到，是新版本的Unity编译的包，部分浏览器暂时不支持WebGL2.0的特性，所以识别不了，就不能打开了。\n\n　　只要用老版本的Unity编译发布，就可以使用了。目前我用的是5.4.6f3。发布出来是Release包；再往上的版本发布的是Build包，就得用Chrome和手机浏览器打开了。\n\n### 抛异常--内存不足\n\n　　这个需要细谈。是本篇的重点。\n\n　　Unity发布的这个webgl，运行在浏览器上，是需要事先定义内存的，后面不能减小或者增大。所以得了解你这个程序最少需要多少内存，然后根据2的幂来取值。\n\n![Result pic 1](/contentimg/26/1.png \"定义内存大小的地方\")\n\n\n　　那怎么看程序需要多少内存？\n\n#### Profiler\n\n![Result pic 1](/contentimg/26/2.png \"Profiler\")\n\n\n　　在memory部分，可以查看当前场景使用了多少内存。一般看Texture和Audio就行，这两个是最大的，加起来的值就是至少需要的内存，往上取2的幂就能大概出一个值了。像图中，大致23m，所以往上取32m就行。\n\n#### gzip解压方式\n\n　　这里还有个办法，就是先编译一次包。然后把Release里的3个包全换成后缀gzip，解压出来，凑起来的大小就是到时在浏览器里的大小。\n\n\n![Result pic 1](/contentimg/26/3.png \"gzip解压后大小 27.6m\")\n\n\n## 优化（重点）\n\n### 删除多余文件\n\n　　第一个，首要的，删除多余文件。\n\n　　可以通过%homepath%\\AppData\\Local\\Unity\\Editor\\Editor.log，或者是在Console窗口最右边打开。\n\n![Result pic 1](/contentimg/26/4.png \"Console窗口最右边\")\n\n![Result pic 1](/contentimg/26/5.png \"Editor.log\")\n\n\n　　查看该日志，可以看到里面记录了整个编译过程，包里有什么文件，大小等等信息。\n\n### 图片压缩\n\n　　图片压缩在5.x版本的优化选项较少，在2018的就多了，可以选择压缩类型、压缩质量等等参数。\n\n　　5.x的[取消Generate Mip Maps](http://blog.sina.com.cn/s/blog_5b6cb9500102vi6i.html)  ， 因为只是普通的2D图片，不需要3D效果。\n\n![Result pic 1](/contentimg/26/6.png \"取消Generate Mip Maps\")\n\n\n\n然后就是根据自己喜好来调压缩比例了。压缩质量越低，看起来越模糊。\n\n![Result pic 1](/contentimg/26/7.png \"最高压缩\")\n\n![Result pic 1](/contentimg/26/8.png \"保持原质量\")\n\n\n\n### audio压缩\n\n　　其实也不算压缩，只是修改了音频文件的读取方式而已。\n\n　　首先要找出大文件，一般是背景音乐：\n\n![Result pic 1](/contentimg/26/9.png \"找出大文件\")\n\n\n　　这里可以修改的只有一个Load Type选项，一般情况下忽略第一个。第二第三差不多，一般都是建议大文件选第二个（Compressed in memory）；零碎的小文件选第三个（streaming）。区别就是加载时会不会存在延迟，这个在大文件上才会体现出来。\n\n![Result pic 1](/contentimg/26/10.png \"audio优化\")\n\n\n　　记住这里选第一个的话，这12个文件，会导致运行时的audio内存高达13m。选stream的话才250kb。差别很大的。\n\n### 其他优化\n\n　　在这个2D小游戏中，剩下其他的优化效果很小，就设置static选项（让系统自动优化）、取消天空盒等等细节。所以暂时不提，等后面3D部分的再说这个优化。\n\n### 编译优化\n\n　　由于这个2D小游戏很简单，没涉及其他的，所以可以直接上编译选项优化了。\n\n　　直接到Player Settings设置：\n\n![Result pic 1](/contentimg/26/11.png \"Publishing Settings\")\n\n\n　　Enable Exceptions设为None，启用Data caching。根据前面观察的内存大小，设置一个值（该值后面能在文本文件直接修改，故此处影响小，随便填）。\n\n![Result pic 1](/contentimg/26/12.png \"Other Settings\")\n\n\n　　这里只有两个是必须的：\n\n1. 启用“Strip Engine Code”，该项表示剔除不用的dll。\n\n1. 不打印log。\n\n\n　　其他的看喜好选吧。不是必要设置。然后就可以编译出包了！\n\n![Result pic 1](/contentimg/26/13.png \"记录申请内存大小的属性\")\n\n\n## html优化\n\n　　现在可以运行看到效果了，初始是不提供file模式看效果的，这里有篇文件介绍怎么设置Chrome支持file模式运行：\n\n[Unity发布WebGl注意事项](http://www.cnblogs.com/huwenya/p/9547224.html) \n\n　　细节我就不再提了。下面要说的是怎么让内容居中显示：\n\n　　初始启动，是在左上角的。体验不是很好。但是可以用F12看到，是绘制在canvas上的内容，是可以通过修改html代码来实现居中显示的。\n\n　　html居中显示的方式是：\n\n1. 增加div。\n1. 设置style=\"position: absolute;left:50%;top:50%;margin-left:0px;margin-top:0px;\"\n\n　　注意这里有个margin偏移值，因为目前的居中设置，是以该内容的左上角来居中的，所以出来效果是在第四象限的位置。就得让它根据自己的大小来偏1/2过去，就居中了。\n\n　　由于html代码不支持动态计算，所以只能写css脚本了：\n\n``` html\n  <div id=\"contdivc\" style=\"position: absolute;left:50%;top:50%;margin-left:0px;margin-top:0px;\">\n  <script type='text/javascript'>\n    window.onload=function() {\n            document.getElementById( \"contdivc\" ).style.marginLeft = \"-\"+960/2 + \"px\";\n\t\t\tdocument.getElementById( \"contdivc\" ).style.marginTop = \"-\"+600/2 + \"px\";\n        }\n  </script>\n    <canvas class=\"emscripten\" id=\"canvas\" oncontextmenu=\"event.preventDefault()\" height=\"600px\" width=\"960px\"></canvas>\n</div>\n```\n\n　　现在刷新运行，居中了！\n\n　　但是不能每次编译都来这里修改html的呀。怎么处理？\n\n　　回到开头，Unity日志里面其实有提到，是用插件来编译的，这样，是肯定存在一个模版文件的！\n\n　　该模版就在安装目录下：5.4.6f3\\Editor\\Data\\PlaybackEngines\\WebGLSupport\\BuildTools\\WebGLTemplates\n\n![Result pic 1](/contentimg/26/14.png \"母板html\")\n\n\n　　那就好办了，直接改该文件就行了：\n\n``` html\n  <div id=\"contdivc\" style=\"position: absolute;left:50%;top:50%;margin-left:0px;margin-top:0px;\">\n  <script type='text/javascript'>\n    window.onload=function() {\n            document.getElementById( \"contdivc\" ).style.marginLeft = \"-\"+%UNITY_WIDTH%/2 + \"px\";\n\t\t\tdocument.getElementById( \"contdivc\" ).style.marginTop = \"-\"+%UNITY_HEIGHT%/2 + \"px\";\n        }\n  </script>\n    <canvas class=\"emscripten\" id=\"canvas\" oncontextmenu=\"event.preventDefault()\" height=\"%UNITY_HEIGHT%px\" width=\"%UNITY_WIDTH%px\"></canvas>\n</div>\n```\n\n文末贴几个我觉得还不错的文章：\n\n\n[Unity发布WebGl注意事项](http://www.cnblogs.com/huwenya/p/9547224.html)\n\n[Unity 性能优化（力荐）](https://www.cnblogs.com/Jason-c/p/8137193.html)\n\n[unity几种优化建议](https://blog.csdn.net/ElyXiao/article/details/51980863)\n\n[Unity5.3.3 webgl 注意](https://blog.csdn.net/mayzhengxi/article/details/76616864)\n\n[[Unity优化]减少内存占用：贴图优化](https://blog.csdn.net/lyh916/article/details/44115095)\n\n[Unity3d Mesh、Texture、UI 压缩降低内存](https://blog.csdn.net/yuyingwin/article/details/78851312)\n\n[Unity游戏开发性能优化（Sprite优化）](https://blog.csdn.net/qq_33747722/article/details/70544822)\n\n[Unity游戏开发图片纹理压缩方案](https://blog.csdn.net/a673544319/article/details/82142283)\n\n","slug":"26UnitySuper_1","published":1,"updated":"2018-10-23T16:27:14.685Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgrhr004mjo9csy9f6ckn","content":"<p>　　本文是记录Unity的优化第一篇：WebGL发布优化。</p>\n<p>　　后续将记录其他平台的优化，以及编程中遇到的优化。</p>\n<a id=\"more\"></a>\n<p>　　开头分享几个博客链接：</p>\n<p>来自印度的：<a href=\"http://www.theappguruz.com/blog/unity-optimization-initiative\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">App Guruz</a> </p>\n<p>Unity社区的两篇文章：</p>\n<p><a href=\"https://blogs.unity3d.com/cn/2016/09/20/understanding-memory-in-unity-webgl/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">了解Unity WebGL中的内存</a> </p>\n<p><a href=\"https://blogs.unity3d.com/cn/2016/12/05/unity-webgl-memory-the-unity-heap/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity WebGL内存：Unity Heap</a> </p>\n<p>　　本文就不重复博文中的细节了。</p>\n<p>　　Unity发布WebGL版本，限制是很大的，必须事先定义所需内存，一旦决定，就不能减少或者增加！而且包不能太大，下载速度严重影响启动时间。特别是还有部分API限制。总体上，限制因素很多。当然，如果用2018新特性的，就能动态内存及高压缩。不过，目前还是先从普通版本做起。</p>\n<p>　　小游戏是可以发布成WebGL版本的，但是大游戏难度系数很高，特别是画面越精美的。因为要考虑web可以运行在任何低配置的场景，特别是跑在手机32位浏览器。</p>\n<p>　　针对Unity发布WebGL，细节有好多，目前我就按照遇到的问题，从初级开始，一个一个分享记录吧。</p>\n<p>　　本博客会不定时分享部分官方商店里面的小游戏，同时发布成WebGL版本让大家可以体验。</p>\n<p>　　先记录简单发布2D拾荒者遇到的问题吧。</p>\n<h2 id=\"疑难解答\"><a href=\"#疑难解答\" class=\"headerlink\" title=\"疑难解答\"></a>疑难解答</h2><h3 id=\"360打不开\"><a href=\"#360打不开\" class=\"headerlink\" title=\"360打不开\"></a>360打不开</h3><p>　　该问题在前面的博客有提到，是新版本的Unity编译的包，部分浏览器暂时不支持WebGL2.0的特性，所以识别不了，就不能打开了。</p>\n<p>　　只要用老版本的Unity编译发布，就可以使用了。目前我用的是5.4.6f3。发布出来是Release包；再往上的版本发布的是Build包，就得用Chrome和手机浏览器打开了。</p>\n<h3 id=\"抛异常–内存不足\"><a href=\"#抛异常–内存不足\" class=\"headerlink\" title=\"抛异常–内存不足\"></a>抛异常–内存不足</h3><p>　　这个需要细谈。是本篇的重点。</p>\n<p>　　Unity发布的这个webgl，运行在浏览器上，是需要事先定义内存的，后面不能减小或者增大。所以得了解你这个程序最少需要多少内存，然后根据2的幂来取值。</p>\n<p><img src=\"/contentimg/26/1.png\" alt=\"Result pic 1\" title=\"定义内存大小的地方\"></p>\n<p>　　那怎么看程序需要多少内存？</p>\n<h4 id=\"Profiler\"><a href=\"#Profiler\" class=\"headerlink\" title=\"Profiler\"></a>Profiler</h4><p><img src=\"/contentimg/26/2.png\" alt=\"Result pic 1\" title=\"Profiler\"></p>\n<p>　　在memory部分，可以查看当前场景使用了多少内存。一般看Texture和Audio就行，这两个是最大的，加起来的值就是至少需要的内存，往上取2的幂就能大概出一个值了。像图中，大致23m，所以往上取32m就行。</p>\n<h4 id=\"gzip解压方式\"><a href=\"#gzip解压方式\" class=\"headerlink\" title=\"gzip解压方式\"></a>gzip解压方式</h4><p>　　这里还有个办法，就是先编译一次包。然后把Release里的3个包全换成后缀gzip，解压出来，凑起来的大小就是到时在浏览器里的大小。</p>\n<p><img src=\"/contentimg/26/3.png\" alt=\"Result pic 1\" title=\"gzip解压后大小 27.6m\"></p>\n<h2 id=\"优化（重点）\"><a href=\"#优化（重点）\" class=\"headerlink\" title=\"优化（重点）\"></a>优化（重点）</h2><h3 id=\"删除多余文件\"><a href=\"#删除多余文件\" class=\"headerlink\" title=\"删除多余文件\"></a>删除多余文件</h3><p>　　第一个，首要的，删除多余文件。</p>\n<p>　　可以通过%homepath%\\AppData\\Local\\Unity\\Editor\\Editor.log，或者是在Console窗口最右边打开。</p>\n<p><img src=\"/contentimg/26/4.png\" alt=\"Result pic 1\" title=\"Console窗口最右边\"></p>\n<p><img src=\"/contentimg/26/5.png\" alt=\"Result pic 1\" title=\"Editor.log\"></p>\n<p>　　查看该日志，可以看到里面记录了整个编译过程，包里有什么文件，大小等等信息。</p>\n<h3 id=\"图片压缩\"><a href=\"#图片压缩\" class=\"headerlink\" title=\"图片压缩\"></a>图片压缩</h3><p>　　图片压缩在5.x版本的优化选项较少，在2018的就多了，可以选择压缩类型、压缩质量等等参数。</p>\n<p>　　5.x的<a href=\"http://blog.sina.com.cn/s/blog_5b6cb9500102vi6i.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">取消Generate Mip Maps</a>  ， 因为只是普通的2D图片，不需要3D效果。</p>\n<p><img src=\"/contentimg/26/6.png\" alt=\"Result pic 1\" title=\"取消Generate Mip Maps\"></p>\n<p>然后就是根据自己喜好来调压缩比例了。压缩质量越低，看起来越模糊。</p>\n<p><img src=\"/contentimg/26/7.png\" alt=\"Result pic 1\" title=\"最高压缩\"></p>\n<p><img src=\"/contentimg/26/8.png\" alt=\"Result pic 1\" title=\"保持原质量\"></p>\n<h3 id=\"audio压缩\"><a href=\"#audio压缩\" class=\"headerlink\" title=\"audio压缩\"></a>audio压缩</h3><p>　　其实也不算压缩，只是修改了音频文件的读取方式而已。</p>\n<p>　　首先要找出大文件，一般是背景音乐：</p>\n<p><img src=\"/contentimg/26/9.png\" alt=\"Result pic 1\" title=\"找出大文件\"></p>\n<p>　　这里可以修改的只有一个Load Type选项，一般情况下忽略第一个。第二第三差不多，一般都是建议大文件选第二个（Compressed in memory）；零碎的小文件选第三个（streaming）。区别就是加载时会不会存在延迟，这个在大文件上才会体现出来。</p>\n<p><img src=\"/contentimg/26/10.png\" alt=\"Result pic 1\" title=\"audio优化\"></p>\n<p>　　记住这里选第一个的话，这12个文件，会导致运行时的audio内存高达13m。选stream的话才250kb。差别很大的。</p>\n<h3 id=\"其他优化\"><a href=\"#其他优化\" class=\"headerlink\" title=\"其他优化\"></a>其他优化</h3><p>　　在这个2D小游戏中，剩下其他的优化效果很小，就设置static选项（让系统自动优化）、取消天空盒等等细节。所以暂时不提，等后面3D部分的再说这个优化。</p>\n<h3 id=\"编译优化\"><a href=\"#编译优化\" class=\"headerlink\" title=\"编译优化\"></a>编译优化</h3><p>　　由于这个2D小游戏很简单，没涉及其他的，所以可以直接上编译选项优化了。</p>\n<p>　　直接到Player Settings设置：</p>\n<p><img src=\"/contentimg/26/11.png\" alt=\"Result pic 1\" title=\"Publishing Settings\"></p>\n<p>　　Enable Exceptions设为None，启用Data caching。根据前面观察的内存大小，设置一个值（该值后面能在文本文件直接修改，故此处影响小，随便填）。</p>\n<p><img src=\"/contentimg/26/12.png\" alt=\"Result pic 1\" title=\"Other Settings\"></p>\n<p>　　这里只有两个是必须的：</p>\n<ol>\n<li><p>启用“Strip Engine Code”，该项表示剔除不用的dll。</p>\n</li>\n<li><p>不打印log。</p>\n</li>\n</ol>\n<p>　　其他的看喜好选吧。不是必要设置。然后就可以编译出包了！</p>\n<p><img src=\"/contentimg/26/13.png\" alt=\"Result pic 1\" title=\"记录申请内存大小的属性\"></p>\n<h2 id=\"html优化\"><a href=\"#html优化\" class=\"headerlink\" title=\"html优化\"></a>html优化</h2><p>　　现在可以运行看到效果了，初始是不提供file模式看效果的，这里有篇文件介绍怎么设置Chrome支持file模式运行：</p>\n<p><a href=\"http://www.cnblogs.com/huwenya/p/9547224.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity发布WebGl注意事项</a> </p>\n<p>　　细节我就不再提了。下面要说的是怎么让内容居中显示：</p>\n<p>　　初始启动，是在左上角的。体验不是很好。但是可以用F12看到，是绘制在canvas上的内容，是可以通过修改html代码来实现居中显示的。</p>\n<p>　　html居中显示的方式是：</p>\n<ol>\n<li>增加div。</li>\n<li>设置style=”position: absolute;left:50%;top:50%;margin-left:0px;margin-top:0px;”</li>\n</ol>\n<p>　　注意这里有个margin偏移值，因为目前的居中设置，是以该内容的左上角来居中的，所以出来效果是在第四象限的位置。就得让它根据自己的大小来偏1/2过去，就居中了。</p>\n<p>　　由于html代码不支持动态计算，所以只能写css脚本了：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"contdivc\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"position: absolute;left:50%;top:50%;margin-left:0px;margin-top:0px;\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">'text/javascript'</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    window.onload=function() &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            document.getElementById( \"contdivc\" ).style.marginLeft = \"-\"+960/2 + \"px\";</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tdocument.getElementById( \"contdivc\" ).style.marginTop = \"-\"+600/2 + \"px\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">class</span>=<span class=\"string\">\"emscripten\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">oncontextmenu</span>=<span class=\"string\">\"event.preventDefault()\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"600px\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"960px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>　　现在刷新运行，居中了！</p>\n<p>　　但是不能每次编译都来这里修改html的呀。怎么处理？</p>\n<p>　　回到开头，Unity日志里面其实有提到，是用插件来编译的，这样，是肯定存在一个模版文件的！</p>\n<p>　　该模版就在安装目录下：5.4.6f3\\Editor\\Data\\PlaybackEngines\\WebGLSupport\\BuildTools\\WebGLTemplates</p>\n<p><img src=\"/contentimg/26/14.png\" alt=\"Result pic 1\" title=\"母板html\"></p>\n<p>　　那就好办了，直接改该文件就行了：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"contdivc\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"position: absolute;left:50%;top:50%;margin-left:0px;margin-top:0px;\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">'text/javascript'</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    window.onload=function() &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            document.getElementById( \"contdivc\" ).style.marginLeft = \"-\"+%UNITY_WIDTH%/2 + \"px\";</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tdocument.getElementById( \"contdivc\" ).style.marginTop = \"-\"+%UNITY_HEIGHT%/2 + \"px\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">class</span>=<span class=\"string\">\"emscripten\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">oncontextmenu</span>=<span class=\"string\">\"event.preventDefault()\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"%UNITY_HEIGHT%px\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"%UNITY_WIDTH%px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>文末贴几个我觉得还不错的文章：</p>\n<p><a href=\"http://www.cnblogs.com/huwenya/p/9547224.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity发布WebGl注意事项</a></p>\n<p><a href=\"https://www.cnblogs.com/Jason-c/p/8137193.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity 性能优化（力荐）</a></p>\n<p><a href=\"https://blog.csdn.net/ElyXiao/article/details/51980863\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">unity几种优化建议</a></p>\n<p><a href=\"https://blog.csdn.net/mayzhengxi/article/details/76616864\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity5.3.3 webgl 注意</a></p>\n<p><a href=\"https://blog.csdn.net/lyh916/article/details/44115095\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">[Unity优化]减少内存占用：贴图优化</a></p>\n<p><a href=\"https://blog.csdn.net/yuyingwin/article/details/78851312\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity3d Mesh、Texture、UI 压缩降低内存</a></p>\n<p><a href=\"https://blog.csdn.net/qq_33747722/article/details/70544822\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity游戏开发性能优化（Sprite优化）</a></p>\n<p><a href=\"https://blog.csdn.net/a673544319/article/details/82142283\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity游戏开发图片纹理压缩方案</a></p>\n","site":{"data":{}},"excerpt":"<p>　　本文是记录Unity的优化第一篇：WebGL发布优化。</p>\n<p>　　后续将记录其他平台的优化，以及编程中遇到的优化。</p>","more":"<p>　　开头分享几个博客链接：</p>\n<p>来自印度的：<a href=\"http://www.theappguruz.com/blog/unity-optimization-initiative\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">App Guruz</a> </p>\n<p>Unity社区的两篇文章：</p>\n<p><a href=\"https://blogs.unity3d.com/cn/2016/09/20/understanding-memory-in-unity-webgl/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">了解Unity WebGL中的内存</a> </p>\n<p><a href=\"https://blogs.unity3d.com/cn/2016/12/05/unity-webgl-memory-the-unity-heap/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity WebGL内存：Unity Heap</a> </p>\n<p>　　本文就不重复博文中的细节了。</p>\n<p>　　Unity发布WebGL版本，限制是很大的，必须事先定义所需内存，一旦决定，就不能减少或者增加！而且包不能太大，下载速度严重影响启动时间。特别是还有部分API限制。总体上，限制因素很多。当然，如果用2018新特性的，就能动态内存及高压缩。不过，目前还是先从普通版本做起。</p>\n<p>　　小游戏是可以发布成WebGL版本的，但是大游戏难度系数很高，特别是画面越精美的。因为要考虑web可以运行在任何低配置的场景，特别是跑在手机32位浏览器。</p>\n<p>　　针对Unity发布WebGL，细节有好多，目前我就按照遇到的问题，从初级开始，一个一个分享记录吧。</p>\n<p>　　本博客会不定时分享部分官方商店里面的小游戏，同时发布成WebGL版本让大家可以体验。</p>\n<p>　　先记录简单发布2D拾荒者遇到的问题吧。</p>\n<h2 id=\"疑难解答\"><a href=\"#疑难解答\" class=\"headerlink\" title=\"疑难解答\"></a>疑难解答</h2><h3 id=\"360打不开\"><a href=\"#360打不开\" class=\"headerlink\" title=\"360打不开\"></a>360打不开</h3><p>　　该问题在前面的博客有提到，是新版本的Unity编译的包，部分浏览器暂时不支持WebGL2.0的特性，所以识别不了，就不能打开了。</p>\n<p>　　只要用老版本的Unity编译发布，就可以使用了。目前我用的是5.4.6f3。发布出来是Release包；再往上的版本发布的是Build包，就得用Chrome和手机浏览器打开了。</p>\n<h3 id=\"抛异常–内存不足\"><a href=\"#抛异常–内存不足\" class=\"headerlink\" title=\"抛异常–内存不足\"></a>抛异常–内存不足</h3><p>　　这个需要细谈。是本篇的重点。</p>\n<p>　　Unity发布的这个webgl，运行在浏览器上，是需要事先定义内存的，后面不能减小或者增大。所以得了解你这个程序最少需要多少内存，然后根据2的幂来取值。</p>\n<p><img src=\"/contentimg/26/1.png\" alt=\"Result pic 1\" title=\"定义内存大小的地方\"></p>\n<p>　　那怎么看程序需要多少内存？</p>\n<h4 id=\"Profiler\"><a href=\"#Profiler\" class=\"headerlink\" title=\"Profiler\"></a>Profiler</h4><p><img src=\"/contentimg/26/2.png\" alt=\"Result pic 1\" title=\"Profiler\"></p>\n<p>　　在memory部分，可以查看当前场景使用了多少内存。一般看Texture和Audio就行，这两个是最大的，加起来的值就是至少需要的内存，往上取2的幂就能大概出一个值了。像图中，大致23m，所以往上取32m就行。</p>\n<h4 id=\"gzip解压方式\"><a href=\"#gzip解压方式\" class=\"headerlink\" title=\"gzip解压方式\"></a>gzip解压方式</h4><p>　　这里还有个办法，就是先编译一次包。然后把Release里的3个包全换成后缀gzip，解压出来，凑起来的大小就是到时在浏览器里的大小。</p>\n<p><img src=\"/contentimg/26/3.png\" alt=\"Result pic 1\" title=\"gzip解压后大小 27.6m\"></p>\n<h2 id=\"优化（重点）\"><a href=\"#优化（重点）\" class=\"headerlink\" title=\"优化（重点）\"></a>优化（重点）</h2><h3 id=\"删除多余文件\"><a href=\"#删除多余文件\" class=\"headerlink\" title=\"删除多余文件\"></a>删除多余文件</h3><p>　　第一个，首要的，删除多余文件。</p>\n<p>　　可以通过%homepath%\\AppData\\Local\\Unity\\Editor\\Editor.log，或者是在Console窗口最右边打开。</p>\n<p><img src=\"/contentimg/26/4.png\" alt=\"Result pic 1\" title=\"Console窗口最右边\"></p>\n<p><img src=\"/contentimg/26/5.png\" alt=\"Result pic 1\" title=\"Editor.log\"></p>\n<p>　　查看该日志，可以看到里面记录了整个编译过程，包里有什么文件，大小等等信息。</p>\n<h3 id=\"图片压缩\"><a href=\"#图片压缩\" class=\"headerlink\" title=\"图片压缩\"></a>图片压缩</h3><p>　　图片压缩在5.x版本的优化选项较少，在2018的就多了，可以选择压缩类型、压缩质量等等参数。</p>\n<p>　　5.x的<a href=\"http://blog.sina.com.cn/s/blog_5b6cb9500102vi6i.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">取消Generate Mip Maps</a>  ， 因为只是普通的2D图片，不需要3D效果。</p>\n<p><img src=\"/contentimg/26/6.png\" alt=\"Result pic 1\" title=\"取消Generate Mip Maps\"></p>\n<p>然后就是根据自己喜好来调压缩比例了。压缩质量越低，看起来越模糊。</p>\n<p><img src=\"/contentimg/26/7.png\" alt=\"Result pic 1\" title=\"最高压缩\"></p>\n<p><img src=\"/contentimg/26/8.png\" alt=\"Result pic 1\" title=\"保持原质量\"></p>\n<h3 id=\"audio压缩\"><a href=\"#audio压缩\" class=\"headerlink\" title=\"audio压缩\"></a>audio压缩</h3><p>　　其实也不算压缩，只是修改了音频文件的读取方式而已。</p>\n<p>　　首先要找出大文件，一般是背景音乐：</p>\n<p><img src=\"/contentimg/26/9.png\" alt=\"Result pic 1\" title=\"找出大文件\"></p>\n<p>　　这里可以修改的只有一个Load Type选项，一般情况下忽略第一个。第二第三差不多，一般都是建议大文件选第二个（Compressed in memory）；零碎的小文件选第三个（streaming）。区别就是加载时会不会存在延迟，这个在大文件上才会体现出来。</p>\n<p><img src=\"/contentimg/26/10.png\" alt=\"Result pic 1\" title=\"audio优化\"></p>\n<p>　　记住这里选第一个的话，这12个文件，会导致运行时的audio内存高达13m。选stream的话才250kb。差别很大的。</p>\n<h3 id=\"其他优化\"><a href=\"#其他优化\" class=\"headerlink\" title=\"其他优化\"></a>其他优化</h3><p>　　在这个2D小游戏中，剩下其他的优化效果很小，就设置static选项（让系统自动优化）、取消天空盒等等细节。所以暂时不提，等后面3D部分的再说这个优化。</p>\n<h3 id=\"编译优化\"><a href=\"#编译优化\" class=\"headerlink\" title=\"编译优化\"></a>编译优化</h3><p>　　由于这个2D小游戏很简单，没涉及其他的，所以可以直接上编译选项优化了。</p>\n<p>　　直接到Player Settings设置：</p>\n<p><img src=\"/contentimg/26/11.png\" alt=\"Result pic 1\" title=\"Publishing Settings\"></p>\n<p>　　Enable Exceptions设为None，启用Data caching。根据前面观察的内存大小，设置一个值（该值后面能在文本文件直接修改，故此处影响小，随便填）。</p>\n<p><img src=\"/contentimg/26/12.png\" alt=\"Result pic 1\" title=\"Other Settings\"></p>\n<p>　　这里只有两个是必须的：</p>\n<ol>\n<li><p>启用“Strip Engine Code”，该项表示剔除不用的dll。</p>\n</li>\n<li><p>不打印log。</p>\n</li>\n</ol>\n<p>　　其他的看喜好选吧。不是必要设置。然后就可以编译出包了！</p>\n<p><img src=\"/contentimg/26/13.png\" alt=\"Result pic 1\" title=\"记录申请内存大小的属性\"></p>\n<h2 id=\"html优化\"><a href=\"#html优化\" class=\"headerlink\" title=\"html优化\"></a>html优化</h2><p>　　现在可以运行看到效果了，初始是不提供file模式看效果的，这里有篇文件介绍怎么设置Chrome支持file模式运行：</p>\n<p><a href=\"http://www.cnblogs.com/huwenya/p/9547224.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity发布WebGl注意事项</a> </p>\n<p>　　细节我就不再提了。下面要说的是怎么让内容居中显示：</p>\n<p>　　初始启动，是在左上角的。体验不是很好。但是可以用F12看到，是绘制在canvas上的内容，是可以通过修改html代码来实现居中显示的。</p>\n<p>　　html居中显示的方式是：</p>\n<ol>\n<li>增加div。</li>\n<li>设置style=”position: absolute;left:50%;top:50%;margin-left:0px;margin-top:0px;”</li>\n</ol>\n<p>　　注意这里有个margin偏移值，因为目前的居中设置，是以该内容的左上角来居中的，所以出来效果是在第四象限的位置。就得让它根据自己的大小来偏1/2过去，就居中了。</p>\n<p>　　由于html代码不支持动态计算，所以只能写css脚本了：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"contdivc\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"position: absolute;left:50%;top:50%;margin-left:0px;margin-top:0px;\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">'text/javascript'</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    window.onload=function() &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            document.getElementById( \"contdivc\" ).style.marginLeft = \"-\"+960/2 + \"px\";</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tdocument.getElementById( \"contdivc\" ).style.marginTop = \"-\"+600/2 + \"px\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">class</span>=<span class=\"string\">\"emscripten\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">oncontextmenu</span>=<span class=\"string\">\"event.preventDefault()\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"600px\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"960px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>　　现在刷新运行，居中了！</p>\n<p>　　但是不能每次编译都来这里修改html的呀。怎么处理？</p>\n<p>　　回到开头，Unity日志里面其实有提到，是用插件来编译的，这样，是肯定存在一个模版文件的！</p>\n<p>　　该模版就在安装目录下：5.4.6f3\\Editor\\Data\\PlaybackEngines\\WebGLSupport\\BuildTools\\WebGLTemplates</p>\n<p><img src=\"/contentimg/26/14.png\" alt=\"Result pic 1\" title=\"母板html\"></p>\n<p>　　那就好办了，直接改该文件就行了：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"contdivc\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"position: absolute;left:50%;top:50%;margin-left:0px;margin-top:0px;\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">'text/javascript'</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    window.onload=function() &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            document.getElementById( \"contdivc\" ).style.marginLeft = \"-\"+%UNITY_WIDTH%/2 + \"px\";</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t\tdocument.getElementById( \"contdivc\" ).style.marginTop = \"-\"+%UNITY_HEIGHT%/2 + \"px\";</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">class</span>=<span class=\"string\">\"emscripten\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">oncontextmenu</span>=<span class=\"string\">\"event.preventDefault()\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"%UNITY_HEIGHT%px\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"%UNITY_WIDTH%px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>文末贴几个我觉得还不错的文章：</p>\n<p><a href=\"http://www.cnblogs.com/huwenya/p/9547224.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity发布WebGl注意事项</a></p>\n<p><a href=\"https://www.cnblogs.com/Jason-c/p/8137193.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity 性能优化（力荐）</a></p>\n<p><a href=\"https://blog.csdn.net/ElyXiao/article/details/51980863\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">unity几种优化建议</a></p>\n<p><a href=\"https://blog.csdn.net/mayzhengxi/article/details/76616864\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity5.3.3 webgl 注意</a></p>\n<p><a href=\"https://blog.csdn.net/lyh916/article/details/44115095\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">[Unity优化]减少内存占用：贴图优化</a></p>\n<p><a href=\"https://blog.csdn.net/yuyingwin/article/details/78851312\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity3d Mesh、Texture、UI 压缩降低内存</a></p>\n<p><a href=\"https://blog.csdn.net/qq_33747722/article/details/70544822\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity游戏开发性能优化（Sprite优化）</a></p>\n<p><a href=\"https://blog.csdn.net/a673544319/article/details/82142283\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Unity游戏开发图片纹理压缩方案</a></p>"},{"title":"打地鼠类小游戏介绍","date":"2018-11-05T07:02:59.000Z","_content":"\n　　本文介绍网络教学视频的一款小游戏[打怪物](http://www.sikiedu.com/my/course/129)  。   \n\n<!-- more -->\n\n![Result pic 1](/contentimg/33/1.png \"Hit Ghost\")\n\n\n## 游戏简介\n\n　　该小游戏是3D类型，类似打地鼠。在3x3的笼子中会随机出现怪物，玩家通过枪，对这些怪物进行打击。\n\n## 游戏体验\n\n　　[体验demo](/unitydemo/5/index.html) ，请用Chrome或者手机浏览器打开。\n\n## 游戏制作\n\n　　该游戏需要导入几个怪物模型、枪模型，还有几个怪物贴图材质。\n\n### 1.游戏规则细化\n\n　　写代码前，需要先了解这个游戏怎么玩：\n\n　　类似打地鼠，在3x3的笼子随机出现怪物，每只怪物受到一点打击就会死亡，然后得1分。共4种怪物，每种怪物有4种颜色变形。在随机生成怪物的同时，给怪物赋值不同的外形颜色，让玩家产生这个怪物不是同一只的错觉。\n\n所以规划如下：\n\n1. 3x3的布局，共9个格子会出现怪物。 \n1. 共4种怪物，每种怪物都有不同的颜色外形，目前暂时都是4个颜色。\n1. 枪固定在一个位置，通过左右和上下转动，来指向怪物。\n1. 枪不能无间隔攻击，每次射击后，需要有装弹时间。\n1. 定义类来记录怪物信息等参数。\n\n\n### 2.代码\n\n\n　　网络教程班的代码不是很好，后面我重写了。应该要考虑设计模式思想来做才行。\n\n#### 怪物管理\n\n　　怪物在这里，实际并不需要考虑外形，都是同一个“被打击一次就死亡”的个体设定，应该抽象成一层。由于这里实际只是换皮，所以连抽象都不用了。直接一个组件来处理。\n\n![Result pic 1](/contentimg/33/2.png \"怪物组件\")\n\n![Result pic 1](/contentimg/33/3.png \"怪物综合管理\")\n\n\n##### 换皮\n\n![Result pic 1](/contentimg/33/4.png \"换皮代码\")\n\n\n　　换皮代码不复杂，通过查看模型，了解是更换材质而已。\n\n##### 随机生成\n\n　　由于怪物的死亡动画无法插入执行函数，所以只能在代码写携程，间隔0.8s后设置active为false。利用setactive这个特性，避免频繁生成和销毁。\n\n![Result pic 1](/contentimg/33/5.png \"设置集合\")\n\n\n　　各变量意义如下：\n\n1. 由于不同怪物类型id不同，使用字典来保存该对象池。\n1. 利用坐标集合positions，提取3x3的9个空间位置，这里也为了动态获取，当变成4x4、5x5时，代码不用改。\n1. enemyhold，归属怪物父类，方便查看而已。\n1. nowexits，用于记录保存怪物数据，记录当前场景中激活的怪物类型、位置、颜色等信息。\n1. enemys，怪物类型集合，怪物都在EnemyControl类中进行了异化处理，在管理类中就不用区别，直接进行集合统一处理。\n\n![Result pic 1](/contentimg/33/6.png \"概率生成\")\n\n![Result pic 1](/contentimg/33/7.png \"处理生成函数\")\n\n\n　　循环每个位置，通过概率，判断是否生成。这里也可以使用其他方案：通过概率确定哪些位置生成。两种方案都可以。\n\n　　怪物生成函数比较讲究，避免冗余函数，结合设计模式思想抽离。切成3部分：\n\n1. 先清空全部怪物，即把全部都setactive为false。\n1. 处理怪物位置、怪物类型的函数。\n1. 生成怪物的实际函数。\n\n\n　　由于每个怪物模型的坐标位置影响，这里加入了纠偏坐标vector。每次激活怪物前，检查缓存中是否有同类型的尚未激活的，有就拿出来激活使用，没有才Instantiate生成。\n\n\n#### 枪控制\n\n　　旋转合理应该使用四元数，不过这里，由于只有2个轴的限制性旋转，普通的欧拉旋转就够了。使用四元数是为了防止3轴情况下的万向锁。\n\n##### 装弹时间\n\n　　直接+=Time.deltaTime，然后计时即可。能进if语句的，再判断是否执行发射，在成功进入发射语句中才将shootTimer置零。\n\n``` java\n    shootTimer += Time.deltaTime;\n    if (shootTimer >= shootTime)\n```\n\n##### 旋转 \n\n　　指绕某个轴进行旋转。这里是水平左右和垂直上下，左右即对应绕Y轴旋转；上下即对应绕X轴旋转。\n\n　　结合具体场景，现在是有鼠标的2D坐标，刚好对应2个值。\n\n共有3种方法。\n\n方法①: 按顺序绕轴旋转 （是个速度响应，用EasyTouch的时候才适合）\n\n``` java\n    //保存主相机正前方\n    Vector3 mcamera_fwd;\n    //相机前和右的叉积，得到垂直这两个轴的向上的Y\n    Vector3 mcamera_y;\n    //相机前和上的叉积，得到垂直这两个轴的向右的X\n    Vector3 mcamera_x;\n    mcamera_fwd = Camera.main.transform.forward;\n    ////归一化，然后再求叉积\n    //mcamera_fwd.Normalize();\n    //相机前和右的叉积，得到垂直这两个轴的向上的Y\n    mcamera_y = Vector3.Cross(mcamera_fwd, Vector3.right);\n    //相机前和上的叉积，得到垂直这两个轴的向右的X\n    mcamera_x = Vector3.Cross(mcamera_fwd, Vector3.up);\n    //旋转速度\n    transform.Rotate(mcamera_y, Input.GetAxis(\"Mouse X\"), Space.World);\n    transform.Rotate(mcamera_x, Input.GetAxis(\"Mouse Y\"), Space.World);\n```\n\n方法②：使用LookAt，注意Z轴坐标，是取相对主相机的点来转世界坐标。由于笼子位于z=0处，这里主相机和z=0的距离应该取反\n\n``` java\n    Vector3 mousePos = Camera.main.ScreenToWorldPoint(new Vector3(Input.mousePosition.x, Input.mousePosition.y, -Camera.main.transform.position.z));\n    transform.LookAt(new Vector3(mousePos.x, mousePos.y, 0));\n```\n\n\n方法③: 属性面板rotation赋值\n\n``` java\n    //通过旋转模型，得到范围： 竖直: ⬆-35 ~ ⬇+10 ， 水平: ⬅-30 ~ ➡+30\n    //根据鼠标在屏幕上的位置，按比例分配\n    //-30~+30\n    float xPosPrecent = (Input.mousePosition.x / Screen.width) * 60 - 30;\n    if (xPosPrecent > 30f) xPosPrecent = 30f;\n    else if (xPosPrecent < -30f) xPosPrecent = -30f;\n\n    //-35~+10 (鼠标坐标，以屏幕左上为原点0，但是计算中是以左下为0，所以要取反)\n    float yPosPrecent = (1- Input.mousePosition.y / Screen.height) * 45 - 35;\n    if (yPosPrecent > 10f) yPosPrecent = 10f;\n    else if (yPosPrecent < -35f) yPosPrecent = -35f;\n\t\n    transform.transform.rotation = Quaternion.Euler(new Vector3(yPosPrecent, xPosPrecent, 0));\n```\n\n#### 暂停\n\n>　　Time.timeScale = ispause ? 0 : 1;\n\n　　游戏暂停，关注的是物理动效的暂停，菜单栏等等其他那些应该是正常播放的。所以这里就使用Time.timeScale=0。该属性设置后，打出去的子弹position会停止位移，恢复1后能继续之前的速度移动。\n\n　　该属性影响了FixedUpdate，还有携程。但是不影响Update函数。\n\n　　所以控制怪物和枪的函数应该放在FixedUpdate。相反的，音效等等其他可以在游戏暂停住的时候正常运行的，才可以放在Update，这里也是开关背景音乐选择框能在游戏暂停的时候正常播放背景音乐的原因。\n\n　　注意这时候:\n\n> Time.deltaTime==0 => true\n\n　　所以得使用下面这个计时：\n\n> Time.unscaledDeltaTime\n\n#### 保存数据\n\n　　这里很简单，考虑全需要什么数据，定义成一个类，然后利用json转成字符串，保存起来。下次读取这个字符串来还原场景就行。\n\n　　这里暂只保存到缓存，利用PlayerPrefs来保存。其他保存到服务器端去存入数据库，或者本地文件等等方式都是类似的。就多一个工具类而已。\n\n　　难度在json的dll，牛顿json在webgl下会异常，所以只能手动拼内容，使用simplejson。\n\n![Result pic 1](/contentimg/33/12.png \"拼json\")\n\n\n\n### 压缩优化发布\n\n　　贴图压缩，降低分辨率，打图集，设置音频格式等等常规操作。\n\n#### 模型简单优化\n\n　　这里还有对模型的优化。导入的模型，实际上还带了很多没用上的属性，是可以取消掉的。例如一些没使用的动画效果。\n\n![Result pic 1](/contentimg/33/8.png \"门板模型\")\n\n\n　　优化选项：\n\n1. 模型在运行的时候是不会去修改的，所以Read/Write Enabled肯定不用选。\n1. mesh compression，按照实际需求，压缩的话得消耗cpu来解压，实际压缩不了多少。建议不压缩。\n1. UVs，按照需要进行斟酌。\n1. Normals，可以不导入。但是是在不需要场景光照映射情况下。有光照的时候普遍选导入。\n1. Tangents，得根据提示来设置，我导的模型提示没有，所以就设为None了。\n\n\n![Result pic 1](/contentimg/33/9.png \"提示信息\")\n\n\n#### Lightmapping\n\n　　在不要求实时灯光的游戏中，可以使用预烘焙。\n\n　　设置light的mode为Baked，然后到lighting面板设置。\n\n![Result pic 1](/contentimg/33/10.png \"Lightmapping设置\")\n\n\n　　根据实际情况设置质量。\n\n　　经过代码优化+设置优化，两者差距很大。下图是网络教程中的工程运行时的drawcall，与优化后的工程的比较。\n\n![Result pic 1](/contentimg/33/11.png \"性能比较\")\n\n\n　　其中压缩贴图效果最明显，然后就是Lightmapping。代码主要优化的是cpu，以及节省少部分的内存，当然也促进优化了drawcall。\n\n　　优化的重点：drawcall。降低贴图分辨率能极大优化该属性，然后加上代码方面的优化，又能降低。所以总体下来降了将近90%。\n\n\n工程项目源码： \n\n[HitGhost](https://github.com/YaojiaxinPC/hexoblog/tree/master/UnityDemo/HitGHOST) \n\n　　代码还有优化空间，应该抽一个局管理类出来。同时UImanager和gamemanager交叉比较多，可以进行拆分。当然还可以加入EasyTouch、计时、投币等等延伸。\n\n","source":"_posts/33HitGhostDemo.md","raw":"---\ntitle: 打地鼠类小游戏介绍\ndate: 2018-11-05 15:02:59\ncategories:\n  - Unity3D\ntags:\n  - 游戏开发\n  - 3D\n  - 入门级\n  - 小游戏\n---\n\n　　本文介绍网络教学视频的一款小游戏[打怪物](http://www.sikiedu.com/my/course/129)  。   \n\n<!-- more -->\n\n![Result pic 1](/contentimg/33/1.png \"Hit Ghost\")\n\n\n## 游戏简介\n\n　　该小游戏是3D类型，类似打地鼠。在3x3的笼子中会随机出现怪物，玩家通过枪，对这些怪物进行打击。\n\n## 游戏体验\n\n　　[体验demo](/unitydemo/5/index.html) ，请用Chrome或者手机浏览器打开。\n\n## 游戏制作\n\n　　该游戏需要导入几个怪物模型、枪模型，还有几个怪物贴图材质。\n\n### 1.游戏规则细化\n\n　　写代码前，需要先了解这个游戏怎么玩：\n\n　　类似打地鼠，在3x3的笼子随机出现怪物，每只怪物受到一点打击就会死亡，然后得1分。共4种怪物，每种怪物有4种颜色变形。在随机生成怪物的同时，给怪物赋值不同的外形颜色，让玩家产生这个怪物不是同一只的错觉。\n\n所以规划如下：\n\n1. 3x3的布局，共9个格子会出现怪物。 \n1. 共4种怪物，每种怪物都有不同的颜色外形，目前暂时都是4个颜色。\n1. 枪固定在一个位置，通过左右和上下转动，来指向怪物。\n1. 枪不能无间隔攻击，每次射击后，需要有装弹时间。\n1. 定义类来记录怪物信息等参数。\n\n\n### 2.代码\n\n\n　　网络教程班的代码不是很好，后面我重写了。应该要考虑设计模式思想来做才行。\n\n#### 怪物管理\n\n　　怪物在这里，实际并不需要考虑外形，都是同一个“被打击一次就死亡”的个体设定，应该抽象成一层。由于这里实际只是换皮，所以连抽象都不用了。直接一个组件来处理。\n\n![Result pic 1](/contentimg/33/2.png \"怪物组件\")\n\n![Result pic 1](/contentimg/33/3.png \"怪物综合管理\")\n\n\n##### 换皮\n\n![Result pic 1](/contentimg/33/4.png \"换皮代码\")\n\n\n　　换皮代码不复杂，通过查看模型，了解是更换材质而已。\n\n##### 随机生成\n\n　　由于怪物的死亡动画无法插入执行函数，所以只能在代码写携程，间隔0.8s后设置active为false。利用setactive这个特性，避免频繁生成和销毁。\n\n![Result pic 1](/contentimg/33/5.png \"设置集合\")\n\n\n　　各变量意义如下：\n\n1. 由于不同怪物类型id不同，使用字典来保存该对象池。\n1. 利用坐标集合positions，提取3x3的9个空间位置，这里也为了动态获取，当变成4x4、5x5时，代码不用改。\n1. enemyhold，归属怪物父类，方便查看而已。\n1. nowexits，用于记录保存怪物数据，记录当前场景中激活的怪物类型、位置、颜色等信息。\n1. enemys，怪物类型集合，怪物都在EnemyControl类中进行了异化处理，在管理类中就不用区别，直接进行集合统一处理。\n\n![Result pic 1](/contentimg/33/6.png \"概率生成\")\n\n![Result pic 1](/contentimg/33/7.png \"处理生成函数\")\n\n\n　　循环每个位置，通过概率，判断是否生成。这里也可以使用其他方案：通过概率确定哪些位置生成。两种方案都可以。\n\n　　怪物生成函数比较讲究，避免冗余函数，结合设计模式思想抽离。切成3部分：\n\n1. 先清空全部怪物，即把全部都setactive为false。\n1. 处理怪物位置、怪物类型的函数。\n1. 生成怪物的实际函数。\n\n\n　　由于每个怪物模型的坐标位置影响，这里加入了纠偏坐标vector。每次激活怪物前，检查缓存中是否有同类型的尚未激活的，有就拿出来激活使用，没有才Instantiate生成。\n\n\n#### 枪控制\n\n　　旋转合理应该使用四元数，不过这里，由于只有2个轴的限制性旋转，普通的欧拉旋转就够了。使用四元数是为了防止3轴情况下的万向锁。\n\n##### 装弹时间\n\n　　直接+=Time.deltaTime，然后计时即可。能进if语句的，再判断是否执行发射，在成功进入发射语句中才将shootTimer置零。\n\n``` java\n    shootTimer += Time.deltaTime;\n    if (shootTimer >= shootTime)\n```\n\n##### 旋转 \n\n　　指绕某个轴进行旋转。这里是水平左右和垂直上下，左右即对应绕Y轴旋转；上下即对应绕X轴旋转。\n\n　　结合具体场景，现在是有鼠标的2D坐标，刚好对应2个值。\n\n共有3种方法。\n\n方法①: 按顺序绕轴旋转 （是个速度响应，用EasyTouch的时候才适合）\n\n``` java\n    //保存主相机正前方\n    Vector3 mcamera_fwd;\n    //相机前和右的叉积，得到垂直这两个轴的向上的Y\n    Vector3 mcamera_y;\n    //相机前和上的叉积，得到垂直这两个轴的向右的X\n    Vector3 mcamera_x;\n    mcamera_fwd = Camera.main.transform.forward;\n    ////归一化，然后再求叉积\n    //mcamera_fwd.Normalize();\n    //相机前和右的叉积，得到垂直这两个轴的向上的Y\n    mcamera_y = Vector3.Cross(mcamera_fwd, Vector3.right);\n    //相机前和上的叉积，得到垂直这两个轴的向右的X\n    mcamera_x = Vector3.Cross(mcamera_fwd, Vector3.up);\n    //旋转速度\n    transform.Rotate(mcamera_y, Input.GetAxis(\"Mouse X\"), Space.World);\n    transform.Rotate(mcamera_x, Input.GetAxis(\"Mouse Y\"), Space.World);\n```\n\n方法②：使用LookAt，注意Z轴坐标，是取相对主相机的点来转世界坐标。由于笼子位于z=0处，这里主相机和z=0的距离应该取反\n\n``` java\n    Vector3 mousePos = Camera.main.ScreenToWorldPoint(new Vector3(Input.mousePosition.x, Input.mousePosition.y, -Camera.main.transform.position.z));\n    transform.LookAt(new Vector3(mousePos.x, mousePos.y, 0));\n```\n\n\n方法③: 属性面板rotation赋值\n\n``` java\n    //通过旋转模型，得到范围： 竖直: ⬆-35 ~ ⬇+10 ， 水平: ⬅-30 ~ ➡+30\n    //根据鼠标在屏幕上的位置，按比例分配\n    //-30~+30\n    float xPosPrecent = (Input.mousePosition.x / Screen.width) * 60 - 30;\n    if (xPosPrecent > 30f) xPosPrecent = 30f;\n    else if (xPosPrecent < -30f) xPosPrecent = -30f;\n\n    //-35~+10 (鼠标坐标，以屏幕左上为原点0，但是计算中是以左下为0，所以要取反)\n    float yPosPrecent = (1- Input.mousePosition.y / Screen.height) * 45 - 35;\n    if (yPosPrecent > 10f) yPosPrecent = 10f;\n    else if (yPosPrecent < -35f) yPosPrecent = -35f;\n\t\n    transform.transform.rotation = Quaternion.Euler(new Vector3(yPosPrecent, xPosPrecent, 0));\n```\n\n#### 暂停\n\n>　　Time.timeScale = ispause ? 0 : 1;\n\n　　游戏暂停，关注的是物理动效的暂停，菜单栏等等其他那些应该是正常播放的。所以这里就使用Time.timeScale=0。该属性设置后，打出去的子弹position会停止位移，恢复1后能继续之前的速度移动。\n\n　　该属性影响了FixedUpdate，还有携程。但是不影响Update函数。\n\n　　所以控制怪物和枪的函数应该放在FixedUpdate。相反的，音效等等其他可以在游戏暂停住的时候正常运行的，才可以放在Update，这里也是开关背景音乐选择框能在游戏暂停的时候正常播放背景音乐的原因。\n\n　　注意这时候:\n\n> Time.deltaTime==0 => true\n\n　　所以得使用下面这个计时：\n\n> Time.unscaledDeltaTime\n\n#### 保存数据\n\n　　这里很简单，考虑全需要什么数据，定义成一个类，然后利用json转成字符串，保存起来。下次读取这个字符串来还原场景就行。\n\n　　这里暂只保存到缓存，利用PlayerPrefs来保存。其他保存到服务器端去存入数据库，或者本地文件等等方式都是类似的。就多一个工具类而已。\n\n　　难度在json的dll，牛顿json在webgl下会异常，所以只能手动拼内容，使用simplejson。\n\n![Result pic 1](/contentimg/33/12.png \"拼json\")\n\n\n\n### 压缩优化发布\n\n　　贴图压缩，降低分辨率，打图集，设置音频格式等等常规操作。\n\n#### 模型简单优化\n\n　　这里还有对模型的优化。导入的模型，实际上还带了很多没用上的属性，是可以取消掉的。例如一些没使用的动画效果。\n\n![Result pic 1](/contentimg/33/8.png \"门板模型\")\n\n\n　　优化选项：\n\n1. 模型在运行的时候是不会去修改的，所以Read/Write Enabled肯定不用选。\n1. mesh compression，按照实际需求，压缩的话得消耗cpu来解压，实际压缩不了多少。建议不压缩。\n1. UVs，按照需要进行斟酌。\n1. Normals，可以不导入。但是是在不需要场景光照映射情况下。有光照的时候普遍选导入。\n1. Tangents，得根据提示来设置，我导的模型提示没有，所以就设为None了。\n\n\n![Result pic 1](/contentimg/33/9.png \"提示信息\")\n\n\n#### Lightmapping\n\n　　在不要求实时灯光的游戏中，可以使用预烘焙。\n\n　　设置light的mode为Baked，然后到lighting面板设置。\n\n![Result pic 1](/contentimg/33/10.png \"Lightmapping设置\")\n\n\n　　根据实际情况设置质量。\n\n　　经过代码优化+设置优化，两者差距很大。下图是网络教程中的工程运行时的drawcall，与优化后的工程的比较。\n\n![Result pic 1](/contentimg/33/11.png \"性能比较\")\n\n\n　　其中压缩贴图效果最明显，然后就是Lightmapping。代码主要优化的是cpu，以及节省少部分的内存，当然也促进优化了drawcall。\n\n　　优化的重点：drawcall。降低贴图分辨率能极大优化该属性，然后加上代码方面的优化，又能降低。所以总体下来降了将近90%。\n\n\n工程项目源码： \n\n[HitGhost](https://github.com/YaojiaxinPC/hexoblog/tree/master/UnityDemo/HitGHOST) \n\n　　代码还有优化空间，应该抽一个局管理类出来。同时UImanager和gamemanager交叉比较多，可以进行拆分。当然还可以加入EasyTouch、计时、投币等等延伸。\n\n","slug":"33HitGhostDemo","published":1,"updated":"2018-11-06T05:05:44.265Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgrib004xjo9cokykielr","content":"<p>　　本文介绍网络教学视频的一款小游戏<a href=\"http://www.sikiedu.com/my/course/129\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">打怪物</a>  。   </p>\n<a id=\"more\"></a>\n<p><img src=\"/contentimg/33/1.png\" alt=\"Result pic 1\" title=\"Hit Ghost\"></p>\n<h2 id=\"游戏简介\"><a href=\"#游戏简介\" class=\"headerlink\" title=\"游戏简介\"></a>游戏简介</h2><p>　　该小游戏是3D类型，类似打地鼠。在3x3的笼子中会随机出现怪物，玩家通过枪，对这些怪物进行打击。</p>\n<h2 id=\"游戏体验\"><a href=\"#游戏体验\" class=\"headerlink\" title=\"游戏体验\"></a>游戏体验</h2><p>　　<a href=\"/unitydemo/5/index.html\">体验demo</a> ，请用Chrome或者手机浏览器打开。</p>\n<h2 id=\"游戏制作\"><a href=\"#游戏制作\" class=\"headerlink\" title=\"游戏制作\"></a>游戏制作</h2><p>　　该游戏需要导入几个怪物模型、枪模型，还有几个怪物贴图材质。</p>\n<h3 id=\"1-游戏规则细化\"><a href=\"#1-游戏规则细化\" class=\"headerlink\" title=\"1.游戏规则细化\"></a>1.游戏规则细化</h3><p>　　写代码前，需要先了解这个游戏怎么玩：</p>\n<p>　　类似打地鼠，在3x3的笼子随机出现怪物，每只怪物受到一点打击就会死亡，然后得1分。共4种怪物，每种怪物有4种颜色变形。在随机生成怪物的同时，给怪物赋值不同的外形颜色，让玩家产生这个怪物不是同一只的错觉。</p>\n<p>所以规划如下：</p>\n<ol>\n<li>3x3的布局，共9个格子会出现怪物。 </li>\n<li>共4种怪物，每种怪物都有不同的颜色外形，目前暂时都是4个颜色。</li>\n<li>枪固定在一个位置，通过左右和上下转动，来指向怪物。</li>\n<li>枪不能无间隔攻击，每次射击后，需要有装弹时间。</li>\n<li>定义类来记录怪物信息等参数。</li>\n</ol>\n<h3 id=\"2-代码\"><a href=\"#2-代码\" class=\"headerlink\" title=\"2.代码\"></a>2.代码</h3><p>　　网络教程班的代码不是很好，后面我重写了。应该要考虑设计模式思想来做才行。</p>\n<h4 id=\"怪物管理\"><a href=\"#怪物管理\" class=\"headerlink\" title=\"怪物管理\"></a>怪物管理</h4><p>　　怪物在这里，实际并不需要考虑外形，都是同一个“被打击一次就死亡”的个体设定，应该抽象成一层。由于这里实际只是换皮，所以连抽象都不用了。直接一个组件来处理。</p>\n<p><img src=\"/contentimg/33/2.png\" alt=\"Result pic 1\" title=\"怪物组件\"></p>\n<p><img src=\"/contentimg/33/3.png\" alt=\"Result pic 1\" title=\"怪物综合管理\"></p>\n<h5 id=\"换皮\"><a href=\"#换皮\" class=\"headerlink\" title=\"换皮\"></a>换皮</h5><p><img src=\"/contentimg/33/4.png\" alt=\"Result pic 1\" title=\"换皮代码\"></p>\n<p>　　换皮代码不复杂，通过查看模型，了解是更换材质而已。</p>\n<h5 id=\"随机生成\"><a href=\"#随机生成\" class=\"headerlink\" title=\"随机生成\"></a>随机生成</h5><p>　　由于怪物的死亡动画无法插入执行函数，所以只能在代码写携程，间隔0.8s后设置active为false。利用setactive这个特性，避免频繁生成和销毁。</p>\n<p><img src=\"/contentimg/33/5.png\" alt=\"Result pic 1\" title=\"设置集合\"></p>\n<p>　　各变量意义如下：</p>\n<ol>\n<li>由于不同怪物类型id不同，使用字典来保存该对象池。</li>\n<li>利用坐标集合positions，提取3x3的9个空间位置，这里也为了动态获取，当变成4x4、5x5时，代码不用改。</li>\n<li>enemyhold，归属怪物父类，方便查看而已。</li>\n<li>nowexits，用于记录保存怪物数据，记录当前场景中激活的怪物类型、位置、颜色等信息。</li>\n<li>enemys，怪物类型集合，怪物都在EnemyControl类中进行了异化处理，在管理类中就不用区别，直接进行集合统一处理。</li>\n</ol>\n<p><img src=\"/contentimg/33/6.png\" alt=\"Result pic 1\" title=\"概率生成\"></p>\n<p><img src=\"/contentimg/33/7.png\" alt=\"Result pic 1\" title=\"处理生成函数\"></p>\n<p>　　循环每个位置，通过概率，判断是否生成。这里也可以使用其他方案：通过概率确定哪些位置生成。两种方案都可以。</p>\n<p>　　怪物生成函数比较讲究，避免冗余函数，结合设计模式思想抽离。切成3部分：</p>\n<ol>\n<li>先清空全部怪物，即把全部都setactive为false。</li>\n<li>处理怪物位置、怪物类型的函数。</li>\n<li>生成怪物的实际函数。</li>\n</ol>\n<p>　　由于每个怪物模型的坐标位置影响，这里加入了纠偏坐标vector。每次激活怪物前，检查缓存中是否有同类型的尚未激活的，有就拿出来激活使用，没有才Instantiate生成。</p>\n<h4 id=\"枪控制\"><a href=\"#枪控制\" class=\"headerlink\" title=\"枪控制\"></a>枪控制</h4><p>　　旋转合理应该使用四元数，不过这里，由于只有2个轴的限制性旋转，普通的欧拉旋转就够了。使用四元数是为了防止3轴情况下的万向锁。</p>\n<h5 id=\"装弹时间\"><a href=\"#装弹时间\" class=\"headerlink\" title=\"装弹时间\"></a>装弹时间</h5><p>　　直接+=Time.deltaTime，然后计时即可。能进if语句的，再判断是否执行发射，在成功进入发射语句中才将shootTimer置零。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shootTimer += Time.deltaTime;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (shootTimer &gt;= shootTime)</span><br></pre></td></tr></table></figure>\n<h5 id=\"旋转\"><a href=\"#旋转\" class=\"headerlink\" title=\"旋转\"></a>旋转</h5><p>　　指绕某个轴进行旋转。这里是水平左右和垂直上下，左右即对应绕Y轴旋转；上下即对应绕X轴旋转。</p>\n<p>　　结合具体场景，现在是有鼠标的2D坐标，刚好对应2个值。</p>\n<p>共有3种方法。</p>\n<p>方法①: 按顺序绕轴旋转 （是个速度响应，用EasyTouch的时候才适合）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//保存主相机正前方</span></span><br><span class=\"line\">Vector3 mcamera_fwd;</span><br><span class=\"line\"><span class=\"comment\">//相机前和右的叉积，得到垂直这两个轴的向上的Y</span></span><br><span class=\"line\">Vector3 mcamera_y;</span><br><span class=\"line\"><span class=\"comment\">//相机前和上的叉积，得到垂直这两个轴的向右的X</span></span><br><span class=\"line\">Vector3 mcamera_x;</span><br><span class=\"line\">mcamera_fwd = Camera.main.transform.forward;</span><br><span class=\"line\"><span class=\"comment\">////归一化，然后再求叉积</span></span><br><span class=\"line\"><span class=\"comment\">//mcamera_fwd.Normalize();</span></span><br><span class=\"line\"><span class=\"comment\">//相机前和右的叉积，得到垂直这两个轴的向上的Y</span></span><br><span class=\"line\">mcamera_y = Vector3.Cross(mcamera_fwd, Vector3.right);</span><br><span class=\"line\"><span class=\"comment\">//相机前和上的叉积，得到垂直这两个轴的向右的X</span></span><br><span class=\"line\">mcamera_x = Vector3.Cross(mcamera_fwd, Vector3.up);</span><br><span class=\"line\"><span class=\"comment\">//旋转速度</span></span><br><span class=\"line\">transform.Rotate(mcamera_y, Input.GetAxis(<span class=\"string\">\"Mouse X\"</span>), Space.World);</span><br><span class=\"line\">transform.Rotate(mcamera_x, Input.GetAxis(<span class=\"string\">\"Mouse Y\"</span>), Space.World);</span><br></pre></td></tr></table></figure>\n<p>方法②：使用LookAt，注意Z轴坐标，是取相对主相机的点来转世界坐标。由于笼子位于z=0处，这里主相机和z=0的距离应该取反</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vector3 mousePos = Camera.main.ScreenToWorldPoint(<span class=\"keyword\">new</span> Vector3(Input.mousePosition.x, Input.mousePosition.y, -Camera.main.transform.position.z));</span><br><span class=\"line\">transform.LookAt(<span class=\"keyword\">new</span> Vector3(mousePos.x, mousePos.y, <span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n<p>方法③: 属性面板rotation赋值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//通过旋转模型，得到范围： 竖直: ⬆-35 ~ ⬇+10 ， 水平: ⬅-30 ~ ➡+30</span></span><br><span class=\"line\"><span class=\"comment\">//根据鼠标在屏幕上的位置，按比例分配</span></span><br><span class=\"line\"><span class=\"comment\">//-30~+30</span></span><br><span class=\"line\"><span class=\"keyword\">float</span> xPosPrecent = (Input.mousePosition.x / Screen.width) * <span class=\"number\">60</span> - <span class=\"number\">30</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (xPosPrecent &gt; <span class=\"number\">30f</span>) xPosPrecent = <span class=\"number\">30f</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (xPosPrecent &lt; -<span class=\"number\">30f</span>) xPosPrecent = -<span class=\"number\">30f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//-35~+10 (鼠标坐标，以屏幕左上为原点0，但是计算中是以左下为0，所以要取反)</span></span><br><span class=\"line\"><span class=\"keyword\">float</span> yPosPrecent = (<span class=\"number\">1</span>- Input.mousePosition.y / Screen.height) * <span class=\"number\">45</span> - <span class=\"number\">35</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (yPosPrecent &gt; <span class=\"number\">10f</span>) yPosPrecent = <span class=\"number\">10f</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (yPosPrecent &lt; -<span class=\"number\">35f</span>) yPosPrecent = -<span class=\"number\">35f</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">transform.transform.rotation = Quaternion.Euler(<span class=\"keyword\">new</span> Vector3(yPosPrecent, xPosPrecent, <span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n<h4 id=\"暂停\"><a href=\"#暂停\" class=\"headerlink\" title=\"暂停\"></a>暂停</h4><blockquote>\n<p>　　Time.timeScale = ispause ? 0 : 1;</p>\n</blockquote>\n<p>　　游戏暂停，关注的是物理动效的暂停，菜单栏等等其他那些应该是正常播放的。所以这里就使用Time.timeScale=0。该属性设置后，打出去的子弹position会停止位移，恢复1后能继续之前的速度移动。</p>\n<p>　　该属性影响了FixedUpdate，还有携程。但是不影响Update函数。</p>\n<p>　　所以控制怪物和枪的函数应该放在FixedUpdate。相反的，音效等等其他可以在游戏暂停住的时候正常运行的，才可以放在Update，这里也是开关背景音乐选择框能在游戏暂停的时候正常播放背景音乐的原因。</p>\n<p>　　注意这时候:</p>\n<blockquote>\n<p>Time.deltaTime==0 =&gt; true</p>\n</blockquote>\n<p>　　所以得使用下面这个计时：</p>\n<blockquote>\n<p>Time.unscaledDeltaTime</p>\n</blockquote>\n<h4 id=\"保存数据\"><a href=\"#保存数据\" class=\"headerlink\" title=\"保存数据\"></a>保存数据</h4><p>　　这里很简单，考虑全需要什么数据，定义成一个类，然后利用json转成字符串，保存起来。下次读取这个字符串来还原场景就行。</p>\n<p>　　这里暂只保存到缓存，利用PlayerPrefs来保存。其他保存到服务器端去存入数据库，或者本地文件等等方式都是类似的。就多一个工具类而已。</p>\n<p>　　难度在json的dll，牛顿json在webgl下会异常，所以只能手动拼内容，使用simplejson。</p>\n<p><img src=\"/contentimg/33/12.png\" alt=\"Result pic 1\" title=\"拼json\"></p>\n<h3 id=\"压缩优化发布\"><a href=\"#压缩优化发布\" class=\"headerlink\" title=\"压缩优化发布\"></a>压缩优化发布</h3><p>　　贴图压缩，降低分辨率，打图集，设置音频格式等等常规操作。</p>\n<h4 id=\"模型简单优化\"><a href=\"#模型简单优化\" class=\"headerlink\" title=\"模型简单优化\"></a>模型简单优化</h4><p>　　这里还有对模型的优化。导入的模型，实际上还带了很多没用上的属性，是可以取消掉的。例如一些没使用的动画效果。</p>\n<p><img src=\"/contentimg/33/8.png\" alt=\"Result pic 1\" title=\"门板模型\"></p>\n<p>　　优化选项：</p>\n<ol>\n<li>模型在运行的时候是不会去修改的，所以Read/Write Enabled肯定不用选。</li>\n<li>mesh compression，按照实际需求，压缩的话得消耗cpu来解压，实际压缩不了多少。建议不压缩。</li>\n<li>UVs，按照需要进行斟酌。</li>\n<li>Normals，可以不导入。但是是在不需要场景光照映射情况下。有光照的时候普遍选导入。</li>\n<li>Tangents，得根据提示来设置，我导的模型提示没有，所以就设为None了。</li>\n</ol>\n<p><img src=\"/contentimg/33/9.png\" alt=\"Result pic 1\" title=\"提示信息\"></p>\n<h4 id=\"Lightmapping\"><a href=\"#Lightmapping\" class=\"headerlink\" title=\"Lightmapping\"></a>Lightmapping</h4><p>　　在不要求实时灯光的游戏中，可以使用预烘焙。</p>\n<p>　　设置light的mode为Baked，然后到lighting面板设置。</p>\n<p><img src=\"/contentimg/33/10.png\" alt=\"Result pic 1\" title=\"Lightmapping设置\"></p>\n<p>　　根据实际情况设置质量。</p>\n<p>　　经过代码优化+设置优化，两者差距很大。下图是网络教程中的工程运行时的drawcall，与优化后的工程的比较。</p>\n<p><img src=\"/contentimg/33/11.png\" alt=\"Result pic 1\" title=\"性能比较\"></p>\n<p>　　其中压缩贴图效果最明显，然后就是Lightmapping。代码主要优化的是cpu，以及节省少部分的内存，当然也促进优化了drawcall。</p>\n<p>　　优化的重点：drawcall。降低贴图分辨率能极大优化该属性，然后加上代码方面的优化，又能降低。所以总体下来降了将近90%。</p>\n<p>工程项目源码： </p>\n<p><a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/UnityDemo/HitGHOST\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">HitGhost</a> </p>\n<p>　　代码还有优化空间，应该抽一个局管理类出来。同时UImanager和gamemanager交叉比较多，可以进行拆分。当然还可以加入EasyTouch、计时、投币等等延伸。</p>\n","site":{"data":{}},"excerpt":"<p>　　本文介绍网络教学视频的一款小游戏<a href=\"http://www.sikiedu.com/my/course/129\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">打怪物</a>  。   </p>","more":"<p><img src=\"/contentimg/33/1.png\" alt=\"Result pic 1\" title=\"Hit Ghost\"></p>\n<h2 id=\"游戏简介\"><a href=\"#游戏简介\" class=\"headerlink\" title=\"游戏简介\"></a>游戏简介</h2><p>　　该小游戏是3D类型，类似打地鼠。在3x3的笼子中会随机出现怪物，玩家通过枪，对这些怪物进行打击。</p>\n<h2 id=\"游戏体验\"><a href=\"#游戏体验\" class=\"headerlink\" title=\"游戏体验\"></a>游戏体验</h2><p>　　<a href=\"/unitydemo/5/index.html\">体验demo</a> ，请用Chrome或者手机浏览器打开。</p>\n<h2 id=\"游戏制作\"><a href=\"#游戏制作\" class=\"headerlink\" title=\"游戏制作\"></a>游戏制作</h2><p>　　该游戏需要导入几个怪物模型、枪模型，还有几个怪物贴图材质。</p>\n<h3 id=\"1-游戏规则细化\"><a href=\"#1-游戏规则细化\" class=\"headerlink\" title=\"1.游戏规则细化\"></a>1.游戏规则细化</h3><p>　　写代码前，需要先了解这个游戏怎么玩：</p>\n<p>　　类似打地鼠，在3x3的笼子随机出现怪物，每只怪物受到一点打击就会死亡，然后得1分。共4种怪物，每种怪物有4种颜色变形。在随机生成怪物的同时，给怪物赋值不同的外形颜色，让玩家产生这个怪物不是同一只的错觉。</p>\n<p>所以规划如下：</p>\n<ol>\n<li>3x3的布局，共9个格子会出现怪物。 </li>\n<li>共4种怪物，每种怪物都有不同的颜色外形，目前暂时都是4个颜色。</li>\n<li>枪固定在一个位置，通过左右和上下转动，来指向怪物。</li>\n<li>枪不能无间隔攻击，每次射击后，需要有装弹时间。</li>\n<li>定义类来记录怪物信息等参数。</li>\n</ol>\n<h3 id=\"2-代码\"><a href=\"#2-代码\" class=\"headerlink\" title=\"2.代码\"></a>2.代码</h3><p>　　网络教程班的代码不是很好，后面我重写了。应该要考虑设计模式思想来做才行。</p>\n<h4 id=\"怪物管理\"><a href=\"#怪物管理\" class=\"headerlink\" title=\"怪物管理\"></a>怪物管理</h4><p>　　怪物在这里，实际并不需要考虑外形，都是同一个“被打击一次就死亡”的个体设定，应该抽象成一层。由于这里实际只是换皮，所以连抽象都不用了。直接一个组件来处理。</p>\n<p><img src=\"/contentimg/33/2.png\" alt=\"Result pic 1\" title=\"怪物组件\"></p>\n<p><img src=\"/contentimg/33/3.png\" alt=\"Result pic 1\" title=\"怪物综合管理\"></p>\n<h5 id=\"换皮\"><a href=\"#换皮\" class=\"headerlink\" title=\"换皮\"></a>换皮</h5><p><img src=\"/contentimg/33/4.png\" alt=\"Result pic 1\" title=\"换皮代码\"></p>\n<p>　　换皮代码不复杂，通过查看模型，了解是更换材质而已。</p>\n<h5 id=\"随机生成\"><a href=\"#随机生成\" class=\"headerlink\" title=\"随机生成\"></a>随机生成</h5><p>　　由于怪物的死亡动画无法插入执行函数，所以只能在代码写携程，间隔0.8s后设置active为false。利用setactive这个特性，避免频繁生成和销毁。</p>\n<p><img src=\"/contentimg/33/5.png\" alt=\"Result pic 1\" title=\"设置集合\"></p>\n<p>　　各变量意义如下：</p>\n<ol>\n<li>由于不同怪物类型id不同，使用字典来保存该对象池。</li>\n<li>利用坐标集合positions，提取3x3的9个空间位置，这里也为了动态获取，当变成4x4、5x5时，代码不用改。</li>\n<li>enemyhold，归属怪物父类，方便查看而已。</li>\n<li>nowexits，用于记录保存怪物数据，记录当前场景中激活的怪物类型、位置、颜色等信息。</li>\n<li>enemys，怪物类型集合，怪物都在EnemyControl类中进行了异化处理，在管理类中就不用区别，直接进行集合统一处理。</li>\n</ol>\n<p><img src=\"/contentimg/33/6.png\" alt=\"Result pic 1\" title=\"概率生成\"></p>\n<p><img src=\"/contentimg/33/7.png\" alt=\"Result pic 1\" title=\"处理生成函数\"></p>\n<p>　　循环每个位置，通过概率，判断是否生成。这里也可以使用其他方案：通过概率确定哪些位置生成。两种方案都可以。</p>\n<p>　　怪物生成函数比较讲究，避免冗余函数，结合设计模式思想抽离。切成3部分：</p>\n<ol>\n<li>先清空全部怪物，即把全部都setactive为false。</li>\n<li>处理怪物位置、怪物类型的函数。</li>\n<li>生成怪物的实际函数。</li>\n</ol>\n<p>　　由于每个怪物模型的坐标位置影响，这里加入了纠偏坐标vector。每次激活怪物前，检查缓存中是否有同类型的尚未激活的，有就拿出来激活使用，没有才Instantiate生成。</p>\n<h4 id=\"枪控制\"><a href=\"#枪控制\" class=\"headerlink\" title=\"枪控制\"></a>枪控制</h4><p>　　旋转合理应该使用四元数，不过这里，由于只有2个轴的限制性旋转，普通的欧拉旋转就够了。使用四元数是为了防止3轴情况下的万向锁。</p>\n<h5 id=\"装弹时间\"><a href=\"#装弹时间\" class=\"headerlink\" title=\"装弹时间\"></a>装弹时间</h5><p>　　直接+=Time.deltaTime，然后计时即可。能进if语句的，再判断是否执行发射，在成功进入发射语句中才将shootTimer置零。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shootTimer += Time.deltaTime;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (shootTimer &gt;= shootTime)</span><br></pre></td></tr></table></figure>\n<h5 id=\"旋转\"><a href=\"#旋转\" class=\"headerlink\" title=\"旋转\"></a>旋转</h5><p>　　指绕某个轴进行旋转。这里是水平左右和垂直上下，左右即对应绕Y轴旋转；上下即对应绕X轴旋转。</p>\n<p>　　结合具体场景，现在是有鼠标的2D坐标，刚好对应2个值。</p>\n<p>共有3种方法。</p>\n<p>方法①: 按顺序绕轴旋转 （是个速度响应，用EasyTouch的时候才适合）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//保存主相机正前方</span></span><br><span class=\"line\">Vector3 mcamera_fwd;</span><br><span class=\"line\"><span class=\"comment\">//相机前和右的叉积，得到垂直这两个轴的向上的Y</span></span><br><span class=\"line\">Vector3 mcamera_y;</span><br><span class=\"line\"><span class=\"comment\">//相机前和上的叉积，得到垂直这两个轴的向右的X</span></span><br><span class=\"line\">Vector3 mcamera_x;</span><br><span class=\"line\">mcamera_fwd = Camera.main.transform.forward;</span><br><span class=\"line\"><span class=\"comment\">////归一化，然后再求叉积</span></span><br><span class=\"line\"><span class=\"comment\">//mcamera_fwd.Normalize();</span></span><br><span class=\"line\"><span class=\"comment\">//相机前和右的叉积，得到垂直这两个轴的向上的Y</span></span><br><span class=\"line\">mcamera_y = Vector3.Cross(mcamera_fwd, Vector3.right);</span><br><span class=\"line\"><span class=\"comment\">//相机前和上的叉积，得到垂直这两个轴的向右的X</span></span><br><span class=\"line\">mcamera_x = Vector3.Cross(mcamera_fwd, Vector3.up);</span><br><span class=\"line\"><span class=\"comment\">//旋转速度</span></span><br><span class=\"line\">transform.Rotate(mcamera_y, Input.GetAxis(<span class=\"string\">\"Mouse X\"</span>), Space.World);</span><br><span class=\"line\">transform.Rotate(mcamera_x, Input.GetAxis(<span class=\"string\">\"Mouse Y\"</span>), Space.World);</span><br></pre></td></tr></table></figure>\n<p>方法②：使用LookAt，注意Z轴坐标，是取相对主相机的点来转世界坐标。由于笼子位于z=0处，这里主相机和z=0的距离应该取反</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vector3 mousePos = Camera.main.ScreenToWorldPoint(<span class=\"keyword\">new</span> Vector3(Input.mousePosition.x, Input.mousePosition.y, -Camera.main.transform.position.z));</span><br><span class=\"line\">transform.LookAt(<span class=\"keyword\">new</span> Vector3(mousePos.x, mousePos.y, <span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n<p>方法③: 属性面板rotation赋值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//通过旋转模型，得到范围： 竖直: ⬆-35 ~ ⬇+10 ， 水平: ⬅-30 ~ ➡+30</span></span><br><span class=\"line\"><span class=\"comment\">//根据鼠标在屏幕上的位置，按比例分配</span></span><br><span class=\"line\"><span class=\"comment\">//-30~+30</span></span><br><span class=\"line\"><span class=\"keyword\">float</span> xPosPrecent = (Input.mousePosition.x / Screen.width) * <span class=\"number\">60</span> - <span class=\"number\">30</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (xPosPrecent &gt; <span class=\"number\">30f</span>) xPosPrecent = <span class=\"number\">30f</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (xPosPrecent &lt; -<span class=\"number\">30f</span>) xPosPrecent = -<span class=\"number\">30f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//-35~+10 (鼠标坐标，以屏幕左上为原点0，但是计算中是以左下为0，所以要取反)</span></span><br><span class=\"line\"><span class=\"keyword\">float</span> yPosPrecent = (<span class=\"number\">1</span>- Input.mousePosition.y / Screen.height) * <span class=\"number\">45</span> - <span class=\"number\">35</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (yPosPrecent &gt; <span class=\"number\">10f</span>) yPosPrecent = <span class=\"number\">10f</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (yPosPrecent &lt; -<span class=\"number\">35f</span>) yPosPrecent = -<span class=\"number\">35f</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">transform.transform.rotation = Quaternion.Euler(<span class=\"keyword\">new</span> Vector3(yPosPrecent, xPosPrecent, <span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n<h4 id=\"暂停\"><a href=\"#暂停\" class=\"headerlink\" title=\"暂停\"></a>暂停</h4><blockquote>\n<p>　　Time.timeScale = ispause ? 0 : 1;</p>\n</blockquote>\n<p>　　游戏暂停，关注的是物理动效的暂停，菜单栏等等其他那些应该是正常播放的。所以这里就使用Time.timeScale=0。该属性设置后，打出去的子弹position会停止位移，恢复1后能继续之前的速度移动。</p>\n<p>　　该属性影响了FixedUpdate，还有携程。但是不影响Update函数。</p>\n<p>　　所以控制怪物和枪的函数应该放在FixedUpdate。相反的，音效等等其他可以在游戏暂停住的时候正常运行的，才可以放在Update，这里也是开关背景音乐选择框能在游戏暂停的时候正常播放背景音乐的原因。</p>\n<p>　　注意这时候:</p>\n<blockquote>\n<p>Time.deltaTime==0 =&gt; true</p>\n</blockquote>\n<p>　　所以得使用下面这个计时：</p>\n<blockquote>\n<p>Time.unscaledDeltaTime</p>\n</blockquote>\n<h4 id=\"保存数据\"><a href=\"#保存数据\" class=\"headerlink\" title=\"保存数据\"></a>保存数据</h4><p>　　这里很简单，考虑全需要什么数据，定义成一个类，然后利用json转成字符串，保存起来。下次读取这个字符串来还原场景就行。</p>\n<p>　　这里暂只保存到缓存，利用PlayerPrefs来保存。其他保存到服务器端去存入数据库，或者本地文件等等方式都是类似的。就多一个工具类而已。</p>\n<p>　　难度在json的dll，牛顿json在webgl下会异常，所以只能手动拼内容，使用simplejson。</p>\n<p><img src=\"/contentimg/33/12.png\" alt=\"Result pic 1\" title=\"拼json\"></p>\n<h3 id=\"压缩优化发布\"><a href=\"#压缩优化发布\" class=\"headerlink\" title=\"压缩优化发布\"></a>压缩优化发布</h3><p>　　贴图压缩，降低分辨率，打图集，设置音频格式等等常规操作。</p>\n<h4 id=\"模型简单优化\"><a href=\"#模型简单优化\" class=\"headerlink\" title=\"模型简单优化\"></a>模型简单优化</h4><p>　　这里还有对模型的优化。导入的模型，实际上还带了很多没用上的属性，是可以取消掉的。例如一些没使用的动画效果。</p>\n<p><img src=\"/contentimg/33/8.png\" alt=\"Result pic 1\" title=\"门板模型\"></p>\n<p>　　优化选项：</p>\n<ol>\n<li>模型在运行的时候是不会去修改的，所以Read/Write Enabled肯定不用选。</li>\n<li>mesh compression，按照实际需求，压缩的话得消耗cpu来解压，实际压缩不了多少。建议不压缩。</li>\n<li>UVs，按照需要进行斟酌。</li>\n<li>Normals，可以不导入。但是是在不需要场景光照映射情况下。有光照的时候普遍选导入。</li>\n<li>Tangents，得根据提示来设置，我导的模型提示没有，所以就设为None了。</li>\n</ol>\n<p><img src=\"/contentimg/33/9.png\" alt=\"Result pic 1\" title=\"提示信息\"></p>\n<h4 id=\"Lightmapping\"><a href=\"#Lightmapping\" class=\"headerlink\" title=\"Lightmapping\"></a>Lightmapping</h4><p>　　在不要求实时灯光的游戏中，可以使用预烘焙。</p>\n<p>　　设置light的mode为Baked，然后到lighting面板设置。</p>\n<p><img src=\"/contentimg/33/10.png\" alt=\"Result pic 1\" title=\"Lightmapping设置\"></p>\n<p>　　根据实际情况设置质量。</p>\n<p>　　经过代码优化+设置优化，两者差距很大。下图是网络教程中的工程运行时的drawcall，与优化后的工程的比较。</p>\n<p><img src=\"/contentimg/33/11.png\" alt=\"Result pic 1\" title=\"性能比较\"></p>\n<p>　　其中压缩贴图效果最明显，然后就是Lightmapping。代码主要优化的是cpu，以及节省少部分的内存，当然也促进优化了drawcall。</p>\n<p>　　优化的重点：drawcall。降低贴图分辨率能极大优化该属性，然后加上代码方面的优化，又能降低。所以总体下来降了将近90%。</p>\n<p>工程项目源码： </p>\n<p><a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/UnityDemo/HitGHOST\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">HitGhost</a> </p>\n<p>　　代码还有优化空间，应该抽一个局管理类出来。同时UImanager和gamemanager交叉比较多，可以进行拆分。当然还可以加入EasyTouch、计时、投币等等延伸。</p>"},{"title":"AssetBundle打包记录-简单使用","date":"2018-11-05T00:04:59.000Z","_content":"\n　　该题目将分几个部分来详细解读。本篇为初级接触篇，简单记录如何ab打包，以及如何获取ab包。\n\n<!-- more -->\n\n　　ab打包，几乎能把全部东西都打包。打包后，可以通过脚本到服务器获取，实现了程序分离动态获取功能。\n\n　　官网[AssetBundles](https://docs.unity3d.com/Manual/AssetBundlesIntro.html)  翻译：\n\n\n>　　AssetBundle是可以在运行时加载的包含特定于平台的档案文件的资产（模型，纹理，预制，音频剪辑，甚至整个场景）。AssetBundles可以表达彼此之间的依赖关系; 例如，AssetBundle A中的材料可以引用AssetBundle B中的纹理。为了通过网络进行有效交付，可以根据用例要求（LZMA和LZ4）使用内置算法选择压缩AssetBundle。\n>　　AssetBundles可用于可下载内容（DLC），减少初始安装大小，加载针对最终用户平台优化的资产，以及减少运行时内存压力。\n\n　　这里有篇[博文](https://www.cnblogs.com/lancidie/p/5878789.html)  还不错。博文中讲得比较详细，下面我就不重复了，就按照使用过程简单记录。\n\n　　目前开发环境是unity2018.2+Hexo（做web服务端）。如果没有弄hexo，可以搞其他web服务端，简单的window自带的IIS，或者安装wordpress，这个window也有，不过得安装部署。\n\n## ab包意义\n\n　　当程序使用ab包技术后，就能动态去服务器获取组件，这样保证了每次使用都是最新的，而且不用强制更新本地软件。这对用户来说很方便，避免了频繁的软件更新提示。当然，实质是后台自动动态更新。\n\n　　第二重要的是，利用动态获取这个特性，可以在程序中根据硬件设备的情况，请求高质量的材质，或者是低质量的材质！也就是说，同一个程序，在低配置的环境下就跑低配版，在高配置环境下就跑高配！\n\n　　现在ab包主要用于更新，添加节日活动等等小更新，以及热更新等等。具体使用情况得根据需求来安排。\n\n## AssetBundles-Browser\n\n　　ab打包，搜索上有很多的教程，很多教写代码的。不过本文不教写这个代码，因为Unity官方已经提供了[AssetBundles-Browser](https://github.com/Unity-Technologies/AssetBundles-Browser)  工具，就没必要自己花多余的时间来处理，而且写出来的东西还没人家的好用。\n\n　　abBrowser工具，使用很方便。从github下载后，把Edit文件夹拖动工程目录下。\n\n![Result pic 1](/contentimg/32/1.png \"工具启动位置\")\n\n\n　　该工具有三个界面：\n\n1. 可以查看当前目录全部标志打包的材料，及其分类标志\n1. 打包编译设置\n1. 导入ab包，查看该包详情\n\n　　具体界面如下：\n\n![Result pic 1](/contentimg/32/2.png \"Configure\")\n\n![Result pic 1](/contentimg/32/3.png \"Build\")\n\n![Result pic 1](/contentimg/32/4.png \"Inspect\")\n\n\n## 打包标志\n\n![Result pic 1](/contentimg/32/5.png \"打包标志\")\n\n\n　　打包操作很方便，只需选中材料后，在Inspector面板底部，在上图位置处进行设置分类即可。\n\n　　难的地方是分类。素材间有依赖关系，不好的分类方式，会造成重复打包，冗余打包。该题目等后面分博文详细介绍，本文暂时不提。\n\n　　在上图中，“AssetBundle”之后，第一个是打包分类目录，第二个是后缀。注意这里没有删除选择，如果分类打错字了，只能重新建分类，然后“Remove Unused Names”。\n\n## 包详情\n\n![Result pic 1](/contentimg/32/6.png \"编译出来的包\")　\n\n\n　　可以看到，目录下，同名字下会有个后缀为“.manifest”的文本文件，打开后看到是记录依赖关系、版本和hash信息等。\n\n![Result pic 1](/contentimg/32/7.png \"manifest文件\")　\n\n\n　　目前我发现：只有主manifest文件是可以通过代码获取的，其他后缀为manifest的文件，只是让我们手动打开看而已，还没找到能获取打开这些文件的api。\n\n## 代码获取ab包\n\n　　目前我使用2018，api是\n\n> UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(uri)\n\n　　步骤是设置该url指向某个具体的文件，然后用该api下载，再\n\n> AssetBundle bundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(request)\n\n　　然后就能通过budle获取需要的gameobject了。\n\n``` java\n    IEnumerator Start()\n    {\n        string uri = \"http://localhost:4000/unitydemo/5/WebGL/\" + \"clip\";\n\n        UnityEngine.Networking.UnityWebRequest request = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(uri);\n        yield return request.SendWebRequest();\n        AssetBundle bundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(request);\n    \n        fire_audioclip = bundle.LoadAsset<AudioClip>(\"fire.mp3\");\n        fire_audioclip.LoadAudioData();\n\n        while (fire_audioclip.loadState == AudioDataLoadState.Loading)\n        {\n            yield return null;\n        }\n\n        bundle.Unload(false);        \n        request.Dispose();\n    }\n```\n\n　　注意该过程涉及网络，需要携程处理，不然会阻塞线程。或者是写成异步asyn。\n\n　　上面的步骤是获取没有依赖关系的，实际使用中，很多都是有依赖关系的，所以得获取到manifest文件，了解到依赖关系，然后对应下载材料，再生成，才不会材质丢失。\n\n　　这里目前我只找到获取主manifest。\n\n``` java\n    string urlpath = \"http://localhost:4000/unitydemo/5/WebGL/\";\n    string uri = urlpath + \"StandaloneWindows\";\n    string aimitem = \"prefabs\";\n    UnityEngine.Networking.UnityWebRequest request = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(uri);\n    yield return request.SendWebRequest();\n    AssetBundle bundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(request);\n\n    AssetBundleManifest assetBundleManifest = bundle.LoadAsset<AssetBundleManifest>(\"AssetBundleManifest\");\n    foreach (var item in assetBundleManifest.GetAllAssetBundles())\n    {\n        if (item.Equals(aimitem))\n        {\n            foreach (var iitem in assetBundleManifest.GetAllDependencies(item))\n            {\n                UnityEngine.Networking.UnityWebRequest irequest = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(urlpath + iitem);\n                yield return irequest.SendWebRequest();\n                AssetBundle ibundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(irequest);\n                ibundle.LoadAllAssets();\n                irequest.Dispose();\n            }\n        }\n    }\n\n    UnityEngine.Networking.UnityWebRequest prequest = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(urlpath + aimitem);\n    yield return prequest.SendWebRequest();\n    AssetBundle pbundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(prequest);\n```\n\n　　首先获取主manifest，然后通过bundle.LoadAsset<AssetBundleManifest>(\"AssetBundleManifest\")获取具体信息。注意这里“AssetBundleManifest”是固定的。\n\n![Result pic 1](/contentimg/32/8.png \"主manifest文件\")　\n\n\n　　这个主manifest文件名不固定，但是获取到文件后实例化时使用的\"AssetBundleManifest\"是固定的。然后读取全部信息，最好存起来到字典里面。然后获取每个子包的依赖关系\n\n> assetBundleManifest.GetAllDependencies(item)\n\n　　注意前面get ab包，只是get到一个文本文件，现在获取这些依赖关系等等信息，也只是string字符串信息，真要使用，是得去下载才能获取使用的。\n\n## 注意事项\n\n### 包成功下载，但是提示格式不支持\n\n> Error: Cannot create FMOD::Sound instance for resource archive:/CAB-4d655a7adf68a182da7b13b4a9413d95/CAB-4d655a7adf68a182da7b13b4a9413d95.resource, (Unsupported file or audio format. )\n\n　　我工程设置为webgl，然后想在电脑上本机调试，用vs附加打断点，结果一直报“找不到资源”/“格式不支持”。打断点进去，包是下载下来了的，大小等等信息也对。后面才意识到，是打包时选择的目标环境影响导致！我用本地调试，就应该归属在window下，而不是看工程设置。修改打包为window平台后，就成功加载文件了。\n\n### webgl慎用ab包\n\n　　本地模式下，能把内存极大压缩（像设置音频为stream模式），但是使用ab包方式，虽然让初次下载包变小了，但是load时候极耗内存，而且加载成功进入后，也是在内存上，导致内存反而变大了。\n\n　　这里我尝试把音频文件打包出去，结果2.9m的文件，打包出来是5m？load下来到内存直接32m？原先stream模式才200k全部。\n\n　　也应该是我技术不到位，操作不当导致。\n\n\n\n\n\n","source":"_posts/32AssetBundle_1.md","raw":"---\ntitle: AssetBundle打包记录-简单使用\ndate: 2018-11-05 08:04:59\ncategories:\n  - Unity3D\ntags:\n  - 游戏开发\n  - 游戏优化\n  - 入门级\n  - 工具使用\n---\n\n　　该题目将分几个部分来详细解读。本篇为初级接触篇，简单记录如何ab打包，以及如何获取ab包。\n\n<!-- more -->\n\n　　ab打包，几乎能把全部东西都打包。打包后，可以通过脚本到服务器获取，实现了程序分离动态获取功能。\n\n　　官网[AssetBundles](https://docs.unity3d.com/Manual/AssetBundlesIntro.html)  翻译：\n\n\n>　　AssetBundle是可以在运行时加载的包含特定于平台的档案文件的资产（模型，纹理，预制，音频剪辑，甚至整个场景）。AssetBundles可以表达彼此之间的依赖关系; 例如，AssetBundle A中的材料可以引用AssetBundle B中的纹理。为了通过网络进行有效交付，可以根据用例要求（LZMA和LZ4）使用内置算法选择压缩AssetBundle。\n>　　AssetBundles可用于可下载内容（DLC），减少初始安装大小，加载针对最终用户平台优化的资产，以及减少运行时内存压力。\n\n　　这里有篇[博文](https://www.cnblogs.com/lancidie/p/5878789.html)  还不错。博文中讲得比较详细，下面我就不重复了，就按照使用过程简单记录。\n\n　　目前开发环境是unity2018.2+Hexo（做web服务端）。如果没有弄hexo，可以搞其他web服务端，简单的window自带的IIS，或者安装wordpress，这个window也有，不过得安装部署。\n\n## ab包意义\n\n　　当程序使用ab包技术后，就能动态去服务器获取组件，这样保证了每次使用都是最新的，而且不用强制更新本地软件。这对用户来说很方便，避免了频繁的软件更新提示。当然，实质是后台自动动态更新。\n\n　　第二重要的是，利用动态获取这个特性，可以在程序中根据硬件设备的情况，请求高质量的材质，或者是低质量的材质！也就是说，同一个程序，在低配置的环境下就跑低配版，在高配置环境下就跑高配！\n\n　　现在ab包主要用于更新，添加节日活动等等小更新，以及热更新等等。具体使用情况得根据需求来安排。\n\n## AssetBundles-Browser\n\n　　ab打包，搜索上有很多的教程，很多教写代码的。不过本文不教写这个代码，因为Unity官方已经提供了[AssetBundles-Browser](https://github.com/Unity-Technologies/AssetBundles-Browser)  工具，就没必要自己花多余的时间来处理，而且写出来的东西还没人家的好用。\n\n　　abBrowser工具，使用很方便。从github下载后，把Edit文件夹拖动工程目录下。\n\n![Result pic 1](/contentimg/32/1.png \"工具启动位置\")\n\n\n　　该工具有三个界面：\n\n1. 可以查看当前目录全部标志打包的材料，及其分类标志\n1. 打包编译设置\n1. 导入ab包，查看该包详情\n\n　　具体界面如下：\n\n![Result pic 1](/contentimg/32/2.png \"Configure\")\n\n![Result pic 1](/contentimg/32/3.png \"Build\")\n\n![Result pic 1](/contentimg/32/4.png \"Inspect\")\n\n\n## 打包标志\n\n![Result pic 1](/contentimg/32/5.png \"打包标志\")\n\n\n　　打包操作很方便，只需选中材料后，在Inspector面板底部，在上图位置处进行设置分类即可。\n\n　　难的地方是分类。素材间有依赖关系，不好的分类方式，会造成重复打包，冗余打包。该题目等后面分博文详细介绍，本文暂时不提。\n\n　　在上图中，“AssetBundle”之后，第一个是打包分类目录，第二个是后缀。注意这里没有删除选择，如果分类打错字了，只能重新建分类，然后“Remove Unused Names”。\n\n## 包详情\n\n![Result pic 1](/contentimg/32/6.png \"编译出来的包\")　\n\n\n　　可以看到，目录下，同名字下会有个后缀为“.manifest”的文本文件，打开后看到是记录依赖关系、版本和hash信息等。\n\n![Result pic 1](/contentimg/32/7.png \"manifest文件\")　\n\n\n　　目前我发现：只有主manifest文件是可以通过代码获取的，其他后缀为manifest的文件，只是让我们手动打开看而已，还没找到能获取打开这些文件的api。\n\n## 代码获取ab包\n\n　　目前我使用2018，api是\n\n> UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(uri)\n\n　　步骤是设置该url指向某个具体的文件，然后用该api下载，再\n\n> AssetBundle bundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(request)\n\n　　然后就能通过budle获取需要的gameobject了。\n\n``` java\n    IEnumerator Start()\n    {\n        string uri = \"http://localhost:4000/unitydemo/5/WebGL/\" + \"clip\";\n\n        UnityEngine.Networking.UnityWebRequest request = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(uri);\n        yield return request.SendWebRequest();\n        AssetBundle bundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(request);\n    \n        fire_audioclip = bundle.LoadAsset<AudioClip>(\"fire.mp3\");\n        fire_audioclip.LoadAudioData();\n\n        while (fire_audioclip.loadState == AudioDataLoadState.Loading)\n        {\n            yield return null;\n        }\n\n        bundle.Unload(false);        \n        request.Dispose();\n    }\n```\n\n　　注意该过程涉及网络，需要携程处理，不然会阻塞线程。或者是写成异步asyn。\n\n　　上面的步骤是获取没有依赖关系的，实际使用中，很多都是有依赖关系的，所以得获取到manifest文件，了解到依赖关系，然后对应下载材料，再生成，才不会材质丢失。\n\n　　这里目前我只找到获取主manifest。\n\n``` java\n    string urlpath = \"http://localhost:4000/unitydemo/5/WebGL/\";\n    string uri = urlpath + \"StandaloneWindows\";\n    string aimitem = \"prefabs\";\n    UnityEngine.Networking.UnityWebRequest request = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(uri);\n    yield return request.SendWebRequest();\n    AssetBundle bundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(request);\n\n    AssetBundleManifest assetBundleManifest = bundle.LoadAsset<AssetBundleManifest>(\"AssetBundleManifest\");\n    foreach (var item in assetBundleManifest.GetAllAssetBundles())\n    {\n        if (item.Equals(aimitem))\n        {\n            foreach (var iitem in assetBundleManifest.GetAllDependencies(item))\n            {\n                UnityEngine.Networking.UnityWebRequest irequest = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(urlpath + iitem);\n                yield return irequest.SendWebRequest();\n                AssetBundle ibundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(irequest);\n                ibundle.LoadAllAssets();\n                irequest.Dispose();\n            }\n        }\n    }\n\n    UnityEngine.Networking.UnityWebRequest prequest = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(urlpath + aimitem);\n    yield return prequest.SendWebRequest();\n    AssetBundle pbundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(prequest);\n```\n\n　　首先获取主manifest，然后通过bundle.LoadAsset<AssetBundleManifest>(\"AssetBundleManifest\")获取具体信息。注意这里“AssetBundleManifest”是固定的。\n\n![Result pic 1](/contentimg/32/8.png \"主manifest文件\")　\n\n\n　　这个主manifest文件名不固定，但是获取到文件后实例化时使用的\"AssetBundleManifest\"是固定的。然后读取全部信息，最好存起来到字典里面。然后获取每个子包的依赖关系\n\n> assetBundleManifest.GetAllDependencies(item)\n\n　　注意前面get ab包，只是get到一个文本文件，现在获取这些依赖关系等等信息，也只是string字符串信息，真要使用，是得去下载才能获取使用的。\n\n## 注意事项\n\n### 包成功下载，但是提示格式不支持\n\n> Error: Cannot create FMOD::Sound instance for resource archive:/CAB-4d655a7adf68a182da7b13b4a9413d95/CAB-4d655a7adf68a182da7b13b4a9413d95.resource, (Unsupported file or audio format. )\n\n　　我工程设置为webgl，然后想在电脑上本机调试，用vs附加打断点，结果一直报“找不到资源”/“格式不支持”。打断点进去，包是下载下来了的，大小等等信息也对。后面才意识到，是打包时选择的目标环境影响导致！我用本地调试，就应该归属在window下，而不是看工程设置。修改打包为window平台后，就成功加载文件了。\n\n### webgl慎用ab包\n\n　　本地模式下，能把内存极大压缩（像设置音频为stream模式），但是使用ab包方式，虽然让初次下载包变小了，但是load时候极耗内存，而且加载成功进入后，也是在内存上，导致内存反而变大了。\n\n　　这里我尝试把音频文件打包出去，结果2.9m的文件，打包出来是5m？load下来到内存直接32m？原先stream模式才200k全部。\n\n　　也应该是我技术不到位，操作不当导致。\n\n\n\n\n\n","slug":"32AssetBundle_1","published":1,"updated":"2018-11-05T02:26:19.585Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgric004yjo9c7das4lvk","content":"<p>　　该题目将分几个部分来详细解读。本篇为初级接触篇，简单记录如何ab打包，以及如何获取ab包。</p>\n<a id=\"more\"></a>\n<p>　　ab打包，几乎能把全部东西都打包。打包后，可以通过脚本到服务器获取，实现了程序分离动态获取功能。</p>\n<p>　　官网<a href=\"https://docs.unity3d.com/Manual/AssetBundlesIntro.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">AssetBundles</a>  翻译：</p>\n<blockquote>\n<p>　　AssetBundle是可以在运行时加载的包含特定于平台的档案文件的资产（模型，纹理，预制，音频剪辑，甚至整个场景）。AssetBundles可以表达彼此之间的依赖关系; 例如，AssetBundle A中的材料可以引用AssetBundle B中的纹理。为了通过网络进行有效交付，可以根据用例要求（LZMA和LZ4）使用内置算法选择压缩AssetBundle。<br>　　AssetBundles可用于可下载内容（DLC），减少初始安装大小，加载针对最终用户平台优化的资产，以及减少运行时内存压力。</p>\n</blockquote>\n<p>　　这里有篇<a href=\"https://www.cnblogs.com/lancidie/p/5878789.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">博文</a>  还不错。博文中讲得比较详细，下面我就不重复了，就按照使用过程简单记录。</p>\n<p>　　目前开发环境是unity2018.2+Hexo（做web服务端）。如果没有弄hexo，可以搞其他web服务端，简单的window自带的IIS，或者安装wordpress，这个window也有，不过得安装部署。</p>\n<h2 id=\"ab包意义\"><a href=\"#ab包意义\" class=\"headerlink\" title=\"ab包意义\"></a>ab包意义</h2><p>　　当程序使用ab包技术后，就能动态去服务器获取组件，这样保证了每次使用都是最新的，而且不用强制更新本地软件。这对用户来说很方便，避免了频繁的软件更新提示。当然，实质是后台自动动态更新。</p>\n<p>　　第二重要的是，利用动态获取这个特性，可以在程序中根据硬件设备的情况，请求高质量的材质，或者是低质量的材质！也就是说，同一个程序，在低配置的环境下就跑低配版，在高配置环境下就跑高配！</p>\n<p>　　现在ab包主要用于更新，添加节日活动等等小更新，以及热更新等等。具体使用情况得根据需求来安排。</p>\n<h2 id=\"AssetBundles-Browser\"><a href=\"#AssetBundles-Browser\" class=\"headerlink\" title=\"AssetBundles-Browser\"></a>AssetBundles-Browser</h2><p>　　ab打包，搜索上有很多的教程，很多教写代码的。不过本文不教写这个代码，因为Unity官方已经提供了<a href=\"https://github.com/Unity-Technologies/AssetBundles-Browser\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">AssetBundles-Browser</a>  工具，就没必要自己花多余的时间来处理，而且写出来的东西还没人家的好用。</p>\n<p>　　abBrowser工具，使用很方便。从github下载后，把Edit文件夹拖动工程目录下。</p>\n<p><img src=\"/contentimg/32/1.png\" alt=\"Result pic 1\" title=\"工具启动位置\"></p>\n<p>　　该工具有三个界面：</p>\n<ol>\n<li>可以查看当前目录全部标志打包的材料，及其分类标志</li>\n<li>打包编译设置</li>\n<li>导入ab包，查看该包详情</li>\n</ol>\n<p>　　具体界面如下：</p>\n<p><img src=\"/contentimg/32/2.png\" alt=\"Result pic 1\" title=\"Configure\"></p>\n<p><img src=\"/contentimg/32/3.png\" alt=\"Result pic 1\" title=\"Build\"></p>\n<p><img src=\"/contentimg/32/4.png\" alt=\"Result pic 1\" title=\"Inspect\"></p>\n<h2 id=\"打包标志\"><a href=\"#打包标志\" class=\"headerlink\" title=\"打包标志\"></a>打包标志</h2><p><img src=\"/contentimg/32/5.png\" alt=\"Result pic 1\" title=\"打包标志\"></p>\n<p>　　打包操作很方便，只需选中材料后，在Inspector面板底部，在上图位置处进行设置分类即可。</p>\n<p>　　难的地方是分类。素材间有依赖关系，不好的分类方式，会造成重复打包，冗余打包。该题目等后面分博文详细介绍，本文暂时不提。</p>\n<p>　　在上图中，“AssetBundle”之后，第一个是打包分类目录，第二个是后缀。注意这里没有删除选择，如果分类打错字了，只能重新建分类，然后“Remove Unused Names”。</p>\n<h2 id=\"包详情\"><a href=\"#包详情\" class=\"headerlink\" title=\"包详情\"></a>包详情</h2><p><img src=\"/contentimg/32/6.png\" alt=\"Result pic 1\" title=\"编译出来的包\">　</p>\n<p>　　可以看到，目录下，同名字下会有个后缀为“.manifest”的文本文件，打开后看到是记录依赖关系、版本和hash信息等。</p>\n<p><img src=\"/contentimg/32/7.png\" alt=\"Result pic 1\" title=\"manifest文件\">　</p>\n<p>　　目前我发现：只有主manifest文件是可以通过代码获取的，其他后缀为manifest的文件，只是让我们手动打开看而已，还没找到能获取打开这些文件的api。</p>\n<h2 id=\"代码获取ab包\"><a href=\"#代码获取ab包\" class=\"headerlink\" title=\"代码获取ab包\"></a>代码获取ab包</h2><p>　　目前我使用2018，api是</p>\n<blockquote>\n<p>UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(uri)</p>\n</blockquote>\n<p>　　步骤是设置该url指向某个具体的文件，然后用该api下载，再</p>\n<blockquote>\n<p>AssetBundle bundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(request)</p>\n</blockquote>\n<p>　　然后就能通过budle获取需要的gameobject了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">IEnumerator <span class=\"title\">Start</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string uri = <span class=\"string\">\"http://localhost:4000/unitydemo/5/WebGL/\"</span> + <span class=\"string\">\"clip\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    UnityEngine.Networking.UnityWebRequest request = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(uri);</span><br><span class=\"line\">    yield <span class=\"keyword\">return</span> request.SendWebRequest();</span><br><span class=\"line\">    AssetBundle bundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(request);</span><br><span class=\"line\"></span><br><span class=\"line\">    fire_audioclip = bundle.LoadAsset&lt;AudioClip&gt;(<span class=\"string\">\"fire.mp3\"</span>);</span><br><span class=\"line\">    fire_audioclip.LoadAudioData();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (fire_audioclip.loadState == AudioDataLoadState.Loading)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        yield <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    bundle.Unload(<span class=\"keyword\">false</span>);        </span><br><span class=\"line\">    request.Dispose();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　注意该过程涉及网络，需要携程处理，不然会阻塞线程。或者是写成异步asyn。</p>\n<p>　　上面的步骤是获取没有依赖关系的，实际使用中，很多都是有依赖关系的，所以得获取到manifest文件，了解到依赖关系，然后对应下载材料，再生成，才不会材质丢失。</p>\n<p>　　这里目前我只找到获取主manifest。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string urlpath = <span class=\"string\">\"http://localhost:4000/unitydemo/5/WebGL/\"</span>;</span><br><span class=\"line\">string uri = urlpath + <span class=\"string\">\"StandaloneWindows\"</span>;</span><br><span class=\"line\">string aimitem = <span class=\"string\">\"prefabs\"</span>;</span><br><span class=\"line\">UnityEngine.Networking.UnityWebRequest request = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(uri);</span><br><span class=\"line\">yield <span class=\"keyword\">return</span> request.SendWebRequest();</span><br><span class=\"line\">AssetBundle bundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(request);</span><br><span class=\"line\"></span><br><span class=\"line\">AssetBundleManifest assetBundleManifest = bundle.LoadAsset&lt;AssetBundleManifest&gt;(<span class=\"string\">\"AssetBundleManifest\"</span>);</span><br><span class=\"line\">foreach (<span class=\"keyword\">var</span> item in assetBundleManifest.GetAllAssetBundles())</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.Equals(aimitem))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        foreach (<span class=\"keyword\">var</span> iitem in assetBundleManifest.GetAllDependencies(item))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            UnityEngine.Networking.UnityWebRequest irequest = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(urlpath + iitem);</span><br><span class=\"line\">            yield <span class=\"keyword\">return</span> irequest.SendWebRequest();</span><br><span class=\"line\">            AssetBundle ibundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(irequest);</span><br><span class=\"line\">            ibundle.LoadAllAssets();</span><br><span class=\"line\">            irequest.Dispose();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">UnityEngine.Networking.UnityWebRequest prequest = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(urlpath + aimitem);</span><br><span class=\"line\">yield <span class=\"keyword\">return</span> prequest.SendWebRequest();</span><br><span class=\"line\">AssetBundle pbundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(prequest);</span><br></pre></td></tr></table></figure>\n<p>　　首先获取主manifest，然后通过bundle.LoadAsset<assetbundlemanifest>(“AssetBundleManifest”)获取具体信息。注意这里“AssetBundleManifest”是固定的。</assetbundlemanifest></p>\n<p><img src=\"/contentimg/32/8.png\" alt=\"Result pic 1\" title=\"主manifest文件\">　</p>\n<p>　　这个主manifest文件名不固定，但是获取到文件后实例化时使用的”AssetBundleManifest”是固定的。然后读取全部信息，最好存起来到字典里面。然后获取每个子包的依赖关系</p>\n<blockquote>\n<p>assetBundleManifest.GetAllDependencies(item)</p>\n</blockquote>\n<p>　　注意前面get ab包，只是get到一个文本文件，现在获取这些依赖关系等等信息，也只是string字符串信息，真要使用，是得去下载才能获取使用的。</p>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><h3 id=\"包成功下载，但是提示格式不支持\"><a href=\"#包成功下载，但是提示格式不支持\" class=\"headerlink\" title=\"包成功下载，但是提示格式不支持\"></a>包成功下载，但是提示格式不支持</h3><blockquote>\n<p>Error: Cannot create FMOD::Sound instance for resource archive:/CAB-4d655a7adf68a182da7b13b4a9413d95/CAB-4d655a7adf68a182da7b13b4a9413d95.resource, (Unsupported file or audio format. )</p>\n</blockquote>\n<p>　　我工程设置为webgl，然后想在电脑上本机调试，用vs附加打断点，结果一直报“找不到资源”/“格式不支持”。打断点进去，包是下载下来了的，大小等等信息也对。后面才意识到，是打包时选择的目标环境影响导致！我用本地调试，就应该归属在window下，而不是看工程设置。修改打包为window平台后，就成功加载文件了。</p>\n<h3 id=\"webgl慎用ab包\"><a href=\"#webgl慎用ab包\" class=\"headerlink\" title=\"webgl慎用ab包\"></a>webgl慎用ab包</h3><p>　　本地模式下，能把内存极大压缩（像设置音频为stream模式），但是使用ab包方式，虽然让初次下载包变小了，但是load时候极耗内存，而且加载成功进入后，也是在内存上，导致内存反而变大了。</p>\n<p>　　这里我尝试把音频文件打包出去，结果2.9m的文件，打包出来是5m？load下来到内存直接32m？原先stream模式才200k全部。</p>\n<p>　　也应该是我技术不到位，操作不当导致。</p>\n","site":{"data":{}},"excerpt":"<p>　　该题目将分几个部分来详细解读。本篇为初级接触篇，简单记录如何ab打包，以及如何获取ab包。</p>","more":"<p>　　ab打包，几乎能把全部东西都打包。打包后，可以通过脚本到服务器获取，实现了程序分离动态获取功能。</p>\n<p>　　官网<a href=\"https://docs.unity3d.com/Manual/AssetBundlesIntro.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">AssetBundles</a>  翻译：</p>\n<blockquote>\n<p>　　AssetBundle是可以在运行时加载的包含特定于平台的档案文件的资产（模型，纹理，预制，音频剪辑，甚至整个场景）。AssetBundles可以表达彼此之间的依赖关系; 例如，AssetBundle A中的材料可以引用AssetBundle B中的纹理。为了通过网络进行有效交付，可以根据用例要求（LZMA和LZ4）使用内置算法选择压缩AssetBundle。<br>　　AssetBundles可用于可下载内容（DLC），减少初始安装大小，加载针对最终用户平台优化的资产，以及减少运行时内存压力。</p>\n</blockquote>\n<p>　　这里有篇<a href=\"https://www.cnblogs.com/lancidie/p/5878789.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">博文</a>  还不错。博文中讲得比较详细，下面我就不重复了，就按照使用过程简单记录。</p>\n<p>　　目前开发环境是unity2018.2+Hexo（做web服务端）。如果没有弄hexo，可以搞其他web服务端，简单的window自带的IIS，或者安装wordpress，这个window也有，不过得安装部署。</p>\n<h2 id=\"ab包意义\"><a href=\"#ab包意义\" class=\"headerlink\" title=\"ab包意义\"></a>ab包意义</h2><p>　　当程序使用ab包技术后，就能动态去服务器获取组件，这样保证了每次使用都是最新的，而且不用强制更新本地软件。这对用户来说很方便，避免了频繁的软件更新提示。当然，实质是后台自动动态更新。</p>\n<p>　　第二重要的是，利用动态获取这个特性，可以在程序中根据硬件设备的情况，请求高质量的材质，或者是低质量的材质！也就是说，同一个程序，在低配置的环境下就跑低配版，在高配置环境下就跑高配！</p>\n<p>　　现在ab包主要用于更新，添加节日活动等等小更新，以及热更新等等。具体使用情况得根据需求来安排。</p>\n<h2 id=\"AssetBundles-Browser\"><a href=\"#AssetBundles-Browser\" class=\"headerlink\" title=\"AssetBundles-Browser\"></a>AssetBundles-Browser</h2><p>　　ab打包，搜索上有很多的教程，很多教写代码的。不过本文不教写这个代码，因为Unity官方已经提供了<a href=\"https://github.com/Unity-Technologies/AssetBundles-Browser\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">AssetBundles-Browser</a>  工具，就没必要自己花多余的时间来处理，而且写出来的东西还没人家的好用。</p>\n<p>　　abBrowser工具，使用很方便。从github下载后，把Edit文件夹拖动工程目录下。</p>\n<p><img src=\"/contentimg/32/1.png\" alt=\"Result pic 1\" title=\"工具启动位置\"></p>\n<p>　　该工具有三个界面：</p>\n<ol>\n<li>可以查看当前目录全部标志打包的材料，及其分类标志</li>\n<li>打包编译设置</li>\n<li>导入ab包，查看该包详情</li>\n</ol>\n<p>　　具体界面如下：</p>\n<p><img src=\"/contentimg/32/2.png\" alt=\"Result pic 1\" title=\"Configure\"></p>\n<p><img src=\"/contentimg/32/3.png\" alt=\"Result pic 1\" title=\"Build\"></p>\n<p><img src=\"/contentimg/32/4.png\" alt=\"Result pic 1\" title=\"Inspect\"></p>\n<h2 id=\"打包标志\"><a href=\"#打包标志\" class=\"headerlink\" title=\"打包标志\"></a>打包标志</h2><p><img src=\"/contentimg/32/5.png\" alt=\"Result pic 1\" title=\"打包标志\"></p>\n<p>　　打包操作很方便，只需选中材料后，在Inspector面板底部，在上图位置处进行设置分类即可。</p>\n<p>　　难的地方是分类。素材间有依赖关系，不好的分类方式，会造成重复打包，冗余打包。该题目等后面分博文详细介绍，本文暂时不提。</p>\n<p>　　在上图中，“AssetBundle”之后，第一个是打包分类目录，第二个是后缀。注意这里没有删除选择，如果分类打错字了，只能重新建分类，然后“Remove Unused Names”。</p>\n<h2 id=\"包详情\"><a href=\"#包详情\" class=\"headerlink\" title=\"包详情\"></a>包详情</h2><p><img src=\"/contentimg/32/6.png\" alt=\"Result pic 1\" title=\"编译出来的包\">　</p>\n<p>　　可以看到，目录下，同名字下会有个后缀为“.manifest”的文本文件，打开后看到是记录依赖关系、版本和hash信息等。</p>\n<p><img src=\"/contentimg/32/7.png\" alt=\"Result pic 1\" title=\"manifest文件\">　</p>\n<p>　　目前我发现：只有主manifest文件是可以通过代码获取的，其他后缀为manifest的文件，只是让我们手动打开看而已，还没找到能获取打开这些文件的api。</p>\n<h2 id=\"代码获取ab包\"><a href=\"#代码获取ab包\" class=\"headerlink\" title=\"代码获取ab包\"></a>代码获取ab包</h2><p>　　目前我使用2018，api是</p>\n<blockquote>\n<p>UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(uri)</p>\n</blockquote>\n<p>　　步骤是设置该url指向某个具体的文件，然后用该api下载，再</p>\n<blockquote>\n<p>AssetBundle bundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(request)</p>\n</blockquote>\n<p>　　然后就能通过budle获取需要的gameobject了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">IEnumerator <span class=\"title\">Start</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string uri = <span class=\"string\">\"http://localhost:4000/unitydemo/5/WebGL/\"</span> + <span class=\"string\">\"clip\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    UnityEngine.Networking.UnityWebRequest request = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(uri);</span><br><span class=\"line\">    yield <span class=\"keyword\">return</span> request.SendWebRequest();</span><br><span class=\"line\">    AssetBundle bundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(request);</span><br><span class=\"line\"></span><br><span class=\"line\">    fire_audioclip = bundle.LoadAsset&lt;AudioClip&gt;(<span class=\"string\">\"fire.mp3\"</span>);</span><br><span class=\"line\">    fire_audioclip.LoadAudioData();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (fire_audioclip.loadState == AudioDataLoadState.Loading)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        yield <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    bundle.Unload(<span class=\"keyword\">false</span>);        </span><br><span class=\"line\">    request.Dispose();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　注意该过程涉及网络，需要携程处理，不然会阻塞线程。或者是写成异步asyn。</p>\n<p>　　上面的步骤是获取没有依赖关系的，实际使用中，很多都是有依赖关系的，所以得获取到manifest文件，了解到依赖关系，然后对应下载材料，再生成，才不会材质丢失。</p>\n<p>　　这里目前我只找到获取主manifest。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string urlpath = <span class=\"string\">\"http://localhost:4000/unitydemo/5/WebGL/\"</span>;</span><br><span class=\"line\">string uri = urlpath + <span class=\"string\">\"StandaloneWindows\"</span>;</span><br><span class=\"line\">string aimitem = <span class=\"string\">\"prefabs\"</span>;</span><br><span class=\"line\">UnityEngine.Networking.UnityWebRequest request = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(uri);</span><br><span class=\"line\">yield <span class=\"keyword\">return</span> request.SendWebRequest();</span><br><span class=\"line\">AssetBundle bundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(request);</span><br><span class=\"line\"></span><br><span class=\"line\">AssetBundleManifest assetBundleManifest = bundle.LoadAsset&lt;AssetBundleManifest&gt;(<span class=\"string\">\"AssetBundleManifest\"</span>);</span><br><span class=\"line\">foreach (<span class=\"keyword\">var</span> item in assetBundleManifest.GetAllAssetBundles())</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.Equals(aimitem))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        foreach (<span class=\"keyword\">var</span> iitem in assetBundleManifest.GetAllDependencies(item))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            UnityEngine.Networking.UnityWebRequest irequest = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(urlpath + iitem);</span><br><span class=\"line\">            yield <span class=\"keyword\">return</span> irequest.SendWebRequest();</span><br><span class=\"line\">            AssetBundle ibundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(irequest);</span><br><span class=\"line\">            ibundle.LoadAllAssets();</span><br><span class=\"line\">            irequest.Dispose();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">UnityEngine.Networking.UnityWebRequest prequest = UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle(urlpath + aimitem);</span><br><span class=\"line\">yield <span class=\"keyword\">return</span> prequest.SendWebRequest();</span><br><span class=\"line\">AssetBundle pbundle = UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(prequest);</span><br></pre></td></tr></table></figure>\n<p>　　首先获取主manifest，然后通过bundle.LoadAsset<assetbundlemanifest>(“AssetBundleManifest”)获取具体信息。注意这里“AssetBundleManifest”是固定的。</assetbundlemanifest></p>\n<p><img src=\"/contentimg/32/8.png\" alt=\"Result pic 1\" title=\"主manifest文件\">　</p>\n<p>　　这个主manifest文件名不固定，但是获取到文件后实例化时使用的”AssetBundleManifest”是固定的。然后读取全部信息，最好存起来到字典里面。然后获取每个子包的依赖关系</p>\n<blockquote>\n<p>assetBundleManifest.GetAllDependencies(item)</p>\n</blockquote>\n<p>　　注意前面get ab包，只是get到一个文本文件，现在获取这些依赖关系等等信息，也只是string字符串信息，真要使用，是得去下载才能获取使用的。</p>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><h3 id=\"包成功下载，但是提示格式不支持\"><a href=\"#包成功下载，但是提示格式不支持\" class=\"headerlink\" title=\"包成功下载，但是提示格式不支持\"></a>包成功下载，但是提示格式不支持</h3><blockquote>\n<p>Error: Cannot create FMOD::Sound instance for resource archive:/CAB-4d655a7adf68a182da7b13b4a9413d95/CAB-4d655a7adf68a182da7b13b4a9413d95.resource, (Unsupported file or audio format. )</p>\n</blockquote>\n<p>　　我工程设置为webgl，然后想在电脑上本机调试，用vs附加打断点，结果一直报“找不到资源”/“格式不支持”。打断点进去，包是下载下来了的，大小等等信息也对。后面才意识到，是打包时选择的目标环境影响导致！我用本地调试，就应该归属在window下，而不是看工程设置。修改打包为window平台后，就成功加载文件了。</p>\n<h3 id=\"webgl慎用ab包\"><a href=\"#webgl慎用ab包\" class=\"headerlink\" title=\"webgl慎用ab包\"></a>webgl慎用ab包</h3><p>　　本地模式下，能把内存极大压缩（像设置音频为stream模式），但是使用ab包方式，虽然让初次下载包变小了，但是load时候极耗内存，而且加载成功进入后，也是在内存上，导致内存反而变大了。</p>\n<p>　　这里我尝试把音频文件打包出去，结果2.9m的文件，打包出来是5m？load下来到内存直接32m？原先stream模式才200k全部。</p>\n<p>　　也应该是我技术不到位，操作不当导致。</p>"},{"title":"C# Obsolete、Contional等等一些特性的介绍","date":"2018-10-15T14:55:58.000Z","_content":"\t\n　　本文分享一些代码使用Attribute的高级写法部分，日常使用中应该很少用到，但是是能给代码书写带来很好的优化效果的。\n<!-- more -->\n　　这些东西其实和xml解析时定义的class中做的标记、自定义配置文件的class标记、枚举中文标记等等是类似的。都是在上面“[]”+标记。\n\n　　日常编码中，应该Enum的中文标记是使用最多的，接下来就是xml解析，自定义配置文件应该用的人比较少，毕竟实用性不大，直接定义字段，或者使用系统自带的要容易用一些。接下来分享的几个，应该较少人接触过。\n\n## 一.Obsolete\n\n　　类似tooltip提示，一般写接口的人会用到，用于标记函数是否过时，以及强制让函数无法通过编译。\n\n``` java\n    public static class TestObsolete\n    {\n        [Obsolete(\"OldMethod,please use NewMethod\", false)]\n        public static void OldMethod()\n        {\n            Console.WriteLine(\"Old Method\");\n        }\n\n        [Obsolete(\"Error Method,you can't use this method!\", true)]\n        public static void ErrorMethod()\n        {\n            Console.WriteLine(\"Error Method\");\n        }\n\n        public static void NewMethod()\n        {\n            Console.WriteLine(\"New Method\");\n        }\n    }\n```\n　　实例中的三个方法是一样的操作：调用输出信息。照理说，是能直接调用然后输出的，毕竟没有语法错误，编译器也没提示函数有问题。\n\n　　但实际使用时是：一个警告，一个直接错误。\n\n![Result pic 1](/contentimg/4/1.png \"Obsolete\")\n\n　　直接给你一个error，不让编译通过。\n\n![Result pic 2](/contentimg/4/2.png \"ObsoleteAttribute\")\n\n　　查看定义，该属性是继承Attribute，这样用法就是直接标在函数或者成员上面，并用“[]”包起来。该特性有三种构造函数，第二种常用，就是让函数提示过时，同时里面有message提示信息。用法就是上面第一张图那样，让函数本身“过时”，给了一个警告提，同时鼠标移上去时，会提示message的信息。第三种构造函数，就是加了error，标记是显示成“警告”（可以编译通过），还是“错误”（无法编译通过）。\n\n　　这个特性，一般写接口的人会使用到，在接口的版本更新后，如果替换了新接口，但是又想老程序能使用时，一般保留老接口的代码。不过这里就有问题了，接下来新使用的程序，应该让他们用新接口而不是用老接口：如果说写在文档里面说明这个情况，但是好多人是连接口文档都不看的，直接dll引用就开始写代码的；如果写在注释里面？那更加不行，一般没报错，是很少有人去看注释的。所以这时候就得用特性了，使用这个特性，写代码的时候就直接编译器提示了，使用者全部都会看到这个提示。（unity经常用这个特性提示每次更新版本后丢弃的老属性，不过现在国内绝大部分公司，都是直接删掉老函数，然后拉分支来处理的，这样导致后期一大堆分支，维护很麻烦）\n\n## 二.Conditional\n\n　　一个好玩的特性，类似于 #if XXXX  #elif  XXXX #else XXX #endif 这种使用：\n\n![Result pic 3](/contentimg/4/3.png \"预编译条件#if\")\n\n　　使用方式如下：\n\n``` java\nusing System;\nusing System.Diagnostics;\n\nnamespace FeaturesDemo\n{\n    public class TestConditional\n    {\n        [Conditional(\"ConsoleOut\")]\n        public static void ConsoleOut(string message)\n        {\n            Console.WriteLine(message);\n        }\n    }\n}\n```\n\n　　调用时：发现明明代码写在那里，但是却不执行：\n\n![Result pic 4](/contentimg/4/4.1.png \"no done?\")\n\n　　因为它的使用前提是你要提示它“要执行”，它才会执行。不然没提示，代码在，但是不执行。\n\n怎么提示：\n\n　　方法一：在开头写#define +构造函数中传递的字符串\n\n![Result pic 5](/contentimg/4/4.2.png \"预编译#define\")\n\n　　方法二：使用“条件编译符号”\n\n![Result pic 6](/contentimg/4/4.3.png \"条件编译符号\")\n\n这里插播一下怎么运行core程序，因为vs编译生成的是dll：\n\n![Result pic 7](/contentimg/4/5.1.png \"cmd run core\")\n\n　　cd到vs工程文件所在地方，然后“dotnet build”或者“dotnet run”都行，run是编译后同时运行，然后cd到dll所在地方，“dotnet”+项目名，就能运行。当然目录下要有“项目名.runtimeconfig.json”这个文件（标记目标环境）\n\n![Result pic 8](/contentimg/4/5.2.png \"项目名.runtimeconfig.json文件\")\n\n　　这里分享几个参考的博文：\n\n[.NET Core全面扫盲贴](https://www.cnblogs.com/Wddpct/p/5694596.html#3.1.2)\n \n[.NET Core - .NET 使用 .NET Core 跨平台运行](https://msdn.microsoft.com/zh-cn/magazine/mt694084#rd)\n  \n[.NET Core 跨平台执行命令、脚本](https://www.cnblogs.com/stulzq/p/9074965.html)\n\n## 三.CallXXXX特性\n\n　　这个东西实用性一般般，用于调试排错的时候，就是你找到在哪里出错了，但是看代码又不知道上一层是哪个函数（就是哪里调用这个函数导致出问题），就加这个特性，一层一层排上去，就能找到是哪里出问题了。\n\n![Result pic 9](/contentimg/4/6.png \"CallXXXX特性\")\n\n　　之前不知道有这个特性的时候，我都是直接用反射，找到哪个函数调用，然后一层一层反射上去。反射的过程超级麻烦，实用性也不好。当然，如果可以，建议直接用vs远程附加调试，打断点就能知道到底怎么出问题了。\n\n## 四.DebuggerStepThrough\n\n　　好吧，这个算凑数的。\n\n　　这个特性是调试的时候，F10和F11的区别，就是如果函数加了这个特性，执行到这个函数，就算你使用F11（单步，逐语句），它也给你当F10（整个函数直接过，逐过程）。\n\n　　\"[System.Diagnostics.DebuggerStepThrough]\"\n\n``` java\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace FeaturesDemo\n{\n    public static class TestCall\n    {\n        [System.Diagnostics.DebuggerStepThrough]\n        public static void CallMethod(string message, [CallerFilePath] string filepath = \"\", [CallerLineNumber]int linenumber = 0,\n            [CallerMemberName]string membername = \"\")\n        {\n            Console.WriteLine(message);\n            if (!string.IsNullOrEmpty(filepath))\n                Console.WriteLine(\"filepath:\" + filepath);\n            if (!linenumber.Equals(0))\n                Console.WriteLine(\"linenumber:\" + linenumber);\n            if (!string.IsNullOrEmpty(membername))\n                Console.WriteLine(\"membername:\" + membername);\n        }\n    }\n}\n```\n\n## 五.枚举中文Description\n\n　　Description，这个最常用。\n\n``` java\nusing System;\nusing System.ComponentModel;\nusing System.Reflection;\n\nnamespace FeaturesDemo\n{\n    public static class EnumCN\n    {\n        public static string GetDescription(Enum obj)\n        {\n            FieldInfo fi = obj.GetType().GetField(obj.ToString());\n            DescriptionAttribute[] arrDesc = fi.GetCustomAttributes(typeof(DescriptionAttribute), false) as DescriptionAttribute[];\n\n            if (arrDesc != null && arrDesc.Length > 0)\n                return arrDesc[0].Description;\n            else\n                return null;\n        }\n    }\n\n    public enum PersonSex\n    {\n        [Description(\"男人\")]\n        Man = 0,\n        [Description(\"女人\")]\n        Woman = 1,\n        [Description(\"人妖\")]\n        OtherSex = 2\n    }\n}\n```\n\n　　这里就不多解释了。做界面的人建议多用，在一些选项框中，中文对应枚举，比对应源的第几个要好用，也不容易出问题。\n\n![Result pic 10](/contentimg/4/7.png \"枚举中文Description\")\n\n这里插播一下enum的另一个用法：权限校验\n\n　　就是把枚举和二进制关联起来，0表示没这个权限，1表示有，然后进行与或非操作就能判断。\n\n定义枚举：\n``` java\n    [Flags]\n    public enum EnumPower\n    {\n        [Description(\"游客\")]\n        AllNull = 0,             //0x00 表示全部没有    0000\n        [Description(\"创建\")]\n        Create = 1 << 0,         //0x01或者1  2的0次方  0001\n        [Description(\"读取\")]\n        Read = 1 << 1,           //0x02或者2  2的1次方  0010\n        [Description(\"更新\")]\n        Update = 1 << 2,         //0x04或者4  2的2次方  0100\n        [Description(\"删除\")]\n        Delete = 1 << 3          //0x08或者8  2的3次方  1000\n    }\n```\n\n　　接下来，把权限“与”/“或”操作起来，然后检查是否某位上为1就是有该权限。使用该用法，数据库保存用户权限就容易了，例如有read和delete权限的，直接0010|1000=1010。\n\n　　判断是否有read权限时：1010&0010 = 0010->1表示有；当没有时：1000&0010=0000->0\n\n　　判断是否有read或者delete其中之一：1010&(0010|1000)=1010->都有。或者其中一个有0010&(0010|1000)=0010。\n\n　　可以发现，判断权限时，我们只要&|操作后，检查==0？就可以了。省了一堆if else if语句。\n\n可以合并成一个函数：\n\n``` java\n    public static class CheckPower\n    {\n        /// <summary>\n        /// 检查是否有权限，\n        /// |操作会合并成一个值，表示满足之一就返回true\n        /// 如果有多个值，表示需要满足全部值才返回true\n        /// </summary>\n        /// <param name=\"ower\">用户的权限值</param>\n        /// <param name=\"powers\">要检查的权限值</param>\n        /// <returns></returns>\n        public static bool CheckHasPower(EnumPower owner, params EnumPower[] powers)\n        {\n            //没有传权限过来，直接返回false\n            if (powers == null || powers.Length < 1)\n                return false;\n            //只传一个权限(单权限，或者几个权限的|操作)\n            if (powers.Length <= 1)\n            {\n                //如果是EnumPower.AllNull，直接比较是否和owner一样\n                if (powers[0].Equals(EnumPower.AllNull))\n                    return owner.Equals(powers[0]);\n                else\n                    return (owner & powers[0]) != 0x00;\n            }\n\n            //合并要检查的权限值\n            foreach (var item in powers)\n            {\n                //核对每一项，如果有一项不成立，返回false\n                if ((owner & item) == 0x00)\n                    return false;\n            }\n\n            return true;\n        }\n    }\n```\n\n　　使用：\n\n``` java\n    EnumPower owner = EnumPower.AllNull;\n    owner = EnumPower.Delete | EnumPower.Create;\n\n    Console.WriteLine(owner);\n\n    Console.WriteLine(\"EnumPower.Delete:\" + CheckPower.CheckHasPower(owner, EnumPower.Delete) + System.Environment.NewLine);\n    Console.WriteLine(\"EnumPower.Read:\" + CheckPower.CheckHasPower(owner, EnumPower.Read) + System.Environment.NewLine);\n    Console.WriteLine(\"EnumPower.AllNull:\" + CheckPower.CheckHasPower(owner, EnumPower.AllNull) + System.Environment.NewLine);\n    Console.WriteLine(\"EnumPower.Delete | EnumPower.Update:\" + CheckPower.CheckHasPower(owner, EnumPower.Delete | EnumPower.Update) + System.Environment.NewLine);\n    Console.WriteLine(\"EnumPower.AllNull | EnumPower.Update:\" + CheckPower.CheckHasPower(owner, EnumPower.AllNull | EnumPower.Update) + System.Environment.NewLine);\n    Console.WriteLine(\"EnumPower.Update | EnumPower.Delete:\" + CheckPower.CheckHasPower(owner, EnumPower.Update | EnumPower.Delete) + System.Environment.NewLine);\n    Console.WriteLine(\"EnumPower.Update &EnumPower.Delete:\" + CheckPower.CheckHasPower(owner, EnumPower.Update, EnumPower.Delete) + System.Environment.NewLine);\n\n    Console.WriteLine(\"EnumPower.Read | EnumPower.Update | EnumPower.Create | EnumPower.Delete:\" + CheckPower.CheckHasPower(owner, EnumPower.Read | EnumPower.Update | EnumPower.Create | EnumPower.Delete) + System.Environment.NewLine);\n\n    int enumlength = Enum.GetNames(typeof(EnumPower)).Length - 1;//0开始，所以要-1\n    //等价于前面全部|的操作\n    Console.WriteLine(((EnumPower)(1 << enumlength) - 1) + \":\" + CheckPower.CheckHasPower(owner, ((EnumPower)(1 << enumlength) - 1)) + System.Environment.NewLine);\n\n\tConsole.WriteLine(\"EnumPower.Read &EnumPower.Update &EnumPower.Create &EnumPower.Delete:\" + CheckPower.CheckHasPower(owner, EnumPower.Read, EnumPower.Update, EnumPower.Create, EnumPower.Delete));\n```\n\n![Result pic 11](/contentimg/4/8.png \"权限校验\")\n\n　　这里比较好玩的是“1<<n”，表示2的n次方。注意“|”和“&”的区别就可以使用了，特别注意&操作，前后顺序，有没有加（），结果是不同的。以及拥有全部权限的另类算法，应该是1111（4个1）,即10000（5位）-1.\n\n　　当然普遍写法是直接|或者&然后判断==0？，就不会写一个函数来增加多余的部分的。所以上面这个函数显得突兀，只是为了直观理解而写的。\n\n## 六.自定义特性\n\n　　特性类的后缀要以Attribute结尾，需要继承自System.Attribute，一般情况下声明为sealed。\n\n示例如下：注意使用的时候自动去除Attribute后缀\n\n![Result pic 12](/contentimg/4/9.1.png \"自定义特性示例\")\n\n　　获取内容的方式：\n\n``` java\n    public static class TestMyMethod\n    {\n        public static void GetFromClass(TestMyClass t)\n        {\n            Console.WriteLine(t.TestProperty);\n            MyAttribute[] arrDesc = Attribute.GetCustomAttributes(t.GetType(), typeof(MyAttribute)) as MyAttribute[];\n            if (arrDesc != null)\n                foreach (var item in arrDesc)\n                {\n                    Console.WriteLine(\"Description:\" + item.Description);\n                    Console.WriteLine(\"LineNumber:\" + item.LineNumber);\n                    Console.WriteLine(\"IsClass:\" + item.IsClass);\n                    Console.WriteLine();\n                }\n        }\n\n        public static void GetFromProperty(TestMyProperty t)\n        {\n            Console.WriteLine(t.TestProperty);\n            foreach (System.Reflection.PropertyInfo item in t.GetType().GetProperties())\n            {\n                MyAttribute[] atts = Attribute.GetCustomAttributes(item, typeof(MyAttribute)) as MyAttribute[];\n                if (atts == null) continue;\n                foreach (var at in atts)\n                {\n                    Console.WriteLine(\"Description:\" + at.Description);\n                    Console.WriteLine(\"LineNumber:\" + at.LineNumber);\n                    Console.WriteLine(\"IsClass:\" + at.IsClass);\n                    Console.WriteLine();\n                }\n            }\n        }\n    }\n```\n\n　　注意当特性放在不同的地方时获取方式不同，类中的字段是class.GetProperties()下的内容，然后才可以 Attribute.GetCustomAttributes\n\n![Result pic 13](/contentimg/4/9.2.png \"获取方式不同\")\n\n　　注意当命名不规范的时候，是不会自动裁剪后缀的：\n\n![Result pic 14](/contentimg/4/9.3.png \"命名不规范\")\n\n　　当然还有C++和其他dll导入时的特性，xml编辑的特性，以及ORM特性等等，由于那些的主题应该是对应的内容，特性只是一个小小的标记，所以那部分的内容到时放在具体项目中分享。\n\n 本文测试程序工程可以从git直接获取：\n \n git代码库: [Codes](https://github.com/YaojiaxinPC/hexoblog/tree/master/FeaturesDemo)","source":"_posts/4fivefeatures.md","raw":"---\ntitle: C# Obsolete、Contional等等一些特性的介绍\ndate: 2018-10-15 22:55:58\ncategories:\n  - 编程技巧\ntags:\n  - C#\n  - Attribute特性\n  - enum特性\n---\n\t\n　　本文分享一些代码使用Attribute的高级写法部分，日常使用中应该很少用到，但是是能给代码书写带来很好的优化效果的。\n<!-- more -->\n　　这些东西其实和xml解析时定义的class中做的标记、自定义配置文件的class标记、枚举中文标记等等是类似的。都是在上面“[]”+标记。\n\n　　日常编码中，应该Enum的中文标记是使用最多的，接下来就是xml解析，自定义配置文件应该用的人比较少，毕竟实用性不大，直接定义字段，或者使用系统自带的要容易用一些。接下来分享的几个，应该较少人接触过。\n\n## 一.Obsolete\n\n　　类似tooltip提示，一般写接口的人会用到，用于标记函数是否过时，以及强制让函数无法通过编译。\n\n``` java\n    public static class TestObsolete\n    {\n        [Obsolete(\"OldMethod,please use NewMethod\", false)]\n        public static void OldMethod()\n        {\n            Console.WriteLine(\"Old Method\");\n        }\n\n        [Obsolete(\"Error Method,you can't use this method!\", true)]\n        public static void ErrorMethod()\n        {\n            Console.WriteLine(\"Error Method\");\n        }\n\n        public static void NewMethod()\n        {\n            Console.WriteLine(\"New Method\");\n        }\n    }\n```\n　　实例中的三个方法是一样的操作：调用输出信息。照理说，是能直接调用然后输出的，毕竟没有语法错误，编译器也没提示函数有问题。\n\n　　但实际使用时是：一个警告，一个直接错误。\n\n![Result pic 1](/contentimg/4/1.png \"Obsolete\")\n\n　　直接给你一个error，不让编译通过。\n\n![Result pic 2](/contentimg/4/2.png \"ObsoleteAttribute\")\n\n　　查看定义，该属性是继承Attribute，这样用法就是直接标在函数或者成员上面，并用“[]”包起来。该特性有三种构造函数，第二种常用，就是让函数提示过时，同时里面有message提示信息。用法就是上面第一张图那样，让函数本身“过时”，给了一个警告提，同时鼠标移上去时，会提示message的信息。第三种构造函数，就是加了error，标记是显示成“警告”（可以编译通过），还是“错误”（无法编译通过）。\n\n　　这个特性，一般写接口的人会使用到，在接口的版本更新后，如果替换了新接口，但是又想老程序能使用时，一般保留老接口的代码。不过这里就有问题了，接下来新使用的程序，应该让他们用新接口而不是用老接口：如果说写在文档里面说明这个情况，但是好多人是连接口文档都不看的，直接dll引用就开始写代码的；如果写在注释里面？那更加不行，一般没报错，是很少有人去看注释的。所以这时候就得用特性了，使用这个特性，写代码的时候就直接编译器提示了，使用者全部都会看到这个提示。（unity经常用这个特性提示每次更新版本后丢弃的老属性，不过现在国内绝大部分公司，都是直接删掉老函数，然后拉分支来处理的，这样导致后期一大堆分支，维护很麻烦）\n\n## 二.Conditional\n\n　　一个好玩的特性，类似于 #if XXXX  #elif  XXXX #else XXX #endif 这种使用：\n\n![Result pic 3](/contentimg/4/3.png \"预编译条件#if\")\n\n　　使用方式如下：\n\n``` java\nusing System;\nusing System.Diagnostics;\n\nnamespace FeaturesDemo\n{\n    public class TestConditional\n    {\n        [Conditional(\"ConsoleOut\")]\n        public static void ConsoleOut(string message)\n        {\n            Console.WriteLine(message);\n        }\n    }\n}\n```\n\n　　调用时：发现明明代码写在那里，但是却不执行：\n\n![Result pic 4](/contentimg/4/4.1.png \"no done?\")\n\n　　因为它的使用前提是你要提示它“要执行”，它才会执行。不然没提示，代码在，但是不执行。\n\n怎么提示：\n\n　　方法一：在开头写#define +构造函数中传递的字符串\n\n![Result pic 5](/contentimg/4/4.2.png \"预编译#define\")\n\n　　方法二：使用“条件编译符号”\n\n![Result pic 6](/contentimg/4/4.3.png \"条件编译符号\")\n\n这里插播一下怎么运行core程序，因为vs编译生成的是dll：\n\n![Result pic 7](/contentimg/4/5.1.png \"cmd run core\")\n\n　　cd到vs工程文件所在地方，然后“dotnet build”或者“dotnet run”都行，run是编译后同时运行，然后cd到dll所在地方，“dotnet”+项目名，就能运行。当然目录下要有“项目名.runtimeconfig.json”这个文件（标记目标环境）\n\n![Result pic 8](/contentimg/4/5.2.png \"项目名.runtimeconfig.json文件\")\n\n　　这里分享几个参考的博文：\n\n[.NET Core全面扫盲贴](https://www.cnblogs.com/Wddpct/p/5694596.html#3.1.2)\n \n[.NET Core - .NET 使用 .NET Core 跨平台运行](https://msdn.microsoft.com/zh-cn/magazine/mt694084#rd)\n  \n[.NET Core 跨平台执行命令、脚本](https://www.cnblogs.com/stulzq/p/9074965.html)\n\n## 三.CallXXXX特性\n\n　　这个东西实用性一般般，用于调试排错的时候，就是你找到在哪里出错了，但是看代码又不知道上一层是哪个函数（就是哪里调用这个函数导致出问题），就加这个特性，一层一层排上去，就能找到是哪里出问题了。\n\n![Result pic 9](/contentimg/4/6.png \"CallXXXX特性\")\n\n　　之前不知道有这个特性的时候，我都是直接用反射，找到哪个函数调用，然后一层一层反射上去。反射的过程超级麻烦，实用性也不好。当然，如果可以，建议直接用vs远程附加调试，打断点就能知道到底怎么出问题了。\n\n## 四.DebuggerStepThrough\n\n　　好吧，这个算凑数的。\n\n　　这个特性是调试的时候，F10和F11的区别，就是如果函数加了这个特性，执行到这个函数，就算你使用F11（单步，逐语句），它也给你当F10（整个函数直接过，逐过程）。\n\n　　\"[System.Diagnostics.DebuggerStepThrough]\"\n\n``` java\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace FeaturesDemo\n{\n    public static class TestCall\n    {\n        [System.Diagnostics.DebuggerStepThrough]\n        public static void CallMethod(string message, [CallerFilePath] string filepath = \"\", [CallerLineNumber]int linenumber = 0,\n            [CallerMemberName]string membername = \"\")\n        {\n            Console.WriteLine(message);\n            if (!string.IsNullOrEmpty(filepath))\n                Console.WriteLine(\"filepath:\" + filepath);\n            if (!linenumber.Equals(0))\n                Console.WriteLine(\"linenumber:\" + linenumber);\n            if (!string.IsNullOrEmpty(membername))\n                Console.WriteLine(\"membername:\" + membername);\n        }\n    }\n}\n```\n\n## 五.枚举中文Description\n\n　　Description，这个最常用。\n\n``` java\nusing System;\nusing System.ComponentModel;\nusing System.Reflection;\n\nnamespace FeaturesDemo\n{\n    public static class EnumCN\n    {\n        public static string GetDescription(Enum obj)\n        {\n            FieldInfo fi = obj.GetType().GetField(obj.ToString());\n            DescriptionAttribute[] arrDesc = fi.GetCustomAttributes(typeof(DescriptionAttribute), false) as DescriptionAttribute[];\n\n            if (arrDesc != null && arrDesc.Length > 0)\n                return arrDesc[0].Description;\n            else\n                return null;\n        }\n    }\n\n    public enum PersonSex\n    {\n        [Description(\"男人\")]\n        Man = 0,\n        [Description(\"女人\")]\n        Woman = 1,\n        [Description(\"人妖\")]\n        OtherSex = 2\n    }\n}\n```\n\n　　这里就不多解释了。做界面的人建议多用，在一些选项框中，中文对应枚举，比对应源的第几个要好用，也不容易出问题。\n\n![Result pic 10](/contentimg/4/7.png \"枚举中文Description\")\n\n这里插播一下enum的另一个用法：权限校验\n\n　　就是把枚举和二进制关联起来，0表示没这个权限，1表示有，然后进行与或非操作就能判断。\n\n定义枚举：\n``` java\n    [Flags]\n    public enum EnumPower\n    {\n        [Description(\"游客\")]\n        AllNull = 0,             //0x00 表示全部没有    0000\n        [Description(\"创建\")]\n        Create = 1 << 0,         //0x01或者1  2的0次方  0001\n        [Description(\"读取\")]\n        Read = 1 << 1,           //0x02或者2  2的1次方  0010\n        [Description(\"更新\")]\n        Update = 1 << 2,         //0x04或者4  2的2次方  0100\n        [Description(\"删除\")]\n        Delete = 1 << 3          //0x08或者8  2的3次方  1000\n    }\n```\n\n　　接下来，把权限“与”/“或”操作起来，然后检查是否某位上为1就是有该权限。使用该用法，数据库保存用户权限就容易了，例如有read和delete权限的，直接0010|1000=1010。\n\n　　判断是否有read权限时：1010&0010 = 0010->1表示有；当没有时：1000&0010=0000->0\n\n　　判断是否有read或者delete其中之一：1010&(0010|1000)=1010->都有。或者其中一个有0010&(0010|1000)=0010。\n\n　　可以发现，判断权限时，我们只要&|操作后，检查==0？就可以了。省了一堆if else if语句。\n\n可以合并成一个函数：\n\n``` java\n    public static class CheckPower\n    {\n        /// <summary>\n        /// 检查是否有权限，\n        /// |操作会合并成一个值，表示满足之一就返回true\n        /// 如果有多个值，表示需要满足全部值才返回true\n        /// </summary>\n        /// <param name=\"ower\">用户的权限值</param>\n        /// <param name=\"powers\">要检查的权限值</param>\n        /// <returns></returns>\n        public static bool CheckHasPower(EnumPower owner, params EnumPower[] powers)\n        {\n            //没有传权限过来，直接返回false\n            if (powers == null || powers.Length < 1)\n                return false;\n            //只传一个权限(单权限，或者几个权限的|操作)\n            if (powers.Length <= 1)\n            {\n                //如果是EnumPower.AllNull，直接比较是否和owner一样\n                if (powers[0].Equals(EnumPower.AllNull))\n                    return owner.Equals(powers[0]);\n                else\n                    return (owner & powers[0]) != 0x00;\n            }\n\n            //合并要检查的权限值\n            foreach (var item in powers)\n            {\n                //核对每一项，如果有一项不成立，返回false\n                if ((owner & item) == 0x00)\n                    return false;\n            }\n\n            return true;\n        }\n    }\n```\n\n　　使用：\n\n``` java\n    EnumPower owner = EnumPower.AllNull;\n    owner = EnumPower.Delete | EnumPower.Create;\n\n    Console.WriteLine(owner);\n\n    Console.WriteLine(\"EnumPower.Delete:\" + CheckPower.CheckHasPower(owner, EnumPower.Delete) + System.Environment.NewLine);\n    Console.WriteLine(\"EnumPower.Read:\" + CheckPower.CheckHasPower(owner, EnumPower.Read) + System.Environment.NewLine);\n    Console.WriteLine(\"EnumPower.AllNull:\" + CheckPower.CheckHasPower(owner, EnumPower.AllNull) + System.Environment.NewLine);\n    Console.WriteLine(\"EnumPower.Delete | EnumPower.Update:\" + CheckPower.CheckHasPower(owner, EnumPower.Delete | EnumPower.Update) + System.Environment.NewLine);\n    Console.WriteLine(\"EnumPower.AllNull | EnumPower.Update:\" + CheckPower.CheckHasPower(owner, EnumPower.AllNull | EnumPower.Update) + System.Environment.NewLine);\n    Console.WriteLine(\"EnumPower.Update | EnumPower.Delete:\" + CheckPower.CheckHasPower(owner, EnumPower.Update | EnumPower.Delete) + System.Environment.NewLine);\n    Console.WriteLine(\"EnumPower.Update &EnumPower.Delete:\" + CheckPower.CheckHasPower(owner, EnumPower.Update, EnumPower.Delete) + System.Environment.NewLine);\n\n    Console.WriteLine(\"EnumPower.Read | EnumPower.Update | EnumPower.Create | EnumPower.Delete:\" + CheckPower.CheckHasPower(owner, EnumPower.Read | EnumPower.Update | EnumPower.Create | EnumPower.Delete) + System.Environment.NewLine);\n\n    int enumlength = Enum.GetNames(typeof(EnumPower)).Length - 1;//0开始，所以要-1\n    //等价于前面全部|的操作\n    Console.WriteLine(((EnumPower)(1 << enumlength) - 1) + \":\" + CheckPower.CheckHasPower(owner, ((EnumPower)(1 << enumlength) - 1)) + System.Environment.NewLine);\n\n\tConsole.WriteLine(\"EnumPower.Read &EnumPower.Update &EnumPower.Create &EnumPower.Delete:\" + CheckPower.CheckHasPower(owner, EnumPower.Read, EnumPower.Update, EnumPower.Create, EnumPower.Delete));\n```\n\n![Result pic 11](/contentimg/4/8.png \"权限校验\")\n\n　　这里比较好玩的是“1<<n”，表示2的n次方。注意“|”和“&”的区别就可以使用了，特别注意&操作，前后顺序，有没有加（），结果是不同的。以及拥有全部权限的另类算法，应该是1111（4个1）,即10000（5位）-1.\n\n　　当然普遍写法是直接|或者&然后判断==0？，就不会写一个函数来增加多余的部分的。所以上面这个函数显得突兀，只是为了直观理解而写的。\n\n## 六.自定义特性\n\n　　特性类的后缀要以Attribute结尾，需要继承自System.Attribute，一般情况下声明为sealed。\n\n示例如下：注意使用的时候自动去除Attribute后缀\n\n![Result pic 12](/contentimg/4/9.1.png \"自定义特性示例\")\n\n　　获取内容的方式：\n\n``` java\n    public static class TestMyMethod\n    {\n        public static void GetFromClass(TestMyClass t)\n        {\n            Console.WriteLine(t.TestProperty);\n            MyAttribute[] arrDesc = Attribute.GetCustomAttributes(t.GetType(), typeof(MyAttribute)) as MyAttribute[];\n            if (arrDesc != null)\n                foreach (var item in arrDesc)\n                {\n                    Console.WriteLine(\"Description:\" + item.Description);\n                    Console.WriteLine(\"LineNumber:\" + item.LineNumber);\n                    Console.WriteLine(\"IsClass:\" + item.IsClass);\n                    Console.WriteLine();\n                }\n        }\n\n        public static void GetFromProperty(TestMyProperty t)\n        {\n            Console.WriteLine(t.TestProperty);\n            foreach (System.Reflection.PropertyInfo item in t.GetType().GetProperties())\n            {\n                MyAttribute[] atts = Attribute.GetCustomAttributes(item, typeof(MyAttribute)) as MyAttribute[];\n                if (atts == null) continue;\n                foreach (var at in atts)\n                {\n                    Console.WriteLine(\"Description:\" + at.Description);\n                    Console.WriteLine(\"LineNumber:\" + at.LineNumber);\n                    Console.WriteLine(\"IsClass:\" + at.IsClass);\n                    Console.WriteLine();\n                }\n            }\n        }\n    }\n```\n\n　　注意当特性放在不同的地方时获取方式不同，类中的字段是class.GetProperties()下的内容，然后才可以 Attribute.GetCustomAttributes\n\n![Result pic 13](/contentimg/4/9.2.png \"获取方式不同\")\n\n　　注意当命名不规范的时候，是不会自动裁剪后缀的：\n\n![Result pic 14](/contentimg/4/9.3.png \"命名不规范\")\n\n　　当然还有C++和其他dll导入时的特性，xml编辑的特性，以及ORM特性等等，由于那些的主题应该是对应的内容，特性只是一个小小的标记，所以那部分的内容到时放在具体项目中分享。\n\n 本文测试程序工程可以从git直接获取：\n \n git代码库: [Codes](https://github.com/YaojiaxinPC/hexoblog/tree/master/FeaturesDemo)","slug":"4fivefeatures","published":1,"updated":"2018-10-18T01:58:09.738Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgrid0050jo9cp03i4yeq","content":"<p>　　本文分享一些代码使用Attribute的高级写法部分，日常使用中应该很少用到，但是是能给代码书写带来很好的优化效果的。<br><a id=\"more\"></a><br>　　这些东西其实和xml解析时定义的class中做的标记、自定义配置文件的class标记、枚举中文标记等等是类似的。都是在上面“[]”+标记。</p>\n<p>　　日常编码中，应该Enum的中文标记是使用最多的，接下来就是xml解析，自定义配置文件应该用的人比较少，毕竟实用性不大，直接定义字段，或者使用系统自带的要容易用一些。接下来分享的几个，应该较少人接触过。</p>\n<h2 id=\"一-Obsolete\"><a href=\"#一-Obsolete\" class=\"headerlink\" title=\"一.Obsolete\"></a>一.Obsolete</h2><p>　　类似tooltip提示，一般写接口的人会用到，用于标记函数是否过时，以及强制让函数无法通过编译。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestObsolete</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    [Obsolete(<span class=\"string\">\"OldMethod,please use NewMethod\"</span>, <span class=\"keyword\">false</span>)]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">OldMethod</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"Old Method\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [Obsolete(<span class=\"string\">\"Error Method,you can't use this method!\"</span>, <span class=\"keyword\">true</span>)]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ErrorMethod</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"Error Method\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">NewMethod</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"New Method\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　实例中的三个方法是一样的操作：调用输出信息。照理说，是能直接调用然后输出的，毕竟没有语法错误，编译器也没提示函数有问题。</p>\n<p>　　但实际使用时是：一个警告，一个直接错误。</p>\n<p><img src=\"/contentimg/4/1.png\" alt=\"Result pic 1\" title=\"Obsolete\"></p>\n<p>　　直接给你一个error，不让编译通过。</p>\n<p><img src=\"/contentimg/4/2.png\" alt=\"Result pic 2\" title=\"ObsoleteAttribute\"></p>\n<p>　　查看定义，该属性是继承Attribute，这样用法就是直接标在函数或者成员上面，并用“[]”包起来。该特性有三种构造函数，第二种常用，就是让函数提示过时，同时里面有message提示信息。用法就是上面第一张图那样，让函数本身“过时”，给了一个警告提，同时鼠标移上去时，会提示message的信息。第三种构造函数，就是加了error，标记是显示成“警告”（可以编译通过），还是“错误”（无法编译通过）。</p>\n<p>　　这个特性，一般写接口的人会使用到，在接口的版本更新后，如果替换了新接口，但是又想老程序能使用时，一般保留老接口的代码。不过这里就有问题了，接下来新使用的程序，应该让他们用新接口而不是用老接口：如果说写在文档里面说明这个情况，但是好多人是连接口文档都不看的，直接dll引用就开始写代码的；如果写在注释里面？那更加不行，一般没报错，是很少有人去看注释的。所以这时候就得用特性了，使用这个特性，写代码的时候就直接编译器提示了，使用者全部都会看到这个提示。（unity经常用这个特性提示每次更新版本后丢弃的老属性，不过现在国内绝大部分公司，都是直接删掉老函数，然后拉分支来处理的，这样导致后期一大堆分支，维护很麻烦）</p>\n<h2 id=\"二-Conditional\"><a href=\"#二-Conditional\" class=\"headerlink\" title=\"二.Conditional\"></a>二.Conditional</h2><p>　　一个好玩的特性，类似于 #if XXXX  #elif  XXXX #else XXX #endif 这种使用：</p>\n<p><img src=\"/contentimg/4/3.png\" alt=\"Result pic 3\" title=\"预编译条件#if\"></p>\n<p>　　使用方式如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Diagnostics;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace FeaturesDemo</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestConditional</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        [Conditional(<span class=\"string\">\"ConsoleOut\"</span>)]</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ConsoleOut</span><span class=\"params\">(string message)</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            Console.WriteLine(message);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　调用时：发现明明代码写在那里，但是却不执行：</p>\n<p><img src=\"/contentimg/4/4.1.png\" alt=\"Result pic 4\" title=\"no done?\"></p>\n<p>　　因为它的使用前提是你要提示它“要执行”，它才会执行。不然没提示，代码在，但是不执行。</p>\n<p>怎么提示：</p>\n<p>　　方法一：在开头写#define +构造函数中传递的字符串</p>\n<p><img src=\"/contentimg/4/4.2.png\" alt=\"Result pic 5\" title=\"预编译#define\"></p>\n<p>　　方法二：使用“条件编译符号”</p>\n<p><img src=\"/contentimg/4/4.3.png\" alt=\"Result pic 6\" title=\"条件编译符号\"></p>\n<p>这里插播一下怎么运行core程序，因为vs编译生成的是dll：</p>\n<p><img src=\"/contentimg/4/5.1.png\" alt=\"Result pic 7\" title=\"cmd run core\"></p>\n<p>　　cd到vs工程文件所在地方，然后“dotnet build”或者“dotnet run”都行，run是编译后同时运行，然后cd到dll所在地方，“dotnet”+项目名，就能运行。当然目录下要有“项目名.runtimeconfig.json”这个文件（标记目标环境）</p>\n<p><img src=\"/contentimg/4/5.2.png\" alt=\"Result pic 8\" title=\"项目名.runtimeconfig.json文件\"></p>\n<p>　　这里分享几个参考的博文：</p>\n<p><a href=\"https://www.cnblogs.com/Wddpct/p/5694596.html#3.1.2\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">.NET Core全面扫盲贴</a></p>\n<p><a href=\"https://msdn.microsoft.com/zh-cn/magazine/mt694084#rd\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">.NET Core - .NET 使用 .NET Core 跨平台运行</a></p>\n<p><a href=\"https://www.cnblogs.com/stulzq/p/9074965.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">.NET Core 跨平台执行命令、脚本</a></p>\n<h2 id=\"三-CallXXXX特性\"><a href=\"#三-CallXXXX特性\" class=\"headerlink\" title=\"三.CallXXXX特性\"></a>三.CallXXXX特性</h2><p>　　这个东西实用性一般般，用于调试排错的时候，就是你找到在哪里出错了，但是看代码又不知道上一层是哪个函数（就是哪里调用这个函数导致出问题），就加这个特性，一层一层排上去，就能找到是哪里出问题了。</p>\n<p><img src=\"/contentimg/4/6.png\" alt=\"Result pic 9\" title=\"CallXXXX特性\"></p>\n<p>　　之前不知道有这个特性的时候，我都是直接用反射，找到哪个函数调用，然后一层一层反射上去。反射的过程超级麻烦，实用性也不好。当然，如果可以，建议直接用vs远程附加调试，打断点就能知道到底怎么出问题了。</p>\n<h2 id=\"四-DebuggerStepThrough\"><a href=\"#四-DebuggerStepThrough\" class=\"headerlink\" title=\"四.DebuggerStepThrough\"></a>四.DebuggerStepThrough</h2><p>　　好吧，这个算凑数的。</p>\n<p>　　这个特性是调试的时候，F10和F11的区别，就是如果函数加了这个特性，执行到这个函数，就算你使用F11（单步，逐语句），它也给你当F10（整个函数直接过，逐过程）。</p>\n<p>　　“[System.Diagnostics.DebuggerStepThrough]”</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Runtime.CompilerServices;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace FeaturesDemo</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestCall</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        [System.Diagnostics.DebuggerStepThrough]</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CallMethod</span><span class=\"params\">(string message, [CallerFilePath] string filepath = <span class=\"string\">\"\"</span>, [CallerLineNumber]<span class=\"keyword\">int</span> linenumber = <span class=\"number\">0</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">            [CallerMemberName]string membername = <span class=\"string\">\"\"</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            Console.WriteLine(message);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!string.IsNullOrEmpty(filepath))</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"filepath:\"</span> + filepath);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!linenumber.Equals(<span class=\"number\">0</span>))</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"linenumber:\"</span> + linenumber);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!string.IsNullOrEmpty(membername))</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"membername:\"</span> + membername);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"五-枚举中文Description\"><a href=\"#五-枚举中文Description\" class=\"headerlink\" title=\"五.枚举中文Description\"></a>五.枚举中文Description</h2><p>　　Description，这个最常用。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.ComponentModel;</span><br><span class=\"line\">using System.Reflection;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace FeaturesDemo</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EnumCN</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string <span class=\"title\">GetDescription</span><span class=\"params\">(Enum obj)</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            FieldInfo fi = obj.GetType().GetField(obj.ToString());</span><br><span class=\"line\">            DescriptionAttribute[] arrDesc = fi.GetCustomAttributes(typeof(DescriptionAttribute), <span class=\"keyword\">false</span>) as DescriptionAttribute[];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arrDesc != <span class=\"keyword\">null</span> &amp;&amp; arrDesc.Length &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> arrDesc[<span class=\"number\">0</span>].Description;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> PersonSex</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        [Description(<span class=\"string\">\"男人\"</span>)]</span><br><span class=\"line\">        Man = <span class=\"number\">0</span>,</span><br><span class=\"line\">        [Description(<span class=\"string\">\"女人\"</span>)]</span><br><span class=\"line\">        Woman = <span class=\"number\">1</span>,</span><br><span class=\"line\">        [Description(<span class=\"string\">\"人妖\"</span>)]</span><br><span class=\"line\">        OtherSex = <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　这里就不多解释了。做界面的人建议多用，在一些选项框中，中文对应枚举，比对应源的第几个要好用，也不容易出问题。</p>\n<p><img src=\"/contentimg/4/7.png\" alt=\"Result pic 10\" title=\"枚举中文Description\"></p>\n<p>这里插播一下enum的另一个用法：权限校验</p>\n<p>　　就是把枚举和二进制关联起来，0表示没这个权限，1表示有，然后进行与或非操作就能判断。</p>\n<p>定义枚举：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Flags]</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> EnumPower</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [Description(<span class=\"string\">\"游客\"</span>)]</span><br><span class=\"line\">    AllNull = <span class=\"number\">0</span>,             <span class=\"comment\">//0x00 表示全部没有    0000</span></span><br><span class=\"line\">    [Description(<span class=\"string\">\"创建\"</span>)]</span><br><span class=\"line\">    Create = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">0</span>,         <span class=\"comment\">//0x01或者1  2的0次方  0001</span></span><br><span class=\"line\">    [Description(<span class=\"string\">\"读取\"</span>)]</span><br><span class=\"line\">    Read = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">1</span>,           <span class=\"comment\">//0x02或者2  2的1次方  0010</span></span><br><span class=\"line\">    [Description(<span class=\"string\">\"更新\"</span>)]</span><br><span class=\"line\">    Update = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">2</span>,         <span class=\"comment\">//0x04或者4  2的2次方  0100</span></span><br><span class=\"line\">    [Description(<span class=\"string\">\"删除\"</span>)]</span><br><span class=\"line\">    Delete = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">3</span>          <span class=\"comment\">//0x08或者8  2的3次方  1000</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　接下来，把权限“与”/“或”操作起来，然后检查是否某位上为1就是有该权限。使用该用法，数据库保存用户权限就容易了，例如有read和delete权限的，直接0010|1000=1010。</p>\n<p>　　判断是否有read权限时：1010&amp;0010 = 0010-&gt;1表示有；当没有时：1000&amp;0010=0000-&gt;0</p>\n<p>　　判断是否有read或者delete其中之一：1010&amp;(0010|1000)=1010-&gt;都有。或者其中一个有0010&amp;(0010|1000)=0010。</p>\n<p>　　可以发现，判断权限时，我们只要&amp;|操作后，检查==0？就可以了。省了一堆if else if语句。</p>\n<p>可以合并成一个函数：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CheckPower</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 检查是否有权限，</span></span><br><span class=\"line\">    <span class=\"comment\">/// |操作会合并成一个值，表示满足之一就返回true</span></span><br><span class=\"line\">    <span class=\"comment\">/// 如果有多个值，表示需要满足全部值才返回true</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"ower\"&gt;用户的权限值&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"powers\"&gt;要检查的权限值&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> bool <span class=\"title\">CheckHasPower</span><span class=\"params\">(EnumPower owner, params EnumPower[] powers)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//没有传权限过来，直接返回false</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (powers == <span class=\"keyword\">null</span> || powers.Length &lt; <span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">//只传一个权限(单权限，或者几个权限的|操作)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (powers.Length &lt;= <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//如果是EnumPower.AllNull，直接比较是否和owner一样</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (powers[<span class=\"number\">0</span>].Equals(EnumPower.AllNull))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> owner.Equals(powers[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> (owner &amp; powers[<span class=\"number\">0</span>]) != <span class=\"number\">0x00</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//合并要检查的权限值</span></span><br><span class=\"line\">        foreach (<span class=\"keyword\">var</span> item in powers)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//核对每一项，如果有一项不成立，返回false</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((owner &amp; item) == <span class=\"number\">0x00</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　使用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   EnumPower owner = EnumPower.AllNull;</span><br><span class=\"line\">   owner = EnumPower.Delete | EnumPower.Create;</span><br><span class=\"line\"></span><br><span class=\"line\">   Console.WriteLine(owner);</span><br><span class=\"line\"></span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.Delete:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Delete) + System.Environment.NewLine);</span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.Read:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Read) + System.Environment.NewLine);</span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.AllNull:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.AllNull) + System.Environment.NewLine);</span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.Delete | EnumPower.Update:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Delete | EnumPower.Update) + System.Environment.NewLine);</span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.AllNull | EnumPower.Update:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.AllNull | EnumPower.Update) + System.Environment.NewLine);</span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.Update | EnumPower.Delete:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Update | EnumPower.Delete) + System.Environment.NewLine);</span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.Update &amp;EnumPower.Delete:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Update, EnumPower.Delete) + System.Environment.NewLine);</span><br><span class=\"line\"></span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.Read | EnumPower.Update | EnumPower.Create | EnumPower.Delete:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Read | EnumPower.Update | EnumPower.Create | EnumPower.Delete) + System.Environment.NewLine);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">int</span> enumlength = Enum.GetNames(typeof(EnumPower)).Length - <span class=\"number\">1</span>;<span class=\"comment\">//0开始，所以要-1</span></span><br><span class=\"line\">   <span class=\"comment\">//等价于前面全部|的操作</span></span><br><span class=\"line\">   Console.WriteLine(((EnumPower)(<span class=\"number\">1</span> &lt;&lt; enumlength) - <span class=\"number\">1</span>) + <span class=\"string\">\":\"</span> + CheckPower.CheckHasPower(owner, ((EnumPower)(<span class=\"number\">1</span> &lt;&lt; enumlength) - <span class=\"number\">1</span>)) + System.Environment.NewLine);</span><br><span class=\"line\"></span><br><span class=\"line\">Console.WriteLine(<span class=\"string\">\"EnumPower.Read &amp;EnumPower.Update &amp;EnumPower.Create &amp;EnumPower.Delete:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Read, EnumPower.Update, EnumPower.Create, EnumPower.Delete));</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/4/8.png\" alt=\"Result pic 11\" title=\"权限校验\"></p>\n<p>　　这里比较好玩的是“1&lt;&lt;n”，表示2的n次方。注意“|”和“&amp;”的区别就可以使用了，特别注意&amp;操作，前后顺序，有没有加（），结果是不同的。以及拥有全部权限的另类算法，应该是1111（4个1）,即10000（5位）-1.</p>\n<p>　　当然普遍写法是直接|或者&amp;然后判断==0？，就不会写一个函数来增加多余的部分的。所以上面这个函数显得突兀，只是为了直观理解而写的。</p>\n<h2 id=\"六-自定义特性\"><a href=\"#六-自定义特性\" class=\"headerlink\" title=\"六.自定义特性\"></a>六.自定义特性</h2><p>　　特性类的后缀要以Attribute结尾，需要继承自System.Attribute，一般情况下声明为sealed。</p>\n<p>示例如下：注意使用的时候自动去除Attribute后缀</p>\n<p><img src=\"/contentimg/4/9.1.png\" alt=\"Result pic 12\" title=\"自定义特性示例\"></p>\n<p>　　获取内容的方式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestMyMethod</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetFromClass</span><span class=\"params\">(TestMyClass t)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Console.WriteLine(t.TestProperty);</span><br><span class=\"line\">        MyAttribute[] arrDesc = Attribute.GetCustomAttributes(t.GetType(), typeof(MyAttribute)) as MyAttribute[];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arrDesc != <span class=\"keyword\">null</span>)</span><br><span class=\"line\">            foreach (<span class=\"keyword\">var</span> item in arrDesc)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"Description:\"</span> + item.Description);</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"LineNumber:\"</span> + item.LineNumber);</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"IsClass:\"</span> + item.IsClass);</span><br><span class=\"line\">                Console.WriteLine();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetFromProperty</span><span class=\"params\">(TestMyProperty t)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Console.WriteLine(t.TestProperty);</span><br><span class=\"line\">        foreach (System.Reflection.PropertyInfo item in t.GetType().GetProperties())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            MyAttribute[] atts = Attribute.GetCustomAttributes(item, typeof(MyAttribute)) as MyAttribute[];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (atts == <span class=\"keyword\">null</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            foreach (<span class=\"keyword\">var</span> at in atts)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"Description:\"</span> + at.Description);</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"LineNumber:\"</span> + at.LineNumber);</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"IsClass:\"</span> + at.IsClass);</span><br><span class=\"line\">                Console.WriteLine();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　注意当特性放在不同的地方时获取方式不同，类中的字段是class.GetProperties()下的内容，然后才可以 Attribute.GetCustomAttributes</p>\n<p><img src=\"/contentimg/4/9.2.png\" alt=\"Result pic 13\" title=\"获取方式不同\"></p>\n<p>　　注意当命名不规范的时候，是不会自动裁剪后缀的：</p>\n<p><img src=\"/contentimg/4/9.3.png\" alt=\"Result pic 14\" title=\"命名不规范\"></p>\n<p>　　当然还有C++和其他dll导入时的特性，xml编辑的特性，以及ORM特性等等，由于那些的主题应该是对应的内容，特性只是一个小小的标记，所以那部分的内容到时放在具体项目中分享。</p>\n<p> 本文测试程序工程可以从git直接获取：</p>\n<p> git代码库: <a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/FeaturesDemo\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Codes</a></p>\n","site":{"data":{}},"excerpt":"<p>　　本文分享一些代码使用Attribute的高级写法部分，日常使用中应该很少用到，但是是能给代码书写带来很好的优化效果的。<br>","more":"<br>　　这些东西其实和xml解析时定义的class中做的标记、自定义配置文件的class标记、枚举中文标记等等是类似的。都是在上面“[]”+标记。</p>\n<p>　　日常编码中，应该Enum的中文标记是使用最多的，接下来就是xml解析，自定义配置文件应该用的人比较少，毕竟实用性不大，直接定义字段，或者使用系统自带的要容易用一些。接下来分享的几个，应该较少人接触过。</p>\n<h2 id=\"一-Obsolete\"><a href=\"#一-Obsolete\" class=\"headerlink\" title=\"一.Obsolete\"></a>一.Obsolete</h2><p>　　类似tooltip提示，一般写接口的人会用到，用于标记函数是否过时，以及强制让函数无法通过编译。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestObsolete</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    [Obsolete(<span class=\"string\">\"OldMethod,please use NewMethod\"</span>, <span class=\"keyword\">false</span>)]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">OldMethod</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"Old Method\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [Obsolete(<span class=\"string\">\"Error Method,you can't use this method!\"</span>, <span class=\"keyword\">true</span>)]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ErrorMethod</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"Error Method\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">NewMethod</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"New Method\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　实例中的三个方法是一样的操作：调用输出信息。照理说，是能直接调用然后输出的，毕竟没有语法错误，编译器也没提示函数有问题。</p>\n<p>　　但实际使用时是：一个警告，一个直接错误。</p>\n<p><img src=\"/contentimg/4/1.png\" alt=\"Result pic 1\" title=\"Obsolete\"></p>\n<p>　　直接给你一个error，不让编译通过。</p>\n<p><img src=\"/contentimg/4/2.png\" alt=\"Result pic 2\" title=\"ObsoleteAttribute\"></p>\n<p>　　查看定义，该属性是继承Attribute，这样用法就是直接标在函数或者成员上面，并用“[]”包起来。该特性有三种构造函数，第二种常用，就是让函数提示过时，同时里面有message提示信息。用法就是上面第一张图那样，让函数本身“过时”，给了一个警告提，同时鼠标移上去时，会提示message的信息。第三种构造函数，就是加了error，标记是显示成“警告”（可以编译通过），还是“错误”（无法编译通过）。</p>\n<p>　　这个特性，一般写接口的人会使用到，在接口的版本更新后，如果替换了新接口，但是又想老程序能使用时，一般保留老接口的代码。不过这里就有问题了，接下来新使用的程序，应该让他们用新接口而不是用老接口：如果说写在文档里面说明这个情况，但是好多人是连接口文档都不看的，直接dll引用就开始写代码的；如果写在注释里面？那更加不行，一般没报错，是很少有人去看注释的。所以这时候就得用特性了，使用这个特性，写代码的时候就直接编译器提示了，使用者全部都会看到这个提示。（unity经常用这个特性提示每次更新版本后丢弃的老属性，不过现在国内绝大部分公司，都是直接删掉老函数，然后拉分支来处理的，这样导致后期一大堆分支，维护很麻烦）</p>\n<h2 id=\"二-Conditional\"><a href=\"#二-Conditional\" class=\"headerlink\" title=\"二.Conditional\"></a>二.Conditional</h2><p>　　一个好玩的特性，类似于 #if XXXX  #elif  XXXX #else XXX #endif 这种使用：</p>\n<p><img src=\"/contentimg/4/3.png\" alt=\"Result pic 3\" title=\"预编译条件#if\"></p>\n<p>　　使用方式如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Diagnostics;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace FeaturesDemo</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestConditional</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        [Conditional(<span class=\"string\">\"ConsoleOut\"</span>)]</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ConsoleOut</span><span class=\"params\">(string message)</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            Console.WriteLine(message);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　调用时：发现明明代码写在那里，但是却不执行：</p>\n<p><img src=\"/contentimg/4/4.1.png\" alt=\"Result pic 4\" title=\"no done?\"></p>\n<p>　　因为它的使用前提是你要提示它“要执行”，它才会执行。不然没提示，代码在，但是不执行。</p>\n<p>怎么提示：</p>\n<p>　　方法一：在开头写#define +构造函数中传递的字符串</p>\n<p><img src=\"/contentimg/4/4.2.png\" alt=\"Result pic 5\" title=\"预编译#define\"></p>\n<p>　　方法二：使用“条件编译符号”</p>\n<p><img src=\"/contentimg/4/4.3.png\" alt=\"Result pic 6\" title=\"条件编译符号\"></p>\n<p>这里插播一下怎么运行core程序，因为vs编译生成的是dll：</p>\n<p><img src=\"/contentimg/4/5.1.png\" alt=\"Result pic 7\" title=\"cmd run core\"></p>\n<p>　　cd到vs工程文件所在地方，然后“dotnet build”或者“dotnet run”都行，run是编译后同时运行，然后cd到dll所在地方，“dotnet”+项目名，就能运行。当然目录下要有“项目名.runtimeconfig.json”这个文件（标记目标环境）</p>\n<p><img src=\"/contentimg/4/5.2.png\" alt=\"Result pic 8\" title=\"项目名.runtimeconfig.json文件\"></p>\n<p>　　这里分享几个参考的博文：</p>\n<p><a href=\"https://www.cnblogs.com/Wddpct/p/5694596.html#3.1.2\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">.NET Core全面扫盲贴</a></p>\n<p><a href=\"https://msdn.microsoft.com/zh-cn/magazine/mt694084#rd\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">.NET Core - .NET 使用 .NET Core 跨平台运行</a></p>\n<p><a href=\"https://www.cnblogs.com/stulzq/p/9074965.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">.NET Core 跨平台执行命令、脚本</a></p>\n<h2 id=\"三-CallXXXX特性\"><a href=\"#三-CallXXXX特性\" class=\"headerlink\" title=\"三.CallXXXX特性\"></a>三.CallXXXX特性</h2><p>　　这个东西实用性一般般，用于调试排错的时候，就是你找到在哪里出错了，但是看代码又不知道上一层是哪个函数（就是哪里调用这个函数导致出问题），就加这个特性，一层一层排上去，就能找到是哪里出问题了。</p>\n<p><img src=\"/contentimg/4/6.png\" alt=\"Result pic 9\" title=\"CallXXXX特性\"></p>\n<p>　　之前不知道有这个特性的时候，我都是直接用反射，找到哪个函数调用，然后一层一层反射上去。反射的过程超级麻烦，实用性也不好。当然，如果可以，建议直接用vs远程附加调试，打断点就能知道到底怎么出问题了。</p>\n<h2 id=\"四-DebuggerStepThrough\"><a href=\"#四-DebuggerStepThrough\" class=\"headerlink\" title=\"四.DebuggerStepThrough\"></a>四.DebuggerStepThrough</h2><p>　　好吧，这个算凑数的。</p>\n<p>　　这个特性是调试的时候，F10和F11的区别，就是如果函数加了这个特性，执行到这个函数，就算你使用F11（单步，逐语句），它也给你当F10（整个函数直接过，逐过程）。</p>\n<p>　　“[System.Diagnostics.DebuggerStepThrough]”</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Runtime.CompilerServices;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace FeaturesDemo</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestCall</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        [System.Diagnostics.DebuggerStepThrough]</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CallMethod</span><span class=\"params\">(string message, [CallerFilePath] string filepath = <span class=\"string\">\"\"</span>, [CallerLineNumber]<span class=\"keyword\">int</span> linenumber = <span class=\"number\">0</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">            [CallerMemberName]string membername = <span class=\"string\">\"\"</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            Console.WriteLine(message);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!string.IsNullOrEmpty(filepath))</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"filepath:\"</span> + filepath);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!linenumber.Equals(<span class=\"number\">0</span>))</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"linenumber:\"</span> + linenumber);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!string.IsNullOrEmpty(membername))</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"membername:\"</span> + membername);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"五-枚举中文Description\"><a href=\"#五-枚举中文Description\" class=\"headerlink\" title=\"五.枚举中文Description\"></a>五.枚举中文Description</h2><p>　　Description，这个最常用。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.ComponentModel;</span><br><span class=\"line\">using System.Reflection;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace FeaturesDemo</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EnumCN</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string <span class=\"title\">GetDescription</span><span class=\"params\">(Enum obj)</span></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            FieldInfo fi = obj.GetType().GetField(obj.ToString());</span><br><span class=\"line\">            DescriptionAttribute[] arrDesc = fi.GetCustomAttributes(typeof(DescriptionAttribute), <span class=\"keyword\">false</span>) as DescriptionAttribute[];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arrDesc != <span class=\"keyword\">null</span> &amp;&amp; arrDesc.Length &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> arrDesc[<span class=\"number\">0</span>].Description;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> PersonSex</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        [Description(<span class=\"string\">\"男人\"</span>)]</span><br><span class=\"line\">        Man = <span class=\"number\">0</span>,</span><br><span class=\"line\">        [Description(<span class=\"string\">\"女人\"</span>)]</span><br><span class=\"line\">        Woman = <span class=\"number\">1</span>,</span><br><span class=\"line\">        [Description(<span class=\"string\">\"人妖\"</span>)]</span><br><span class=\"line\">        OtherSex = <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　这里就不多解释了。做界面的人建议多用，在一些选项框中，中文对应枚举，比对应源的第几个要好用，也不容易出问题。</p>\n<p><img src=\"/contentimg/4/7.png\" alt=\"Result pic 10\" title=\"枚举中文Description\"></p>\n<p>这里插播一下enum的另一个用法：权限校验</p>\n<p>　　就是把枚举和二进制关联起来，0表示没这个权限，1表示有，然后进行与或非操作就能判断。</p>\n<p>定义枚举：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Flags]</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> EnumPower</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [Description(<span class=\"string\">\"游客\"</span>)]</span><br><span class=\"line\">    AllNull = <span class=\"number\">0</span>,             <span class=\"comment\">//0x00 表示全部没有    0000</span></span><br><span class=\"line\">    [Description(<span class=\"string\">\"创建\"</span>)]</span><br><span class=\"line\">    Create = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">0</span>,         <span class=\"comment\">//0x01或者1  2的0次方  0001</span></span><br><span class=\"line\">    [Description(<span class=\"string\">\"读取\"</span>)]</span><br><span class=\"line\">    Read = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">1</span>,           <span class=\"comment\">//0x02或者2  2的1次方  0010</span></span><br><span class=\"line\">    [Description(<span class=\"string\">\"更新\"</span>)]</span><br><span class=\"line\">    Update = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">2</span>,         <span class=\"comment\">//0x04或者4  2的2次方  0100</span></span><br><span class=\"line\">    [Description(<span class=\"string\">\"删除\"</span>)]</span><br><span class=\"line\">    Delete = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">3</span>          <span class=\"comment\">//0x08或者8  2的3次方  1000</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　接下来，把权限“与”/“或”操作起来，然后检查是否某位上为1就是有该权限。使用该用法，数据库保存用户权限就容易了，例如有read和delete权限的，直接0010|1000=1010。</p>\n<p>　　判断是否有read权限时：1010&amp;0010 = 0010-&gt;1表示有；当没有时：1000&amp;0010=0000-&gt;0</p>\n<p>　　判断是否有read或者delete其中之一：1010&amp;(0010|1000)=1010-&gt;都有。或者其中一个有0010&amp;(0010|1000)=0010。</p>\n<p>　　可以发现，判断权限时，我们只要&amp;|操作后，检查==0？就可以了。省了一堆if else if语句。</p>\n<p>可以合并成一个函数：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CheckPower</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 检查是否有权限，</span></span><br><span class=\"line\">    <span class=\"comment\">/// |操作会合并成一个值，表示满足之一就返回true</span></span><br><span class=\"line\">    <span class=\"comment\">/// 如果有多个值，表示需要满足全部值才返回true</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"ower\"&gt;用户的权限值&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"powers\"&gt;要检查的权限值&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> bool <span class=\"title\">CheckHasPower</span><span class=\"params\">(EnumPower owner, params EnumPower[] powers)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//没有传权限过来，直接返回false</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (powers == <span class=\"keyword\">null</span> || powers.Length &lt; <span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">//只传一个权限(单权限，或者几个权限的|操作)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (powers.Length &lt;= <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//如果是EnumPower.AllNull，直接比较是否和owner一样</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (powers[<span class=\"number\">0</span>].Equals(EnumPower.AllNull))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> owner.Equals(powers[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> (owner &amp; powers[<span class=\"number\">0</span>]) != <span class=\"number\">0x00</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//合并要检查的权限值</span></span><br><span class=\"line\">        foreach (<span class=\"keyword\">var</span> item in powers)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//核对每一项，如果有一项不成立，返回false</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((owner &amp; item) == <span class=\"number\">0x00</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　使用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   EnumPower owner = EnumPower.AllNull;</span><br><span class=\"line\">   owner = EnumPower.Delete | EnumPower.Create;</span><br><span class=\"line\"></span><br><span class=\"line\">   Console.WriteLine(owner);</span><br><span class=\"line\"></span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.Delete:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Delete) + System.Environment.NewLine);</span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.Read:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Read) + System.Environment.NewLine);</span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.AllNull:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.AllNull) + System.Environment.NewLine);</span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.Delete | EnumPower.Update:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Delete | EnumPower.Update) + System.Environment.NewLine);</span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.AllNull | EnumPower.Update:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.AllNull | EnumPower.Update) + System.Environment.NewLine);</span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.Update | EnumPower.Delete:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Update | EnumPower.Delete) + System.Environment.NewLine);</span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.Update &amp;EnumPower.Delete:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Update, EnumPower.Delete) + System.Environment.NewLine);</span><br><span class=\"line\"></span><br><span class=\"line\">   Console.WriteLine(<span class=\"string\">\"EnumPower.Read | EnumPower.Update | EnumPower.Create | EnumPower.Delete:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Read | EnumPower.Update | EnumPower.Create | EnumPower.Delete) + System.Environment.NewLine);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">int</span> enumlength = Enum.GetNames(typeof(EnumPower)).Length - <span class=\"number\">1</span>;<span class=\"comment\">//0开始，所以要-1</span></span><br><span class=\"line\">   <span class=\"comment\">//等价于前面全部|的操作</span></span><br><span class=\"line\">   Console.WriteLine(((EnumPower)(<span class=\"number\">1</span> &lt;&lt; enumlength) - <span class=\"number\">1</span>) + <span class=\"string\">\":\"</span> + CheckPower.CheckHasPower(owner, ((EnumPower)(<span class=\"number\">1</span> &lt;&lt; enumlength) - <span class=\"number\">1</span>)) + System.Environment.NewLine);</span><br><span class=\"line\"></span><br><span class=\"line\">Console.WriteLine(<span class=\"string\">\"EnumPower.Read &amp;EnumPower.Update &amp;EnumPower.Create &amp;EnumPower.Delete:\"</span> + CheckPower.CheckHasPower(owner, EnumPower.Read, EnumPower.Update, EnumPower.Create, EnumPower.Delete));</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/4/8.png\" alt=\"Result pic 11\" title=\"权限校验\"></p>\n<p>　　这里比较好玩的是“1&lt;&lt;n”，表示2的n次方。注意“|”和“&amp;”的区别就可以使用了，特别注意&amp;操作，前后顺序，有没有加（），结果是不同的。以及拥有全部权限的另类算法，应该是1111（4个1）,即10000（5位）-1.</p>\n<p>　　当然普遍写法是直接|或者&amp;然后判断==0？，就不会写一个函数来增加多余的部分的。所以上面这个函数显得突兀，只是为了直观理解而写的。</p>\n<h2 id=\"六-自定义特性\"><a href=\"#六-自定义特性\" class=\"headerlink\" title=\"六.自定义特性\"></a>六.自定义特性</h2><p>　　特性类的后缀要以Attribute结尾，需要继承自System.Attribute，一般情况下声明为sealed。</p>\n<p>示例如下：注意使用的时候自动去除Attribute后缀</p>\n<p><img src=\"/contentimg/4/9.1.png\" alt=\"Result pic 12\" title=\"自定义特性示例\"></p>\n<p>　　获取内容的方式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestMyMethod</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetFromClass</span><span class=\"params\">(TestMyClass t)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Console.WriteLine(t.TestProperty);</span><br><span class=\"line\">        MyAttribute[] arrDesc = Attribute.GetCustomAttributes(t.GetType(), typeof(MyAttribute)) as MyAttribute[];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arrDesc != <span class=\"keyword\">null</span>)</span><br><span class=\"line\">            foreach (<span class=\"keyword\">var</span> item in arrDesc)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"Description:\"</span> + item.Description);</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"LineNumber:\"</span> + item.LineNumber);</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"IsClass:\"</span> + item.IsClass);</span><br><span class=\"line\">                Console.WriteLine();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetFromProperty</span><span class=\"params\">(TestMyProperty t)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Console.WriteLine(t.TestProperty);</span><br><span class=\"line\">        foreach (System.Reflection.PropertyInfo item in t.GetType().GetProperties())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            MyAttribute[] atts = Attribute.GetCustomAttributes(item, typeof(MyAttribute)) as MyAttribute[];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (atts == <span class=\"keyword\">null</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            foreach (<span class=\"keyword\">var</span> at in atts)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"Description:\"</span> + at.Description);</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"LineNumber:\"</span> + at.LineNumber);</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">\"IsClass:\"</span> + at.IsClass);</span><br><span class=\"line\">                Console.WriteLine();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　注意当特性放在不同的地方时获取方式不同，类中的字段是class.GetProperties()下的内容，然后才可以 Attribute.GetCustomAttributes</p>\n<p><img src=\"/contentimg/4/9.2.png\" alt=\"Result pic 13\" title=\"获取方式不同\"></p>\n<p>　　注意当命名不规范的时候，是不会自动裁剪后缀的：</p>\n<p><img src=\"/contentimg/4/9.3.png\" alt=\"Result pic 14\" title=\"命名不规范\"></p>\n<p>　　当然还有C++和其他dll导入时的特性，xml编辑的特性，以及ORM特性等等，由于那些的主题应该是对应的内容，特性只是一个小小的标记，所以那部分的内容到时放在具体项目中分享。</p>\n<p> 本文测试程序工程可以从git直接获取：</p>\n<p> git代码库: <a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/FeaturesDemo\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Codes</a></p>"},{"title":"搭建个人博客心得---godaddy+WordPress","date":"2018-10-16T14:55:58.000Z","_content":"\t\n　　本文是记录如何搭建个人博客系列的第一篇。该系列有3篇：1.付费虚拟云主机+WordPress；2.免费github+Hexo；3.个人站点yaojx.net的优化之路。\n\n<!-- more -->\n　　搭建个人博客的第一篇，理应分析一下为什么要弄这件事。\n\n　　作为一个CS开发人员，现在转型手游/端游开发，和网站开发还是没挂钩，怎么会想到做一个网站？其实，不应该是前端开发人员才做网站，谁都可以做，只是使用的工具不同而已：从事网站开发的，一般都是自己搭整套系统来显示自己的实力；非网页开发的程序员，靠搜索+工具，也是能搭出来一个网站的；再特殊点，非技术人员，花点钱，想弄怎样的网站就能弄怎样的网站。这样实现过程并不是重点，重点是为什么要做网站？\n\n　　写代码有好几年了，但是，现在回头发现什么都没留下。为什么会这样？因为平时，虽然经常逛技术论坛和技术博客，但是也是看过后，觉得好的，就收藏网址，几年下来还真保存了几兆的网站链接，下载了不少工程。但是收藏得越多，去回顾的动力就越弱，如果加上这个技术点使用得少，时间一久就会模糊的，导致后面遇到，头脑有个印象，但是就是想不起来。特别是在一次硬盘出问题后就没后文了。\n\n　　后面接触了GitHub，明白了一个道理：技术无国界，技术需要让人知道。技术应该是分享出来让更多人了解的，大家一起探讨，才能优化改善。GitHub的开源，实际上是他们分享给我们，他们是怎么做到这样的。如果有人能看得懂，并且加入优化改善，一方面对开源方是利好，另一方面，对贡献方，是磨练，也是一种承认，承认你的技术，你对该系统的贡献。久而久之，大家都会一起进步，同时带动更大的群体，发展到现在科技圈的繁荣，越来越多高新技术人才出现。\n\n　　而如果我还是像之前那样，学到一点东西就悄悄保存在自己的硬盘上，有什么用？这就和你到github上下载东西，用到自己的工程中，却把水印去掉，甚至偷偷改了变量名一样。这并不是你学到东西的体现，只是你会运用的表现。这样并不能进步，永远只能偷偷跟在别人后面。\n\n　　真正学到东西，是你摸清楚整个流程，然后能用自己的话讲出来。所以这个时候弄一个分享记录平台就有好处了。你学了这个东西，分析记录到平台上，别人看到后，会进行点评，指正里面的错误，或者和你一起讨论。这样才是真正的技术精髓。\n\n　　所以我就建了这个个人博客了。\n\n　　整个流程蛮折腾的，也花了点钱，不过好在体验过，学到了东西，也值了。\n\n　　这里建个人博客，有不花钱的：博客园、CSDN等等，甚至微博、FaceBook都可以。如果想逼格高点，就得注册个人域名了。\n\n　　我这里用了[GoDaddy](https://sg.godaddy.com/zh)  注册域名，现在GoDaddy和中国合作了，网站也有中文版，但是由于是国外的，国内访问速度一般般，好处就是不用备案。在阿里腾讯那些注册，得备案，然后要花300+大洋去买主机，不然不给办。不过如果有学生优惠，还是可以在国内弄的。\n\n　　这里贴一下我当时参考的[链接](http://cio.idcquan.com/22161.shtml) 吧。注意“免费的东西才是最贵的”这个道理。\n\n　　当时我遇到活动价，基础Linux虚拟主机，1＄/m，然后买一年送一个域名，相当于12x7=84￥=一年期限的“域名”+“博客主机”。当然这里的“博客主机”，可定制性不是很高，没有给Linux的root权限，所以不能自己搭整个网页程序放上去，只能用自带现成的程序。而这个现成程序，就是WordPress。可定制性不高，虽然可以自己改文件，然后更新到主机，但是由于网速问题，我还是放弃了这个念头。\n\n下面记录一下怎么弄：\n\n![Result pic 1](/contentimg/6/1.png \"基础虚拟主机情况\")\n\n　　买了虚拟主机送域名后，登陆帐号，进到“主机管理”页面。目前，这个管理网页，我们用到的操作就是登陆cPanel，还有设置DNS转址（不过响应很慢，改了后等很久才响应过来，建议使用其他的服务商来处理。第三篇博文将介绍这个DNS转址处理）。其他的都不用用到（包括SSH登陆，买包月wordpress套餐等等）。点击“cPanel管理员”登陆。\n\n![Result pic 2](/contentimg/6/2.png \"登陆虚拟主机\")\n\n　　跳转到“应用程序”-->“My Applications”，可以看到这里已经有一个wordpress，不用理会，直接删除掉。删除要选上面那一排，下面一排的设计不合理，是批量的情况下使用的。\n\n　　删除完，回到“Applications Browser”，里面有很多现成的程序，不过都是国外的，有时间可以自己试试。找到WordPress，安装。这样才能进行自由定制。安装完后要登陆配置wordpress，流程很简单的，只不过网络问题，得等而已。这里就不记录。\n\n　　这样，虽然看起来是安装程序，但是仔细看一下，我们看得到文件夹的，是可以上传下载的，数据库也是。管理文件有ftp方式，数据库有一个php页面，都是智能化的，不用自己在linux界面打命令（cPanel的作用--可视化操作）。这样，只要我们能忍受0.3kb/s和经常性断流，是可以把整个博客压缩下载下来，同时把数据库爬一份下来，布到本地，就能随便自己改css、js文件等等那些了，改完再传回去。\n\n　　怎么玩这个wordpress的，我就不详细说了，网上教程好多，这里贴个链接[从零起步搭建Wordpress个人博客——Windows 平台篇（上）](https://www.cnblogs.com/4770k/p/5199523.html)\n\n按教程，这里会遇到问题：\n\n　　网页打不开，报“iis运行php网站提示FastCgiModule错误模块”：打开控制面板，打开“启动或关系Windows功能”，选择iis下的“应用程序开发功能”，开启“CGI”即可。\n\n![Result pic 3](/contentimg/6/3.png \"开启CGI\")\n\n　　可以自己加几个挂件上去，写写js脚本，还是蛮好玩的。注意写脚本要区分desktop还是phone，我没接触过前端，所以只是简单的使用了窗口大小来判断，不同情况下，某些插件应该区别对待的。例如我引用了[蜘蛛网浮动](https://github.com/hustcc/canvas-nest.js) 的特效。里面设置的是对应电脑端：99个浮动点。如果放到手机端，会密集恐惧症，所以这里就得改小了。这里360浏览器，反应wordpress的大小还是比较有趣的，双击时是变成移动端的宽度大小，所以可以粗略用这个来看效果。当然，还是谷歌浏览器写js脚本比较好。其他还有一个时钟挂件，代码是网上找到。js代码很好找，有现成的，实在不行，F12定位，也能看出来是那些代码，然后复制粘贴+修改，凑齐css+js+html就能跑出来效果了。这样抄了几个小特效，发现前端蛮好玩的，就是代码写起来没vs的美观，一直在想怎么会有人写代码不换行的？还有可视化编程，不能改的时候就能看到效果，只能改后，到浏览器刷新才能看到，这样调位置时超级烦（不过后面发现可以在浏览器中的缓存中改，就能实时看到效果，改好后复制回来就行）。总体上，还是推荐多多接触js的，短短的代码量就能实现很强大的功能。\n\n　　这里也提一下一些心得吧，在挂饰中，是可以添加js代码的，我的两个特效就是这样加进去的，就不用拉文件下来改，然后发回去的。然后就是发布后，是显示成全文的，所以在编写文章时，开头写大概内容后，添加“more标签”，这样显示出来的才是“大概内容”+“继续阅读”。\n\n![Result pic 4](/contentimg/6/4.png \"添加“继续阅读”标签\")\n\n　　说实话，这个买买买，然后建站的过程不耗时，真正耗时是DNS问题。\n\n　　第一天搭好后，第二天访问，发现404，登cPanel那边跳过去也不行。当时想不明白，只能删了重装。单独删wordpress是不行的，还是不能访问，所以问题不在wordpress上。后面重置cPanel就可以了，同时发现，主机IP变了。说明是服务器问题，后面找了相关的文章，了解到是用的人多，服务器承载不过来，就经常出现这个情况。当时改谷歌的dns、换手机热点、联通移动等等都试过没用。证明问题真不是出在我这边，真的是服务端那边的。ping域名ip，会发现基本不通。\n\n　　确实，一开始ping自己的域名，400+的延迟，然后挂DNSpod（现在和腾讯合作），没用，因为ip是国外的，所以需要用CDN加速。\n\n　　后面还是用的国外免费的：[cloudflare](https://www.cloudflare.com/)\n\n　　登陆注册，设置好域名后，隔几个小时候再来ping，延迟只有200+了。\n\n![Result pic 5](/contentimg/6/5.png \"设置GoDaddy的域名服务器\")\n\n![Result pic 6](/contentimg/6/6.png \"选免费套餐\")\n\n![Result pic 7](/contentimg/6/7.png \"复制过去GoDaddy的两个链接\")\n\n　　当然，最好也做一下wordpress的优化，就是把插件全部删除，装两个加速的插件上去（有专门对应cloudflare的插件）。这样，虽然不能让第一次打开能快到什么地步，但是第二次打开却是能很快的（使用缓存加速功能）。\n\n　　这里能挂载，当然也能解除了：\n\n![Result pic 8](/contentimg/6/8.png \"解除挂载\")\n\n　　这个虚拟主机+WordPress，性价比不高，访问很慢，还经常性断网。后面我还是转战GitPage。\n\n\n","source":"_posts/6CreatWordPress.md","raw":"---\ntitle: 搭建个人博客心得---godaddy+WordPress\ndate: 2018-10-16 22:55:58\ncategories:\n  - 编程人生\ntags:\n  - 域名\n  - 个人博客  \n---\n\t\n　　本文是记录如何搭建个人博客系列的第一篇。该系列有3篇：1.付费虚拟云主机+WordPress；2.免费github+Hexo；3.个人站点yaojx.net的优化之路。\n\n<!-- more -->\n　　搭建个人博客的第一篇，理应分析一下为什么要弄这件事。\n\n　　作为一个CS开发人员，现在转型手游/端游开发，和网站开发还是没挂钩，怎么会想到做一个网站？其实，不应该是前端开发人员才做网站，谁都可以做，只是使用的工具不同而已：从事网站开发的，一般都是自己搭整套系统来显示自己的实力；非网页开发的程序员，靠搜索+工具，也是能搭出来一个网站的；再特殊点，非技术人员，花点钱，想弄怎样的网站就能弄怎样的网站。这样实现过程并不是重点，重点是为什么要做网站？\n\n　　写代码有好几年了，但是，现在回头发现什么都没留下。为什么会这样？因为平时，虽然经常逛技术论坛和技术博客，但是也是看过后，觉得好的，就收藏网址，几年下来还真保存了几兆的网站链接，下载了不少工程。但是收藏得越多，去回顾的动力就越弱，如果加上这个技术点使用得少，时间一久就会模糊的，导致后面遇到，头脑有个印象，但是就是想不起来。特别是在一次硬盘出问题后就没后文了。\n\n　　后面接触了GitHub，明白了一个道理：技术无国界，技术需要让人知道。技术应该是分享出来让更多人了解的，大家一起探讨，才能优化改善。GitHub的开源，实际上是他们分享给我们，他们是怎么做到这样的。如果有人能看得懂，并且加入优化改善，一方面对开源方是利好，另一方面，对贡献方，是磨练，也是一种承认，承认你的技术，你对该系统的贡献。久而久之，大家都会一起进步，同时带动更大的群体，发展到现在科技圈的繁荣，越来越多高新技术人才出现。\n\n　　而如果我还是像之前那样，学到一点东西就悄悄保存在自己的硬盘上，有什么用？这就和你到github上下载东西，用到自己的工程中，却把水印去掉，甚至偷偷改了变量名一样。这并不是你学到东西的体现，只是你会运用的表现。这样并不能进步，永远只能偷偷跟在别人后面。\n\n　　真正学到东西，是你摸清楚整个流程，然后能用自己的话讲出来。所以这个时候弄一个分享记录平台就有好处了。你学了这个东西，分析记录到平台上，别人看到后，会进行点评，指正里面的错误，或者和你一起讨论。这样才是真正的技术精髓。\n\n　　所以我就建了这个个人博客了。\n\n　　整个流程蛮折腾的，也花了点钱，不过好在体验过，学到了东西，也值了。\n\n　　这里建个人博客，有不花钱的：博客园、CSDN等等，甚至微博、FaceBook都可以。如果想逼格高点，就得注册个人域名了。\n\n　　我这里用了[GoDaddy](https://sg.godaddy.com/zh)  注册域名，现在GoDaddy和中国合作了，网站也有中文版，但是由于是国外的，国内访问速度一般般，好处就是不用备案。在阿里腾讯那些注册，得备案，然后要花300+大洋去买主机，不然不给办。不过如果有学生优惠，还是可以在国内弄的。\n\n　　这里贴一下我当时参考的[链接](http://cio.idcquan.com/22161.shtml) 吧。注意“免费的东西才是最贵的”这个道理。\n\n　　当时我遇到活动价，基础Linux虚拟主机，1＄/m，然后买一年送一个域名，相当于12x7=84￥=一年期限的“域名”+“博客主机”。当然这里的“博客主机”，可定制性不是很高，没有给Linux的root权限，所以不能自己搭整个网页程序放上去，只能用自带现成的程序。而这个现成程序，就是WordPress。可定制性不高，虽然可以自己改文件，然后更新到主机，但是由于网速问题，我还是放弃了这个念头。\n\n下面记录一下怎么弄：\n\n![Result pic 1](/contentimg/6/1.png \"基础虚拟主机情况\")\n\n　　买了虚拟主机送域名后，登陆帐号，进到“主机管理”页面。目前，这个管理网页，我们用到的操作就是登陆cPanel，还有设置DNS转址（不过响应很慢，改了后等很久才响应过来，建议使用其他的服务商来处理。第三篇博文将介绍这个DNS转址处理）。其他的都不用用到（包括SSH登陆，买包月wordpress套餐等等）。点击“cPanel管理员”登陆。\n\n![Result pic 2](/contentimg/6/2.png \"登陆虚拟主机\")\n\n　　跳转到“应用程序”-->“My Applications”，可以看到这里已经有一个wordpress，不用理会，直接删除掉。删除要选上面那一排，下面一排的设计不合理，是批量的情况下使用的。\n\n　　删除完，回到“Applications Browser”，里面有很多现成的程序，不过都是国外的，有时间可以自己试试。找到WordPress，安装。这样才能进行自由定制。安装完后要登陆配置wordpress，流程很简单的，只不过网络问题，得等而已。这里就不记录。\n\n　　这样，虽然看起来是安装程序，但是仔细看一下，我们看得到文件夹的，是可以上传下载的，数据库也是。管理文件有ftp方式，数据库有一个php页面，都是智能化的，不用自己在linux界面打命令（cPanel的作用--可视化操作）。这样，只要我们能忍受0.3kb/s和经常性断流，是可以把整个博客压缩下载下来，同时把数据库爬一份下来，布到本地，就能随便自己改css、js文件等等那些了，改完再传回去。\n\n　　怎么玩这个wordpress的，我就不详细说了，网上教程好多，这里贴个链接[从零起步搭建Wordpress个人博客——Windows 平台篇（上）](https://www.cnblogs.com/4770k/p/5199523.html)\n\n按教程，这里会遇到问题：\n\n　　网页打不开，报“iis运行php网站提示FastCgiModule错误模块”：打开控制面板，打开“启动或关系Windows功能”，选择iis下的“应用程序开发功能”，开启“CGI”即可。\n\n![Result pic 3](/contentimg/6/3.png \"开启CGI\")\n\n　　可以自己加几个挂件上去，写写js脚本，还是蛮好玩的。注意写脚本要区分desktop还是phone，我没接触过前端，所以只是简单的使用了窗口大小来判断，不同情况下，某些插件应该区别对待的。例如我引用了[蜘蛛网浮动](https://github.com/hustcc/canvas-nest.js) 的特效。里面设置的是对应电脑端：99个浮动点。如果放到手机端，会密集恐惧症，所以这里就得改小了。这里360浏览器，反应wordpress的大小还是比较有趣的，双击时是变成移动端的宽度大小，所以可以粗略用这个来看效果。当然，还是谷歌浏览器写js脚本比较好。其他还有一个时钟挂件，代码是网上找到。js代码很好找，有现成的，实在不行，F12定位，也能看出来是那些代码，然后复制粘贴+修改，凑齐css+js+html就能跑出来效果了。这样抄了几个小特效，发现前端蛮好玩的，就是代码写起来没vs的美观，一直在想怎么会有人写代码不换行的？还有可视化编程，不能改的时候就能看到效果，只能改后，到浏览器刷新才能看到，这样调位置时超级烦（不过后面发现可以在浏览器中的缓存中改，就能实时看到效果，改好后复制回来就行）。总体上，还是推荐多多接触js的，短短的代码量就能实现很强大的功能。\n\n　　这里也提一下一些心得吧，在挂饰中，是可以添加js代码的，我的两个特效就是这样加进去的，就不用拉文件下来改，然后发回去的。然后就是发布后，是显示成全文的，所以在编写文章时，开头写大概内容后，添加“more标签”，这样显示出来的才是“大概内容”+“继续阅读”。\n\n![Result pic 4](/contentimg/6/4.png \"添加“继续阅读”标签\")\n\n　　说实话，这个买买买，然后建站的过程不耗时，真正耗时是DNS问题。\n\n　　第一天搭好后，第二天访问，发现404，登cPanel那边跳过去也不行。当时想不明白，只能删了重装。单独删wordpress是不行的，还是不能访问，所以问题不在wordpress上。后面重置cPanel就可以了，同时发现，主机IP变了。说明是服务器问题，后面找了相关的文章，了解到是用的人多，服务器承载不过来，就经常出现这个情况。当时改谷歌的dns、换手机热点、联通移动等等都试过没用。证明问题真不是出在我这边，真的是服务端那边的。ping域名ip，会发现基本不通。\n\n　　确实，一开始ping自己的域名，400+的延迟，然后挂DNSpod（现在和腾讯合作），没用，因为ip是国外的，所以需要用CDN加速。\n\n　　后面还是用的国外免费的：[cloudflare](https://www.cloudflare.com/)\n\n　　登陆注册，设置好域名后，隔几个小时候再来ping，延迟只有200+了。\n\n![Result pic 5](/contentimg/6/5.png \"设置GoDaddy的域名服务器\")\n\n![Result pic 6](/contentimg/6/6.png \"选免费套餐\")\n\n![Result pic 7](/contentimg/6/7.png \"复制过去GoDaddy的两个链接\")\n\n　　当然，最好也做一下wordpress的优化，就是把插件全部删除，装两个加速的插件上去（有专门对应cloudflare的插件）。这样，虽然不能让第一次打开能快到什么地步，但是第二次打开却是能很快的（使用缓存加速功能）。\n\n　　这里能挂载，当然也能解除了：\n\n![Result pic 8](/contentimg/6/8.png \"解除挂载\")\n\n　　这个虚拟主机+WordPress，性价比不高，访问很慢，还经常性断网。后面我还是转战GitPage。\n\n\n","slug":"6CreatWordPress","published":1,"updated":"2018-10-18T01:59:01.921Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgrie0051jo9ce4rowj36","content":"<p>　　本文是记录如何搭建个人博客系列的第一篇。该系列有3篇：1.付费虚拟云主机+WordPress；2.免费github+Hexo；3.个人站点yaojx.net的优化之路。</p>\n<a id=\"more\"></a>\n<p>　　搭建个人博客的第一篇，理应分析一下为什么要弄这件事。</p>\n<p>　　作为一个CS开发人员，现在转型手游/端游开发，和网站开发还是没挂钩，怎么会想到做一个网站？其实，不应该是前端开发人员才做网站，谁都可以做，只是使用的工具不同而已：从事网站开发的，一般都是自己搭整套系统来显示自己的实力；非网页开发的程序员，靠搜索+工具，也是能搭出来一个网站的；再特殊点，非技术人员，花点钱，想弄怎样的网站就能弄怎样的网站。这样实现过程并不是重点，重点是为什么要做网站？</p>\n<p>　　写代码有好几年了，但是，现在回头发现什么都没留下。为什么会这样？因为平时，虽然经常逛技术论坛和技术博客，但是也是看过后，觉得好的，就收藏网址，几年下来还真保存了几兆的网站链接，下载了不少工程。但是收藏得越多，去回顾的动力就越弱，如果加上这个技术点使用得少，时间一久就会模糊的，导致后面遇到，头脑有个印象，但是就是想不起来。特别是在一次硬盘出问题后就没后文了。</p>\n<p>　　后面接触了GitHub，明白了一个道理：技术无国界，技术需要让人知道。技术应该是分享出来让更多人了解的，大家一起探讨，才能优化改善。GitHub的开源，实际上是他们分享给我们，他们是怎么做到这样的。如果有人能看得懂，并且加入优化改善，一方面对开源方是利好，另一方面，对贡献方，是磨练，也是一种承认，承认你的技术，你对该系统的贡献。久而久之，大家都会一起进步，同时带动更大的群体，发展到现在科技圈的繁荣，越来越多高新技术人才出现。</p>\n<p>　　而如果我还是像之前那样，学到一点东西就悄悄保存在自己的硬盘上，有什么用？这就和你到github上下载东西，用到自己的工程中，却把水印去掉，甚至偷偷改了变量名一样。这并不是你学到东西的体现，只是你会运用的表现。这样并不能进步，永远只能偷偷跟在别人后面。</p>\n<p>　　真正学到东西，是你摸清楚整个流程，然后能用自己的话讲出来。所以这个时候弄一个分享记录平台就有好处了。你学了这个东西，分析记录到平台上，别人看到后，会进行点评，指正里面的错误，或者和你一起讨论。这样才是真正的技术精髓。</p>\n<p>　　所以我就建了这个个人博客了。</p>\n<p>　　整个流程蛮折腾的，也花了点钱，不过好在体验过，学到了东西，也值了。</p>\n<p>　　这里建个人博客，有不花钱的：博客园、CSDN等等，甚至微博、FaceBook都可以。如果想逼格高点，就得注册个人域名了。</p>\n<p>　　我这里用了<a href=\"https://sg.godaddy.com/zh\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">GoDaddy</a>  注册域名，现在GoDaddy和中国合作了，网站也有中文版，但是由于是国外的，国内访问速度一般般，好处就是不用备案。在阿里腾讯那些注册，得备案，然后要花300+大洋去买主机，不然不给办。不过如果有学生优惠，还是可以在国内弄的。</p>\n<p>　　这里贴一下我当时参考的<a href=\"http://cio.idcquan.com/22161.shtml\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a> 吧。注意“免费的东西才是最贵的”这个道理。</p>\n<p>　　当时我遇到活动价，基础Linux虚拟主机，1＄/m，然后买一年送一个域名，相当于12x7=84￥=一年期限的“域名”+“博客主机”。当然这里的“博客主机”，可定制性不是很高，没有给Linux的root权限，所以不能自己搭整个网页程序放上去，只能用自带现成的程序。而这个现成程序，就是WordPress。可定制性不高，虽然可以自己改文件，然后更新到主机，但是由于网速问题，我还是放弃了这个念头。</p>\n<p>下面记录一下怎么弄：</p>\n<p><img src=\"/contentimg/6/1.png\" alt=\"Result pic 1\" title=\"基础虚拟主机情况\"></p>\n<p>　　买了虚拟主机送域名后，登陆帐号，进到“主机管理”页面。目前，这个管理网页，我们用到的操作就是登陆cPanel，还有设置DNS转址（不过响应很慢，改了后等很久才响应过来，建议使用其他的服务商来处理。第三篇博文将介绍这个DNS转址处理）。其他的都不用用到（包括SSH登陆，买包月wordpress套餐等等）。点击“cPanel管理员”登陆。</p>\n<p><img src=\"/contentimg/6/2.png\" alt=\"Result pic 2\" title=\"登陆虚拟主机\"></p>\n<p>　　跳转到“应用程序”–&gt;“My Applications”，可以看到这里已经有一个wordpress，不用理会，直接删除掉。删除要选上面那一排，下面一排的设计不合理，是批量的情况下使用的。</p>\n<p>　　删除完，回到“Applications Browser”，里面有很多现成的程序，不过都是国外的，有时间可以自己试试。找到WordPress，安装。这样才能进行自由定制。安装完后要登陆配置wordpress，流程很简单的，只不过网络问题，得等而已。这里就不记录。</p>\n<p>　　这样，虽然看起来是安装程序，但是仔细看一下，我们看得到文件夹的，是可以上传下载的，数据库也是。管理文件有ftp方式，数据库有一个php页面，都是智能化的，不用自己在linux界面打命令（cPanel的作用–可视化操作）。这样，只要我们能忍受0.3kb/s和经常性断流，是可以把整个博客压缩下载下来，同时把数据库爬一份下来，布到本地，就能随便自己改css、js文件等等那些了，改完再传回去。</p>\n<p>　　怎么玩这个wordpress的，我就不详细说了，网上教程好多，这里贴个链接<a href=\"https://www.cnblogs.com/4770k/p/5199523.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">从零起步搭建Wordpress个人博客——Windows 平台篇（上）</a></p>\n<p>按教程，这里会遇到问题：</p>\n<p>　　网页打不开，报“iis运行php网站提示FastCgiModule错误模块”：打开控制面板，打开“启动或关系Windows功能”，选择iis下的“应用程序开发功能”，开启“CGI”即可。</p>\n<p><img src=\"/contentimg/6/3.png\" alt=\"Result pic 3\" title=\"开启CGI\"></p>\n<p>　　可以自己加几个挂件上去，写写js脚本，还是蛮好玩的。注意写脚本要区分desktop还是phone，我没接触过前端，所以只是简单的使用了窗口大小来判断，不同情况下，某些插件应该区别对待的。例如我引用了<a href=\"https://github.com/hustcc/canvas-nest.js\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">蜘蛛网浮动</a> 的特效。里面设置的是对应电脑端：99个浮动点。如果放到手机端，会密集恐惧症，所以这里就得改小了。这里360浏览器，反应wordpress的大小还是比较有趣的，双击时是变成移动端的宽度大小，所以可以粗略用这个来看效果。当然，还是谷歌浏览器写js脚本比较好。其他还有一个时钟挂件，代码是网上找到。js代码很好找，有现成的，实在不行，F12定位，也能看出来是那些代码，然后复制粘贴+修改，凑齐css+js+html就能跑出来效果了。这样抄了几个小特效，发现前端蛮好玩的，就是代码写起来没vs的美观，一直在想怎么会有人写代码不换行的？还有可视化编程，不能改的时候就能看到效果，只能改后，到浏览器刷新才能看到，这样调位置时超级烦（不过后面发现可以在浏览器中的缓存中改，就能实时看到效果，改好后复制回来就行）。总体上，还是推荐多多接触js的，短短的代码量就能实现很强大的功能。</p>\n<p>　　这里也提一下一些心得吧，在挂饰中，是可以添加js代码的，我的两个特效就是这样加进去的，就不用拉文件下来改，然后发回去的。然后就是发布后，是显示成全文的，所以在编写文章时，开头写大概内容后，添加“more标签”，这样显示出来的才是“大概内容”+“继续阅读”。</p>\n<p><img src=\"/contentimg/6/4.png\" alt=\"Result pic 4\" title=\"添加“继续阅读”标签\"></p>\n<p>　　说实话，这个买买买，然后建站的过程不耗时，真正耗时是DNS问题。</p>\n<p>　　第一天搭好后，第二天访问，发现404，登cPanel那边跳过去也不行。当时想不明白，只能删了重装。单独删wordpress是不行的，还是不能访问，所以问题不在wordpress上。后面重置cPanel就可以了，同时发现，主机IP变了。说明是服务器问题，后面找了相关的文章，了解到是用的人多，服务器承载不过来，就经常出现这个情况。当时改谷歌的dns、换手机热点、联通移动等等都试过没用。证明问题真不是出在我这边，真的是服务端那边的。ping域名ip，会发现基本不通。</p>\n<p>　　确实，一开始ping自己的域名，400+的延迟，然后挂DNSpod（现在和腾讯合作），没用，因为ip是国外的，所以需要用CDN加速。</p>\n<p>　　后面还是用的国外免费的：<a href=\"https://www.cloudflare.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">cloudflare</a></p>\n<p>　　登陆注册，设置好域名后，隔几个小时候再来ping，延迟只有200+了。</p>\n<p><img src=\"/contentimg/6/5.png\" alt=\"Result pic 5\" title=\"设置GoDaddy的域名服务器\"></p>\n<p><img src=\"/contentimg/6/6.png\" alt=\"Result pic 6\" title=\"选免费套餐\"></p>\n<p><img src=\"/contentimg/6/7.png\" alt=\"Result pic 7\" title=\"复制过去GoDaddy的两个链接\"></p>\n<p>　　当然，最好也做一下wordpress的优化，就是把插件全部删除，装两个加速的插件上去（有专门对应cloudflare的插件）。这样，虽然不能让第一次打开能快到什么地步，但是第二次打开却是能很快的（使用缓存加速功能）。</p>\n<p>　　这里能挂载，当然也能解除了：</p>\n<p><img src=\"/contentimg/6/8.png\" alt=\"Result pic 8\" title=\"解除挂载\"></p>\n<p>　　这个虚拟主机+WordPress，性价比不高，访问很慢，还经常性断网。后面我还是转战GitPage。</p>\n","site":{"data":{}},"excerpt":"<p>　　本文是记录如何搭建个人博客系列的第一篇。该系列有3篇：1.付费虚拟云主机+WordPress；2.免费github+Hexo；3.个人站点yaojx.net的优化之路。</p>","more":"<p>　　搭建个人博客的第一篇，理应分析一下为什么要弄这件事。</p>\n<p>　　作为一个CS开发人员，现在转型手游/端游开发，和网站开发还是没挂钩，怎么会想到做一个网站？其实，不应该是前端开发人员才做网站，谁都可以做，只是使用的工具不同而已：从事网站开发的，一般都是自己搭整套系统来显示自己的实力；非网页开发的程序员，靠搜索+工具，也是能搭出来一个网站的；再特殊点，非技术人员，花点钱，想弄怎样的网站就能弄怎样的网站。这样实现过程并不是重点，重点是为什么要做网站？</p>\n<p>　　写代码有好几年了，但是，现在回头发现什么都没留下。为什么会这样？因为平时，虽然经常逛技术论坛和技术博客，但是也是看过后，觉得好的，就收藏网址，几年下来还真保存了几兆的网站链接，下载了不少工程。但是收藏得越多，去回顾的动力就越弱，如果加上这个技术点使用得少，时间一久就会模糊的，导致后面遇到，头脑有个印象，但是就是想不起来。特别是在一次硬盘出问题后就没后文了。</p>\n<p>　　后面接触了GitHub，明白了一个道理：技术无国界，技术需要让人知道。技术应该是分享出来让更多人了解的，大家一起探讨，才能优化改善。GitHub的开源，实际上是他们分享给我们，他们是怎么做到这样的。如果有人能看得懂，并且加入优化改善，一方面对开源方是利好，另一方面，对贡献方，是磨练，也是一种承认，承认你的技术，你对该系统的贡献。久而久之，大家都会一起进步，同时带动更大的群体，发展到现在科技圈的繁荣，越来越多高新技术人才出现。</p>\n<p>　　而如果我还是像之前那样，学到一点东西就悄悄保存在自己的硬盘上，有什么用？这就和你到github上下载东西，用到自己的工程中，却把水印去掉，甚至偷偷改了变量名一样。这并不是你学到东西的体现，只是你会运用的表现。这样并不能进步，永远只能偷偷跟在别人后面。</p>\n<p>　　真正学到东西，是你摸清楚整个流程，然后能用自己的话讲出来。所以这个时候弄一个分享记录平台就有好处了。你学了这个东西，分析记录到平台上，别人看到后，会进行点评，指正里面的错误，或者和你一起讨论。这样才是真正的技术精髓。</p>\n<p>　　所以我就建了这个个人博客了。</p>\n<p>　　整个流程蛮折腾的，也花了点钱，不过好在体验过，学到了东西，也值了。</p>\n<p>　　这里建个人博客，有不花钱的：博客园、CSDN等等，甚至微博、FaceBook都可以。如果想逼格高点，就得注册个人域名了。</p>\n<p>　　我这里用了<a href=\"https://sg.godaddy.com/zh\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">GoDaddy</a>  注册域名，现在GoDaddy和中国合作了，网站也有中文版，但是由于是国外的，国内访问速度一般般，好处就是不用备案。在阿里腾讯那些注册，得备案，然后要花300+大洋去买主机，不然不给办。不过如果有学生优惠，还是可以在国内弄的。</p>\n<p>　　这里贴一下我当时参考的<a href=\"http://cio.idcquan.com/22161.shtml\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a> 吧。注意“免费的东西才是最贵的”这个道理。</p>\n<p>　　当时我遇到活动价，基础Linux虚拟主机，1＄/m，然后买一年送一个域名，相当于12x7=84￥=一年期限的“域名”+“博客主机”。当然这里的“博客主机”，可定制性不是很高，没有给Linux的root权限，所以不能自己搭整个网页程序放上去，只能用自带现成的程序。而这个现成程序，就是WordPress。可定制性不高，虽然可以自己改文件，然后更新到主机，但是由于网速问题，我还是放弃了这个念头。</p>\n<p>下面记录一下怎么弄：</p>\n<p><img src=\"/contentimg/6/1.png\" alt=\"Result pic 1\" title=\"基础虚拟主机情况\"></p>\n<p>　　买了虚拟主机送域名后，登陆帐号，进到“主机管理”页面。目前，这个管理网页，我们用到的操作就是登陆cPanel，还有设置DNS转址（不过响应很慢，改了后等很久才响应过来，建议使用其他的服务商来处理。第三篇博文将介绍这个DNS转址处理）。其他的都不用用到（包括SSH登陆，买包月wordpress套餐等等）。点击“cPanel管理员”登陆。</p>\n<p><img src=\"/contentimg/6/2.png\" alt=\"Result pic 2\" title=\"登陆虚拟主机\"></p>\n<p>　　跳转到“应用程序”–&gt;“My Applications”，可以看到这里已经有一个wordpress，不用理会，直接删除掉。删除要选上面那一排，下面一排的设计不合理，是批量的情况下使用的。</p>\n<p>　　删除完，回到“Applications Browser”，里面有很多现成的程序，不过都是国外的，有时间可以自己试试。找到WordPress，安装。这样才能进行自由定制。安装完后要登陆配置wordpress，流程很简单的，只不过网络问题，得等而已。这里就不记录。</p>\n<p>　　这样，虽然看起来是安装程序，但是仔细看一下，我们看得到文件夹的，是可以上传下载的，数据库也是。管理文件有ftp方式，数据库有一个php页面，都是智能化的，不用自己在linux界面打命令（cPanel的作用–可视化操作）。这样，只要我们能忍受0.3kb/s和经常性断流，是可以把整个博客压缩下载下来，同时把数据库爬一份下来，布到本地，就能随便自己改css、js文件等等那些了，改完再传回去。</p>\n<p>　　怎么玩这个wordpress的，我就不详细说了，网上教程好多，这里贴个链接<a href=\"https://www.cnblogs.com/4770k/p/5199523.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">从零起步搭建Wordpress个人博客——Windows 平台篇（上）</a></p>\n<p>按教程，这里会遇到问题：</p>\n<p>　　网页打不开，报“iis运行php网站提示FastCgiModule错误模块”：打开控制面板，打开“启动或关系Windows功能”，选择iis下的“应用程序开发功能”，开启“CGI”即可。</p>\n<p><img src=\"/contentimg/6/3.png\" alt=\"Result pic 3\" title=\"开启CGI\"></p>\n<p>　　可以自己加几个挂件上去，写写js脚本，还是蛮好玩的。注意写脚本要区分desktop还是phone，我没接触过前端，所以只是简单的使用了窗口大小来判断，不同情况下，某些插件应该区别对待的。例如我引用了<a href=\"https://github.com/hustcc/canvas-nest.js\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">蜘蛛网浮动</a> 的特效。里面设置的是对应电脑端：99个浮动点。如果放到手机端，会密集恐惧症，所以这里就得改小了。这里360浏览器，反应wordpress的大小还是比较有趣的，双击时是变成移动端的宽度大小，所以可以粗略用这个来看效果。当然，还是谷歌浏览器写js脚本比较好。其他还有一个时钟挂件，代码是网上找到。js代码很好找，有现成的，实在不行，F12定位，也能看出来是那些代码，然后复制粘贴+修改，凑齐css+js+html就能跑出来效果了。这样抄了几个小特效，发现前端蛮好玩的，就是代码写起来没vs的美观，一直在想怎么会有人写代码不换行的？还有可视化编程，不能改的时候就能看到效果，只能改后，到浏览器刷新才能看到，这样调位置时超级烦（不过后面发现可以在浏览器中的缓存中改，就能实时看到效果，改好后复制回来就行）。总体上，还是推荐多多接触js的，短短的代码量就能实现很强大的功能。</p>\n<p>　　这里也提一下一些心得吧，在挂饰中，是可以添加js代码的，我的两个特效就是这样加进去的，就不用拉文件下来改，然后发回去的。然后就是发布后，是显示成全文的，所以在编写文章时，开头写大概内容后，添加“more标签”，这样显示出来的才是“大概内容”+“继续阅读”。</p>\n<p><img src=\"/contentimg/6/4.png\" alt=\"Result pic 4\" title=\"添加“继续阅读”标签\"></p>\n<p>　　说实话，这个买买买，然后建站的过程不耗时，真正耗时是DNS问题。</p>\n<p>　　第一天搭好后，第二天访问，发现404，登cPanel那边跳过去也不行。当时想不明白，只能删了重装。单独删wordpress是不行的，还是不能访问，所以问题不在wordpress上。后面重置cPanel就可以了，同时发现，主机IP变了。说明是服务器问题，后面找了相关的文章，了解到是用的人多，服务器承载不过来，就经常出现这个情况。当时改谷歌的dns、换手机热点、联通移动等等都试过没用。证明问题真不是出在我这边，真的是服务端那边的。ping域名ip，会发现基本不通。</p>\n<p>　　确实，一开始ping自己的域名，400+的延迟，然后挂DNSpod（现在和腾讯合作），没用，因为ip是国外的，所以需要用CDN加速。</p>\n<p>　　后面还是用的国外免费的：<a href=\"https://www.cloudflare.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">cloudflare</a></p>\n<p>　　登陆注册，设置好域名后，隔几个小时候再来ping，延迟只有200+了。</p>\n<p><img src=\"/contentimg/6/5.png\" alt=\"Result pic 5\" title=\"设置GoDaddy的域名服务器\"></p>\n<p><img src=\"/contentimg/6/6.png\" alt=\"Result pic 6\" title=\"选免费套餐\"></p>\n<p><img src=\"/contentimg/6/7.png\" alt=\"Result pic 7\" title=\"复制过去GoDaddy的两个链接\"></p>\n<p>　　当然，最好也做一下wordpress的优化，就是把插件全部删除，装两个加速的插件上去（有专门对应cloudflare的插件）。这样，虽然不能让第一次打开能快到什么地步，但是第二次打开却是能很快的（使用缓存加速功能）。</p>\n<p>　　这里能挂载，当然也能解除了：</p>\n<p><img src=\"/contentimg/6/8.png\" alt=\"Result pic 8\" title=\"解除挂载\"></p>\n<p>　　这个虚拟主机+WordPress，性价比不高，访问很慢，还经常性断网。后面我还是转战GitPage。</p>"},{"title":"六大设计模式原则","date":"2018-11-06T07:02:59.000Z","_content":"\n　　本文介绍为什么有“面向抽象编程”，以及六大原则。   \n\n<!-- more -->\n\n　　工作中，为什么新人要用好多时间，而且项目进展还越来越慢，问题越来越多的；而高手却是前面慢，后面项目越来越顺利的？\n\n　　这里排除技术上的因素外，主要就是编程思想的影响了。下面简单理论分析，暂不提供具体代码。\n\n## 为什么需要编程思想\n\n### 举例做超市收银系统\n\n　　一开始卖的是水果。有西瓜、苹果、香蕉等等，每种价格不同，包装方式不同等等好多不同，所以拆成多个水果class+main函数、计费系统&结算系统。\n\n#### 需求①：给每种水果标价格\n\n　　增加函数int Sell()获得。在main使用switch选择使用哪种水果。\n\n#### 需求②：卖相差的水果打折\n\n　　修改函数Sell，进行选择是否打折。\n\n#### 需求③：促销，买3个苹果送一个香蕉\n\n　　main函数中严格按照先苹果后香蕉的顺序收费，先计算多少个苹果，同时跨class，传递该数字给香蕉，香蕉个数减优惠。这里可以使用全局static，为了防止出问题，增加计费前的置零+结算后的置零操作函数；或者在main中传递参数，增加main中判断是否需要传递参数的代码。也要修改Sell函数！\n\n　　当需求变成买2个西瓜送苹果时，同样方式增加修改函数。现在3个class发生交叉，也出现了重复函数，最重要是main增加了计费顺序判断的大量代码，Sell函数也交错复杂。\n\n#### 需求④：买10元水果送优惠券，下次消费可以使用\n\n　　在main函数水果计费后，结算前的位置，第一次插入代码：检查是否有超过10元，并提示是否进行优惠减免。\n\n....\n\n### 项目回顾\n\n　　在增加N个需求后，回顾项目代码，发现简单几个功能而已，就十几个函数，十几个控制状态参数，甚至class间跨越交互，main函数更加是几千行的判断跳转代码。\n\n　　随着项目发展，后期加功能越来越难，而且加功能后，还会影响到前期的功能。\n\n　　而且如果这时候新拿了卖鱼的收银系统，怎么办？全部代码不能重用，得全部重写！\n\n　　软件真这么差吗？为什么网页在IE能打开，在360也能打开，在手机也能打开，那是他们做了十几套这样的页面来让我们打开吗？事实只有一个html。但是这里怎么都是收银系统，我就得分卖水果，然后卖鱼又得重新做了？\n\n### 引入设计模式解决困境\n\n　　目前该收银系统，是买东西，东西有很多种，有水果，有肉等等，但是收银系统，归根到底就是卖东西，分统计价格，结算两个步骤。\n\n　　统计价格，这里应该笼统成一个抽象---“顾客买的东西”。可以细分成很多种东西，但是它们只提供int Sell()函数出来。在main中统一调用该函数即可。所以这里创建根抽象类IGoods，提供对外int Sell()函数。然后由具体的物品类来继承重写该类。\n\n　　但是这样我怎么知道要使用哪个具体类？这就是商品条码的作用了。\n\n　　计费时，会嘀一下商品条码，这时候我得到了一个标识，这个标识是唯一的，能区分它是哪个具体计费类。所以在抽象类IGoods中增加传递该条码的函数。然后在子类中判断是否该条码对应的是自己，是的话才执行计费，不是就返回。\n\n　　这样的好处是：\n\n1. 同前面需求②，水果打折，那我直接增加新的类来处理就行，因为要打折的水果，条码是可以和普通水果不同来区分的。\n1. 需求③呢，一样，新增计费类(appleaddbanana)，内部通过实例化原有水果类来处理，这样对原先存在的那些代码不修改，而这个打折，也可以通过条码不同来区分。\n1. 需求④呢？给优惠券新增计费类，不过int Sell()出来的是负数而已。对原main代码保持不变！当然，这里你可能会说，没传递价格给优惠券，怎么知道要不要给优惠券的，等下被人恶意刷券怎么办？\n\n　　那就拆分吧，计费系统分成两个抽象：要卖东西+优惠。\n\n　　这样换卖鱼的系统，两个抽象类、main函数，计费函数和结算函数都不用修改，只需要新增具体计费类就行。如果牛逼一点，把这个“具体计费类”，通过反射、公式计算等等方式，搞成不用写代码就能实现具体类的那种，那更加简单了！拿到卖金条收银系统的项目，这个系统直接带过去，现场问一下有那些计费方式，整个excel，让程序读一下，马上就能运行正常计费收费了！\n\n## 编程思想是什么\n\n　　这个比较复杂，表现形式上，就是能让项目良好运行下去的思想。\n\n　　像前面的收银系统，抽象出来“卖的东西”+“优惠”，就解决了main函数中几千行switch的问题，甚至跨行业收银都不成问题了。这样的项目才有发展的可能性，才能衍生出卖鱼收银系统，卖金条收银系统等等多种多样的项目。不然，像未优化前那样，来多几个水果，整个系统就跑不动了，项目哪里还进行得下去？更别说思想传承了。\n\n　　而上面的利用“抽象”，实质就是课本上经常提到的“面向抽象编程”！编程思想很虚很广博，但是归根到底，就是“抽象”两个字。\n\n　　计算机，就是由1010这样的二进制组成的，在这个基础上，才衍生出了python、Lua、php，甚至中文的易语言等等众多的高级语言，它们表现层完全不一样，能实现的功能也不一样，但是抽象出来，都是同一个二进制。\n\n　　现在功能丰富的电子产品，功能越来越多，但是剖析下去，再剖析下去，就只是电路板上的1010。\n\n　　编程思想，实际就是抽象。有了抽象，才能有具体的实现，进而有丰富多彩的实现。\n\n　　编程思想由“六大原则”组成，是一个基于“抽象”，实现“高内聚，低耦合”目的的思想。\n\n## 六大原则\n\n### 单一责任原则\n\n>  单一责任原则(Single Responsibility Principle, SRP)：一个类/函数只负责一个功能，同时只能有一个因素引起它变化。\n\n　　像上面的收银系统，抽象后，一个类对应一个条码（一个变化因素），只对应一种水果的计费方式（一个功能）。\n\n　　这里不单单在class定义上，在函数的定义上也是。举例计算机加减乘除。最好的做法，就是把四个运算分为四个函数。这样就是一个变化因素--运算符，来选择应该执行哪个具体运算的函数，这个函数只负责这种运算功能。\n\n　　概念上很抽象，但是做到后，首先是能精简代码，避免重复的代码。因为抽出来函数后，在重复的地方，就是调用这个抽出来的函数，就避免了重复。\n\n　　其次，在这个函数里面，它只需要做好这件事就行，就能控制好输入输出，提高系统容错性。\n　　\n### 开闭原则\n\n> 开闭原则(Open-Closed Principle, OCP)：一个软件实体应当对扩展开放，对修改关闭。即软件实体应尽量在不修改原有代码的情况下进行扩展。\n\n　　同样拿收银系统举例，遵循开闭原则后，就不会去修改Sell函数。如果前期系统经过了测试，后面增加新功能就不用重复测试了，因为前面功能肯定不会被影响，从而节省人力。\n\n　　增加新功能，应该是加新的类/函数来实现。不应该修改原有的已经确定正确运行的代码。\n\n　　该原则，提倡避免修改原有的正常代码，尽量增加新代码。因为增加新功能会引入新的不确定性因素，所以需要避免影响到原有正常功能，以减少排错时的复杂度。\n\n### 里氏替换原则\n\n> 里氏替换原则(Liskov Substitution Principle, LSP)：所有引用基类（父类）的地方必须能使用其子类来替换而不报错且正常运行。\n\n　　在收银系统就用到这个，定义根抽象类IGoods，main函数里面调用它的Sell函数。后面具体实现时才用其子类。这样在替换新子类时，不影响系统，正常计费。\n\n　　这里也是C#的拆箱装箱问题。object能做的事，也能由继承它的子类来做。\n\n　　假设存入list<object>，这样装箱操作：这里能add(object)，也肯定能add(继承object的int)。\n\n　　这个原则得配合后面提到的原则，才能较好理解。\n\n### 依赖倒置原则\n\n> 依赖倒置原则(Dependency Inversion Principle, DIP)：抽象不应该依赖于细节，细节应当依赖于抽象。换言之，要针对接口编程，而不是针对实现编程。\n\n　　需要结合里氏替换原则理解。\n\n　　在收银系统中，依靠里氏替换原则，增加新收费物品。从而计费那里，根据这里的依赖倒置原则，它是根据抽象基类IGoods来收费Sell的，不是根据具体类来收费，所以才能正常计算Sell收费。\n\n　　“依赖倒置原则”和“里氏替换原则”，是成对出现的。同时这里也实现“开闭原则”的目的。\n\n### 接口隔离原则\n\n> 接口隔离原则(Interface Segregation Principle, ISP)：使用多个专门的接口，而不使用单一的总接口，即客户端不应该依赖那些它不需要的接口。\n\n　　例如收银系统里面，收费时分成两个抽象类：东西+优惠。不应该合并起来，因为并不是全部东西都有优惠，这样就避免了多余的无效代码。当然得结合实际情况编程，有的商品是大部分有优惠的，就可以合并了。\n\n　　这里提到的这个原则，就是避免冗余代码。结合“单一责任原则”一起用。\n\n　　例如记录存储数据，这里需要储存数据的操作：连接数据库/写本地文件/...，以及获取数据源的操作：http/界面填入/excel分析...。我可以定义成一个基类接口。但是如果遇到获取是数据库，存入却不是数据库的，就得新建子类了。这样总共有N1*N2种情况。\n\n　　而如果遵循接口隔离原则，分成两个接口，就是N1+N2种情况。两者效率，代码结构差距很大。\n\n### 迪米特法则\n\n> 迪米特法则(Law of Demeter, LoD)：一个软件实体应当尽可能少地与其他实体发生相互作用。\n\n　　又称\n\n> 最少知识原则(LeastKnowledge Principle, LKP)\n\n　　这是基于“单一责任原则”的，同时避免跨类操作，避免模块与模块间的关联。\n\n　　这个法则的目的是降低系统耦合度。减少类间的关联。\n\n　　这实际上是最难的一个原则。\n\n　　举例：收银系统中，买3个苹果送1个香蕉，这个功能需要苹果类和香蕉类关联起来。如果直接修改原苹果类，肯定不行，违背了开闭原则，而且也没遵循本原则，苹果类和香蕉类关联耦合了。那要怎么避免？只能引入第三方，第三个的责任就是处理3个苹果送1个香蕉问题。\n\n　　苹果和香蕉的代码没变，但是多了一个内部实例化引用它们两个的第三方类。\n\n　　同样的，如果买3个苹果和1个西瓜，就送1个香蕉，那就在这个第三方类中处理，当然也可以新建第三方类。\n\n　　代码上，这个第三方类归在优惠中，结算统计完后，传递统计数据给抽象优惠类，而这个优惠类的具体实现类就是这个第三方类，内部分析应该进行怎样的优惠减免计算。毕竟这个没得扫条码，而且是根据买的东西来算有没有优惠，所以是归优惠类。\n\n　　工程中常见就是设置一个manager管理类，负责不同模块类间的交互通讯。\n\n## 总结\n\n　　面向抽象编程为第一准则。尽量先定义接口，再写具体函数类。\n\n　　但是在简单工程，简单功能下，为了防止过度设计，是可以直接写具体类而不抽象的。毕竟设计模式是为了更好发展项目，是建立在项目会发展得越来越复杂前提下的。\n\n　　结尾贴一篇博文，是写六大设计原则比较好。[设计模式之六大原则（转载）](https://www.cnblogs.com/dolphin0520/p/3919839.html)  \n\n\n\n","source":"_posts/34DesignPattern.md","raw":"---\ntitle: 六大设计模式原则\ndate: 2018-11-06 15:02:59\ncategories:\n  - 设计模式\ntags:\n  - 设计模式\n---\n\n　　本文介绍为什么有“面向抽象编程”，以及六大原则。   \n\n<!-- more -->\n\n　　工作中，为什么新人要用好多时间，而且项目进展还越来越慢，问题越来越多的；而高手却是前面慢，后面项目越来越顺利的？\n\n　　这里排除技术上的因素外，主要就是编程思想的影响了。下面简单理论分析，暂不提供具体代码。\n\n## 为什么需要编程思想\n\n### 举例做超市收银系统\n\n　　一开始卖的是水果。有西瓜、苹果、香蕉等等，每种价格不同，包装方式不同等等好多不同，所以拆成多个水果class+main函数、计费系统&结算系统。\n\n#### 需求①：给每种水果标价格\n\n　　增加函数int Sell()获得。在main使用switch选择使用哪种水果。\n\n#### 需求②：卖相差的水果打折\n\n　　修改函数Sell，进行选择是否打折。\n\n#### 需求③：促销，买3个苹果送一个香蕉\n\n　　main函数中严格按照先苹果后香蕉的顺序收费，先计算多少个苹果，同时跨class，传递该数字给香蕉，香蕉个数减优惠。这里可以使用全局static，为了防止出问题，增加计费前的置零+结算后的置零操作函数；或者在main中传递参数，增加main中判断是否需要传递参数的代码。也要修改Sell函数！\n\n　　当需求变成买2个西瓜送苹果时，同样方式增加修改函数。现在3个class发生交叉，也出现了重复函数，最重要是main增加了计费顺序判断的大量代码，Sell函数也交错复杂。\n\n#### 需求④：买10元水果送优惠券，下次消费可以使用\n\n　　在main函数水果计费后，结算前的位置，第一次插入代码：检查是否有超过10元，并提示是否进行优惠减免。\n\n....\n\n### 项目回顾\n\n　　在增加N个需求后，回顾项目代码，发现简单几个功能而已，就十几个函数，十几个控制状态参数，甚至class间跨越交互，main函数更加是几千行的判断跳转代码。\n\n　　随着项目发展，后期加功能越来越难，而且加功能后，还会影响到前期的功能。\n\n　　而且如果这时候新拿了卖鱼的收银系统，怎么办？全部代码不能重用，得全部重写！\n\n　　软件真这么差吗？为什么网页在IE能打开，在360也能打开，在手机也能打开，那是他们做了十几套这样的页面来让我们打开吗？事实只有一个html。但是这里怎么都是收银系统，我就得分卖水果，然后卖鱼又得重新做了？\n\n### 引入设计模式解决困境\n\n　　目前该收银系统，是买东西，东西有很多种，有水果，有肉等等，但是收银系统，归根到底就是卖东西，分统计价格，结算两个步骤。\n\n　　统计价格，这里应该笼统成一个抽象---“顾客买的东西”。可以细分成很多种东西，但是它们只提供int Sell()函数出来。在main中统一调用该函数即可。所以这里创建根抽象类IGoods，提供对外int Sell()函数。然后由具体的物品类来继承重写该类。\n\n　　但是这样我怎么知道要使用哪个具体类？这就是商品条码的作用了。\n\n　　计费时，会嘀一下商品条码，这时候我得到了一个标识，这个标识是唯一的，能区分它是哪个具体计费类。所以在抽象类IGoods中增加传递该条码的函数。然后在子类中判断是否该条码对应的是自己，是的话才执行计费，不是就返回。\n\n　　这样的好处是：\n\n1. 同前面需求②，水果打折，那我直接增加新的类来处理就行，因为要打折的水果，条码是可以和普通水果不同来区分的。\n1. 需求③呢，一样，新增计费类(appleaddbanana)，内部通过实例化原有水果类来处理，这样对原先存在的那些代码不修改，而这个打折，也可以通过条码不同来区分。\n1. 需求④呢？给优惠券新增计费类，不过int Sell()出来的是负数而已。对原main代码保持不变！当然，这里你可能会说，没传递价格给优惠券，怎么知道要不要给优惠券的，等下被人恶意刷券怎么办？\n\n　　那就拆分吧，计费系统分成两个抽象：要卖东西+优惠。\n\n　　这样换卖鱼的系统，两个抽象类、main函数，计费函数和结算函数都不用修改，只需要新增具体计费类就行。如果牛逼一点，把这个“具体计费类”，通过反射、公式计算等等方式，搞成不用写代码就能实现具体类的那种，那更加简单了！拿到卖金条收银系统的项目，这个系统直接带过去，现场问一下有那些计费方式，整个excel，让程序读一下，马上就能运行正常计费收费了！\n\n## 编程思想是什么\n\n　　这个比较复杂，表现形式上，就是能让项目良好运行下去的思想。\n\n　　像前面的收银系统，抽象出来“卖的东西”+“优惠”，就解决了main函数中几千行switch的问题，甚至跨行业收银都不成问题了。这样的项目才有发展的可能性，才能衍生出卖鱼收银系统，卖金条收银系统等等多种多样的项目。不然，像未优化前那样，来多几个水果，整个系统就跑不动了，项目哪里还进行得下去？更别说思想传承了。\n\n　　而上面的利用“抽象”，实质就是课本上经常提到的“面向抽象编程”！编程思想很虚很广博，但是归根到底，就是“抽象”两个字。\n\n　　计算机，就是由1010这样的二进制组成的，在这个基础上，才衍生出了python、Lua、php，甚至中文的易语言等等众多的高级语言，它们表现层完全不一样，能实现的功能也不一样，但是抽象出来，都是同一个二进制。\n\n　　现在功能丰富的电子产品，功能越来越多，但是剖析下去，再剖析下去，就只是电路板上的1010。\n\n　　编程思想，实际就是抽象。有了抽象，才能有具体的实现，进而有丰富多彩的实现。\n\n　　编程思想由“六大原则”组成，是一个基于“抽象”，实现“高内聚，低耦合”目的的思想。\n\n## 六大原则\n\n### 单一责任原则\n\n>  单一责任原则(Single Responsibility Principle, SRP)：一个类/函数只负责一个功能，同时只能有一个因素引起它变化。\n\n　　像上面的收银系统，抽象后，一个类对应一个条码（一个变化因素），只对应一种水果的计费方式（一个功能）。\n\n　　这里不单单在class定义上，在函数的定义上也是。举例计算机加减乘除。最好的做法，就是把四个运算分为四个函数。这样就是一个变化因素--运算符，来选择应该执行哪个具体运算的函数，这个函数只负责这种运算功能。\n\n　　概念上很抽象，但是做到后，首先是能精简代码，避免重复的代码。因为抽出来函数后，在重复的地方，就是调用这个抽出来的函数，就避免了重复。\n\n　　其次，在这个函数里面，它只需要做好这件事就行，就能控制好输入输出，提高系统容错性。\n　　\n### 开闭原则\n\n> 开闭原则(Open-Closed Principle, OCP)：一个软件实体应当对扩展开放，对修改关闭。即软件实体应尽量在不修改原有代码的情况下进行扩展。\n\n　　同样拿收银系统举例，遵循开闭原则后，就不会去修改Sell函数。如果前期系统经过了测试，后面增加新功能就不用重复测试了，因为前面功能肯定不会被影响，从而节省人力。\n\n　　增加新功能，应该是加新的类/函数来实现。不应该修改原有的已经确定正确运行的代码。\n\n　　该原则，提倡避免修改原有的正常代码，尽量增加新代码。因为增加新功能会引入新的不确定性因素，所以需要避免影响到原有正常功能，以减少排错时的复杂度。\n\n### 里氏替换原则\n\n> 里氏替换原则(Liskov Substitution Principle, LSP)：所有引用基类（父类）的地方必须能使用其子类来替换而不报错且正常运行。\n\n　　在收银系统就用到这个，定义根抽象类IGoods，main函数里面调用它的Sell函数。后面具体实现时才用其子类。这样在替换新子类时，不影响系统，正常计费。\n\n　　这里也是C#的拆箱装箱问题。object能做的事，也能由继承它的子类来做。\n\n　　假设存入list<object>，这样装箱操作：这里能add(object)，也肯定能add(继承object的int)。\n\n　　这个原则得配合后面提到的原则，才能较好理解。\n\n### 依赖倒置原则\n\n> 依赖倒置原则(Dependency Inversion Principle, DIP)：抽象不应该依赖于细节，细节应当依赖于抽象。换言之，要针对接口编程，而不是针对实现编程。\n\n　　需要结合里氏替换原则理解。\n\n　　在收银系统中，依靠里氏替换原则，增加新收费物品。从而计费那里，根据这里的依赖倒置原则，它是根据抽象基类IGoods来收费Sell的，不是根据具体类来收费，所以才能正常计算Sell收费。\n\n　　“依赖倒置原则”和“里氏替换原则”，是成对出现的。同时这里也实现“开闭原则”的目的。\n\n### 接口隔离原则\n\n> 接口隔离原则(Interface Segregation Principle, ISP)：使用多个专门的接口，而不使用单一的总接口，即客户端不应该依赖那些它不需要的接口。\n\n　　例如收银系统里面，收费时分成两个抽象类：东西+优惠。不应该合并起来，因为并不是全部东西都有优惠，这样就避免了多余的无效代码。当然得结合实际情况编程，有的商品是大部分有优惠的，就可以合并了。\n\n　　这里提到的这个原则，就是避免冗余代码。结合“单一责任原则”一起用。\n\n　　例如记录存储数据，这里需要储存数据的操作：连接数据库/写本地文件/...，以及获取数据源的操作：http/界面填入/excel分析...。我可以定义成一个基类接口。但是如果遇到获取是数据库，存入却不是数据库的，就得新建子类了。这样总共有N1*N2种情况。\n\n　　而如果遵循接口隔离原则，分成两个接口，就是N1+N2种情况。两者效率，代码结构差距很大。\n\n### 迪米特法则\n\n> 迪米特法则(Law of Demeter, LoD)：一个软件实体应当尽可能少地与其他实体发生相互作用。\n\n　　又称\n\n> 最少知识原则(LeastKnowledge Principle, LKP)\n\n　　这是基于“单一责任原则”的，同时避免跨类操作，避免模块与模块间的关联。\n\n　　这个法则的目的是降低系统耦合度。减少类间的关联。\n\n　　这实际上是最难的一个原则。\n\n　　举例：收银系统中，买3个苹果送1个香蕉，这个功能需要苹果类和香蕉类关联起来。如果直接修改原苹果类，肯定不行，违背了开闭原则，而且也没遵循本原则，苹果类和香蕉类关联耦合了。那要怎么避免？只能引入第三方，第三个的责任就是处理3个苹果送1个香蕉问题。\n\n　　苹果和香蕉的代码没变，但是多了一个内部实例化引用它们两个的第三方类。\n\n　　同样的，如果买3个苹果和1个西瓜，就送1个香蕉，那就在这个第三方类中处理，当然也可以新建第三方类。\n\n　　代码上，这个第三方类归在优惠中，结算统计完后，传递统计数据给抽象优惠类，而这个优惠类的具体实现类就是这个第三方类，内部分析应该进行怎样的优惠减免计算。毕竟这个没得扫条码，而且是根据买的东西来算有没有优惠，所以是归优惠类。\n\n　　工程中常见就是设置一个manager管理类，负责不同模块类间的交互通讯。\n\n## 总结\n\n　　面向抽象编程为第一准则。尽量先定义接口，再写具体函数类。\n\n　　但是在简单工程，简单功能下，为了防止过度设计，是可以直接写具体类而不抽象的。毕竟设计模式是为了更好发展项目，是建立在项目会发展得越来越复杂前提下的。\n\n　　结尾贴一篇博文，是写六大设计原则比较好。[设计模式之六大原则（转载）](https://www.cnblogs.com/dolphin0520/p/3919839.html)  \n\n\n\n","slug":"34DesignPattern","published":1,"updated":"2018-11-07T16:50:13.714Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgrih0054jo9c7awn8itc","content":"<p>　　本文介绍为什么有“面向抽象编程”，以及六大原则。   </p>\n<a id=\"more\"></a>\n<p>　　工作中，为什么新人要用好多时间，而且项目进展还越来越慢，问题越来越多的；而高手却是前面慢，后面项目越来越顺利的？</p>\n<p>　　这里排除技术上的因素外，主要就是编程思想的影响了。下面简单理论分析，暂不提供具体代码。</p>\n<h2 id=\"为什么需要编程思想\"><a href=\"#为什么需要编程思想\" class=\"headerlink\" title=\"为什么需要编程思想\"></a>为什么需要编程思想</h2><h3 id=\"举例做超市收银系统\"><a href=\"#举例做超市收银系统\" class=\"headerlink\" title=\"举例做超市收银系统\"></a>举例做超市收银系统</h3><p>　　一开始卖的是水果。有西瓜、苹果、香蕉等等，每种价格不同，包装方式不同等等好多不同，所以拆成多个水果class+main函数、计费系统&amp;结算系统。</p>\n<h4 id=\"需求①：给每种水果标价格\"><a href=\"#需求①：给每种水果标价格\" class=\"headerlink\" title=\"需求①：给每种水果标价格\"></a>需求①：给每种水果标价格</h4><p>　　增加函数int Sell()获得。在main使用switch选择使用哪种水果。</p>\n<h4 id=\"需求②：卖相差的水果打折\"><a href=\"#需求②：卖相差的水果打折\" class=\"headerlink\" title=\"需求②：卖相差的水果打折\"></a>需求②：卖相差的水果打折</h4><p>　　修改函数Sell，进行选择是否打折。</p>\n<h4 id=\"需求③：促销，买3个苹果送一个香蕉\"><a href=\"#需求③：促销，买3个苹果送一个香蕉\" class=\"headerlink\" title=\"需求③：促销，买3个苹果送一个香蕉\"></a>需求③：促销，买3个苹果送一个香蕉</h4><p>　　main函数中严格按照先苹果后香蕉的顺序收费，先计算多少个苹果，同时跨class，传递该数字给香蕉，香蕉个数减优惠。这里可以使用全局static，为了防止出问题，增加计费前的置零+结算后的置零操作函数；或者在main中传递参数，增加main中判断是否需要传递参数的代码。也要修改Sell函数！</p>\n<p>　　当需求变成买2个西瓜送苹果时，同样方式增加修改函数。现在3个class发生交叉，也出现了重复函数，最重要是main增加了计费顺序判断的大量代码，Sell函数也交错复杂。</p>\n<h4 id=\"需求④：买10元水果送优惠券，下次消费可以使用\"><a href=\"#需求④：买10元水果送优惠券，下次消费可以使用\" class=\"headerlink\" title=\"需求④：买10元水果送优惠券，下次消费可以使用\"></a>需求④：买10元水果送优惠券，下次消费可以使用</h4><p>　　在main函数水果计费后，结算前的位置，第一次插入代码：检查是否有超过10元，并提示是否进行优惠减免。</p>\n<p>….</p>\n<h3 id=\"项目回顾\"><a href=\"#项目回顾\" class=\"headerlink\" title=\"项目回顾\"></a>项目回顾</h3><p>　　在增加N个需求后，回顾项目代码，发现简单几个功能而已，就十几个函数，十几个控制状态参数，甚至class间跨越交互，main函数更加是几千行的判断跳转代码。</p>\n<p>　　随着项目发展，后期加功能越来越难，而且加功能后，还会影响到前期的功能。</p>\n<p>　　而且如果这时候新拿了卖鱼的收银系统，怎么办？全部代码不能重用，得全部重写！</p>\n<p>　　软件真这么差吗？为什么网页在IE能打开，在360也能打开，在手机也能打开，那是他们做了十几套这样的页面来让我们打开吗？事实只有一个html。但是这里怎么都是收银系统，我就得分卖水果，然后卖鱼又得重新做了？</p>\n<h3 id=\"引入设计模式解决困境\"><a href=\"#引入设计模式解决困境\" class=\"headerlink\" title=\"引入设计模式解决困境\"></a>引入设计模式解决困境</h3><p>　　目前该收银系统，是买东西，东西有很多种，有水果，有肉等等，但是收银系统，归根到底就是卖东西，分统计价格，结算两个步骤。</p>\n<p>　　统计价格，这里应该笼统成一个抽象—“顾客买的东西”。可以细分成很多种东西，但是它们只提供int Sell()函数出来。在main中统一调用该函数即可。所以这里创建根抽象类IGoods，提供对外int Sell()函数。然后由具体的物品类来继承重写该类。</p>\n<p>　　但是这样我怎么知道要使用哪个具体类？这就是商品条码的作用了。</p>\n<p>　　计费时，会嘀一下商品条码，这时候我得到了一个标识，这个标识是唯一的，能区分它是哪个具体计费类。所以在抽象类IGoods中增加传递该条码的函数。然后在子类中判断是否该条码对应的是自己，是的话才执行计费，不是就返回。</p>\n<p>　　这样的好处是：</p>\n<ol>\n<li>同前面需求②，水果打折，那我直接增加新的类来处理就行，因为要打折的水果，条码是可以和普通水果不同来区分的。</li>\n<li>需求③呢，一样，新增计费类(appleaddbanana)，内部通过实例化原有水果类来处理，这样对原先存在的那些代码不修改，而这个打折，也可以通过条码不同来区分。</li>\n<li>需求④呢？给优惠券新增计费类，不过int Sell()出来的是负数而已。对原main代码保持不变！当然，这里你可能会说，没传递价格给优惠券，怎么知道要不要给优惠券的，等下被人恶意刷券怎么办？</li>\n</ol>\n<p>　　那就拆分吧，计费系统分成两个抽象：要卖东西+优惠。</p>\n<p>　　这样换卖鱼的系统，两个抽象类、main函数，计费函数和结算函数都不用修改，只需要新增具体计费类就行。如果牛逼一点，把这个“具体计费类”，通过反射、公式计算等等方式，搞成不用写代码就能实现具体类的那种，那更加简单了！拿到卖金条收银系统的项目，这个系统直接带过去，现场问一下有那些计费方式，整个excel，让程序读一下，马上就能运行正常计费收费了！</p>\n<h2 id=\"编程思想是什么\"><a href=\"#编程思想是什么\" class=\"headerlink\" title=\"编程思想是什么\"></a>编程思想是什么</h2><p>　　这个比较复杂，表现形式上，就是能让项目良好运行下去的思想。</p>\n<p>　　像前面的收银系统，抽象出来“卖的东西”+“优惠”，就解决了main函数中几千行switch的问题，甚至跨行业收银都不成问题了。这样的项目才有发展的可能性，才能衍生出卖鱼收银系统，卖金条收银系统等等多种多样的项目。不然，像未优化前那样，来多几个水果，整个系统就跑不动了，项目哪里还进行得下去？更别说思想传承了。</p>\n<p>　　而上面的利用“抽象”，实质就是课本上经常提到的“面向抽象编程”！编程思想很虚很广博，但是归根到底，就是“抽象”两个字。</p>\n<p>　　计算机，就是由1010这样的二进制组成的，在这个基础上，才衍生出了python、Lua、php，甚至中文的易语言等等众多的高级语言，它们表现层完全不一样，能实现的功能也不一样，但是抽象出来，都是同一个二进制。</p>\n<p>　　现在功能丰富的电子产品，功能越来越多，但是剖析下去，再剖析下去，就只是电路板上的1010。</p>\n<p>　　编程思想，实际就是抽象。有了抽象，才能有具体的实现，进而有丰富多彩的实现。</p>\n<p>　　编程思想由“六大原则”组成，是一个基于“抽象”，实现“高内聚，低耦合”目的的思想。</p>\n<h2 id=\"六大原则\"><a href=\"#六大原则\" class=\"headerlink\" title=\"六大原则\"></a>六大原则</h2><h3 id=\"单一责任原则\"><a href=\"#单一责任原则\" class=\"headerlink\" title=\"单一责任原则\"></a>单一责任原则</h3><blockquote>\n<p> 单一责任原则(Single Responsibility Principle, SRP)：一个类/函数只负责一个功能，同时只能有一个因素引起它变化。</p>\n</blockquote>\n<p>　　像上面的收银系统，抽象后，一个类对应一个条码（一个变化因素），只对应一种水果的计费方式（一个功能）。</p>\n<p>　　这里不单单在class定义上，在函数的定义上也是。举例计算机加减乘除。最好的做法，就是把四个运算分为四个函数。这样就是一个变化因素–运算符，来选择应该执行哪个具体运算的函数，这个函数只负责这种运算功能。</p>\n<p>　　概念上很抽象，但是做到后，首先是能精简代码，避免重复的代码。因为抽出来函数后，在重复的地方，就是调用这个抽出来的函数，就避免了重复。</p>\n<p>　　其次，在这个函数里面，它只需要做好这件事就行，就能控制好输入输出，提高系统容错性。\n　　</p>\n<h3 id=\"开闭原则\"><a href=\"#开闭原则\" class=\"headerlink\" title=\"开闭原则\"></a>开闭原则</h3><blockquote>\n<p>开闭原则(Open-Closed Principle, OCP)：一个软件实体应当对扩展开放，对修改关闭。即软件实体应尽量在不修改原有代码的情况下进行扩展。</p>\n</blockquote>\n<p>　　同样拿收银系统举例，遵循开闭原则后，就不会去修改Sell函数。如果前期系统经过了测试，后面增加新功能就不用重复测试了，因为前面功能肯定不会被影响，从而节省人力。</p>\n<p>　　增加新功能，应该是加新的类/函数来实现。不应该修改原有的已经确定正确运行的代码。</p>\n<p>　　该原则，提倡避免修改原有的正常代码，尽量增加新代码。因为增加新功能会引入新的不确定性因素，所以需要避免影响到原有正常功能，以减少排错时的复杂度。</p>\n<h3 id=\"里氏替换原则\"><a href=\"#里氏替换原则\" class=\"headerlink\" title=\"里氏替换原则\"></a>里氏替换原则</h3><blockquote>\n<p>里氏替换原则(Liskov Substitution Principle, LSP)：所有引用基类（父类）的地方必须能使用其子类来替换而不报错且正常运行。</p>\n</blockquote>\n<p>　　在收银系统就用到这个，定义根抽象类IGoods，main函数里面调用它的Sell函数。后面具体实现时才用其子类。这样在替换新子类时，不影响系统，正常计费。</p>\n<p>　　这里也是C#的拆箱装箱问题。object能做的事，也能由继承它的子类来做。</p>\n<p>　　假设存入list<object>，这样装箱操作：这里能add(object)，也肯定能add(继承object的int)。</object></p>\n<p>　　这个原则得配合后面提到的原则，才能较好理解。</p>\n<h3 id=\"依赖倒置原则\"><a href=\"#依赖倒置原则\" class=\"headerlink\" title=\"依赖倒置原则\"></a>依赖倒置原则</h3><blockquote>\n<p>依赖倒置原则(Dependency Inversion Principle, DIP)：抽象不应该依赖于细节，细节应当依赖于抽象。换言之，要针对接口编程，而不是针对实现编程。</p>\n</blockquote>\n<p>　　需要结合里氏替换原则理解。</p>\n<p>　　在收银系统中，依靠里氏替换原则，增加新收费物品。从而计费那里，根据这里的依赖倒置原则，它是根据抽象基类IGoods来收费Sell的，不是根据具体类来收费，所以才能正常计算Sell收费。</p>\n<p>　　“依赖倒置原则”和“里氏替换原则”，是成对出现的。同时这里也实现“开闭原则”的目的。</p>\n<h3 id=\"接口隔离原则\"><a href=\"#接口隔离原则\" class=\"headerlink\" title=\"接口隔离原则\"></a>接口隔离原则</h3><blockquote>\n<p>接口隔离原则(Interface Segregation Principle, ISP)：使用多个专门的接口，而不使用单一的总接口，即客户端不应该依赖那些它不需要的接口。</p>\n</blockquote>\n<p>　　例如收银系统里面，收费时分成两个抽象类：东西+优惠。不应该合并起来，因为并不是全部东西都有优惠，这样就避免了多余的无效代码。当然得结合实际情况编程，有的商品是大部分有优惠的，就可以合并了。</p>\n<p>　　这里提到的这个原则，就是避免冗余代码。结合“单一责任原则”一起用。</p>\n<p>　　例如记录存储数据，这里需要储存数据的操作：连接数据库/写本地文件/…，以及获取数据源的操作：http/界面填入/excel分析…。我可以定义成一个基类接口。但是如果遇到获取是数据库，存入却不是数据库的，就得新建子类了。这样总共有N1*N2种情况。</p>\n<p>　　而如果遵循接口隔离原则，分成两个接口，就是N1+N2种情况。两者效率，代码结构差距很大。</p>\n<h3 id=\"迪米特法则\"><a href=\"#迪米特法则\" class=\"headerlink\" title=\"迪米特法则\"></a>迪米特法则</h3><blockquote>\n<p>迪米特法则(Law of Demeter, LoD)：一个软件实体应当尽可能少地与其他实体发生相互作用。</p>\n</blockquote>\n<p>　　又称</p>\n<blockquote>\n<p>最少知识原则(LeastKnowledge Principle, LKP)</p>\n</blockquote>\n<p>　　这是基于“单一责任原则”的，同时避免跨类操作，避免模块与模块间的关联。</p>\n<p>　　这个法则的目的是降低系统耦合度。减少类间的关联。</p>\n<p>　　这实际上是最难的一个原则。</p>\n<p>　　举例：收银系统中，买3个苹果送1个香蕉，这个功能需要苹果类和香蕉类关联起来。如果直接修改原苹果类，肯定不行，违背了开闭原则，而且也没遵循本原则，苹果类和香蕉类关联耦合了。那要怎么避免？只能引入第三方，第三个的责任就是处理3个苹果送1个香蕉问题。</p>\n<p>　　苹果和香蕉的代码没变，但是多了一个内部实例化引用它们两个的第三方类。</p>\n<p>　　同样的，如果买3个苹果和1个西瓜，就送1个香蕉，那就在这个第三方类中处理，当然也可以新建第三方类。</p>\n<p>　　代码上，这个第三方类归在优惠中，结算统计完后，传递统计数据给抽象优惠类，而这个优惠类的具体实现类就是这个第三方类，内部分析应该进行怎样的优惠减免计算。毕竟这个没得扫条码，而且是根据买的东西来算有没有优惠，所以是归优惠类。</p>\n<p>　　工程中常见就是设置一个manager管理类，负责不同模块类间的交互通讯。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>　　面向抽象编程为第一准则。尽量先定义接口，再写具体函数类。</p>\n<p>　　但是在简单工程，简单功能下，为了防止过度设计，是可以直接写具体类而不抽象的。毕竟设计模式是为了更好发展项目，是建立在项目会发展得越来越复杂前提下的。</p>\n<p>　　结尾贴一篇博文，是写六大设计原则比较好。<a href=\"https://www.cnblogs.com/dolphin0520/p/3919839.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">设计模式之六大原则（转载）</a>  </p>\n","site":{"data":{}},"excerpt":"<p>　　本文介绍为什么有“面向抽象编程”，以及六大原则。   </p>","more":"<p>　　工作中，为什么新人要用好多时间，而且项目进展还越来越慢，问题越来越多的；而高手却是前面慢，后面项目越来越顺利的？</p>\n<p>　　这里排除技术上的因素外，主要就是编程思想的影响了。下面简单理论分析，暂不提供具体代码。</p>\n<h2 id=\"为什么需要编程思想\"><a href=\"#为什么需要编程思想\" class=\"headerlink\" title=\"为什么需要编程思想\"></a>为什么需要编程思想</h2><h3 id=\"举例做超市收银系统\"><a href=\"#举例做超市收银系统\" class=\"headerlink\" title=\"举例做超市收银系统\"></a>举例做超市收银系统</h3><p>　　一开始卖的是水果。有西瓜、苹果、香蕉等等，每种价格不同，包装方式不同等等好多不同，所以拆成多个水果class+main函数、计费系统&amp;结算系统。</p>\n<h4 id=\"需求①：给每种水果标价格\"><a href=\"#需求①：给每种水果标价格\" class=\"headerlink\" title=\"需求①：给每种水果标价格\"></a>需求①：给每种水果标价格</h4><p>　　增加函数int Sell()获得。在main使用switch选择使用哪种水果。</p>\n<h4 id=\"需求②：卖相差的水果打折\"><a href=\"#需求②：卖相差的水果打折\" class=\"headerlink\" title=\"需求②：卖相差的水果打折\"></a>需求②：卖相差的水果打折</h4><p>　　修改函数Sell，进行选择是否打折。</p>\n<h4 id=\"需求③：促销，买3个苹果送一个香蕉\"><a href=\"#需求③：促销，买3个苹果送一个香蕉\" class=\"headerlink\" title=\"需求③：促销，买3个苹果送一个香蕉\"></a>需求③：促销，买3个苹果送一个香蕉</h4><p>　　main函数中严格按照先苹果后香蕉的顺序收费，先计算多少个苹果，同时跨class，传递该数字给香蕉，香蕉个数减优惠。这里可以使用全局static，为了防止出问题，增加计费前的置零+结算后的置零操作函数；或者在main中传递参数，增加main中判断是否需要传递参数的代码。也要修改Sell函数！</p>\n<p>　　当需求变成买2个西瓜送苹果时，同样方式增加修改函数。现在3个class发生交叉，也出现了重复函数，最重要是main增加了计费顺序判断的大量代码，Sell函数也交错复杂。</p>\n<h4 id=\"需求④：买10元水果送优惠券，下次消费可以使用\"><a href=\"#需求④：买10元水果送优惠券，下次消费可以使用\" class=\"headerlink\" title=\"需求④：买10元水果送优惠券，下次消费可以使用\"></a>需求④：买10元水果送优惠券，下次消费可以使用</h4><p>　　在main函数水果计费后，结算前的位置，第一次插入代码：检查是否有超过10元，并提示是否进行优惠减免。</p>\n<p>….</p>\n<h3 id=\"项目回顾\"><a href=\"#项目回顾\" class=\"headerlink\" title=\"项目回顾\"></a>项目回顾</h3><p>　　在增加N个需求后，回顾项目代码，发现简单几个功能而已，就十几个函数，十几个控制状态参数，甚至class间跨越交互，main函数更加是几千行的判断跳转代码。</p>\n<p>　　随着项目发展，后期加功能越来越难，而且加功能后，还会影响到前期的功能。</p>\n<p>　　而且如果这时候新拿了卖鱼的收银系统，怎么办？全部代码不能重用，得全部重写！</p>\n<p>　　软件真这么差吗？为什么网页在IE能打开，在360也能打开，在手机也能打开，那是他们做了十几套这样的页面来让我们打开吗？事实只有一个html。但是这里怎么都是收银系统，我就得分卖水果，然后卖鱼又得重新做了？</p>\n<h3 id=\"引入设计模式解决困境\"><a href=\"#引入设计模式解决困境\" class=\"headerlink\" title=\"引入设计模式解决困境\"></a>引入设计模式解决困境</h3><p>　　目前该收银系统，是买东西，东西有很多种，有水果，有肉等等，但是收银系统，归根到底就是卖东西，分统计价格，结算两个步骤。</p>\n<p>　　统计价格，这里应该笼统成一个抽象—“顾客买的东西”。可以细分成很多种东西，但是它们只提供int Sell()函数出来。在main中统一调用该函数即可。所以这里创建根抽象类IGoods，提供对外int Sell()函数。然后由具体的物品类来继承重写该类。</p>\n<p>　　但是这样我怎么知道要使用哪个具体类？这就是商品条码的作用了。</p>\n<p>　　计费时，会嘀一下商品条码，这时候我得到了一个标识，这个标识是唯一的，能区分它是哪个具体计费类。所以在抽象类IGoods中增加传递该条码的函数。然后在子类中判断是否该条码对应的是自己，是的话才执行计费，不是就返回。</p>\n<p>　　这样的好处是：</p>\n<ol>\n<li>同前面需求②，水果打折，那我直接增加新的类来处理就行，因为要打折的水果，条码是可以和普通水果不同来区分的。</li>\n<li>需求③呢，一样，新增计费类(appleaddbanana)，内部通过实例化原有水果类来处理，这样对原先存在的那些代码不修改，而这个打折，也可以通过条码不同来区分。</li>\n<li>需求④呢？给优惠券新增计费类，不过int Sell()出来的是负数而已。对原main代码保持不变！当然，这里你可能会说，没传递价格给优惠券，怎么知道要不要给优惠券的，等下被人恶意刷券怎么办？</li>\n</ol>\n<p>　　那就拆分吧，计费系统分成两个抽象：要卖东西+优惠。</p>\n<p>　　这样换卖鱼的系统，两个抽象类、main函数，计费函数和结算函数都不用修改，只需要新增具体计费类就行。如果牛逼一点，把这个“具体计费类”，通过反射、公式计算等等方式，搞成不用写代码就能实现具体类的那种，那更加简单了！拿到卖金条收银系统的项目，这个系统直接带过去，现场问一下有那些计费方式，整个excel，让程序读一下，马上就能运行正常计费收费了！</p>\n<h2 id=\"编程思想是什么\"><a href=\"#编程思想是什么\" class=\"headerlink\" title=\"编程思想是什么\"></a>编程思想是什么</h2><p>　　这个比较复杂，表现形式上，就是能让项目良好运行下去的思想。</p>\n<p>　　像前面的收银系统，抽象出来“卖的东西”+“优惠”，就解决了main函数中几千行switch的问题，甚至跨行业收银都不成问题了。这样的项目才有发展的可能性，才能衍生出卖鱼收银系统，卖金条收银系统等等多种多样的项目。不然，像未优化前那样，来多几个水果，整个系统就跑不动了，项目哪里还进行得下去？更别说思想传承了。</p>\n<p>　　而上面的利用“抽象”，实质就是课本上经常提到的“面向抽象编程”！编程思想很虚很广博，但是归根到底，就是“抽象”两个字。</p>\n<p>　　计算机，就是由1010这样的二进制组成的，在这个基础上，才衍生出了python、Lua、php，甚至中文的易语言等等众多的高级语言，它们表现层完全不一样，能实现的功能也不一样，但是抽象出来，都是同一个二进制。</p>\n<p>　　现在功能丰富的电子产品，功能越来越多，但是剖析下去，再剖析下去，就只是电路板上的1010。</p>\n<p>　　编程思想，实际就是抽象。有了抽象，才能有具体的实现，进而有丰富多彩的实现。</p>\n<p>　　编程思想由“六大原则”组成，是一个基于“抽象”，实现“高内聚，低耦合”目的的思想。</p>\n<h2 id=\"六大原则\"><a href=\"#六大原则\" class=\"headerlink\" title=\"六大原则\"></a>六大原则</h2><h3 id=\"单一责任原则\"><a href=\"#单一责任原则\" class=\"headerlink\" title=\"单一责任原则\"></a>单一责任原则</h3><blockquote>\n<p> 单一责任原则(Single Responsibility Principle, SRP)：一个类/函数只负责一个功能，同时只能有一个因素引起它变化。</p>\n</blockquote>\n<p>　　像上面的收银系统，抽象后，一个类对应一个条码（一个变化因素），只对应一种水果的计费方式（一个功能）。</p>\n<p>　　这里不单单在class定义上，在函数的定义上也是。举例计算机加减乘除。最好的做法，就是把四个运算分为四个函数。这样就是一个变化因素–运算符，来选择应该执行哪个具体运算的函数，这个函数只负责这种运算功能。</p>\n<p>　　概念上很抽象，但是做到后，首先是能精简代码，避免重复的代码。因为抽出来函数后，在重复的地方，就是调用这个抽出来的函数，就避免了重复。</p>\n<p>　　其次，在这个函数里面，它只需要做好这件事就行，就能控制好输入输出，提高系统容错性。\n　　</p>\n<h3 id=\"开闭原则\"><a href=\"#开闭原则\" class=\"headerlink\" title=\"开闭原则\"></a>开闭原则</h3><blockquote>\n<p>开闭原则(Open-Closed Principle, OCP)：一个软件实体应当对扩展开放，对修改关闭。即软件实体应尽量在不修改原有代码的情况下进行扩展。</p>\n</blockquote>\n<p>　　同样拿收银系统举例，遵循开闭原则后，就不会去修改Sell函数。如果前期系统经过了测试，后面增加新功能就不用重复测试了，因为前面功能肯定不会被影响，从而节省人力。</p>\n<p>　　增加新功能，应该是加新的类/函数来实现。不应该修改原有的已经确定正确运行的代码。</p>\n<p>　　该原则，提倡避免修改原有的正常代码，尽量增加新代码。因为增加新功能会引入新的不确定性因素，所以需要避免影响到原有正常功能，以减少排错时的复杂度。</p>\n<h3 id=\"里氏替换原则\"><a href=\"#里氏替换原则\" class=\"headerlink\" title=\"里氏替换原则\"></a>里氏替换原则</h3><blockquote>\n<p>里氏替换原则(Liskov Substitution Principle, LSP)：所有引用基类（父类）的地方必须能使用其子类来替换而不报错且正常运行。</p>\n</blockquote>\n<p>　　在收银系统就用到这个，定义根抽象类IGoods，main函数里面调用它的Sell函数。后面具体实现时才用其子类。这样在替换新子类时，不影响系统，正常计费。</p>\n<p>　　这里也是C#的拆箱装箱问题。object能做的事，也能由继承它的子类来做。</p>\n<p>　　假设存入list<object>，这样装箱操作：这里能add(object)，也肯定能add(继承object的int)。</object></p>\n<p>　　这个原则得配合后面提到的原则，才能较好理解。</p>\n<h3 id=\"依赖倒置原则\"><a href=\"#依赖倒置原则\" class=\"headerlink\" title=\"依赖倒置原则\"></a>依赖倒置原则</h3><blockquote>\n<p>依赖倒置原则(Dependency Inversion Principle, DIP)：抽象不应该依赖于细节，细节应当依赖于抽象。换言之，要针对接口编程，而不是针对实现编程。</p>\n</blockquote>\n<p>　　需要结合里氏替换原则理解。</p>\n<p>　　在收银系统中，依靠里氏替换原则，增加新收费物品。从而计费那里，根据这里的依赖倒置原则，它是根据抽象基类IGoods来收费Sell的，不是根据具体类来收费，所以才能正常计算Sell收费。</p>\n<p>　　“依赖倒置原则”和“里氏替换原则”，是成对出现的。同时这里也实现“开闭原则”的目的。</p>\n<h3 id=\"接口隔离原则\"><a href=\"#接口隔离原则\" class=\"headerlink\" title=\"接口隔离原则\"></a>接口隔离原则</h3><blockquote>\n<p>接口隔离原则(Interface Segregation Principle, ISP)：使用多个专门的接口，而不使用单一的总接口，即客户端不应该依赖那些它不需要的接口。</p>\n</blockquote>\n<p>　　例如收银系统里面，收费时分成两个抽象类：东西+优惠。不应该合并起来，因为并不是全部东西都有优惠，这样就避免了多余的无效代码。当然得结合实际情况编程，有的商品是大部分有优惠的，就可以合并了。</p>\n<p>　　这里提到的这个原则，就是避免冗余代码。结合“单一责任原则”一起用。</p>\n<p>　　例如记录存储数据，这里需要储存数据的操作：连接数据库/写本地文件/…，以及获取数据源的操作：http/界面填入/excel分析…。我可以定义成一个基类接口。但是如果遇到获取是数据库，存入却不是数据库的，就得新建子类了。这样总共有N1*N2种情况。</p>\n<p>　　而如果遵循接口隔离原则，分成两个接口，就是N1+N2种情况。两者效率，代码结构差距很大。</p>\n<h3 id=\"迪米特法则\"><a href=\"#迪米特法则\" class=\"headerlink\" title=\"迪米特法则\"></a>迪米特法则</h3><blockquote>\n<p>迪米特法则(Law of Demeter, LoD)：一个软件实体应当尽可能少地与其他实体发生相互作用。</p>\n</blockquote>\n<p>　　又称</p>\n<blockquote>\n<p>最少知识原则(LeastKnowledge Principle, LKP)</p>\n</blockquote>\n<p>　　这是基于“单一责任原则”的，同时避免跨类操作，避免模块与模块间的关联。</p>\n<p>　　这个法则的目的是降低系统耦合度。减少类间的关联。</p>\n<p>　　这实际上是最难的一个原则。</p>\n<p>　　举例：收银系统中，买3个苹果送1个香蕉，这个功能需要苹果类和香蕉类关联起来。如果直接修改原苹果类，肯定不行，违背了开闭原则，而且也没遵循本原则，苹果类和香蕉类关联耦合了。那要怎么避免？只能引入第三方，第三个的责任就是处理3个苹果送1个香蕉问题。</p>\n<p>　　苹果和香蕉的代码没变，但是多了一个内部实例化引用它们两个的第三方类。</p>\n<p>　　同样的，如果买3个苹果和1个西瓜，就送1个香蕉，那就在这个第三方类中处理，当然也可以新建第三方类。</p>\n<p>　　代码上，这个第三方类归在优惠中，结算统计完后，传递统计数据给抽象优惠类，而这个优惠类的具体实现类就是这个第三方类，内部分析应该进行怎样的优惠减免计算。毕竟这个没得扫条码，而且是根据买的东西来算有没有优惠，所以是归优惠类。</p>\n<p>　　工程中常见就是设置一个manager管理类，负责不同模块类间的交互通讯。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>　　面向抽象编程为第一准则。尽量先定义接口，再写具体函数类。</p>\n<p>　　但是在简单工程，简单功能下，为了防止过度设计，是可以直接写具体类而不抽象的。毕竟设计模式是为了更好发展项目，是建立在项目会发展得越来越复杂前提下的。</p>\n<p>　　结尾贴一篇博文，是写六大设计原则比较好。<a href=\"https://www.cnblogs.com/dolphin0520/p/3919839.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">设计模式之六大原则（转载）</a>  </p>"},{"title":"搭建个人博客心得---github+Hexo","date":"2018-10-16T15:55:58.000Z","_content":"\t\n　　本文是记录如何安装环境，发布初版个人GitPage网页。该系列有3篇：1.付费虚拟云主机+WordPress；2.免费github+Hexo；3.个人站点yaojx.net的优化之路。\n\n<!-- more -->\n　　这个比较好玩，逼格高好多，网速也快了好多。是利用GitHub的[GitPage](https://pages.github.com/)  技术，把自己通过Hexo工具编译出来的静态html文件放在帐号共享项目中，就能让别人通过“用户名.github.io”固定连接来访问你的这些html网页。后面加上DNS转址功能把那串固定连接隐藏掉，基本别人就看不出来你这个网站是主机承载还是gitpage了。\n\n## 一.环境准备\n\n　　首先当然是：注册[GitHub](https://github.com/)  帐号，当然，国内的[Coding](https://coding.net/) 也行，就是[Coding Pages](https://coding.net/help/doc/coding-service/coding-pages-introduction.html) 。最终我采用的方案是布到GitHub，同时备份一份到Coding，国内访问就用Coding，ping只有50，秒开。GitHub优化到最后，DNS解析始终突破不了，因为它的服务器是在国外。 \n\n### 1.1 安装Node.js\n\n　　[Nodejs官网](https://nodejs.org/en/)\n\n　　[Nodejs下载](http://nodejs.cn/download/)\n\n　　[Nodejs安装教程](https://segmentfault.com/a/1190000004947261)\n\n![Result pic 1](/contentimg/7/1.png \"Node安装检验\")\n\n``` cmd\nnode -v\n```\n\n### 1.2 安装Git\n\n　　[Git下载](https://git-scm.com/download/)\n\n　　安装完成git后，在桌面创建一个快捷方式，这时候点击启动后，里面的路径会是C盘下的。为了使用方便，我们是希望它直接cd到博客所在的目录，可以按照下面这样改：删除“--cd-to-home”、“%HOMEDRIVE%%HOMEPATH%”；添加博客目录到“起始位置”。\n\n![Result pic 2](/contentimg/7/2.png \"Git小窍门\")\n\n　　检验安装情况：\n\n![Result pic 3](/contentimg/7/3.png \"npm版本检查\")\n\n``` bash\nnpm -v\n```\n\n　　我当时遇到“bash: npm: command not found”。后面搜索到是没安装好，只能在cmd下使用，需要在gitbash里面再装。\n\n　　需要输入命令“ git clone --recursive git://github.com/isaacs/npm.git”，然后再输入“cd npm”，“node cli.js install npm -gf”\n\n``` bash\ngit clone --recursive git://github.com/isaacs/npm.git\ncd npm\nnode cli.js install npm -gf\n```\n\n\n[windows git bash npm: command not found](https://blog.csdn.net/daocaoren92wq/article/details/64444532)\n\n### 1.3 安装Hexo\n\n　　先选个文件夹作为博客文件存储。这里我选“D:\\source\\yaojiaxinpc”。\n\n　　打开gitbash，cd到这个目录。安装hexo：输入指令“npm install hexo-cli -g ”。\n\n　　等它下载安装好后，输入指令“hexo init”。当然后面可以加文件夹的名字。不加就默认装在当前目录。\n\n``` bash\n//安装hexo\nnpm install hexo-cli -g\n\n//查看hexo版本\nhexo -v\n\n//初始化hexo\nhexo init\n//会下载文件到当前目录，生成node_modules等文件夹\n```\n\n![Result pic 6](/contentimg/7/6.png \"hexo安装\")\n\n\n![Result pic 4](/contentimg/7/4.png \"npm工具保存目录\")\n\n\n　　后期文件夹中的“node_modules”目录，都是从这里的cmd运行编译过去的。\n\n\n## 二.初次建站\n\n### 2.1 Hexo建站\n\n　　这里贴一下[npm主页](https://www.npmjs.com/) 。上面好东西蛮多，工具类等等。\n\n　　说明文档：[What is npm?](https://docs.npmjs.com/getting-started/what-is-npm)\n\n![Result pic 7](/contentimg/7/7.png \"初始化完成hexo\")\n\n　　站址文件生成指令：\n\n``` bash\nhexo g  //hexo generate\n```\n\n![Result pic 8](/contentimg/7/8.png \"生成Public文件夹\")\n\n\n　　这时候目录下会多出来一个Public文件夹。里面的东西就是我们需要的网站文件，到时发布到网上的也是这里的东西（不是整个工程，就Public目录下的文件直接上传就行，不然会报错。）\n\n![Result pic 5](/contentimg/7/5.png \"上传整个工程导致的错误\")\n\n\n![Result pic 10](/contentimg/7/10.png \"快捷方式出权限问题\")\n\n\n　　***这里我也遇到“hexo Permission denied”的问题，是权限问题，但是由于是运行在windows系统，不是sudo，也不是unsafe和SSH密钥问题。最后解决的方法是：打开gitbash的源文件，cd到新目录重新上面部署的步骤，运行完，快捷方式那个就正常了***\n\n### 2.2 本地站址访问\n\n``` bash\nhexo s  //hexo server\n```\n\n![Result pic 9](/contentimg/7/9.png \"本地启动html服务\")\n\n### 2.3 目录结构说明\n\n![Result pic 11](/contentimg/7/11.png \"主目录下文件\")\n\n\n　　第一个“node_modules”，都是工具里面的东西，不用关注，当作编译工具看待吧，就是根据“package.json”里面记录的要安装的工具，安装到这个目录底下。\n\n　　重点关注的是“_config.yml”文件，然后就是“themes”，主题目录，接着是“source”：放博文和图片等等其他东西的地方。\n\n　　“public”是生成html等最终产物的地方，到时提交这个目录里面的东西上去就行，推荐用GitHub DeskTop，或者SVN提交。厉害的也可以用gitbash。\n\n　　“scaffolds”目录，就一些模版而已。可以在gitbash里面打：\n\n``` bash\nhexo new pagename\n```\n\n![Result pic 12](/contentimg/7/12.png \"指令生成页面md文件\")\n\n\n## 三.发布Page\n\n### 3.1.1 GitHub准备\n\n\n　　这里可以弄SSH密钥后，设置成gitbash来直接“hexo d”就上传public文件目录。也可以手动拖文件到GitHub DeskTop里上传。而拉到网页上的话，github是支持的，但是coding不支持多文件。\n\n　　注意要先安装插件：\n\n>  npm install hexo-deployer-git --save\n\n　　下面记录SSH key方式，因为这种方式可以直接gitbash界面操作，可以在执行完“hexo g”后直接“hexo d -m 'comment message'”就部署上去，很方便。\n\n　　登陆github个人主页，个人头像下拉-->Settings-->SSH and GPG keys-->New SSH key\n\n![Result pic 13](/contentimg/7/13.png \"New SSH Key\")\n\n\n　　然后回到电脑上，生成key文件：\n\n``` bash\nssh-keygen -t rsa -C \"git邮箱\"\n```\n\n　　连续3次回车就行，就会生成key文件。在系统当前用户目录下(开启查看隐藏文件) %homepath%\\.ssh\n\n![Result pic 14](/contentimg/7/14.png \"key文件\")\n\n\n　　将id_rsa.pub文件以文本方式打开。打开之后全部复制到key中。\n\n　　然后就可以回gitbash测试情况：\n\n``` bash\nssh -T git@github.com\n\nyes\n```\n\n![Result pic 15](/contentimg/7/15.png \"检查连接\")\n\n\n``` bash\ngit config --global user.name \"git用户名\"\ngit config --global user.email \"git邮箱\"\n```\n\n　　还没结束，还需要到“_config.yml”文件进行对应的配置：\n\n![Result pic 16](/contentimg/7/16.png \"配置提交目录和分支\")\n\n\n　　记住，这里使用的是SSH，所以repository也应该用SSH目录下的。\n\n![Result pic 17](/contentimg/7/17.png \"repository地址\")\n\n　　在github desktop中，这里才是用https下的地址。两个使用的是不同的协议的。\n\n　　同时注意是主线master。\n\n\n### 3.1.2 GitPage访问\n\n　　到浏览器中输入YaojiaxinPC.github.io (用户名.github.io)。就可以看了。\n\n这里也记录一下gitpage的一些细节吧。\n\n![Result pic 18](/contentimg/7/18.png \"创建代码库\")\n\n\n　　刚注册好后，点击头像左边的“+”，新建目录“New repository”。根据gitpage推荐，是“用户名”+github.io，当然也可以起其他名字，只是起其他名字的话，就变成三级域名了，前缀会自动给你加“用户名.github.io”，后面的才是“/”+你这里起的名字。\n\n![Result pic 19](/contentimg/7/19.png \"page设置选项\")\n\n　　在这个页面往下拉，到图中这里，就是设置你的page是关联哪个代码库的，所以是可以更改的。第一次弄的时候，可以到这里选Theme，然后根据步骤自动生成一个页面来试试看效果。\n\n\n　　再往下的，就是删库功能项了。\n　　\n　　剩下的，就是一点点修改，本地看效果后，更新上来看外网效果了。\n\n\n### 3.2.1 Coding准备\n\n　　这里也讲讲国内的coding吧。\n\n　　和github差距还是蛮大的，不过好在国内访问快。现在和TX联手了，收费项目也变多了。商业用途用它还不错，但是个人非盈利的就不好说了。不过还是多多支持国产吧。这里还是得感谢coding的，gitpage那边，整优化搞了两三天，都不理想，访问最快2s起步（还是半夜3、4点的才能达到这个效果），后面还是挂到coding这边，就能秒开了。\n　　\n![Result pic 20](/contentimg/7/20.png \"coding开启page\")\n\n\n### 3.2.2 Coding Pages访问\n\n　　coding做得比gitpage好的地方还是有的，在dns转址上，极其方便，还加了https访问。这点得给个赞。\n\n![Result pic 21](/contentimg/7/21.png \"coding设置page\")\n\n\n　　这里的设置和gitpage的是一样的，不过更好操作一些。而且还没项目名字限制，想起什么名字都行。\n\n\n## 四.Hexo更换Themes\n\n\n　　到这里，其实已经可以自己做博客放上去了。不过，作为一个非前端人员，而我又觉得初始版面不好看，怎么处理？幸好hexo早考虑到这个，给了好多皮肤让我们换。\n\n　　[Hexo主题官网](https://github.com/hexojs/hexo/wiki/Themes)\n\n\n### 更换Next主题\n\n　　我比较喜欢头像挂左边的，加上搜索教程的时候，都是推荐[yilia](https://github.com/litten/hexo-theme-yilia) 的。所以一开始是用的这个主题。\n\n``` bash\nhexo clean //删除public目录（建议每次生成都要执行该删除指令，防止冲突）\ngit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n```\n\n　　这里的操作，其实就是去github上拷贝一个皮肤下来，放到目录“themes/yilia”。所以其实你也可以手动去网页上下载zip，然后解压到themes目录下就行。\n\n　　下载好themes后，修改主配置文件：\n\n![Result pic 22](/contentimg/7/22.png \"修改主配置文件应用新皮肤\")\n\n　　该部分另外开一个文章详细说明。\n\n　　结尾贴一下几篇Markdown的介绍网址吧。\n\n　　当然还有个中文前面隔开两个空格的小窍门：英文输入法下，切全角，然后两下空格。\n\n[Cmd Markdown 编辑阅读器](https://www.zybuluo.com/mdeditor#fnref:code)\n\n[MaHua 在线markdown编辑器](http://mahua.jser.me/)\n\n[Markdown 基本语法](https://wizardforcel.gitbooks.io/markdown-simple-world/2.html)\n\n[Markdown 语法整理大集合2017](https://segmentfault.com/a/1190000010223222)\n","source":"_posts/7CreatGitPage.md","raw":"---\ntitle: 搭建个人博客心得---github+Hexo\ndate: 2018-10-16 23:55:58\ncategories:\n  - 编程人生\ntags:\n  - 个人博客  \n---\n\t\n　　本文是记录如何安装环境，发布初版个人GitPage网页。该系列有3篇：1.付费虚拟云主机+WordPress；2.免费github+Hexo；3.个人站点yaojx.net的优化之路。\n\n<!-- more -->\n　　这个比较好玩，逼格高好多，网速也快了好多。是利用GitHub的[GitPage](https://pages.github.com/)  技术，把自己通过Hexo工具编译出来的静态html文件放在帐号共享项目中，就能让别人通过“用户名.github.io”固定连接来访问你的这些html网页。后面加上DNS转址功能把那串固定连接隐藏掉，基本别人就看不出来你这个网站是主机承载还是gitpage了。\n\n## 一.环境准备\n\n　　首先当然是：注册[GitHub](https://github.com/)  帐号，当然，国内的[Coding](https://coding.net/) 也行，就是[Coding Pages](https://coding.net/help/doc/coding-service/coding-pages-introduction.html) 。最终我采用的方案是布到GitHub，同时备份一份到Coding，国内访问就用Coding，ping只有50，秒开。GitHub优化到最后，DNS解析始终突破不了，因为它的服务器是在国外。 \n\n### 1.1 安装Node.js\n\n　　[Nodejs官网](https://nodejs.org/en/)\n\n　　[Nodejs下载](http://nodejs.cn/download/)\n\n　　[Nodejs安装教程](https://segmentfault.com/a/1190000004947261)\n\n![Result pic 1](/contentimg/7/1.png \"Node安装检验\")\n\n``` cmd\nnode -v\n```\n\n### 1.2 安装Git\n\n　　[Git下载](https://git-scm.com/download/)\n\n　　安装完成git后，在桌面创建一个快捷方式，这时候点击启动后，里面的路径会是C盘下的。为了使用方便，我们是希望它直接cd到博客所在的目录，可以按照下面这样改：删除“--cd-to-home”、“%HOMEDRIVE%%HOMEPATH%”；添加博客目录到“起始位置”。\n\n![Result pic 2](/contentimg/7/2.png \"Git小窍门\")\n\n　　检验安装情况：\n\n![Result pic 3](/contentimg/7/3.png \"npm版本检查\")\n\n``` bash\nnpm -v\n```\n\n　　我当时遇到“bash: npm: command not found”。后面搜索到是没安装好，只能在cmd下使用，需要在gitbash里面再装。\n\n　　需要输入命令“ git clone --recursive git://github.com/isaacs/npm.git”，然后再输入“cd npm”，“node cli.js install npm -gf”\n\n``` bash\ngit clone --recursive git://github.com/isaacs/npm.git\ncd npm\nnode cli.js install npm -gf\n```\n\n\n[windows git bash npm: command not found](https://blog.csdn.net/daocaoren92wq/article/details/64444532)\n\n### 1.3 安装Hexo\n\n　　先选个文件夹作为博客文件存储。这里我选“D:\\source\\yaojiaxinpc”。\n\n　　打开gitbash，cd到这个目录。安装hexo：输入指令“npm install hexo-cli -g ”。\n\n　　等它下载安装好后，输入指令“hexo init”。当然后面可以加文件夹的名字。不加就默认装在当前目录。\n\n``` bash\n//安装hexo\nnpm install hexo-cli -g\n\n//查看hexo版本\nhexo -v\n\n//初始化hexo\nhexo init\n//会下载文件到当前目录，生成node_modules等文件夹\n```\n\n![Result pic 6](/contentimg/7/6.png \"hexo安装\")\n\n\n![Result pic 4](/contentimg/7/4.png \"npm工具保存目录\")\n\n\n　　后期文件夹中的“node_modules”目录，都是从这里的cmd运行编译过去的。\n\n\n## 二.初次建站\n\n### 2.1 Hexo建站\n\n　　这里贴一下[npm主页](https://www.npmjs.com/) 。上面好东西蛮多，工具类等等。\n\n　　说明文档：[What is npm?](https://docs.npmjs.com/getting-started/what-is-npm)\n\n![Result pic 7](/contentimg/7/7.png \"初始化完成hexo\")\n\n　　站址文件生成指令：\n\n``` bash\nhexo g  //hexo generate\n```\n\n![Result pic 8](/contentimg/7/8.png \"生成Public文件夹\")\n\n\n　　这时候目录下会多出来一个Public文件夹。里面的东西就是我们需要的网站文件，到时发布到网上的也是这里的东西（不是整个工程，就Public目录下的文件直接上传就行，不然会报错。）\n\n![Result pic 5](/contentimg/7/5.png \"上传整个工程导致的错误\")\n\n\n![Result pic 10](/contentimg/7/10.png \"快捷方式出权限问题\")\n\n\n　　***这里我也遇到“hexo Permission denied”的问题，是权限问题，但是由于是运行在windows系统，不是sudo，也不是unsafe和SSH密钥问题。最后解决的方法是：打开gitbash的源文件，cd到新目录重新上面部署的步骤，运行完，快捷方式那个就正常了***\n\n### 2.2 本地站址访问\n\n``` bash\nhexo s  //hexo server\n```\n\n![Result pic 9](/contentimg/7/9.png \"本地启动html服务\")\n\n### 2.3 目录结构说明\n\n![Result pic 11](/contentimg/7/11.png \"主目录下文件\")\n\n\n　　第一个“node_modules”，都是工具里面的东西，不用关注，当作编译工具看待吧，就是根据“package.json”里面记录的要安装的工具，安装到这个目录底下。\n\n　　重点关注的是“_config.yml”文件，然后就是“themes”，主题目录，接着是“source”：放博文和图片等等其他东西的地方。\n\n　　“public”是生成html等最终产物的地方，到时提交这个目录里面的东西上去就行，推荐用GitHub DeskTop，或者SVN提交。厉害的也可以用gitbash。\n\n　　“scaffolds”目录，就一些模版而已。可以在gitbash里面打：\n\n``` bash\nhexo new pagename\n```\n\n![Result pic 12](/contentimg/7/12.png \"指令生成页面md文件\")\n\n\n## 三.发布Page\n\n### 3.1.1 GitHub准备\n\n\n　　这里可以弄SSH密钥后，设置成gitbash来直接“hexo d”就上传public文件目录。也可以手动拖文件到GitHub DeskTop里上传。而拉到网页上的话，github是支持的，但是coding不支持多文件。\n\n　　注意要先安装插件：\n\n>  npm install hexo-deployer-git --save\n\n　　下面记录SSH key方式，因为这种方式可以直接gitbash界面操作，可以在执行完“hexo g”后直接“hexo d -m 'comment message'”就部署上去，很方便。\n\n　　登陆github个人主页，个人头像下拉-->Settings-->SSH and GPG keys-->New SSH key\n\n![Result pic 13](/contentimg/7/13.png \"New SSH Key\")\n\n\n　　然后回到电脑上，生成key文件：\n\n``` bash\nssh-keygen -t rsa -C \"git邮箱\"\n```\n\n　　连续3次回车就行，就会生成key文件。在系统当前用户目录下(开启查看隐藏文件) %homepath%\\.ssh\n\n![Result pic 14](/contentimg/7/14.png \"key文件\")\n\n\n　　将id_rsa.pub文件以文本方式打开。打开之后全部复制到key中。\n\n　　然后就可以回gitbash测试情况：\n\n``` bash\nssh -T git@github.com\n\nyes\n```\n\n![Result pic 15](/contentimg/7/15.png \"检查连接\")\n\n\n``` bash\ngit config --global user.name \"git用户名\"\ngit config --global user.email \"git邮箱\"\n```\n\n　　还没结束，还需要到“_config.yml”文件进行对应的配置：\n\n![Result pic 16](/contentimg/7/16.png \"配置提交目录和分支\")\n\n\n　　记住，这里使用的是SSH，所以repository也应该用SSH目录下的。\n\n![Result pic 17](/contentimg/7/17.png \"repository地址\")\n\n　　在github desktop中，这里才是用https下的地址。两个使用的是不同的协议的。\n\n　　同时注意是主线master。\n\n\n### 3.1.2 GitPage访问\n\n　　到浏览器中输入YaojiaxinPC.github.io (用户名.github.io)。就可以看了。\n\n这里也记录一下gitpage的一些细节吧。\n\n![Result pic 18](/contentimg/7/18.png \"创建代码库\")\n\n\n　　刚注册好后，点击头像左边的“+”，新建目录“New repository”。根据gitpage推荐，是“用户名”+github.io，当然也可以起其他名字，只是起其他名字的话，就变成三级域名了，前缀会自动给你加“用户名.github.io”，后面的才是“/”+你这里起的名字。\n\n![Result pic 19](/contentimg/7/19.png \"page设置选项\")\n\n　　在这个页面往下拉，到图中这里，就是设置你的page是关联哪个代码库的，所以是可以更改的。第一次弄的时候，可以到这里选Theme，然后根据步骤自动生成一个页面来试试看效果。\n\n\n　　再往下的，就是删库功能项了。\n　　\n　　剩下的，就是一点点修改，本地看效果后，更新上来看外网效果了。\n\n\n### 3.2.1 Coding准备\n\n　　这里也讲讲国内的coding吧。\n\n　　和github差距还是蛮大的，不过好在国内访问快。现在和TX联手了，收费项目也变多了。商业用途用它还不错，但是个人非盈利的就不好说了。不过还是多多支持国产吧。这里还是得感谢coding的，gitpage那边，整优化搞了两三天，都不理想，访问最快2s起步（还是半夜3、4点的才能达到这个效果），后面还是挂到coding这边，就能秒开了。\n　　\n![Result pic 20](/contentimg/7/20.png \"coding开启page\")\n\n\n### 3.2.2 Coding Pages访问\n\n　　coding做得比gitpage好的地方还是有的，在dns转址上，极其方便，还加了https访问。这点得给个赞。\n\n![Result pic 21](/contentimg/7/21.png \"coding设置page\")\n\n\n　　这里的设置和gitpage的是一样的，不过更好操作一些。而且还没项目名字限制，想起什么名字都行。\n\n\n## 四.Hexo更换Themes\n\n\n　　到这里，其实已经可以自己做博客放上去了。不过，作为一个非前端人员，而我又觉得初始版面不好看，怎么处理？幸好hexo早考虑到这个，给了好多皮肤让我们换。\n\n　　[Hexo主题官网](https://github.com/hexojs/hexo/wiki/Themes)\n\n\n### 更换Next主题\n\n　　我比较喜欢头像挂左边的，加上搜索教程的时候，都是推荐[yilia](https://github.com/litten/hexo-theme-yilia) 的。所以一开始是用的这个主题。\n\n``` bash\nhexo clean //删除public目录（建议每次生成都要执行该删除指令，防止冲突）\ngit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n```\n\n　　这里的操作，其实就是去github上拷贝一个皮肤下来，放到目录“themes/yilia”。所以其实你也可以手动去网页上下载zip，然后解压到themes目录下就行。\n\n　　下载好themes后，修改主配置文件：\n\n![Result pic 22](/contentimg/7/22.png \"修改主配置文件应用新皮肤\")\n\n　　该部分另外开一个文章详细说明。\n\n　　结尾贴一下几篇Markdown的介绍网址吧。\n\n　　当然还有个中文前面隔开两个空格的小窍门：英文输入法下，切全角，然后两下空格。\n\n[Cmd Markdown 编辑阅读器](https://www.zybuluo.com/mdeditor#fnref:code)\n\n[MaHua 在线markdown编辑器](http://mahua.jser.me/)\n\n[Markdown 基本语法](https://wizardforcel.gitbooks.io/markdown-simple-world/2.html)\n\n[Markdown 语法整理大集合2017](https://segmentfault.com/a/1190000010223222)\n","slug":"7CreatGitPage","published":1,"updated":"2018-10-20T07:16:12.511Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgrii0058jo9cct1j3j40","content":"<p>　　本文是记录如何安装环境，发布初版个人GitPage网页。该系列有3篇：1.付费虚拟云主机+WordPress；2.免费github+Hexo；3.个人站点yaojx.net的优化之路。</p>\n<a id=\"more\"></a>\n<p>　　这个比较好玩，逼格高好多，网速也快了好多。是利用GitHub的<a href=\"https://pages.github.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">GitPage</a>  技术，把自己通过Hexo工具编译出来的静态html文件放在帐号共享项目中，就能让别人通过“用户名.github.io”固定连接来访问你的这些html网页。后面加上DNS转址功能把那串固定连接隐藏掉，基本别人就看不出来你这个网站是主机承载还是gitpage了。</p>\n<h2 id=\"一-环境准备\"><a href=\"#一-环境准备\" class=\"headerlink\" title=\"一.环境准备\"></a>一.环境准备</h2><p>　　首先当然是：注册<a href=\"https://github.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">GitHub</a>  帐号，当然，国内的<a href=\"https://coding.net/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Coding</a> 也行，就是<a href=\"https://coding.net/help/doc/coding-service/coding-pages-introduction.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Coding Pages</a> 。最终我采用的方案是布到GitHub，同时备份一份到Coding，国内访问就用Coding，ping只有50，秒开。GitHub优化到最后，DNS解析始终突破不了，因为它的服务器是在国外。 </p>\n<h3 id=\"1-1-安装Node-js\"><a href=\"#1-1-安装Node-js\" class=\"headerlink\" title=\"1.1 安装Node.js\"></a>1.1 安装Node.js</h3><p>　　<a href=\"https://nodejs.org/en/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Nodejs官网</a></p>\n<p>　　<a href=\"http://nodejs.cn/download/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Nodejs下载</a></p>\n<p>　　<a href=\"https://segmentfault.com/a/1190000004947261\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Nodejs安装教程</a></p>\n<p><img src=\"/contentimg/7/1.png\" alt=\"Result pic 1\" title=\"Node安装检验\"></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-安装Git\"><a href=\"#1-2-安装Git\" class=\"headerlink\" title=\"1.2 安装Git\"></a>1.2 安装Git</h3><p>　　<a href=\"https://git-scm.com/download/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Git下载</a></p>\n<p>　　安装完成git后，在桌面创建一个快捷方式，这时候点击启动后，里面的路径会是C盘下的。为了使用方便，我们是希望它直接cd到博客所在的目录，可以按照下面这样改：删除“–cd-to-home”、“%HOMEDRIVE%%HOMEPATH%”；添加博客目录到“起始位置”。</p>\n<p><img src=\"/contentimg/7/2.png\" alt=\"Result pic 2\" title=\"Git小窍门\"></p>\n<p>　　检验安装情况：</p>\n<p><img src=\"/contentimg/7/3.png\" alt=\"Result pic 3\" title=\"npm版本检查\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<p>　　我当时遇到“bash: npm: command not found”。后面搜索到是没安装好，只能在cmd下使用，需要在gitbash里面再装。</p>\n<p>　　需要输入命令“ git clone –recursive git://github.com/isaacs/npm.git”，然后再输入“cd npm”，“node cli.js install npm -gf”</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> --recursive git://github.com/isaacs/npm.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> npm</span><br><span class=\"line\">node cli.js install npm -gf</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/daocaoren92wq/article/details/64444532\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">windows git bash npm: command not found</a></p>\n<h3 id=\"1-3-安装Hexo\"><a href=\"#1-3-安装Hexo\" class=\"headerlink\" title=\"1.3 安装Hexo\"></a>1.3 安装Hexo</h3><p>　　先选个文件夹作为博客文件存储。这里我选“D:\\source\\yaojiaxinpc”。</p>\n<p>　　打开gitbash，cd到这个目录。安装hexo：输入指令“npm install hexo-cli -g ”。</p>\n<p>　　等它下载安装好后，输入指令“hexo init”。当然后面可以加文件夹的名字。不加就默认装在当前目录。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//安装hexo</span><br><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\">//查看hexo版本</span><br><span class=\"line\">hexo -v</span><br><span class=\"line\"></span><br><span class=\"line\">//初始化hexo</span><br><span class=\"line\">hexo init</span><br><span class=\"line\">//会下载文件到当前目录，生成node_modules等文件夹</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/7/6.png\" alt=\"Result pic 6\" title=\"hexo安装\"></p>\n<p><img src=\"/contentimg/7/4.png\" alt=\"Result pic 4\" title=\"npm工具保存目录\"></p>\n<p>　　后期文件夹中的“node_modules”目录，都是从这里的cmd运行编译过去的。</p>\n<h2 id=\"二-初次建站\"><a href=\"#二-初次建站\" class=\"headerlink\" title=\"二.初次建站\"></a>二.初次建站</h2><h3 id=\"2-1-Hexo建站\"><a href=\"#2-1-Hexo建站\" class=\"headerlink\" title=\"2.1 Hexo建站\"></a>2.1 Hexo建站</h3><p>　　这里贴一下<a href=\"https://www.npmjs.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">npm主页</a> 。上面好东西蛮多，工具类等等。</p>\n<p>　　说明文档：<a href=\"https://docs.npmjs.com/getting-started/what-is-npm\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">What is npm?</a></p>\n<p><img src=\"/contentimg/7/7.png\" alt=\"Result pic 7\" title=\"初始化完成hexo\"></p>\n<p>　　站址文件生成指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g  //hexo generate</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/7/8.png\" alt=\"Result pic 8\" title=\"生成Public文件夹\"></p>\n<p>　　这时候目录下会多出来一个Public文件夹。里面的东西就是我们需要的网站文件，到时发布到网上的也是这里的东西（不是整个工程，就Public目录下的文件直接上传就行，不然会报错。）</p>\n<p><img src=\"/contentimg/7/5.png\" alt=\"Result pic 5\" title=\"上传整个工程导致的错误\"></p>\n<p><img src=\"/contentimg/7/10.png\" alt=\"Result pic 10\" title=\"快捷方式出权限问题\"></p>\n<p>　　<strong><em>这里我也遇到“hexo Permission denied”的问题，是权限问题，但是由于是运行在windows系统，不是sudo，也不是unsafe和SSH密钥问题。最后解决的方法是：打开gitbash的源文件，cd到新目录重新上面部署的步骤，运行完，快捷方式那个就正常了</em></strong></p>\n<h3 id=\"2-2-本地站址访问\"><a href=\"#2-2-本地站址访问\" class=\"headerlink\" title=\"2.2 本地站址访问\"></a>2.2 本地站址访问</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s  //hexo server</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/7/9.png\" alt=\"Result pic 9\" title=\"本地启动html服务\"></p>\n<h3 id=\"2-3-目录结构说明\"><a href=\"#2-3-目录结构说明\" class=\"headerlink\" title=\"2.3 目录结构说明\"></a>2.3 目录结构说明</h3><p><img src=\"/contentimg/7/11.png\" alt=\"Result pic 11\" title=\"主目录下文件\"></p>\n<p>　　第一个“node_modules”，都是工具里面的东西，不用关注，当作编译工具看待吧，就是根据“package.json”里面记录的要安装的工具，安装到这个目录底下。</p>\n<p>　　重点关注的是“_config.yml”文件，然后就是“themes”，主题目录，接着是“source”：放博文和图片等等其他东西的地方。</p>\n<p>　　“public”是生成html等最终产物的地方，到时提交这个目录里面的东西上去就行，推荐用GitHub DeskTop，或者SVN提交。厉害的也可以用gitbash。</p>\n<p>　　“scaffolds”目录，就一些模版而已。可以在gitbash里面打：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new pagename</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/7/12.png\" alt=\"Result pic 12\" title=\"指令生成页面md文件\"></p>\n<h2 id=\"三-发布Page\"><a href=\"#三-发布Page\" class=\"headerlink\" title=\"三.发布Page\"></a>三.发布Page</h2><h3 id=\"3-1-1-GitHub准备\"><a href=\"#3-1-1-GitHub准备\" class=\"headerlink\" title=\"3.1.1 GitHub准备\"></a>3.1.1 GitHub准备</h3><p>　　这里可以弄SSH密钥后，设置成gitbash来直接“hexo d”就上传public文件目录。也可以手动拖文件到GitHub DeskTop里上传。而拉到网页上的话，github是支持的，但是coding不支持多文件。</p>\n<p>　　注意要先安装插件：</p>\n<blockquote>\n<p> npm install hexo-deployer-git –save</p>\n</blockquote>\n<p>　　下面记录SSH key方式，因为这种方式可以直接gitbash界面操作，可以在执行完“hexo g”后直接“hexo d -m ‘comment message’”就部署上去，很方便。</p>\n<p>　　登陆github个人主页，个人头像下拉–&gt;Settings–&gt;SSH and GPG keys–&gt;New SSH key</p>\n<p><img src=\"/contentimg/7/13.png\" alt=\"Result pic 13\" title=\"New SSH Key\"></p>\n<p>　　然后回到电脑上，生成key文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"git邮箱\"</span></span><br></pre></td></tr></table></figure>\n<p>　　连续3次回车就行，就会生成key文件。在系统当前用户目录下(开启查看隐藏文件) %homepath%.ssh</p>\n<p><img src=\"/contentimg/7/14.png\" alt=\"Result pic 14\" title=\"key文件\"></p>\n<p>　　将id_rsa.pub文件以文本方式打开。打开之后全部复制到key中。</p>\n<p>　　然后就可以回gitbash测试情况：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br><span class=\"line\"></span><br><span class=\"line\">yes</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/7/15.png\" alt=\"Result pic 15\" title=\"检查连接\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"git用户名\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"git邮箱\"</span></span><br></pre></td></tr></table></figure>\n<p>　　还没结束，还需要到“_config.yml”文件进行对应的配置：</p>\n<p><img src=\"/contentimg/7/16.png\" alt=\"Result pic 16\" title=\"配置提交目录和分支\"></p>\n<p>　　记住，这里使用的是SSH，所以repository也应该用SSH目录下的。</p>\n<p><img src=\"/contentimg/7/17.png\" alt=\"Result pic 17\" title=\"repository地址\"></p>\n<p>　　在github desktop中，这里才是用https下的地址。两个使用的是不同的协议的。</p>\n<p>　　同时注意是主线master。</p>\n<h3 id=\"3-1-2-GitPage访问\"><a href=\"#3-1-2-GitPage访问\" class=\"headerlink\" title=\"3.1.2 GitPage访问\"></a>3.1.2 GitPage访问</h3><p>　　到浏览器中输入YaojiaxinPC.github.io (用户名.github.io)。就可以看了。</p>\n<p>这里也记录一下gitpage的一些细节吧。</p>\n<p><img src=\"/contentimg/7/18.png\" alt=\"Result pic 18\" title=\"创建代码库\"></p>\n<p>　　刚注册好后，点击头像左边的“+”，新建目录“New repository”。根据gitpage推荐，是“用户名”+github.io，当然也可以起其他名字，只是起其他名字的话，就变成三级域名了，前缀会自动给你加“用户名.github.io”，后面的才是“/”+你这里起的名字。</p>\n<p><img src=\"/contentimg/7/19.png\" alt=\"Result pic 19\" title=\"page设置选项\"></p>\n<p>　　在这个页面往下拉，到图中这里，就是设置你的page是关联哪个代码库的，所以是可以更改的。第一次弄的时候，可以到这里选Theme，然后根据步骤自动生成一个页面来试试看效果。</p>\n<p>　　再往下的，就是删库功能项了。<br>　　<br>　　剩下的，就是一点点修改，本地看效果后，更新上来看外网效果了。</p>\n<h3 id=\"3-2-1-Coding准备\"><a href=\"#3-2-1-Coding准备\" class=\"headerlink\" title=\"3.2.1 Coding准备\"></a>3.2.1 Coding准备</h3><p>　　这里也讲讲国内的coding吧。</p>\n<p>　　和github差距还是蛮大的，不过好在国内访问快。现在和TX联手了，收费项目也变多了。商业用途用它还不错，但是个人非盈利的就不好说了。不过还是多多支持国产吧。这里还是得感谢coding的，gitpage那边，整优化搞了两三天，都不理想，访问最快2s起步（还是半夜3、4点的才能达到这个效果），后面还是挂到coding这边，就能秒开了。<br>　　<br><img src=\"/contentimg/7/20.png\" alt=\"Result pic 20\" title=\"coding开启page\"></p>\n<h3 id=\"3-2-2-Coding-Pages访问\"><a href=\"#3-2-2-Coding-Pages访问\" class=\"headerlink\" title=\"3.2.2 Coding Pages访问\"></a>3.2.2 Coding Pages访问</h3><p>　　coding做得比gitpage好的地方还是有的，在dns转址上，极其方便，还加了https访问。这点得给个赞。</p>\n<p><img src=\"/contentimg/7/21.png\" alt=\"Result pic 21\" title=\"coding设置page\"></p>\n<p>　　这里的设置和gitpage的是一样的，不过更好操作一些。而且还没项目名字限制，想起什么名字都行。</p>\n<h2 id=\"四-Hexo更换Themes\"><a href=\"#四-Hexo更换Themes\" class=\"headerlink\" title=\"四.Hexo更换Themes\"></a>四.Hexo更换Themes</h2><p>　　到这里，其实已经可以自己做博客放上去了。不过，作为一个非前端人员，而我又觉得初始版面不好看，怎么处理？幸好hexo早考虑到这个，给了好多皮肤让我们换。</p>\n<p>　　<a href=\"https://github.com/hexojs/hexo/wiki/Themes\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Hexo主题官网</a></p>\n<h3 id=\"更换Next主题\"><a href=\"#更换Next主题\" class=\"headerlink\" title=\"更换Next主题\"></a>更换Next主题</h3><p>　　我比较喜欢头像挂左边的，加上搜索教程的时候，都是推荐<a href=\"https://github.com/litten/hexo-theme-yilia\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">yilia</a> 的。所以一开始是用的这个主题。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean //删除public目录（建议每次生成都要执行该删除指令，防止冲突）</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure>\n<p>　　这里的操作，其实就是去github上拷贝一个皮肤下来，放到目录“themes/yilia”。所以其实你也可以手动去网页上下载zip，然后解压到themes目录下就行。</p>\n<p>　　下载好themes后，修改主配置文件：</p>\n<p><img src=\"/contentimg/7/22.png\" alt=\"Result pic 22\" title=\"修改主配置文件应用新皮肤\"></p>\n<p>　　该部分另外开一个文章详细说明。</p>\n<p>　　结尾贴一下几篇Markdown的介绍网址吧。</p>\n<p>　　当然还有个中文前面隔开两个空格的小窍门：英文输入法下，切全角，然后两下空格。</p>\n<p><a href=\"https://www.zybuluo.com/mdeditor#fnref:code\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Cmd Markdown 编辑阅读器</a></p>\n<p><a href=\"http://mahua.jser.me/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">MaHua 在线markdown编辑器</a></p>\n<p><a href=\"https://wizardforcel.gitbooks.io/markdown-simple-world/2.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Markdown 基本语法</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000010223222\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Markdown 语法整理大集合2017</a></p>\n","site":{"data":{}},"excerpt":"<p>　　本文是记录如何安装环境，发布初版个人GitPage网页。该系列有3篇：1.付费虚拟云主机+WordPress；2.免费github+Hexo；3.个人站点yaojx.net的优化之路。</p>","more":"<p>　　这个比较好玩，逼格高好多，网速也快了好多。是利用GitHub的<a href=\"https://pages.github.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">GitPage</a>  技术，把自己通过Hexo工具编译出来的静态html文件放在帐号共享项目中，就能让别人通过“用户名.github.io”固定连接来访问你的这些html网页。后面加上DNS转址功能把那串固定连接隐藏掉，基本别人就看不出来你这个网站是主机承载还是gitpage了。</p>\n<h2 id=\"一-环境准备\"><a href=\"#一-环境准备\" class=\"headerlink\" title=\"一.环境准备\"></a>一.环境准备</h2><p>　　首先当然是：注册<a href=\"https://github.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">GitHub</a>  帐号，当然，国内的<a href=\"https://coding.net/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Coding</a> 也行，就是<a href=\"https://coding.net/help/doc/coding-service/coding-pages-introduction.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Coding Pages</a> 。最终我采用的方案是布到GitHub，同时备份一份到Coding，国内访问就用Coding，ping只有50，秒开。GitHub优化到最后，DNS解析始终突破不了，因为它的服务器是在国外。 </p>\n<h3 id=\"1-1-安装Node-js\"><a href=\"#1-1-安装Node-js\" class=\"headerlink\" title=\"1.1 安装Node.js\"></a>1.1 安装Node.js</h3><p>　　<a href=\"https://nodejs.org/en/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Nodejs官网</a></p>\n<p>　　<a href=\"http://nodejs.cn/download/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Nodejs下载</a></p>\n<p>　　<a href=\"https://segmentfault.com/a/1190000004947261\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Nodejs安装教程</a></p>\n<p><img src=\"/contentimg/7/1.png\" alt=\"Result pic 1\" title=\"Node安装检验\"></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-安装Git\"><a href=\"#1-2-安装Git\" class=\"headerlink\" title=\"1.2 安装Git\"></a>1.2 安装Git</h3><p>　　<a href=\"https://git-scm.com/download/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Git下载</a></p>\n<p>　　安装完成git后，在桌面创建一个快捷方式，这时候点击启动后，里面的路径会是C盘下的。为了使用方便，我们是希望它直接cd到博客所在的目录，可以按照下面这样改：删除“–cd-to-home”、“%HOMEDRIVE%%HOMEPATH%”；添加博客目录到“起始位置”。</p>\n<p><img src=\"/contentimg/7/2.png\" alt=\"Result pic 2\" title=\"Git小窍门\"></p>\n<p>　　检验安装情况：</p>\n<p><img src=\"/contentimg/7/3.png\" alt=\"Result pic 3\" title=\"npm版本检查\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<p>　　我当时遇到“bash: npm: command not found”。后面搜索到是没安装好，只能在cmd下使用，需要在gitbash里面再装。</p>\n<p>　　需要输入命令“ git clone –recursive git://github.com/isaacs/npm.git”，然后再输入“cd npm”，“node cli.js install npm -gf”</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> --recursive git://github.com/isaacs/npm.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> npm</span><br><span class=\"line\">node cli.js install npm -gf</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/daocaoren92wq/article/details/64444532\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">windows git bash npm: command not found</a></p>\n<h3 id=\"1-3-安装Hexo\"><a href=\"#1-3-安装Hexo\" class=\"headerlink\" title=\"1.3 安装Hexo\"></a>1.3 安装Hexo</h3><p>　　先选个文件夹作为博客文件存储。这里我选“D:\\source\\yaojiaxinpc”。</p>\n<p>　　打开gitbash，cd到这个目录。安装hexo：输入指令“npm install hexo-cli -g ”。</p>\n<p>　　等它下载安装好后，输入指令“hexo init”。当然后面可以加文件夹的名字。不加就默认装在当前目录。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//安装hexo</span><br><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\">//查看hexo版本</span><br><span class=\"line\">hexo -v</span><br><span class=\"line\"></span><br><span class=\"line\">//初始化hexo</span><br><span class=\"line\">hexo init</span><br><span class=\"line\">//会下载文件到当前目录，生成node_modules等文件夹</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/7/6.png\" alt=\"Result pic 6\" title=\"hexo安装\"></p>\n<p><img src=\"/contentimg/7/4.png\" alt=\"Result pic 4\" title=\"npm工具保存目录\"></p>\n<p>　　后期文件夹中的“node_modules”目录，都是从这里的cmd运行编译过去的。</p>\n<h2 id=\"二-初次建站\"><a href=\"#二-初次建站\" class=\"headerlink\" title=\"二.初次建站\"></a>二.初次建站</h2><h3 id=\"2-1-Hexo建站\"><a href=\"#2-1-Hexo建站\" class=\"headerlink\" title=\"2.1 Hexo建站\"></a>2.1 Hexo建站</h3><p>　　这里贴一下<a href=\"https://www.npmjs.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">npm主页</a> 。上面好东西蛮多，工具类等等。</p>\n<p>　　说明文档：<a href=\"https://docs.npmjs.com/getting-started/what-is-npm\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">What is npm?</a></p>\n<p><img src=\"/contentimg/7/7.png\" alt=\"Result pic 7\" title=\"初始化完成hexo\"></p>\n<p>　　站址文件生成指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g  //hexo generate</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/7/8.png\" alt=\"Result pic 8\" title=\"生成Public文件夹\"></p>\n<p>　　这时候目录下会多出来一个Public文件夹。里面的东西就是我们需要的网站文件，到时发布到网上的也是这里的东西（不是整个工程，就Public目录下的文件直接上传就行，不然会报错。）</p>\n<p><img src=\"/contentimg/7/5.png\" alt=\"Result pic 5\" title=\"上传整个工程导致的错误\"></p>\n<p><img src=\"/contentimg/7/10.png\" alt=\"Result pic 10\" title=\"快捷方式出权限问题\"></p>\n<p>　　<strong><em>这里我也遇到“hexo Permission denied”的问题，是权限问题，但是由于是运行在windows系统，不是sudo，也不是unsafe和SSH密钥问题。最后解决的方法是：打开gitbash的源文件，cd到新目录重新上面部署的步骤，运行完，快捷方式那个就正常了</em></strong></p>\n<h3 id=\"2-2-本地站址访问\"><a href=\"#2-2-本地站址访问\" class=\"headerlink\" title=\"2.2 本地站址访问\"></a>2.2 本地站址访问</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s  //hexo server</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/7/9.png\" alt=\"Result pic 9\" title=\"本地启动html服务\"></p>\n<h3 id=\"2-3-目录结构说明\"><a href=\"#2-3-目录结构说明\" class=\"headerlink\" title=\"2.3 目录结构说明\"></a>2.3 目录结构说明</h3><p><img src=\"/contentimg/7/11.png\" alt=\"Result pic 11\" title=\"主目录下文件\"></p>\n<p>　　第一个“node_modules”，都是工具里面的东西，不用关注，当作编译工具看待吧，就是根据“package.json”里面记录的要安装的工具，安装到这个目录底下。</p>\n<p>　　重点关注的是“_config.yml”文件，然后就是“themes”，主题目录，接着是“source”：放博文和图片等等其他东西的地方。</p>\n<p>　　“public”是生成html等最终产物的地方，到时提交这个目录里面的东西上去就行，推荐用GitHub DeskTop，或者SVN提交。厉害的也可以用gitbash。</p>\n<p>　　“scaffolds”目录，就一些模版而已。可以在gitbash里面打：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new pagename</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/7/12.png\" alt=\"Result pic 12\" title=\"指令生成页面md文件\"></p>\n<h2 id=\"三-发布Page\"><a href=\"#三-发布Page\" class=\"headerlink\" title=\"三.发布Page\"></a>三.发布Page</h2><h3 id=\"3-1-1-GitHub准备\"><a href=\"#3-1-1-GitHub准备\" class=\"headerlink\" title=\"3.1.1 GitHub准备\"></a>3.1.1 GitHub准备</h3><p>　　这里可以弄SSH密钥后，设置成gitbash来直接“hexo d”就上传public文件目录。也可以手动拖文件到GitHub DeskTop里上传。而拉到网页上的话，github是支持的，但是coding不支持多文件。</p>\n<p>　　注意要先安装插件：</p>\n<blockquote>\n<p> npm install hexo-deployer-git –save</p>\n</blockquote>\n<p>　　下面记录SSH key方式，因为这种方式可以直接gitbash界面操作，可以在执行完“hexo g”后直接“hexo d -m ‘comment message’”就部署上去，很方便。</p>\n<p>　　登陆github个人主页，个人头像下拉–&gt;Settings–&gt;SSH and GPG keys–&gt;New SSH key</p>\n<p><img src=\"/contentimg/7/13.png\" alt=\"Result pic 13\" title=\"New SSH Key\"></p>\n<p>　　然后回到电脑上，生成key文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"git邮箱\"</span></span><br></pre></td></tr></table></figure>\n<p>　　连续3次回车就行，就会生成key文件。在系统当前用户目录下(开启查看隐藏文件) %homepath%.ssh</p>\n<p><img src=\"/contentimg/7/14.png\" alt=\"Result pic 14\" title=\"key文件\"></p>\n<p>　　将id_rsa.pub文件以文本方式打开。打开之后全部复制到key中。</p>\n<p>　　然后就可以回gitbash测试情况：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br><span class=\"line\"></span><br><span class=\"line\">yes</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/7/15.png\" alt=\"Result pic 15\" title=\"检查连接\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"git用户名\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"git邮箱\"</span></span><br></pre></td></tr></table></figure>\n<p>　　还没结束，还需要到“_config.yml”文件进行对应的配置：</p>\n<p><img src=\"/contentimg/7/16.png\" alt=\"Result pic 16\" title=\"配置提交目录和分支\"></p>\n<p>　　记住，这里使用的是SSH，所以repository也应该用SSH目录下的。</p>\n<p><img src=\"/contentimg/7/17.png\" alt=\"Result pic 17\" title=\"repository地址\"></p>\n<p>　　在github desktop中，这里才是用https下的地址。两个使用的是不同的协议的。</p>\n<p>　　同时注意是主线master。</p>\n<h3 id=\"3-1-2-GitPage访问\"><a href=\"#3-1-2-GitPage访问\" class=\"headerlink\" title=\"3.1.2 GitPage访问\"></a>3.1.2 GitPage访问</h3><p>　　到浏览器中输入YaojiaxinPC.github.io (用户名.github.io)。就可以看了。</p>\n<p>这里也记录一下gitpage的一些细节吧。</p>\n<p><img src=\"/contentimg/7/18.png\" alt=\"Result pic 18\" title=\"创建代码库\"></p>\n<p>　　刚注册好后，点击头像左边的“+”，新建目录“New repository”。根据gitpage推荐，是“用户名”+github.io，当然也可以起其他名字，只是起其他名字的话，就变成三级域名了，前缀会自动给你加“用户名.github.io”，后面的才是“/”+你这里起的名字。</p>\n<p><img src=\"/contentimg/7/19.png\" alt=\"Result pic 19\" title=\"page设置选项\"></p>\n<p>　　在这个页面往下拉，到图中这里，就是设置你的page是关联哪个代码库的，所以是可以更改的。第一次弄的时候，可以到这里选Theme，然后根据步骤自动生成一个页面来试试看效果。</p>\n<p>　　再往下的，就是删库功能项了。<br>　　<br>　　剩下的，就是一点点修改，本地看效果后，更新上来看外网效果了。</p>\n<h3 id=\"3-2-1-Coding准备\"><a href=\"#3-2-1-Coding准备\" class=\"headerlink\" title=\"3.2.1 Coding准备\"></a>3.2.1 Coding准备</h3><p>　　这里也讲讲国内的coding吧。</p>\n<p>　　和github差距还是蛮大的，不过好在国内访问快。现在和TX联手了，收费项目也变多了。商业用途用它还不错，但是个人非盈利的就不好说了。不过还是多多支持国产吧。这里还是得感谢coding的，gitpage那边，整优化搞了两三天，都不理想，访问最快2s起步（还是半夜3、4点的才能达到这个效果），后面还是挂到coding这边，就能秒开了。<br>　　<br><img src=\"/contentimg/7/20.png\" alt=\"Result pic 20\" title=\"coding开启page\"></p>\n<h3 id=\"3-2-2-Coding-Pages访问\"><a href=\"#3-2-2-Coding-Pages访问\" class=\"headerlink\" title=\"3.2.2 Coding Pages访问\"></a>3.2.2 Coding Pages访问</h3><p>　　coding做得比gitpage好的地方还是有的，在dns转址上，极其方便，还加了https访问。这点得给个赞。</p>\n<p><img src=\"/contentimg/7/21.png\" alt=\"Result pic 21\" title=\"coding设置page\"></p>\n<p>　　这里的设置和gitpage的是一样的，不过更好操作一些。而且还没项目名字限制，想起什么名字都行。</p>\n<h2 id=\"四-Hexo更换Themes\"><a href=\"#四-Hexo更换Themes\" class=\"headerlink\" title=\"四.Hexo更换Themes\"></a>四.Hexo更换Themes</h2><p>　　到这里，其实已经可以自己做博客放上去了。不过，作为一个非前端人员，而我又觉得初始版面不好看，怎么处理？幸好hexo早考虑到这个，给了好多皮肤让我们换。</p>\n<p>　　<a href=\"https://github.com/hexojs/hexo/wiki/Themes\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Hexo主题官网</a></p>\n<h3 id=\"更换Next主题\"><a href=\"#更换Next主题\" class=\"headerlink\" title=\"更换Next主题\"></a>更换Next主题</h3><p>　　我比较喜欢头像挂左边的，加上搜索教程的时候，都是推荐<a href=\"https://github.com/litten/hexo-theme-yilia\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">yilia</a> 的。所以一开始是用的这个主题。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean //删除public目录（建议每次生成都要执行该删除指令，防止冲突）</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure>\n<p>　　这里的操作，其实就是去github上拷贝一个皮肤下来，放到目录“themes/yilia”。所以其实你也可以手动去网页上下载zip，然后解压到themes目录下就行。</p>\n<p>　　下载好themes后，修改主配置文件：</p>\n<p><img src=\"/contentimg/7/22.png\" alt=\"Result pic 22\" title=\"修改主配置文件应用新皮肤\"></p>\n<p>　　该部分另外开一个文章详细说明。</p>\n<p>　　结尾贴一下几篇Markdown的介绍网址吧。</p>\n<p>　　当然还有个中文前面隔开两个空格的小窍门：英文输入法下，切全角，然后两下空格。</p>\n<p><a href=\"https://www.zybuluo.com/mdeditor#fnref:code\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Cmd Markdown 编辑阅读器</a></p>\n<p><a href=\"http://mahua.jser.me/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">MaHua 在线markdown编辑器</a></p>\n<p><a href=\"https://wizardforcel.gitbooks.io/markdown-simple-world/2.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Markdown 基本语法</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000010223222\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Markdown 语法整理大集合2017</a></p>"},{"title":"搭建个人博客心得---个人站点yaojx.net的优化之路","date":"2018-10-18T14:55:58.000Z","_content":"\t\n　　本文是记录配置域名转址，以及如何优化gitpage访问等等高级功能的文章。该系列有3篇：1.付费虚拟云主机+WordPress；2.免费github+Hexo；3.个人站点yaojx.net的优化之路。\n\n<!-- more -->\n　　整个优化非常坎坷，最后总结，才发现部署到coding就已经达到了优化中的99%。剩下这个1%，花了我99%的时间和精力。\n\n　　本文不废话怎么排查，从什么地方入手。直接根据我优化中的体会来讲。\n\n## 一.转址\n\n### 1.1 理解转址\n\n[域名解析中A记录、CNAME、MX记录、NS记录的区别和联系](https://www.2cto.com/net/201306/221200.html)\n\n[从DNS到github pages自定义域名 -- 漫谈域名那些事](http://winterttr.me/2015/10/23/from-dns-to-github-custom-domain/)\n\n　　上面这两篇文章讲得很详细，介绍了DNS配置中几个选项间的关系。\n\n　　转址的作用，就是当我在浏览器输入A的时候，浏览器自动帮我跳转到B网站（A方式），这里CNAME还添加了将B网站的前缀域名修改为A网站的效果（可配置，当没设置该项时就不会修改域名）。\n\n　　一般情况下，我们只需要设置两个A方式（带www的，和不带www的），然后在page那边设置CNAME。\n\n### 1.2 GoDaddy转址\n\n![Result pic 1](/contentimg/8/1.png \"GoDaddy设置转址\")\n\n\n　　这里GoDaddy给我们设置了一个基础的转址，但是不是很好用(起作用慢)。推荐是去修改上面DNS管理。\n\n\n　　这里我就不截图了，默认项可以保留，默认有几个A和几个CNAME。直接添加新选项，然后TTL设置为自定义“600”。其他默认项暂时没必要删除。\n\n``` bash\nA       @     目标ip地址  //@ 相当于 yaojx.net\nA       www   目标ip地址  // 如果没这一项，网站就是www.yaojx.net了\n```\n\n　　注意TTL设置600最小见效才快。不然得等好几个小时。\n\n### 1.3 dnspod转址（即现在的腾讯云服务）\n\n　　这个不用记录了，直接有“一键”的。就是输入两个ip就行，默认“一键”后，给我们创造了两个A类型的，一个是“www”，另一个是“@”。\n\n　　这里提一下怎么找gitpage和codingpage的ip：\n\n![Result pic 2](/contentimg/8/2.png \"找page的ip\")\n\n\n　　直接ping网站，注意这里github的IP会左右变动。但是不影响我们使用A方式转址。图中ip没一致，但是仍然可以转址成功。\n\n### 1.4 GitHub相关配置\n\n[GitHub自定义域疑难解答](https://help.github.com/articles/troubleshooting-custom-domains/)\n\n\n　　coding那个就不用说明了，和腾讯一样都是一键的。\n\n　　GitHub这边要弄的东西不复杂，就添加一个文件[CNAME](https://github.com/YaojiaxinPC/YaojiaxinPC.github.io/blob/master/CNAME) ，注意没有后缀，五个字母都大写。里面放的是你要跳转的域名。\n\n　　该文件一创建马上生效，你访问YaojiaxinPC.github.io就会跳到CNAME里面的域名yaojx.net然后又回来YaojiaxinPC.github.io，当然这时候前缀已经改为yaojx.net了。（这个过程可以在chrome中捕捉到，所以修改转址后，直接访问YaojiaxinPC.github.io反而耗时。）\n\n\n　　这里遇到的坑是，刚开始使用GoDaddy，后面改cloudflare，因为都在国外，转址更新见效慢，域名那边没转址对YaojiaxinPC.github.io，导致跳过来gitpage后，是个404，访问YaojiaxinPC.github.io这边，又已经转址到yao.net-->404，构不成一个环。卡了好久，等几个小时后，DNS同步到了后才见效。\n\n　　coding那边就不用，一设置就见效。所以后面我域名都放到DNSPOD上了。\n\n## 二.优化工具\n\n### 2.1 [百度统计](https://tongji.baidu.com/web/welcome) 分析优化内容\n\n![Result pic 3](/contentimg/8/3.png \"百度统计情况-githubpage\")\n\n![Result pic 4](/contentimg/8/4.png \"百度统计情况-codingpage\")\n\n\n　　里面提到的合并js，以及Gzip压缩，都要改大量代码，所以这两项目前我还没去弄。只根据未优化前期提的建议，使用了后面提到的gulp压缩工具而已。同时前期还有提到头像文件太大等等其他建议（头像后面我改成170X170）。\n\n### 2.2 Chrome调试工具使用\n\n![Result pic 5](/contentimg/8/5.png \"Chrome调试工具\")\n\n　　未优化前期，用Chrome打开，一直提示加载过慢（5S以上），使用默认字体代替，同时提示是ttf文件下载太久。当时就把我引到优化字体的方向上，后面追查了好长时间，发现搞错了。重点在DNS解析和IP。当然，如果有用谷歌字体，这里会有问题的，谷歌被墙，所以在next主题中最好使用本地字体，搜索有提到用360库的，还有github上的ed链接等等那些，效果都一般，还是不使用这些字体好。\n\n![Result pic 6](/contentimg/8/6.png \"取消使用谷歌字体\")\n\n\n还有其他一些统计工具，不过实际Chrome的调试工具就已经能完成那些统计了，就不推荐那些工具了。\n\n### 2.3 [站长工具](http://tool.chinaz.com/gzips/)\n\n![Result pic 7](/contentimg/8/7.png \"codingpage自带优化\")\n\n\n![Result pic 8](/contentimg/8/8.png \"手动优化后的githubpage\")\n\n　　第二个图是更新了文章后截的图，大小上是大了一点点（其他东西都是和coding那边一样的），都是使用手动gulp优化后的Gzip压缩（文件只是体积变小，百度统计认的gzip是后缀为gz的压缩文件，意思不同）。但是在上面图中识别出来是不同：codingpage的直接压缩率99.96%？？？同时识别不出来gzip压缩。这样就能解释怎么放那边打开是秒开了。\n\n## 三.Gulp压缩\n\n　　这个是重点，让整个包从15.7m压缩到11.7m。而且整个操作除了安装工具，写一个[js脚本](https://github.com/YaojiaxinPC/blogcode/blob/master/gulpfile.js) 外，不用修改工程中的任何东西和代码。不会对原工程造成影响！\n\n　　[npm主页](https://www.npmjs.com/) \n\n### 3.1 安装gulp\n\n``` bash \nnpm install <name> [-g] [--save-dev]\n```\n\n1. name：node插件名称。例：\n\n>  npm install gulp --save-dev\n\n1. -g：全局安装。将会安装在%homepath%\\AppData\\Roaming\\npm，并且写入系统环境变量；\n\n\t- 非全局安装：将会安装在当前目录的node_modules文件夹下，只能在当前目录通过require()调用使用。\n\n\t- 全局安装：可以通过命令行在任何地方调用它。\n\t\n\n1. --save：将保存配置信息至package.json（package.json是nodejs项目配置文件）。\n\n1. -dev：保存至package.json的devDependencies节点，不指定-dev将保存至dependencies节点。\n\n　　配置文件package.json记录了当前工程使用的相关包，只需要在有这个文件的文件夹下面执行“npm install”，就会根据package.json下载所有需要的包。\n\n![Result pic 9](/contentimg/8/9.png \"package.json\")\n\n\n\n``` bash\nnpm install gulp --save-dev\nnpm install gulp-htmlclean --save-dev\nnpm install gulp-htmlmin --save-dev\nnpm install gulp-imagemin --save-dev\nnpm install gulp-minify-css --save-dev\nnpm install gulp-uglify --save-dev\n//文件处理\nnpm install del --save\nnpm install mv --save\n//这个网络情况不是很好，所以最好通过设置配置文件的skip_render来避免处理README.md\nnpm install copy --save\n```\n\n### 3.2 编写gulp脚本\n\n　　[gulp脚本](https://github.com/YaojiaxinPC/blogcode/blob/master/gulpfile.js) \n\n　　可以使用我github上的这个脚本。里面做的事情就是压缩html、css、js、图片等，在我电脑上，无法进行覆盖操作，所以我就把生成的压缩文件保存到缓存文件夹，然后用del/copy/mv等操作来处理。\n\n　　注意hexo编译的时候，会把后缀为“md”的文件都转成html，所以README.md也会变成README.html。这样，就不能把它放在source里面，只能放外面，在gulp后再复制进去public中。(其实这里可以通过设置主配置文件的skip_render来避免编译)\n\n``` js\nvar gulp = require('gulp');\nvar del = require('del');\nvar mv = require('mv');\nvar copy = require('copy');\nvar minifycss = require('gulp-minify-css');\nvar uglify = require('gulp-uglify');\nvar htmlmin = require('gulp-htmlmin');\nvar htmlclean = require('gulp-htmlclean');\nvar imagemin = require('gulp-imagemin');\n \n \n// Clean  任务执行前，先清除之前生成的缓存文件\ngulp.task('clean', function(cb) {\n   return del(['./public1/**'], cb)\n});\n\n// move  任务执行完成后，从主目录复制文件过来缓存目录\n//(此时会自动删除主目录),然后再复制回去（因为不能覆盖，所以不能从缓存目录直接过去主目录进行覆盖）\ngulp.task('filedone',['copy-all'],()=>{gulp.start('filedone-dealREADME');});\n//将public下的文件复制到缓存文件夹下\ngulp.task('copy-all', function(cb) {\n   return mv('./public', './public1',{clobber: false}, cb)\n});\n\n//复制README.md。处理完成后才进行重命名\ngulp.task('filedone-dealREADME',['copy-readme'],()=>{gulp.start('backcopy');});\n\n//复制README.md\ngulp.task('copy-readme', function(cb) {\n   return copy('README.md', './public1', cb);\n});\ngulp.task('backcopy', function(cb) {\n   return mv('./public1', './public',{clobber: false}, cb)\n});\n\n\n// 压缩html\ngulp.task('minify-html', function() {\n    return gulp.src('./public/**/*.html')\n        .pipe(htmlclean())\n        .pipe(htmlmin({\n            removeComments: true,\n            minifyJS: true,\n            minifyCSS: true,\n            minifyURLs: true,\n        }))\n        .pipe(gulp.dest('./public1'))\n});\n// 压缩css\ngulp.task('minify-css', function() {\n    return gulp.src('./public/**/*.css')\n        .pipe(minifycss({\n            compatibility: 'ie8'\n        }))\n        .pipe(gulp.dest('./public1'));\n});\n// 压缩js\ngulp.task('minify-js', function() {\n    return gulp.src('./public/**/*.js')\n        .pipe(uglify())\n        .pipe(gulp.dest('./public1'));\n});\n// 压缩主题图片\ngulp.task('minify-images', function() {\n    return gulp.src('./public/images/**/*.*')\n        .pipe(imagemin(\n        [imagemin.gifsicle({'optimizationLevel': 3}), \n        imagemin.jpegtran({'progressive': true}), \n        imagemin.optipng({'optimizationLevel': 7}), \n        imagemin.svgo()],\n        {'verbose': true}))\n        .pipe(gulp.dest('./public1/images'))\n});\n// 压缩文章图片\ngulp.task('minify-contentimg', function() {\n    return gulp.src('./public/contentimg/**/*.*')\n        .pipe(imagemin(\n        [imagemin.gifsicle({'optimizationLevel': 3}), \n        imagemin.jpegtran({'progressive': true}), \n        imagemin.optipng({'optimizationLevel': 7}), \n        imagemin.svgo()],\n        {'verbose': true}))\n        .pipe(gulp.dest('./public1/contentimg'))\n});\n//压缩字体文件（实际没看出效果）\ngulp.task('fontttf', function() {\n    gulp.src('./public/lib/font-awesome/fonts/*.*')\n    .pipe(gulp.dest('./public1/lib/font-awesome/fonts'));\n});\n\n//build完后复制文件回去\ngulp.task('build', ['minify-html','minify-css','minify-js','minify-images','minify-contentimg','fontttf'],()=>{gulp.start('filedone');});\n\n// 执行清理任务后才build\ngulp.task('default', ['clean'],()=>{gulp.start('build');});\n```\n\n### 3.3 当下载不了工具怎么办\n\n　　npm是一个前端自动化工具。有中文官网，但是网络很不好，同时我们在gitbash里面操作下载，也经常因为网络问题下载不了。\n\n　　后面排查分析，了解到gitbash里面的install操作，实际上是去github上找最新版本down下来。所以如果遇到安装的时候报联网失败，是可以分析找到github上对应的包，直接下载来安装的（npm的服务器ping经常断流，不是墙的问题）。\n\n　　在install失败的时候，会提示“XXX网站”连接失败，这时候把这个网站复制到百度云离线下载，是能下载下来的：\n\n![Result pic 10](/contentimg/8/10.png \"下载copy失败时扒的html\")\n\n\n　　打开后找version，拉到最下面，找到最新的一个版本后，找下载链接tarball。然后用百度云离线再下载下来。放到D盘根目录：\n\n>   npm install d:/XXX.tgz\n\n![Result pic 11](/contentimg/8/11.png \"下载copy失败时扒的tarball\")\n\n\n　　如果还不行，就直接手动解压，放到node_modules目录吧。\n\n　　这里贴几个npm的介绍博客链接吧：\n\n\n[前端自动化gulp遇上es6从 无知到深爱](https://www.cnblogs.com/QRL909109/p/5620824.html) \n\n[前端自动化构建工具gulp记录](https://www.cnblogs.com/strick/p/5151714.html) \n\n[npm 模块安装机制简介](http://www.ruanyifeng.com/blog/2016/01/npm-install.html) \n\n\n　　另外，在github下载别人的博客代码后，可以通过cmd cd到目录下，直接npm install就行，会默认自己找package.json来安装。注意看一下里面的结构，联网下载的是有前缀^，本地文件的是相对路径。\n\n　　package-lock.json影响不大，可以删除。当安装package.json时，会重新生成。\n\n![Result pic 12](/contentimg/8/12.png \"package.json\")\n\n## 四.总结\n\n　　划重点，其实如果你部署在codingpage上，本篇文章就不用看了。因为都是秒开的。\n\n　　部署在github上，逼格虽然高了些，但由于服务器在国外，而且没自带加速，优化之路很麻烦：压缩+CDN加速。\n\n　　而压缩，其实就是牺牲cpu解压换来的。目前使用gulp进行初步压缩。复杂的可以直接压缩成gz文件来处理。\n\n　　在我认为，js文件压缩就没必要了，合并js文件还可以，压缩就没必要。图片方面是主要优化对象，而这里，其实还有个[七牛云](https://www.qiniu.com/) 七牛在国内，访问比github快。而且每月有10g的免费额度。\n\n　　注意，这里page的优化，DNS解析权重最大，所以上面提到的合并js，其实就是避免来回的dns解析请求。而IP，github服务器在国外，访问相对国内的coding会慢好多。\n\n　　由于整个page是静态文件，所以好多技术性上的优化（缓存），权重是很小的。\n\n","source":"_posts/8SupGitPage.md","raw":"---\ntitle: 搭建个人博客心得---个人站点yaojx.net的优化之路\ndate: 2018-10-18 22:55:58\ncategories:\n  - 编程人生\ntags:\n  - 域名\n  - 个人博客  \n---\n\t\n　　本文是记录配置域名转址，以及如何优化gitpage访问等等高级功能的文章。该系列有3篇：1.付费虚拟云主机+WordPress；2.免费github+Hexo；3.个人站点yaojx.net的优化之路。\n\n<!-- more -->\n　　整个优化非常坎坷，最后总结，才发现部署到coding就已经达到了优化中的99%。剩下这个1%，花了我99%的时间和精力。\n\n　　本文不废话怎么排查，从什么地方入手。直接根据我优化中的体会来讲。\n\n## 一.转址\n\n### 1.1 理解转址\n\n[域名解析中A记录、CNAME、MX记录、NS记录的区别和联系](https://www.2cto.com/net/201306/221200.html)\n\n[从DNS到github pages自定义域名 -- 漫谈域名那些事](http://winterttr.me/2015/10/23/from-dns-to-github-custom-domain/)\n\n　　上面这两篇文章讲得很详细，介绍了DNS配置中几个选项间的关系。\n\n　　转址的作用，就是当我在浏览器输入A的时候，浏览器自动帮我跳转到B网站（A方式），这里CNAME还添加了将B网站的前缀域名修改为A网站的效果（可配置，当没设置该项时就不会修改域名）。\n\n　　一般情况下，我们只需要设置两个A方式（带www的，和不带www的），然后在page那边设置CNAME。\n\n### 1.2 GoDaddy转址\n\n![Result pic 1](/contentimg/8/1.png \"GoDaddy设置转址\")\n\n\n　　这里GoDaddy给我们设置了一个基础的转址，但是不是很好用(起作用慢)。推荐是去修改上面DNS管理。\n\n\n　　这里我就不截图了，默认项可以保留，默认有几个A和几个CNAME。直接添加新选项，然后TTL设置为自定义“600”。其他默认项暂时没必要删除。\n\n``` bash\nA       @     目标ip地址  //@ 相当于 yaojx.net\nA       www   目标ip地址  // 如果没这一项，网站就是www.yaojx.net了\n```\n\n　　注意TTL设置600最小见效才快。不然得等好几个小时。\n\n### 1.3 dnspod转址（即现在的腾讯云服务）\n\n　　这个不用记录了，直接有“一键”的。就是输入两个ip就行，默认“一键”后，给我们创造了两个A类型的，一个是“www”，另一个是“@”。\n\n　　这里提一下怎么找gitpage和codingpage的ip：\n\n![Result pic 2](/contentimg/8/2.png \"找page的ip\")\n\n\n　　直接ping网站，注意这里github的IP会左右变动。但是不影响我们使用A方式转址。图中ip没一致，但是仍然可以转址成功。\n\n### 1.4 GitHub相关配置\n\n[GitHub自定义域疑难解答](https://help.github.com/articles/troubleshooting-custom-domains/)\n\n\n　　coding那个就不用说明了，和腾讯一样都是一键的。\n\n　　GitHub这边要弄的东西不复杂，就添加一个文件[CNAME](https://github.com/YaojiaxinPC/YaojiaxinPC.github.io/blob/master/CNAME) ，注意没有后缀，五个字母都大写。里面放的是你要跳转的域名。\n\n　　该文件一创建马上生效，你访问YaojiaxinPC.github.io就会跳到CNAME里面的域名yaojx.net然后又回来YaojiaxinPC.github.io，当然这时候前缀已经改为yaojx.net了。（这个过程可以在chrome中捕捉到，所以修改转址后，直接访问YaojiaxinPC.github.io反而耗时。）\n\n\n　　这里遇到的坑是，刚开始使用GoDaddy，后面改cloudflare，因为都在国外，转址更新见效慢，域名那边没转址对YaojiaxinPC.github.io，导致跳过来gitpage后，是个404，访问YaojiaxinPC.github.io这边，又已经转址到yao.net-->404，构不成一个环。卡了好久，等几个小时后，DNS同步到了后才见效。\n\n　　coding那边就不用，一设置就见效。所以后面我域名都放到DNSPOD上了。\n\n## 二.优化工具\n\n### 2.1 [百度统计](https://tongji.baidu.com/web/welcome) 分析优化内容\n\n![Result pic 3](/contentimg/8/3.png \"百度统计情况-githubpage\")\n\n![Result pic 4](/contentimg/8/4.png \"百度统计情况-codingpage\")\n\n\n　　里面提到的合并js，以及Gzip压缩，都要改大量代码，所以这两项目前我还没去弄。只根据未优化前期提的建议，使用了后面提到的gulp压缩工具而已。同时前期还有提到头像文件太大等等其他建议（头像后面我改成170X170）。\n\n### 2.2 Chrome调试工具使用\n\n![Result pic 5](/contentimg/8/5.png \"Chrome调试工具\")\n\n　　未优化前期，用Chrome打开，一直提示加载过慢（5S以上），使用默认字体代替，同时提示是ttf文件下载太久。当时就把我引到优化字体的方向上，后面追查了好长时间，发现搞错了。重点在DNS解析和IP。当然，如果有用谷歌字体，这里会有问题的，谷歌被墙，所以在next主题中最好使用本地字体，搜索有提到用360库的，还有github上的ed链接等等那些，效果都一般，还是不使用这些字体好。\n\n![Result pic 6](/contentimg/8/6.png \"取消使用谷歌字体\")\n\n\n还有其他一些统计工具，不过实际Chrome的调试工具就已经能完成那些统计了，就不推荐那些工具了。\n\n### 2.3 [站长工具](http://tool.chinaz.com/gzips/)\n\n![Result pic 7](/contentimg/8/7.png \"codingpage自带优化\")\n\n\n![Result pic 8](/contentimg/8/8.png \"手动优化后的githubpage\")\n\n　　第二个图是更新了文章后截的图，大小上是大了一点点（其他东西都是和coding那边一样的），都是使用手动gulp优化后的Gzip压缩（文件只是体积变小，百度统计认的gzip是后缀为gz的压缩文件，意思不同）。但是在上面图中识别出来是不同：codingpage的直接压缩率99.96%？？？同时识别不出来gzip压缩。这样就能解释怎么放那边打开是秒开了。\n\n## 三.Gulp压缩\n\n　　这个是重点，让整个包从15.7m压缩到11.7m。而且整个操作除了安装工具，写一个[js脚本](https://github.com/YaojiaxinPC/blogcode/blob/master/gulpfile.js) 外，不用修改工程中的任何东西和代码。不会对原工程造成影响！\n\n　　[npm主页](https://www.npmjs.com/) \n\n### 3.1 安装gulp\n\n``` bash \nnpm install <name> [-g] [--save-dev]\n```\n\n1. name：node插件名称。例：\n\n>  npm install gulp --save-dev\n\n1. -g：全局安装。将会安装在%homepath%\\AppData\\Roaming\\npm，并且写入系统环境变量；\n\n\t- 非全局安装：将会安装在当前目录的node_modules文件夹下，只能在当前目录通过require()调用使用。\n\n\t- 全局安装：可以通过命令行在任何地方调用它。\n\t\n\n1. --save：将保存配置信息至package.json（package.json是nodejs项目配置文件）。\n\n1. -dev：保存至package.json的devDependencies节点，不指定-dev将保存至dependencies节点。\n\n　　配置文件package.json记录了当前工程使用的相关包，只需要在有这个文件的文件夹下面执行“npm install”，就会根据package.json下载所有需要的包。\n\n![Result pic 9](/contentimg/8/9.png \"package.json\")\n\n\n\n``` bash\nnpm install gulp --save-dev\nnpm install gulp-htmlclean --save-dev\nnpm install gulp-htmlmin --save-dev\nnpm install gulp-imagemin --save-dev\nnpm install gulp-minify-css --save-dev\nnpm install gulp-uglify --save-dev\n//文件处理\nnpm install del --save\nnpm install mv --save\n//这个网络情况不是很好，所以最好通过设置配置文件的skip_render来避免处理README.md\nnpm install copy --save\n```\n\n### 3.2 编写gulp脚本\n\n　　[gulp脚本](https://github.com/YaojiaxinPC/blogcode/blob/master/gulpfile.js) \n\n　　可以使用我github上的这个脚本。里面做的事情就是压缩html、css、js、图片等，在我电脑上，无法进行覆盖操作，所以我就把生成的压缩文件保存到缓存文件夹，然后用del/copy/mv等操作来处理。\n\n　　注意hexo编译的时候，会把后缀为“md”的文件都转成html，所以README.md也会变成README.html。这样，就不能把它放在source里面，只能放外面，在gulp后再复制进去public中。(其实这里可以通过设置主配置文件的skip_render来避免编译)\n\n``` js\nvar gulp = require('gulp');\nvar del = require('del');\nvar mv = require('mv');\nvar copy = require('copy');\nvar minifycss = require('gulp-minify-css');\nvar uglify = require('gulp-uglify');\nvar htmlmin = require('gulp-htmlmin');\nvar htmlclean = require('gulp-htmlclean');\nvar imagemin = require('gulp-imagemin');\n \n \n// Clean  任务执行前，先清除之前生成的缓存文件\ngulp.task('clean', function(cb) {\n   return del(['./public1/**'], cb)\n});\n\n// move  任务执行完成后，从主目录复制文件过来缓存目录\n//(此时会自动删除主目录),然后再复制回去（因为不能覆盖，所以不能从缓存目录直接过去主目录进行覆盖）\ngulp.task('filedone',['copy-all'],()=>{gulp.start('filedone-dealREADME');});\n//将public下的文件复制到缓存文件夹下\ngulp.task('copy-all', function(cb) {\n   return mv('./public', './public1',{clobber: false}, cb)\n});\n\n//复制README.md。处理完成后才进行重命名\ngulp.task('filedone-dealREADME',['copy-readme'],()=>{gulp.start('backcopy');});\n\n//复制README.md\ngulp.task('copy-readme', function(cb) {\n   return copy('README.md', './public1', cb);\n});\ngulp.task('backcopy', function(cb) {\n   return mv('./public1', './public',{clobber: false}, cb)\n});\n\n\n// 压缩html\ngulp.task('minify-html', function() {\n    return gulp.src('./public/**/*.html')\n        .pipe(htmlclean())\n        .pipe(htmlmin({\n            removeComments: true,\n            minifyJS: true,\n            minifyCSS: true,\n            minifyURLs: true,\n        }))\n        .pipe(gulp.dest('./public1'))\n});\n// 压缩css\ngulp.task('minify-css', function() {\n    return gulp.src('./public/**/*.css')\n        .pipe(minifycss({\n            compatibility: 'ie8'\n        }))\n        .pipe(gulp.dest('./public1'));\n});\n// 压缩js\ngulp.task('minify-js', function() {\n    return gulp.src('./public/**/*.js')\n        .pipe(uglify())\n        .pipe(gulp.dest('./public1'));\n});\n// 压缩主题图片\ngulp.task('minify-images', function() {\n    return gulp.src('./public/images/**/*.*')\n        .pipe(imagemin(\n        [imagemin.gifsicle({'optimizationLevel': 3}), \n        imagemin.jpegtran({'progressive': true}), \n        imagemin.optipng({'optimizationLevel': 7}), \n        imagemin.svgo()],\n        {'verbose': true}))\n        .pipe(gulp.dest('./public1/images'))\n});\n// 压缩文章图片\ngulp.task('minify-contentimg', function() {\n    return gulp.src('./public/contentimg/**/*.*')\n        .pipe(imagemin(\n        [imagemin.gifsicle({'optimizationLevel': 3}), \n        imagemin.jpegtran({'progressive': true}), \n        imagemin.optipng({'optimizationLevel': 7}), \n        imagemin.svgo()],\n        {'verbose': true}))\n        .pipe(gulp.dest('./public1/contentimg'))\n});\n//压缩字体文件（实际没看出效果）\ngulp.task('fontttf', function() {\n    gulp.src('./public/lib/font-awesome/fonts/*.*')\n    .pipe(gulp.dest('./public1/lib/font-awesome/fonts'));\n});\n\n//build完后复制文件回去\ngulp.task('build', ['minify-html','minify-css','minify-js','minify-images','minify-contentimg','fontttf'],()=>{gulp.start('filedone');});\n\n// 执行清理任务后才build\ngulp.task('default', ['clean'],()=>{gulp.start('build');});\n```\n\n### 3.3 当下载不了工具怎么办\n\n　　npm是一个前端自动化工具。有中文官网，但是网络很不好，同时我们在gitbash里面操作下载，也经常因为网络问题下载不了。\n\n　　后面排查分析，了解到gitbash里面的install操作，实际上是去github上找最新版本down下来。所以如果遇到安装的时候报联网失败，是可以分析找到github上对应的包，直接下载来安装的（npm的服务器ping经常断流，不是墙的问题）。\n\n　　在install失败的时候，会提示“XXX网站”连接失败，这时候把这个网站复制到百度云离线下载，是能下载下来的：\n\n![Result pic 10](/contentimg/8/10.png \"下载copy失败时扒的html\")\n\n\n　　打开后找version，拉到最下面，找到最新的一个版本后，找下载链接tarball。然后用百度云离线再下载下来。放到D盘根目录：\n\n>   npm install d:/XXX.tgz\n\n![Result pic 11](/contentimg/8/11.png \"下载copy失败时扒的tarball\")\n\n\n　　如果还不行，就直接手动解压，放到node_modules目录吧。\n\n　　这里贴几个npm的介绍博客链接吧：\n\n\n[前端自动化gulp遇上es6从 无知到深爱](https://www.cnblogs.com/QRL909109/p/5620824.html) \n\n[前端自动化构建工具gulp记录](https://www.cnblogs.com/strick/p/5151714.html) \n\n[npm 模块安装机制简介](http://www.ruanyifeng.com/blog/2016/01/npm-install.html) \n\n\n　　另外，在github下载别人的博客代码后，可以通过cmd cd到目录下，直接npm install就行，会默认自己找package.json来安装。注意看一下里面的结构，联网下载的是有前缀^，本地文件的是相对路径。\n\n　　package-lock.json影响不大，可以删除。当安装package.json时，会重新生成。\n\n![Result pic 12](/contentimg/8/12.png \"package.json\")\n\n## 四.总结\n\n　　划重点，其实如果你部署在codingpage上，本篇文章就不用看了。因为都是秒开的。\n\n　　部署在github上，逼格虽然高了些，但由于服务器在国外，而且没自带加速，优化之路很麻烦：压缩+CDN加速。\n\n　　而压缩，其实就是牺牲cpu解压换来的。目前使用gulp进行初步压缩。复杂的可以直接压缩成gz文件来处理。\n\n　　在我认为，js文件压缩就没必要了，合并js文件还可以，压缩就没必要。图片方面是主要优化对象，而这里，其实还有个[七牛云](https://www.qiniu.com/) 七牛在国内，访问比github快。而且每月有10g的免费额度。\n\n　　注意，这里page的优化，DNS解析权重最大，所以上面提到的合并js，其实就是避免来回的dns解析请求。而IP，github服务器在国外，访问相对国内的coding会慢好多。\n\n　　由于整个page是静态文件，所以好多技术性上的优化（缓存），权重是很小的。\n\n","slug":"8SupGitPage","published":1,"updated":"2018-10-19T13:53:38.492Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgrij005ajo9cqabwdsk4","content":"<p>　　本文是记录配置域名转址，以及如何优化gitpage访问等等高级功能的文章。该系列有3篇：1.付费虚拟云主机+WordPress；2.免费github+Hexo；3.个人站点yaojx.net的优化之路。</p>\n<a id=\"more\"></a>\n<p>　　整个优化非常坎坷，最后总结，才发现部署到coding就已经达到了优化中的99%。剩下这个1%，花了我99%的时间和精力。</p>\n<p>　　本文不废话怎么排查，从什么地方入手。直接根据我优化中的体会来讲。</p>\n<h2 id=\"一-转址\"><a href=\"#一-转址\" class=\"headerlink\" title=\"一.转址\"></a>一.转址</h2><h3 id=\"1-1-理解转址\"><a href=\"#1-1-理解转址\" class=\"headerlink\" title=\"1.1 理解转址\"></a>1.1 理解转址</h3><p><a href=\"https://www.2cto.com/net/201306/221200.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">域名解析中A记录、CNAME、MX记录、NS记录的区别和联系</a></p>\n<p><a href=\"http://winterttr.me/2015/10/23/from-dns-to-github-custom-domain/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">从DNS到github pages自定义域名 – 漫谈域名那些事</a></p>\n<p>　　上面这两篇文章讲得很详细，介绍了DNS配置中几个选项间的关系。</p>\n<p>　　转址的作用，就是当我在浏览器输入A的时候，浏览器自动帮我跳转到B网站（A方式），这里CNAME还添加了将B网站的前缀域名修改为A网站的效果（可配置，当没设置该项时就不会修改域名）。</p>\n<p>　　一般情况下，我们只需要设置两个A方式（带www的，和不带www的），然后在page那边设置CNAME。</p>\n<h3 id=\"1-2-GoDaddy转址\"><a href=\"#1-2-GoDaddy转址\" class=\"headerlink\" title=\"1.2 GoDaddy转址\"></a>1.2 GoDaddy转址</h3><p><img src=\"/contentimg/8/1.png\" alt=\"Result pic 1\" title=\"GoDaddy设置转址\"></p>\n<p>　　这里GoDaddy给我们设置了一个基础的转址，但是不是很好用(起作用慢)。推荐是去修改上面DNS管理。</p>\n<p>　　这里我就不截图了，默认项可以保留，默认有几个A和几个CNAME。直接添加新选项，然后TTL设置为自定义“600”。其他默认项暂时没必要删除。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A       @     目标ip地址  //@ 相当于 yaojx.net</span><br><span class=\"line\">A       www   目标ip地址  // 如果没这一项，网站就是www.yaojx.net了</span><br></pre></td></tr></table></figure>\n<p>　　注意TTL设置600最小见效才快。不然得等好几个小时。</p>\n<h3 id=\"1-3-dnspod转址（即现在的腾讯云服务）\"><a href=\"#1-3-dnspod转址（即现在的腾讯云服务）\" class=\"headerlink\" title=\"1.3 dnspod转址（即现在的腾讯云服务）\"></a>1.3 dnspod转址（即现在的腾讯云服务）</h3><p>　　这个不用记录了，直接有“一键”的。就是输入两个ip就行，默认“一键”后，给我们创造了两个A类型的，一个是“www”，另一个是“@”。</p>\n<p>　　这里提一下怎么找gitpage和codingpage的ip：</p>\n<p><img src=\"/contentimg/8/2.png\" alt=\"Result pic 2\" title=\"找page的ip\"></p>\n<p>　　直接ping网站，注意这里github的IP会左右变动。但是不影响我们使用A方式转址。图中ip没一致，但是仍然可以转址成功。</p>\n<h3 id=\"1-4-GitHub相关配置\"><a href=\"#1-4-GitHub相关配置\" class=\"headerlink\" title=\"1.4 GitHub相关配置\"></a>1.4 GitHub相关配置</h3><p><a href=\"https://help.github.com/articles/troubleshooting-custom-domains/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">GitHub自定义域疑难解答</a></p>\n<p>　　coding那个就不用说明了，和腾讯一样都是一键的。</p>\n<p>　　GitHub这边要弄的东西不复杂，就添加一个文件<a href=\"https://github.com/YaojiaxinPC/YaojiaxinPC.github.io/blob/master/CNAME\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">CNAME</a> ，注意没有后缀，五个字母都大写。里面放的是你要跳转的域名。</p>\n<p>　　该文件一创建马上生效，你访问YaojiaxinPC.github.io就会跳到CNAME里面的域名yaojx.net然后又回来YaojiaxinPC.github.io，当然这时候前缀已经改为yaojx.net了。（这个过程可以在chrome中捕捉到，所以修改转址后，直接访问YaojiaxinPC.github.io反而耗时。）</p>\n<p>　　这里遇到的坑是，刚开始使用GoDaddy，后面改cloudflare，因为都在国外，转址更新见效慢，域名那边没转址对YaojiaxinPC.github.io，导致跳过来gitpage后，是个404，访问YaojiaxinPC.github.io这边，又已经转址到yao.net–&gt;404，构不成一个环。卡了好久，等几个小时后，DNS同步到了后才见效。</p>\n<p>　　coding那边就不用，一设置就见效。所以后面我域名都放到DNSPOD上了。</p>\n<h2 id=\"二-优化工具\"><a href=\"#二-优化工具\" class=\"headerlink\" title=\"二.优化工具\"></a>二.优化工具</h2><h3 id=\"2-1-百度统计-分析优化内容\"><a href=\"#2-1-百度统计-分析优化内容\" class=\"headerlink\" title=\"2.1 百度统计 分析优化内容\"></a>2.1 <a href=\"https://tongji.baidu.com/web/welcome\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">百度统计</a> 分析优化内容</h3><p><img src=\"/contentimg/8/3.png\" alt=\"Result pic 3\" title=\"百度统计情况-githubpage\"></p>\n<p><img src=\"/contentimg/8/4.png\" alt=\"Result pic 4\" title=\"百度统计情况-codingpage\"></p>\n<p>　　里面提到的合并js，以及Gzip压缩，都要改大量代码，所以这两项目前我还没去弄。只根据未优化前期提的建议，使用了后面提到的gulp压缩工具而已。同时前期还有提到头像文件太大等等其他建议（头像后面我改成170X170）。</p>\n<h3 id=\"2-2-Chrome调试工具使用\"><a href=\"#2-2-Chrome调试工具使用\" class=\"headerlink\" title=\"2.2 Chrome调试工具使用\"></a>2.2 Chrome调试工具使用</h3><p><img src=\"/contentimg/8/5.png\" alt=\"Result pic 5\" title=\"Chrome调试工具\"></p>\n<p>　　未优化前期，用Chrome打开，一直提示加载过慢（5S以上），使用默认字体代替，同时提示是ttf文件下载太久。当时就把我引到优化字体的方向上，后面追查了好长时间，发现搞错了。重点在DNS解析和IP。当然，如果有用谷歌字体，这里会有问题的，谷歌被墙，所以在next主题中最好使用本地字体，搜索有提到用360库的，还有github上的ed链接等等那些，效果都一般，还是不使用这些字体好。</p>\n<p><img src=\"/contentimg/8/6.png\" alt=\"Result pic 6\" title=\"取消使用谷歌字体\"></p>\n<p>还有其他一些统计工具，不过实际Chrome的调试工具就已经能完成那些统计了，就不推荐那些工具了。</p>\n<h3 id=\"2-3-站长工具\"><a href=\"#2-3-站长工具\" class=\"headerlink\" title=\"2.3 站长工具\"></a>2.3 <a href=\"http://tool.chinaz.com/gzips/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">站长工具</a></h3><p><img src=\"/contentimg/8/7.png\" alt=\"Result pic 7\" title=\"codingpage自带优化\"></p>\n<p><img src=\"/contentimg/8/8.png\" alt=\"Result pic 8\" title=\"手动优化后的githubpage\"></p>\n<p>　　第二个图是更新了文章后截的图，大小上是大了一点点（其他东西都是和coding那边一样的），都是使用手动gulp优化后的Gzip压缩（文件只是体积变小，百度统计认的gzip是后缀为gz的压缩文件，意思不同）。但是在上面图中识别出来是不同：codingpage的直接压缩率99.96%？？？同时识别不出来gzip压缩。这样就能解释怎么放那边打开是秒开了。</p>\n<h2 id=\"三-Gulp压缩\"><a href=\"#三-Gulp压缩\" class=\"headerlink\" title=\"三.Gulp压缩\"></a>三.Gulp压缩</h2><p>　　这个是重点，让整个包从15.7m压缩到11.7m。而且整个操作除了安装工具，写一个<a href=\"https://github.com/YaojiaxinPC/blogcode/blob/master/gulpfile.js\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">js脚本</a> 外，不用修改工程中的任何东西和代码。不会对原工程造成影响！</p>\n<p>　　<a href=\"https://www.npmjs.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">npm主页</a> </p>\n<h3 id=\"3-1-安装gulp\"><a href=\"#3-1-安装gulp\" class=\"headerlink\" title=\"3.1 安装gulp\"></a>3.1 安装gulp</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install &lt;name&gt; [-g] [--save-dev]</span><br></pre></td></tr></table></figure>\n<ol>\n<li>name：node插件名称。例：</li>\n</ol>\n<blockquote>\n<p> npm install gulp –save-dev</p>\n</blockquote>\n<ol>\n<li><p>-g：全局安装。将会安装在%homepath%\\AppData\\Roaming\\npm，并且写入系统环境变量；</p>\n<ul>\n<li><p>非全局安装：将会安装在当前目录的node_modules文件夹下，只能在当前目录通过require()调用使用。</p>\n</li>\n<li><p>全局安装：可以通过命令行在任何地方调用它。</p>\n</li>\n</ul>\n</li>\n</ol>\n<ol>\n<li><p>–save：将保存配置信息至package.json（package.json是nodejs项目配置文件）。</p>\n</li>\n<li><p>-dev：保存至package.json的devDependencies节点，不指定-dev将保存至dependencies节点。</p>\n</li>\n</ol>\n<p>　　配置文件package.json记录了当前工程使用的相关包，只需要在有这个文件的文件夹下面执行“npm install”，就会根据package.json下载所有需要的包。</p>\n<p><img src=\"/contentimg/8/9.png\" alt=\"Result pic 9\" title=\"package.json\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp --save-dev</span><br><span class=\"line\">npm install gulp-htmlclean --save-dev</span><br><span class=\"line\">npm install gulp-htmlmin --save-dev</span><br><span class=\"line\">npm install gulp-imagemin --save-dev</span><br><span class=\"line\">npm install gulp-minify-css --save-dev</span><br><span class=\"line\">npm install gulp-uglify --save-dev</span><br><span class=\"line\">//文件处理</span><br><span class=\"line\">npm install del --save</span><br><span class=\"line\">npm install mv --save</span><br><span class=\"line\">//这个网络情况不是很好，所以最好通过设置配置文件的skip_render来避免处理README.md</span><br><span class=\"line\">npm install copy --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-编写gulp脚本\"><a href=\"#3-2-编写gulp脚本\" class=\"headerlink\" title=\"3.2 编写gulp脚本\"></a>3.2 编写gulp脚本</h3><p>　　<a href=\"https://github.com/YaojiaxinPC/blogcode/blob/master/gulpfile.js\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">gulp脚本</a> </p>\n<p>　　可以使用我github上的这个脚本。里面做的事情就是压缩html、css、js、图片等，在我电脑上，无法进行覆盖操作，所以我就把生成的压缩文件保存到缓存文件夹，然后用del/copy/mv等操作来处理。</p>\n<p>　　注意hexo编译的时候，会把后缀为“md”的文件都转成html，所以README.md也会变成README.html。这样，就不能把它放在source里面，只能放外面，在gulp后再复制进去public中。(其实这里可以通过设置主配置文件的skip_render来避免编译)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> del = <span class=\"built_in\">require</span>(<span class=\"string\">'del'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mv = <span class=\"built_in\">require</span>(<span class=\"string\">'mv'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> copy = <span class=\"built_in\">require</span>(<span class=\"string\">'copy'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> minifycss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> htmlmin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-htmlmin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> htmlclean = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-htmlclean'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// Clean  任务执行前，先清除之前生成的缓存文件</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'clean'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> del([<span class=\"string\">'./public1/**'</span>], cb)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// move  任务执行完成后，从主目录复制文件过来缓存目录</span></span><br><span class=\"line\"><span class=\"comment\">//(此时会自动删除主目录),然后再复制回去（因为不能覆盖，所以不能从缓存目录直接过去主目录进行覆盖）</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'filedone'</span>,[<span class=\"string\">'copy-all'</span>],()=&gt;&#123;gulp.start(<span class=\"string\">'filedone-dealREADME'</span>);&#125;);</span><br><span class=\"line\"><span class=\"comment\">//将public下的文件复制到缓存文件夹下</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'copy-all'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> mv(<span class=\"string\">'./public'</span>, <span class=\"string\">'./public1'</span>,&#123;<span class=\"attr\">clobber</span>: <span class=\"literal\">false</span>&#125;, cb)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//复制README.md。处理完成后才进行重命名</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'filedone-dealREADME'</span>,[<span class=\"string\">'copy-readme'</span>],()=&gt;&#123;gulp.start(<span class=\"string\">'backcopy'</span>);&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//复制README.md</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'copy-readme'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> copy(<span class=\"string\">'README.md'</span>, <span class=\"string\">'./public1'</span>, cb);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">gulp.task(<span class=\"string\">'backcopy'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> mv(<span class=\"string\">'./public1'</span>, <span class=\"string\">'./public'</span>,&#123;<span class=\"attr\">clobber</span>: <span class=\"literal\">false</span>&#125;, cb)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 压缩html</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/**/*.html'</span>)</span><br><span class=\"line\">        .pipe(htmlclean())</span><br><span class=\"line\">        .pipe(htmlmin(&#123;</span><br><span class=\"line\">            removeComments: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            minifyJS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            minifyCSS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            minifyURLs: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public1'</span>))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩css</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/**/*.css'</span>)</span><br><span class=\"line\">        .pipe(minifycss(&#123;</span><br><span class=\"line\">            compatibility: <span class=\"string\">'ie8'</span></span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public1'</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩js</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/**/*.js'</span>)</span><br><span class=\"line\">        .pipe(uglify())</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public1'</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩主题图片</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-images'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/images/**/*.*'</span>)</span><br><span class=\"line\">        .pipe(imagemin(</span><br><span class=\"line\">        [imagemin.gifsicle(&#123;<span class=\"string\">'optimizationLevel'</span>: <span class=\"number\">3</span>&#125;), </span><br><span class=\"line\">        imagemin.jpegtran(&#123;<span class=\"string\">'progressive'</span>: <span class=\"literal\">true</span>&#125;), </span><br><span class=\"line\">        imagemin.optipng(&#123;<span class=\"string\">'optimizationLevel'</span>: <span class=\"number\">7</span>&#125;), </span><br><span class=\"line\">        imagemin.svgo()],</span><br><span class=\"line\">        &#123;<span class=\"string\">'verbose'</span>: <span class=\"literal\">true</span>&#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public1/images'</span>))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩文章图片</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-contentimg'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/contentimg/**/*.*'</span>)</span><br><span class=\"line\">        .pipe(imagemin(</span><br><span class=\"line\">        [imagemin.gifsicle(&#123;<span class=\"string\">'optimizationLevel'</span>: <span class=\"number\">3</span>&#125;), </span><br><span class=\"line\">        imagemin.jpegtran(&#123;<span class=\"string\">'progressive'</span>: <span class=\"literal\">true</span>&#125;), </span><br><span class=\"line\">        imagemin.optipng(&#123;<span class=\"string\">'optimizationLevel'</span>: <span class=\"number\">7</span>&#125;), </span><br><span class=\"line\">        imagemin.svgo()],</span><br><span class=\"line\">        &#123;<span class=\"string\">'verbose'</span>: <span class=\"literal\">true</span>&#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public1/contentimg'</span>))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//压缩字体文件（实际没看出效果）</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'fontttf'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    gulp.src(<span class=\"string\">'./public/lib/font-awesome/fonts/*.*'</span>)</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">'./public1/lib/font-awesome/fonts'</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//build完后复制文件回去</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'build'</span>, [<span class=\"string\">'minify-html'</span>,<span class=\"string\">'minify-css'</span>,<span class=\"string\">'minify-js'</span>,<span class=\"string\">'minify-images'</span>,<span class=\"string\">'minify-contentimg'</span>,<span class=\"string\">'fontttf'</span>],()=&gt;&#123;gulp.start(<span class=\"string\">'filedone'</span>);&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行清理任务后才build</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'clean'</span>],()=&gt;&#123;gulp.start(<span class=\"string\">'build'</span>);&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-当下载不了工具怎么办\"><a href=\"#3-3-当下载不了工具怎么办\" class=\"headerlink\" title=\"3.3 当下载不了工具怎么办\"></a>3.3 当下载不了工具怎么办</h3><p>　　npm是一个前端自动化工具。有中文官网，但是网络很不好，同时我们在gitbash里面操作下载，也经常因为网络问题下载不了。</p>\n<p>　　后面排查分析，了解到gitbash里面的install操作，实际上是去github上找最新版本down下来。所以如果遇到安装的时候报联网失败，是可以分析找到github上对应的包，直接下载来安装的（npm的服务器ping经常断流，不是墙的问题）。</p>\n<p>　　在install失败的时候，会提示“XXX网站”连接失败，这时候把这个网站复制到百度云离线下载，是能下载下来的：</p>\n<p><img src=\"/contentimg/8/10.png\" alt=\"Result pic 10\" title=\"下载copy失败时扒的html\"></p>\n<p>　　打开后找version，拉到最下面，找到最新的一个版本后，找下载链接tarball。然后用百度云离线再下载下来。放到D盘根目录：</p>\n<blockquote>\n<p>  npm install d:/XXX.tgz</p>\n</blockquote>\n<p><img src=\"/contentimg/8/11.png\" alt=\"Result pic 11\" title=\"下载copy失败时扒的tarball\"></p>\n<p>　　如果还不行，就直接手动解压，放到node_modules目录吧。</p>\n<p>　　这里贴几个npm的介绍博客链接吧：</p>\n<p><a href=\"https://www.cnblogs.com/QRL909109/p/5620824.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">前端自动化gulp遇上es6从 无知到深爱</a> </p>\n<p><a href=\"https://www.cnblogs.com/strick/p/5151714.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">前端自动化构建工具gulp记录</a> </p>\n<p><a href=\"http://www.ruanyifeng.com/blog/2016/01/npm-install.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">npm 模块安装机制简介</a> </p>\n<p>　　另外，在github下载别人的博客代码后，可以通过cmd cd到目录下，直接npm install就行，会默认自己找package.json来安装。注意看一下里面的结构，联网下载的是有前缀^，本地文件的是相对路径。</p>\n<p>　　package-lock.json影响不大，可以删除。当安装package.json时，会重新生成。</p>\n<p><img src=\"/contentimg/8/12.png\" alt=\"Result pic 12\" title=\"package.json\"></p>\n<h2 id=\"四-总结\"><a href=\"#四-总结\" class=\"headerlink\" title=\"四.总结\"></a>四.总结</h2><p>　　划重点，其实如果你部署在codingpage上，本篇文章就不用看了。因为都是秒开的。</p>\n<p>　　部署在github上，逼格虽然高了些，但由于服务器在国外，而且没自带加速，优化之路很麻烦：压缩+CDN加速。</p>\n<p>　　而压缩，其实就是牺牲cpu解压换来的。目前使用gulp进行初步压缩。复杂的可以直接压缩成gz文件来处理。</p>\n<p>　　在我认为，js文件压缩就没必要了，合并js文件还可以，压缩就没必要。图片方面是主要优化对象，而这里，其实还有个<a href=\"https://www.qiniu.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">七牛云</a> 七牛在国内，访问比github快。而且每月有10g的免费额度。</p>\n<p>　　注意，这里page的优化，DNS解析权重最大，所以上面提到的合并js，其实就是避免来回的dns解析请求。而IP，github服务器在国外，访问相对国内的coding会慢好多。</p>\n<p>　　由于整个page是静态文件，所以好多技术性上的优化（缓存），权重是很小的。</p>\n","site":{"data":{}},"excerpt":"<p>　　本文是记录配置域名转址，以及如何优化gitpage访问等等高级功能的文章。该系列有3篇：1.付费虚拟云主机+WordPress；2.免费github+Hexo；3.个人站点yaojx.net的优化之路。</p>","more":"<p>　　整个优化非常坎坷，最后总结，才发现部署到coding就已经达到了优化中的99%。剩下这个1%，花了我99%的时间和精力。</p>\n<p>　　本文不废话怎么排查，从什么地方入手。直接根据我优化中的体会来讲。</p>\n<h2 id=\"一-转址\"><a href=\"#一-转址\" class=\"headerlink\" title=\"一.转址\"></a>一.转址</h2><h3 id=\"1-1-理解转址\"><a href=\"#1-1-理解转址\" class=\"headerlink\" title=\"1.1 理解转址\"></a>1.1 理解转址</h3><p><a href=\"https://www.2cto.com/net/201306/221200.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">域名解析中A记录、CNAME、MX记录、NS记录的区别和联系</a></p>\n<p><a href=\"http://winterttr.me/2015/10/23/from-dns-to-github-custom-domain/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">从DNS到github pages自定义域名 – 漫谈域名那些事</a></p>\n<p>　　上面这两篇文章讲得很详细，介绍了DNS配置中几个选项间的关系。</p>\n<p>　　转址的作用，就是当我在浏览器输入A的时候，浏览器自动帮我跳转到B网站（A方式），这里CNAME还添加了将B网站的前缀域名修改为A网站的效果（可配置，当没设置该项时就不会修改域名）。</p>\n<p>　　一般情况下，我们只需要设置两个A方式（带www的，和不带www的），然后在page那边设置CNAME。</p>\n<h3 id=\"1-2-GoDaddy转址\"><a href=\"#1-2-GoDaddy转址\" class=\"headerlink\" title=\"1.2 GoDaddy转址\"></a>1.2 GoDaddy转址</h3><p><img src=\"/contentimg/8/1.png\" alt=\"Result pic 1\" title=\"GoDaddy设置转址\"></p>\n<p>　　这里GoDaddy给我们设置了一个基础的转址，但是不是很好用(起作用慢)。推荐是去修改上面DNS管理。</p>\n<p>　　这里我就不截图了，默认项可以保留，默认有几个A和几个CNAME。直接添加新选项，然后TTL设置为自定义“600”。其他默认项暂时没必要删除。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A       @     目标ip地址  //@ 相当于 yaojx.net</span><br><span class=\"line\">A       www   目标ip地址  // 如果没这一项，网站就是www.yaojx.net了</span><br></pre></td></tr></table></figure>\n<p>　　注意TTL设置600最小见效才快。不然得等好几个小时。</p>\n<h3 id=\"1-3-dnspod转址（即现在的腾讯云服务）\"><a href=\"#1-3-dnspod转址（即现在的腾讯云服务）\" class=\"headerlink\" title=\"1.3 dnspod转址（即现在的腾讯云服务）\"></a>1.3 dnspod转址（即现在的腾讯云服务）</h3><p>　　这个不用记录了，直接有“一键”的。就是输入两个ip就行，默认“一键”后，给我们创造了两个A类型的，一个是“www”，另一个是“@”。</p>\n<p>　　这里提一下怎么找gitpage和codingpage的ip：</p>\n<p><img src=\"/contentimg/8/2.png\" alt=\"Result pic 2\" title=\"找page的ip\"></p>\n<p>　　直接ping网站，注意这里github的IP会左右变动。但是不影响我们使用A方式转址。图中ip没一致，但是仍然可以转址成功。</p>\n<h3 id=\"1-4-GitHub相关配置\"><a href=\"#1-4-GitHub相关配置\" class=\"headerlink\" title=\"1.4 GitHub相关配置\"></a>1.4 GitHub相关配置</h3><p><a href=\"https://help.github.com/articles/troubleshooting-custom-domains/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">GitHub自定义域疑难解答</a></p>\n<p>　　coding那个就不用说明了，和腾讯一样都是一键的。</p>\n<p>　　GitHub这边要弄的东西不复杂，就添加一个文件<a href=\"https://github.com/YaojiaxinPC/YaojiaxinPC.github.io/blob/master/CNAME\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">CNAME</a> ，注意没有后缀，五个字母都大写。里面放的是你要跳转的域名。</p>\n<p>　　该文件一创建马上生效，你访问YaojiaxinPC.github.io就会跳到CNAME里面的域名yaojx.net然后又回来YaojiaxinPC.github.io，当然这时候前缀已经改为yaojx.net了。（这个过程可以在chrome中捕捉到，所以修改转址后，直接访问YaojiaxinPC.github.io反而耗时。）</p>\n<p>　　这里遇到的坑是，刚开始使用GoDaddy，后面改cloudflare，因为都在国外，转址更新见效慢，域名那边没转址对YaojiaxinPC.github.io，导致跳过来gitpage后，是个404，访问YaojiaxinPC.github.io这边，又已经转址到yao.net–&gt;404，构不成一个环。卡了好久，等几个小时后，DNS同步到了后才见效。</p>\n<p>　　coding那边就不用，一设置就见效。所以后面我域名都放到DNSPOD上了。</p>\n<h2 id=\"二-优化工具\"><a href=\"#二-优化工具\" class=\"headerlink\" title=\"二.优化工具\"></a>二.优化工具</h2><h3 id=\"2-1-百度统计-分析优化内容\"><a href=\"#2-1-百度统计-分析优化内容\" class=\"headerlink\" title=\"2.1 百度统计 分析优化内容\"></a>2.1 <a href=\"https://tongji.baidu.com/web/welcome\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">百度统计</a> 分析优化内容</h3><p><img src=\"/contentimg/8/3.png\" alt=\"Result pic 3\" title=\"百度统计情况-githubpage\"></p>\n<p><img src=\"/contentimg/8/4.png\" alt=\"Result pic 4\" title=\"百度统计情况-codingpage\"></p>\n<p>　　里面提到的合并js，以及Gzip压缩，都要改大量代码，所以这两项目前我还没去弄。只根据未优化前期提的建议，使用了后面提到的gulp压缩工具而已。同时前期还有提到头像文件太大等等其他建议（头像后面我改成170X170）。</p>\n<h3 id=\"2-2-Chrome调试工具使用\"><a href=\"#2-2-Chrome调试工具使用\" class=\"headerlink\" title=\"2.2 Chrome调试工具使用\"></a>2.2 Chrome调试工具使用</h3><p><img src=\"/contentimg/8/5.png\" alt=\"Result pic 5\" title=\"Chrome调试工具\"></p>\n<p>　　未优化前期，用Chrome打开，一直提示加载过慢（5S以上），使用默认字体代替，同时提示是ttf文件下载太久。当时就把我引到优化字体的方向上，后面追查了好长时间，发现搞错了。重点在DNS解析和IP。当然，如果有用谷歌字体，这里会有问题的，谷歌被墙，所以在next主题中最好使用本地字体，搜索有提到用360库的，还有github上的ed链接等等那些，效果都一般，还是不使用这些字体好。</p>\n<p><img src=\"/contentimg/8/6.png\" alt=\"Result pic 6\" title=\"取消使用谷歌字体\"></p>\n<p>还有其他一些统计工具，不过实际Chrome的调试工具就已经能完成那些统计了，就不推荐那些工具了。</p>\n<h3 id=\"2-3-站长工具\"><a href=\"#2-3-站长工具\" class=\"headerlink\" title=\"2.3 站长工具\"></a>2.3 <a href=\"http://tool.chinaz.com/gzips/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">站长工具</a></h3><p><img src=\"/contentimg/8/7.png\" alt=\"Result pic 7\" title=\"codingpage自带优化\"></p>\n<p><img src=\"/contentimg/8/8.png\" alt=\"Result pic 8\" title=\"手动优化后的githubpage\"></p>\n<p>　　第二个图是更新了文章后截的图，大小上是大了一点点（其他东西都是和coding那边一样的），都是使用手动gulp优化后的Gzip压缩（文件只是体积变小，百度统计认的gzip是后缀为gz的压缩文件，意思不同）。但是在上面图中识别出来是不同：codingpage的直接压缩率99.96%？？？同时识别不出来gzip压缩。这样就能解释怎么放那边打开是秒开了。</p>\n<h2 id=\"三-Gulp压缩\"><a href=\"#三-Gulp压缩\" class=\"headerlink\" title=\"三.Gulp压缩\"></a>三.Gulp压缩</h2><p>　　这个是重点，让整个包从15.7m压缩到11.7m。而且整个操作除了安装工具，写一个<a href=\"https://github.com/YaojiaxinPC/blogcode/blob/master/gulpfile.js\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">js脚本</a> 外，不用修改工程中的任何东西和代码。不会对原工程造成影响！</p>\n<p>　　<a href=\"https://www.npmjs.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">npm主页</a> </p>\n<h3 id=\"3-1-安装gulp\"><a href=\"#3-1-安装gulp\" class=\"headerlink\" title=\"3.1 安装gulp\"></a>3.1 安装gulp</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install &lt;name&gt; [-g] [--save-dev]</span><br></pre></td></tr></table></figure>\n<ol>\n<li>name：node插件名称。例：</li>\n</ol>\n<blockquote>\n<p> npm install gulp –save-dev</p>\n</blockquote>\n<ol>\n<li><p>-g：全局安装。将会安装在%homepath%\\AppData\\Roaming\\npm，并且写入系统环境变量；</p>\n<ul>\n<li><p>非全局安装：将会安装在当前目录的node_modules文件夹下，只能在当前目录通过require()调用使用。</p>\n</li>\n<li><p>全局安装：可以通过命令行在任何地方调用它。</p>\n</li>\n</ul>\n</li>\n</ol>\n<ol>\n<li><p>–save：将保存配置信息至package.json（package.json是nodejs项目配置文件）。</p>\n</li>\n<li><p>-dev：保存至package.json的devDependencies节点，不指定-dev将保存至dependencies节点。</p>\n</li>\n</ol>\n<p>　　配置文件package.json记录了当前工程使用的相关包，只需要在有这个文件的文件夹下面执行“npm install”，就会根据package.json下载所有需要的包。</p>\n<p><img src=\"/contentimg/8/9.png\" alt=\"Result pic 9\" title=\"package.json\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp --save-dev</span><br><span class=\"line\">npm install gulp-htmlclean --save-dev</span><br><span class=\"line\">npm install gulp-htmlmin --save-dev</span><br><span class=\"line\">npm install gulp-imagemin --save-dev</span><br><span class=\"line\">npm install gulp-minify-css --save-dev</span><br><span class=\"line\">npm install gulp-uglify --save-dev</span><br><span class=\"line\">//文件处理</span><br><span class=\"line\">npm install del --save</span><br><span class=\"line\">npm install mv --save</span><br><span class=\"line\">//这个网络情况不是很好，所以最好通过设置配置文件的skip_render来避免处理README.md</span><br><span class=\"line\">npm install copy --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-编写gulp脚本\"><a href=\"#3-2-编写gulp脚本\" class=\"headerlink\" title=\"3.2 编写gulp脚本\"></a>3.2 编写gulp脚本</h3><p>　　<a href=\"https://github.com/YaojiaxinPC/blogcode/blob/master/gulpfile.js\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">gulp脚本</a> </p>\n<p>　　可以使用我github上的这个脚本。里面做的事情就是压缩html、css、js、图片等，在我电脑上，无法进行覆盖操作，所以我就把生成的压缩文件保存到缓存文件夹，然后用del/copy/mv等操作来处理。</p>\n<p>　　注意hexo编译的时候，会把后缀为“md”的文件都转成html，所以README.md也会变成README.html。这样，就不能把它放在source里面，只能放外面，在gulp后再复制进去public中。(其实这里可以通过设置主配置文件的skip_render来避免编译)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> del = <span class=\"built_in\">require</span>(<span class=\"string\">'del'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mv = <span class=\"built_in\">require</span>(<span class=\"string\">'mv'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> copy = <span class=\"built_in\">require</span>(<span class=\"string\">'copy'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> minifycss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> htmlmin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-htmlmin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> htmlclean = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-htmlclean'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// Clean  任务执行前，先清除之前生成的缓存文件</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'clean'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> del([<span class=\"string\">'./public1/**'</span>], cb)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// move  任务执行完成后，从主目录复制文件过来缓存目录</span></span><br><span class=\"line\"><span class=\"comment\">//(此时会自动删除主目录),然后再复制回去（因为不能覆盖，所以不能从缓存目录直接过去主目录进行覆盖）</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'filedone'</span>,[<span class=\"string\">'copy-all'</span>],()=&gt;&#123;gulp.start(<span class=\"string\">'filedone-dealREADME'</span>);&#125;);</span><br><span class=\"line\"><span class=\"comment\">//将public下的文件复制到缓存文件夹下</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'copy-all'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> mv(<span class=\"string\">'./public'</span>, <span class=\"string\">'./public1'</span>,&#123;<span class=\"attr\">clobber</span>: <span class=\"literal\">false</span>&#125;, cb)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//复制README.md。处理完成后才进行重命名</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'filedone-dealREADME'</span>,[<span class=\"string\">'copy-readme'</span>],()=&gt;&#123;gulp.start(<span class=\"string\">'backcopy'</span>);&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//复制README.md</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'copy-readme'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> copy(<span class=\"string\">'README.md'</span>, <span class=\"string\">'./public1'</span>, cb);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">gulp.task(<span class=\"string\">'backcopy'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> mv(<span class=\"string\">'./public1'</span>, <span class=\"string\">'./public'</span>,&#123;<span class=\"attr\">clobber</span>: <span class=\"literal\">false</span>&#125;, cb)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 压缩html</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/**/*.html'</span>)</span><br><span class=\"line\">        .pipe(htmlclean())</span><br><span class=\"line\">        .pipe(htmlmin(&#123;</span><br><span class=\"line\">            removeComments: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            minifyJS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            minifyCSS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            minifyURLs: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public1'</span>))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩css</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/**/*.css'</span>)</span><br><span class=\"line\">        .pipe(minifycss(&#123;</span><br><span class=\"line\">            compatibility: <span class=\"string\">'ie8'</span></span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public1'</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩js</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/**/*.js'</span>)</span><br><span class=\"line\">        .pipe(uglify())</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public1'</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩主题图片</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-images'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/images/**/*.*'</span>)</span><br><span class=\"line\">        .pipe(imagemin(</span><br><span class=\"line\">        [imagemin.gifsicle(&#123;<span class=\"string\">'optimizationLevel'</span>: <span class=\"number\">3</span>&#125;), </span><br><span class=\"line\">        imagemin.jpegtran(&#123;<span class=\"string\">'progressive'</span>: <span class=\"literal\">true</span>&#125;), </span><br><span class=\"line\">        imagemin.optipng(&#123;<span class=\"string\">'optimizationLevel'</span>: <span class=\"number\">7</span>&#125;), </span><br><span class=\"line\">        imagemin.svgo()],</span><br><span class=\"line\">        &#123;<span class=\"string\">'verbose'</span>: <span class=\"literal\">true</span>&#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public1/images'</span>))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩文章图片</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-contentimg'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/contentimg/**/*.*'</span>)</span><br><span class=\"line\">        .pipe(imagemin(</span><br><span class=\"line\">        [imagemin.gifsicle(&#123;<span class=\"string\">'optimizationLevel'</span>: <span class=\"number\">3</span>&#125;), </span><br><span class=\"line\">        imagemin.jpegtran(&#123;<span class=\"string\">'progressive'</span>: <span class=\"literal\">true</span>&#125;), </span><br><span class=\"line\">        imagemin.optipng(&#123;<span class=\"string\">'optimizationLevel'</span>: <span class=\"number\">7</span>&#125;), </span><br><span class=\"line\">        imagemin.svgo()],</span><br><span class=\"line\">        &#123;<span class=\"string\">'verbose'</span>: <span class=\"literal\">true</span>&#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public1/contentimg'</span>))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//压缩字体文件（实际没看出效果）</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'fontttf'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    gulp.src(<span class=\"string\">'./public/lib/font-awesome/fonts/*.*'</span>)</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">'./public1/lib/font-awesome/fonts'</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//build完后复制文件回去</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'build'</span>, [<span class=\"string\">'minify-html'</span>,<span class=\"string\">'minify-css'</span>,<span class=\"string\">'minify-js'</span>,<span class=\"string\">'minify-images'</span>,<span class=\"string\">'minify-contentimg'</span>,<span class=\"string\">'fontttf'</span>],()=&gt;&#123;gulp.start(<span class=\"string\">'filedone'</span>);&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行清理任务后才build</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'clean'</span>],()=&gt;&#123;gulp.start(<span class=\"string\">'build'</span>);&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-当下载不了工具怎么办\"><a href=\"#3-3-当下载不了工具怎么办\" class=\"headerlink\" title=\"3.3 当下载不了工具怎么办\"></a>3.3 当下载不了工具怎么办</h3><p>　　npm是一个前端自动化工具。有中文官网，但是网络很不好，同时我们在gitbash里面操作下载，也经常因为网络问题下载不了。</p>\n<p>　　后面排查分析，了解到gitbash里面的install操作，实际上是去github上找最新版本down下来。所以如果遇到安装的时候报联网失败，是可以分析找到github上对应的包，直接下载来安装的（npm的服务器ping经常断流，不是墙的问题）。</p>\n<p>　　在install失败的时候，会提示“XXX网站”连接失败，这时候把这个网站复制到百度云离线下载，是能下载下来的：</p>\n<p><img src=\"/contentimg/8/10.png\" alt=\"Result pic 10\" title=\"下载copy失败时扒的html\"></p>\n<p>　　打开后找version，拉到最下面，找到最新的一个版本后，找下载链接tarball。然后用百度云离线再下载下来。放到D盘根目录：</p>\n<blockquote>\n<p>  npm install d:/XXX.tgz</p>\n</blockquote>\n<p><img src=\"/contentimg/8/11.png\" alt=\"Result pic 11\" title=\"下载copy失败时扒的tarball\"></p>\n<p>　　如果还不行，就直接手动解压，放到node_modules目录吧。</p>\n<p>　　这里贴几个npm的介绍博客链接吧：</p>\n<p><a href=\"https://www.cnblogs.com/QRL909109/p/5620824.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">前端自动化gulp遇上es6从 无知到深爱</a> </p>\n<p><a href=\"https://www.cnblogs.com/strick/p/5151714.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">前端自动化构建工具gulp记录</a> </p>\n<p><a href=\"http://www.ruanyifeng.com/blog/2016/01/npm-install.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">npm 模块安装机制简介</a> </p>\n<p>　　另外，在github下载别人的博客代码后，可以通过cmd cd到目录下，直接npm install就行，会默认自己找package.json来安装。注意看一下里面的结构，联网下载的是有前缀^，本地文件的是相对路径。</p>\n<p>　　package-lock.json影响不大，可以删除。当安装package.json时，会重新生成。</p>\n<p><img src=\"/contentimg/8/12.png\" alt=\"Result pic 12\" title=\"package.json\"></p>\n<h2 id=\"四-总结\"><a href=\"#四-总结\" class=\"headerlink\" title=\"四.总结\"></a>四.总结</h2><p>　　划重点，其实如果你部署在codingpage上，本篇文章就不用看了。因为都是秒开的。</p>\n<p>　　部署在github上，逼格虽然高了些，但由于服务器在国外，而且没自带加速，优化之路很麻烦：压缩+CDN加速。</p>\n<p>　　而压缩，其实就是牺牲cpu解压换来的。目前使用gulp进行初步压缩。复杂的可以直接压缩成gz文件来处理。</p>\n<p>　　在我认为，js文件压缩就没必要了，合并js文件还可以，压缩就没必要。图片方面是主要优化对象，而这里，其实还有个<a href=\"https://www.qiniu.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">七牛云</a> 七牛在国内，访问比github快。而且每月有10g的免费额度。</p>\n<p>　　注意，这里page的优化，DNS解析权重最大，所以上面提到的合并js，其实就是避免来回的dns解析请求。而IP，github服务器在国外，访问相对国内的coding会慢好多。</p>\n<p>　　由于整个page是静态文件，所以好多技术性上的优化（缓存），权重是很小的。</p>"},{"title":"搭建个人博客心得---配置主题Next","date":"2018-10-18T15:55:58.000Z","top":99,"_content":"\t\n　　本文是记录如何修改配置Next，增加百度统计功能、评论区、RSS、爬虫等模块。是在前面几篇文章的扩展记录。\n\n　　注意这些第三方插件，当我们的博客布在github和coding两边时，数据是可以共用的！只要id和key是同样，在服务供应商那边记录域名和网站后，就可以顺利共用数据。\n\n<!-- more -->\n　　\n[***Next的使用说明***](http://theme-next.iissnan.com/getting-started.html#avatar-setting)\n\n　　开头先贴官方配置说明。这里的头像位置、昵称等等，请通过这个官方配置说明链接来配置。本文只分享官方文档里面难的部分，以及文档里面没有的部分。记住配置文件“：”后面需要打空格，然后才加内容！\n\n　　注意，打开这些第三方服务，会拖慢网站打开速度，请酌情使用。\n\n　　[官方指导链接](http://theme-next.iissnan.com/third-party-services.html#algolia-search) \n\n## 评论系统&文章阅读量统计功能\n\n　　因为文章访问数量那个系统我用的[leancloud](https://leancloud.cn/)  ，发现配置文件里面刚好也支持它，我就也用的这个服务。\n\n　　官方文档里面有提到这个阅读理解统计的：\n\n[为NexT主题添加文章阅读量统计功能](https://notes.doublemine.me/2015-10-21-为NexT主题添加文章阅读量统计功能.html#%E9%85%8D%E7%BD%AELeanCloud)  \n\n　　一起凑合着看吧。由于它支持我们改数据，所以我就使用它了。（没事可以偷偷上去改个阅读量999999！）\n\n![Result pic 1](/contentimg/9/8.png \"创建应用\")\n\n![Result pic 1](/contentimg/9/9.png \"官方教程\")\n\n![Result pic 1](/contentimg/9/10.png \"Counter以及Comment\")\n\n　　注意，第一次创建应用，在这里添加class，需要等2分钟，所以要耐心等。另外，免费版的，不能删除class，所以别加太多了。注意这里：评论的是Comment，文章阅读量的是Counter。\n\n　　然后就是去获取key和id。这里不能直接鼠标拉选，不过可以右键，定位到元素，然后在代码里面找到这个字符串，就能复制了。\n\n![Result pic 1](/contentimg/9/13.png \"获取key和id\")\n\n![Result pic 1](/contentimg/9/14.png \"修改配置文件valine\")\n\n![Result pic 1](/contentimg/9/15.png \"修改配置文件leancloud_visitors\")\n\n\n　　最后，千万记得要去“安全中心”设置“web安全域名”！因为这个id和key是明文，谁都能抓取到的！\n\n![Result pic 1](/contentimg/9/16.png \"接口屏蔽非安全域名的调用，这会造成网页加载超级慢\")\n\n\n　　还可以设置邮件提醒[Valine 评论系统中的邮件提醒设置](https://github.com/xCss/Valine/wiki/Valine-评论系统中的邮件提醒设置) \n\n## [百度统计](http://tongji.baidu.com/) \n\n　　文档里面说得很简略，下面我就介绍一下详细的过程。\n\n![Result pic 1](/contentimg/9/1.png \"百度统计\")\n\n　　怎么打开？\n\n![Result pic 1](/contentimg/9/3.png \"指导文档说明情况\")\n\n![Result pic 1](/contentimg/9/2.png \"在这里\")\n\n![Result pic 1](/contentimg/9/4.png \"在配置文件这里\")\n\n　　先在百度统计那边复制key，然后到配置文件里面ctrl f找到baidu_analytics 字段，打一个空格后把key复制进去。hexo clean，再生成，让html重新编译，会自动加代码进去的。\n\n![Result pic 1](/contentimg/9/6.png \"F12查看代码\")\n\n\n　　如果不会，可以直接发布。然后到百度统计那边检查。\n\n![Result pic 1](/contentimg/9/5.png \"百度统计自检查\")\n\n\n## 内容分享服务\n\n![Result pic 1](/contentimg/9/7.png \"不支持https\")\n\n　　第一个JiaThis，搜索有新闻说已经关闭分享服务了。第三个好像是国外，搞推特的，国内访问应该比较慢，也不考虑。后面找了Mob，但是不支持https，所以也用不了。\n\n　　剩下一个百度，结果，打开后发现很丑，还只能分享图片，不能整篇文章分享（得改代码）。所以我就没开该项。请自取哈。\n\n![Result pic 1](/contentimg/9/31.png \"取消注释该两项即可\")\n\n![Result pic 1](/contentimg/9/30.png \"百度分析效果\")\n\n\n　　分享的效果也不好，点击后调整的界面不好看。\n\n## [字数统计&阅读时长](https://www.cnblogs.com/php-linux/p/8418518.html)\n\n![Result pic 1](/contentimg/9/17.png \"配置文件post_wordcount\")\n\n\n　　里面已经内置了，开启就能使用了。但是单纯改配置文件，数字是显示不出来的，得添加插件：\n\n>  npm install hexo-wordcount --save -dev\n\n　　安装完成后，hexo clean；hexo g。启动服务就能看到效果了。如果想像我这边一样加文字：\n\n　　到目录：/themes/next/layout/_macro/post.swig\n\n　　用记事本打开后搜索post_wordcount：\n\n\n![Result pic 1](/contentimg/9/18.png \"添加字和分钟\")\n　　\n![Result pic 1](/contentimg/9/19.png \"效果\")\n\n\n## [RSS](https://www.jianshu.com/p/a79422ab2013)\n\n>  npm install hexo-generator-feed --save -dev\n\n　　然后到主配置文件最底下添加：\n\n``` cmd \n# Extensions\nplugins:\n    hexo-generator-feed\n#Feed Atom\nfeed:\n    type: atom\n    path: atom.xml\n    limit: 20\n```\n\n![Result pic 1](/contentimg/9/20.png \"添加RSS生成配置\")\n\n\n　　这个插件的作用是统计记录你的文章，生成一个xml格式的文件atom.xml。别人通过订阅分析你这个文件变动来了解你文章的更新情况。\n\n![Result pic 1](/contentimg/9/22.png \"简书上博主分享的操作\")\n\n## [百度sitemap](https://blog.csdn.net/heqiangflytosky/article/details/54863166) \n\n>  npm install hexo-generator-baidu-sitemap --save -dev\n\n![Result pic 1](/contentimg/9/23.png \"百度sitemap情况\")\n\n　　在百度里面搜索site:域名。检验是否被百度收录。如果没有的，需要进行登记。这里google的操作比较简单。\n\n　　百度的，由于被github屏蔽爬虫，所以只能考虑放coding上面。coding的免费玩家，是会强制301转址的，所以这时候放百度验证，是无法成功的，百度验证不会像浏览器那样跳转识别，在说明那里也提到：“如果存在转址，请暂时取消”。\n\n![Result pic 1](/contentimg/9/24.png \"coding要求\")\n\n\n　　那怎么玩？只能想办法完成这个coding要求了。加图标的话，布局上没想到怎么改。所以我选择加文字版：\n\n![Result pic 1](/contentimg/9/25.png \"coding要求文字版\")\n\n![Result pic 1](/contentimg/9/26.png \"coding要求文字版效果\")\n\n\n　　刚开始还去翻代码，结果发现原来NexT考虑到这个问题了，直接给我们加在配置文件里面，只需要去设置这个属性就行，不用改代码。\n\n![Result pic 1](/contentimg/9/27.png \"修改配置文件位置\")\n\n\n　　这里会遇到一个问题，当你把coding那边那个代码复制过来时，hexo g会报错！原来是由于没换行的概念，hexo读配置属性，是根据“：+空格”来判断的，所以只需要把那个空格删掉，它就不识别成属性，就不会报错。\n\n　　接下来就是等通过验证然后来搞百度收录了。\n\n[百度收录链接](http://zhanzhang.baidu.com/linksubmit/url) \n\n　　收录前需要进行的[验证网站所有权](http://zhanzhang.baidu.com/site/siteadd)  。就是上面提到的验证。\n\n　　这里有三种方式可以做到：挂文件/在html加代码/CNAME。推荐第一种，因为第二种就直接明文了。当然，最后我还是用了第三种，CNAME，只需要去dns服务商那边设置就行了，马上就生效了，不用等coding过检。\n\n### 挂文件\n\n　　就是把密码文件下载下来后，放在source根目录，然后到主配置文件找skip_render属性：\n\n``` html\nskip_render: \n - baidu_verify_XXXXXX.html\n```\n\n　　防止hexo添加代码到该密码文件，百度爬虫才能识别到该文件。\n\n\n### 加代码\n\n　　找到文件\\themes\\next\\layout\\_partials\\head.swig。然后直接在这里的空白处插入代码。\n\n![Result pic 1](/contentimg/9/28.png \"在head插入代码\")\n\n\n　　百度统计那边功能蛮多的，不过现在博客暂时还没收录，等收录后体验下其他的功能。\n\n　　在配置好后，到配置文件启用：\n\n``` cmd\nbaidusitemap:\n  path: baidusitemap.xml\n```\n\n　　再到百度提交收录：\n\n![Result pic 1](/contentimg/9/46.png \"提交百度收录\")\n\n\n　　建议开启百度自动推送，就sitemap左边那个。代码已经集成在Next了，只要开启主题配置文件的属性“baidu_push”：\n\n![Result pic 1](/contentimg/9/50.png \"百度自动推送\")\n\n\n## Google收录\n\n>  npm install hexo-generator-sitemap --save -dev\n\n　　开vpn，[Google站长工具](https://www.google.com/webmasters/tools/home?hl=zh-CN)  类似百度收录的操作，都是下载密码html文件，放在根目录，然后到主配置文件添加忽略编译属性。\n\n　　好处是github没有屏蔽google，所以直接用github那边的挂谷歌。而且他们都是国外的，所以挂github的话，比挂国内的coding对搜索排名要有利。\n\n![Result pic 1](/contentimg/9/29.png \"马上过检\")\n\n　　在配置好后，到配置文件启用：\n\n``` cmd\n#sitemap\nsitemap:\n  path: sitemap.xml\n```\n\n　　同样要去提交收录。但是超级快，一下就能在谷歌搜索到了。\n\n\n## 其他第三方服务\n\n![Result pic 1](/contentimg/9/32.png \"目标目录\")\n\n\n　　到该目录下，列了目前NexT集成的第三方服务，可以根据文件名来选择要不要开启，都是在配置文件里面能找到开启选项的。其实这里的作用，就是把全部js脚本放在这里，然后用一个配置文件属性，判断要不要加这个脚本到html里面。\n\n\n## 其他优化\n\n　　第三方的东西我目前只加了这些，其他就是代码上的修改了。\n\n### 文章末尾添加“---end---”\n\n　　打开themes\\next\\layout\\ _macro\\post.swig，找到“wechat_subscriber”的地方，这个就是文章结尾时，“请加我好友”的图标所在的地方。复制如下代码：\n\n``` html\n    {% if not is_index %}\n\t<div style=\"text-align:center;color: #ccc;font-size:20px;\">-------------------------------------------------------- The End --------------------------------------------------------</div>\n\t{% endif %}\n```\n\n　　这里文字大小和长度，请根据自己喜好进行修改。\n\n　　或者是使用hr写法。注意这里[文本文字在DIV中垂直水平居中显示](https://blog.csdn.net/lunhui1994_/article/details/79085805)  \n\n``` html\n    {% if not is_index %}\n\t<div style=\"height:85px;line-height:85px;text-align:center;color:#ccc;\"><hr size=\"7\" color=\"coral\" style=\"vertical-align:middle;float:left\" width=\"40%\"> The End <hr size=\"7\" color=\"coral\" style=\"vertical-align:middle;float:right\" width=\"40%\"><br style=\"clear:both\"/></div>\n\t{% endif %}\n```\n\n　　但在手机端效果不行，换行了。\n\n### 取消打赏的文字摇晃\n\n　　自带的摇晃太魔性了，建议去掉。到位置：next/source/css/_common/components/post/post-reward.styl ，搜“animation”：\n\n``` java\n加“/*  */”\n```\n\n![Result pic 1](/contentimg/9/35.png \"屏蔽代码\")\n\n\n### 浏览页面的时候显示当前浏览进度\n\n　　到主题配置文件，搜scrollpercent，改为true。\n\n![Result pic 1](/contentimg/9/36.png \"显示浏览进度\")\n\n\n　　还可以放到左边：修改scrollpercent上方的b2t为true。\n\n\n![Result pic 1](/contentimg/9/37.png \"浏览进度显示在左边\")\n\n![Result pic 1](/contentimg/9/38.png \"两个修改项\")\n\n\n### fork me on github\n\n#### 右上角\n\n　　到[GitHub Corners](http://tholman.com/github-corners/)  选择喜欢的样式，复制代码。然后定位到next/layout/_layout.swig，搜索headband。将代码贴在下面：\n\n\n![Result pic 1](/contentimg/9/39.png \"右边实例\")\n\n\n### 左上角\n\n　　到[Fork_me_on_GitHub](https://blog.github.com/2008-12-19-github-ribbons/)  选样式，像上面一样操作。当然也可以自己根据实际情况微调。\n\n\n### 将标签前缀“#”换为图标 <i class=\"fa fa-tag\"></i>\n\n　　到next/layout/_macro/post.swig，搜索 \n\n``` java\nrel=\"tag\"\n```\n\n``` java\n将 #号 换成<i class=\"fa fa-tag\"></i>\n```\n\n![Result pic 1](/contentimg/9/40.png \"修改#为图标\")\n\n![Result pic 1](/contentimg/9/41.png \"效果\")\n\n\n\n### 添加加载页面\n\n![Result pic 1](/contentimg/9/42.png \"加载进度条\")\n\n\n　　在next的配置文件搜“pace-theme”：这里我这个是pace-theme-center-atom，还有其他一堆可以选。\n\n![Result pic 1](/contentimg/9/43.png \"加载进度条设置\")\n\n\n### 添加站内搜索\n\n>  npm install hexo-generator-searchdb --save\n\n　　这里可能下载不下来，按照我前面说copy怎么下载那样，在npm失败后，会显示一个html，拿到百度云离线下载，下下来后，用记事本打开，搜version，找到最新版本，然后看barl的下载链接，再复制到百度云离线下载，然后当做本地文件来安装，就能安装了。\n\n　　到主配置文件最后添加：\n\n``` bash\n#表示站内搜索\nsearch:  \n    path: search.xml\n    field: post\n    format: html\n    limit: 10000\n```\n\n　　然后到NexT配置文件搜索“local_search”，启动enable：\n\n![Result pic 1](/contentimg/9/44.png \"启动站内搜索\")\n\n\n### 修改访问URL路径\n\n　　默认情况下是年月日一串很长的url路径。是在主配置文件进行的修改：搜索“permalink”\n\n>  permalink: :category/:title/   #分类/标题\n\n![Result pic 1](/contentimg/9/45.png \"修改访问url路径\")\n\n\n\n### [添加文章置顶功能](https://blog.csdn.net/qwerty200696/article/details/79010629) \n\n　　现在应该都是新版本了，所以直接介绍新版本的方式：\n\n先卸载老插件，然后装新插件：\n\n``` bash\nnpm uninstall hexo-generator-index --save\nnpm install hexo-generator-index-pin-top --save -dev\n```\n\n　　然后在文章开头加 “top: 数字”\n\n![Result pic 1](/contentimg/9/47.png \"置顶设置\")\n\n\n　　这样就能看的效果了。不过推荐加一下置顶图标在前面：\n\n　　打开next/layout/_macro/post.swig，搜索\n``` html\n<div class=\"post-meta\">\n```\n\n　　然后加入如下代码：\n\n``` cmd\n    {% if post.top %}\n        <i class=\"fa fa-thumb-tack\"></i>\n        <font color=#222>置顶</font>\n        <span class=\"post-meta-divider\">|</span>\n    {% endif %}\n```\n\n![Result pic 1](/contentimg/9/48.png \"添加置顶图标\")\n\n![Result pic 1](/contentimg/9/49.png \"置顶效果\")　　\n\n### [添加coding部分的一键复制功能](https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD%EF%BC%89/) \n\n　　本博客没启用该功能，具体请访问该链接：[添加coding部分的一键复制功能](https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD%EF%BC%89/)  \n\n　　由于有中文，该链接通过中文转码处理，如果失效，请通过域名查找。\n\n### 添加Robot和nofollow\n\n　　新建robots.txt文件在source根目录下：\n\n```  cmd\n#hexo robots.txt\nUser-agent: *\n\nAllow: /\nAllow: /archives/\nAllow: /categories/\nAllow: /tags/\nAllow: /about/\n\nDisallow: /404/\nDisallow: /contentimg/\nDisallow: /css/\nDisallow: /images/\nDisallow: /js/\nDisallow: /lib/\n\n\n\nSitemap: http://yaojx.net/search.xml\nSitemap: http://yaojx.net/sitemap.xml\nSitemap: http://yaojx.net/baidusitemap.xml\n```\n\n　　当没这个文件时，默认全部内容可以爬，这个文件就是告诉那些可以爬，那些不行。\n\n>  npm install hexo-autonofollow --save\n\n　　当文章中有链接时，爬虫会顺着链接爬出去。所以得加这个nofollow。\n\n　　安装完后，到主配置文件最底下添加：\n\n``` cmd\nnofollow:\n    enable: true\n    exclude:\n        - yaojx.net\n```\n\n　　然后就是去百度站长提交robot文件了。\n\n### qq点击后直接开打联系我的窗口\n\n　　该功能使用的是腾讯的开放接口：\n\n![Result pic 1](/contentimg/9/51.png \"next配置文件设置\")　　\n\n\n``` html\nhttp://wpa.qq.com/msgrd?v=3&uin=659771655&site=qq&menu=yes\n```\n\n　　uin改成自己的qq就行了。\n\n### 压缩gif\n\n　　通常录屏文件要好几M，会导致网页加载严重缓慢，这里就需要进行压缩了，但是不建议进行脚本压缩，建议一张一张根据实际情况压缩。\n\n　　这里需要安装gifsicle。国内资料比较少，这里有个[说明文档](http://www.manpagez.com/man/1/gifsicle/)  。\n\n>  npm install gifsicle --global\n\n　　目前我会用的功能比较少，主要使用了压缩色调：\n\n>  gifsicle -o3 1.gif -o 4.gif --colors 32\n\n>  gifsicle -o3 需要压缩的文件  -o  输出的文件名 --colors 数字 \n\n　　通常情况下，录屏产生的gif是256色调的大体积文件，可以通过压缩成128、64、32、16等等色调，达到体积变小的目的。具体情况可以压缩试试看效果。这个操作是通过丢弃部分颜色值，达到压缩的效果的，所以色调越低，压缩越多，当然，照片也就失真越明显。\n\n### pdf显示\n\n　　目前大家做这个博客，应该大部分会把自己的简历放上去，那是放html文件？绝大部分是pdf文件的。但是要怎么处理这个pdf文件的显示？用js代码，插入iframe，电脑端是可以的，但是移动端不支持，会直接提示下载文件。实际上有个开源前端插件，可以直接使用。可以看我另一篇文章，有提到[markdown扩展](/19markdownextend/) \n\n\n这里有几篇文章是讲怎么修改整个主题的，重点推荐：\n[基于Hexo搭建个人博客——进阶篇(从入门到入土)](http://yangbingdong.com/2017/build-blog-hexo-advanced/) \n[Hexo搭建GitHub博客—打造炫酷的NexT主题--高级(四)](https://segmentfault.com/a/1190000016527304) \n[Hexo+Next个人博客主题优化](https://www.colabug.com/1840493.html) \n \n\n","source":"_posts/9howtoeditthemes.md","raw":"---\ntitle: 搭建个人博客心得---配置主题Next\ndate: 2018-10-18 23:55:58\ntop: 99\ncategories:\n  - 编程人生\ntags:\n  - js\n  - 前端技术\n  - 个人博客  \n---\n\t\n　　本文是记录如何修改配置Next，增加百度统计功能、评论区、RSS、爬虫等模块。是在前面几篇文章的扩展记录。\n\n　　注意这些第三方插件，当我们的博客布在github和coding两边时，数据是可以共用的！只要id和key是同样，在服务供应商那边记录域名和网站后，就可以顺利共用数据。\n\n<!-- more -->\n　　\n[***Next的使用说明***](http://theme-next.iissnan.com/getting-started.html#avatar-setting)\n\n　　开头先贴官方配置说明。这里的头像位置、昵称等等，请通过这个官方配置说明链接来配置。本文只分享官方文档里面难的部分，以及文档里面没有的部分。记住配置文件“：”后面需要打空格，然后才加内容！\n\n　　注意，打开这些第三方服务，会拖慢网站打开速度，请酌情使用。\n\n　　[官方指导链接](http://theme-next.iissnan.com/third-party-services.html#algolia-search) \n\n## 评论系统&文章阅读量统计功能\n\n　　因为文章访问数量那个系统我用的[leancloud](https://leancloud.cn/)  ，发现配置文件里面刚好也支持它，我就也用的这个服务。\n\n　　官方文档里面有提到这个阅读理解统计的：\n\n[为NexT主题添加文章阅读量统计功能](https://notes.doublemine.me/2015-10-21-为NexT主题添加文章阅读量统计功能.html#%E9%85%8D%E7%BD%AELeanCloud)  \n\n　　一起凑合着看吧。由于它支持我们改数据，所以我就使用它了。（没事可以偷偷上去改个阅读量999999！）\n\n![Result pic 1](/contentimg/9/8.png \"创建应用\")\n\n![Result pic 1](/contentimg/9/9.png \"官方教程\")\n\n![Result pic 1](/contentimg/9/10.png \"Counter以及Comment\")\n\n　　注意，第一次创建应用，在这里添加class，需要等2分钟，所以要耐心等。另外，免费版的，不能删除class，所以别加太多了。注意这里：评论的是Comment，文章阅读量的是Counter。\n\n　　然后就是去获取key和id。这里不能直接鼠标拉选，不过可以右键，定位到元素，然后在代码里面找到这个字符串，就能复制了。\n\n![Result pic 1](/contentimg/9/13.png \"获取key和id\")\n\n![Result pic 1](/contentimg/9/14.png \"修改配置文件valine\")\n\n![Result pic 1](/contentimg/9/15.png \"修改配置文件leancloud_visitors\")\n\n\n　　最后，千万记得要去“安全中心”设置“web安全域名”！因为这个id和key是明文，谁都能抓取到的！\n\n![Result pic 1](/contentimg/9/16.png \"接口屏蔽非安全域名的调用，这会造成网页加载超级慢\")\n\n\n　　还可以设置邮件提醒[Valine 评论系统中的邮件提醒设置](https://github.com/xCss/Valine/wiki/Valine-评论系统中的邮件提醒设置) \n\n## [百度统计](http://tongji.baidu.com/) \n\n　　文档里面说得很简略，下面我就介绍一下详细的过程。\n\n![Result pic 1](/contentimg/9/1.png \"百度统计\")\n\n　　怎么打开？\n\n![Result pic 1](/contentimg/9/3.png \"指导文档说明情况\")\n\n![Result pic 1](/contentimg/9/2.png \"在这里\")\n\n![Result pic 1](/contentimg/9/4.png \"在配置文件这里\")\n\n　　先在百度统计那边复制key，然后到配置文件里面ctrl f找到baidu_analytics 字段，打一个空格后把key复制进去。hexo clean，再生成，让html重新编译，会自动加代码进去的。\n\n![Result pic 1](/contentimg/9/6.png \"F12查看代码\")\n\n\n　　如果不会，可以直接发布。然后到百度统计那边检查。\n\n![Result pic 1](/contentimg/9/5.png \"百度统计自检查\")\n\n\n## 内容分享服务\n\n![Result pic 1](/contentimg/9/7.png \"不支持https\")\n\n　　第一个JiaThis，搜索有新闻说已经关闭分享服务了。第三个好像是国外，搞推特的，国内访问应该比较慢，也不考虑。后面找了Mob，但是不支持https，所以也用不了。\n\n　　剩下一个百度，结果，打开后发现很丑，还只能分享图片，不能整篇文章分享（得改代码）。所以我就没开该项。请自取哈。\n\n![Result pic 1](/contentimg/9/31.png \"取消注释该两项即可\")\n\n![Result pic 1](/contentimg/9/30.png \"百度分析效果\")\n\n\n　　分享的效果也不好，点击后调整的界面不好看。\n\n## [字数统计&阅读时长](https://www.cnblogs.com/php-linux/p/8418518.html)\n\n![Result pic 1](/contentimg/9/17.png \"配置文件post_wordcount\")\n\n\n　　里面已经内置了，开启就能使用了。但是单纯改配置文件，数字是显示不出来的，得添加插件：\n\n>  npm install hexo-wordcount --save -dev\n\n　　安装完成后，hexo clean；hexo g。启动服务就能看到效果了。如果想像我这边一样加文字：\n\n　　到目录：/themes/next/layout/_macro/post.swig\n\n　　用记事本打开后搜索post_wordcount：\n\n\n![Result pic 1](/contentimg/9/18.png \"添加字和分钟\")\n　　\n![Result pic 1](/contentimg/9/19.png \"效果\")\n\n\n## [RSS](https://www.jianshu.com/p/a79422ab2013)\n\n>  npm install hexo-generator-feed --save -dev\n\n　　然后到主配置文件最底下添加：\n\n``` cmd \n# Extensions\nplugins:\n    hexo-generator-feed\n#Feed Atom\nfeed:\n    type: atom\n    path: atom.xml\n    limit: 20\n```\n\n![Result pic 1](/contentimg/9/20.png \"添加RSS生成配置\")\n\n\n　　这个插件的作用是统计记录你的文章，生成一个xml格式的文件atom.xml。别人通过订阅分析你这个文件变动来了解你文章的更新情况。\n\n![Result pic 1](/contentimg/9/22.png \"简书上博主分享的操作\")\n\n## [百度sitemap](https://blog.csdn.net/heqiangflytosky/article/details/54863166) \n\n>  npm install hexo-generator-baidu-sitemap --save -dev\n\n![Result pic 1](/contentimg/9/23.png \"百度sitemap情况\")\n\n　　在百度里面搜索site:域名。检验是否被百度收录。如果没有的，需要进行登记。这里google的操作比较简单。\n\n　　百度的，由于被github屏蔽爬虫，所以只能考虑放coding上面。coding的免费玩家，是会强制301转址的，所以这时候放百度验证，是无法成功的，百度验证不会像浏览器那样跳转识别，在说明那里也提到：“如果存在转址，请暂时取消”。\n\n![Result pic 1](/contentimg/9/24.png \"coding要求\")\n\n\n　　那怎么玩？只能想办法完成这个coding要求了。加图标的话，布局上没想到怎么改。所以我选择加文字版：\n\n![Result pic 1](/contentimg/9/25.png \"coding要求文字版\")\n\n![Result pic 1](/contentimg/9/26.png \"coding要求文字版效果\")\n\n\n　　刚开始还去翻代码，结果发现原来NexT考虑到这个问题了，直接给我们加在配置文件里面，只需要去设置这个属性就行，不用改代码。\n\n![Result pic 1](/contentimg/9/27.png \"修改配置文件位置\")\n\n\n　　这里会遇到一个问题，当你把coding那边那个代码复制过来时，hexo g会报错！原来是由于没换行的概念，hexo读配置属性，是根据“：+空格”来判断的，所以只需要把那个空格删掉，它就不识别成属性，就不会报错。\n\n　　接下来就是等通过验证然后来搞百度收录了。\n\n[百度收录链接](http://zhanzhang.baidu.com/linksubmit/url) \n\n　　收录前需要进行的[验证网站所有权](http://zhanzhang.baidu.com/site/siteadd)  。就是上面提到的验证。\n\n　　这里有三种方式可以做到：挂文件/在html加代码/CNAME。推荐第一种，因为第二种就直接明文了。当然，最后我还是用了第三种，CNAME，只需要去dns服务商那边设置就行了，马上就生效了，不用等coding过检。\n\n### 挂文件\n\n　　就是把密码文件下载下来后，放在source根目录，然后到主配置文件找skip_render属性：\n\n``` html\nskip_render: \n - baidu_verify_XXXXXX.html\n```\n\n　　防止hexo添加代码到该密码文件，百度爬虫才能识别到该文件。\n\n\n### 加代码\n\n　　找到文件\\themes\\next\\layout\\_partials\\head.swig。然后直接在这里的空白处插入代码。\n\n![Result pic 1](/contentimg/9/28.png \"在head插入代码\")\n\n\n　　百度统计那边功能蛮多的，不过现在博客暂时还没收录，等收录后体验下其他的功能。\n\n　　在配置好后，到配置文件启用：\n\n``` cmd\nbaidusitemap:\n  path: baidusitemap.xml\n```\n\n　　再到百度提交收录：\n\n![Result pic 1](/contentimg/9/46.png \"提交百度收录\")\n\n\n　　建议开启百度自动推送，就sitemap左边那个。代码已经集成在Next了，只要开启主题配置文件的属性“baidu_push”：\n\n![Result pic 1](/contentimg/9/50.png \"百度自动推送\")\n\n\n## Google收录\n\n>  npm install hexo-generator-sitemap --save -dev\n\n　　开vpn，[Google站长工具](https://www.google.com/webmasters/tools/home?hl=zh-CN)  类似百度收录的操作，都是下载密码html文件，放在根目录，然后到主配置文件添加忽略编译属性。\n\n　　好处是github没有屏蔽google，所以直接用github那边的挂谷歌。而且他们都是国外的，所以挂github的话，比挂国内的coding对搜索排名要有利。\n\n![Result pic 1](/contentimg/9/29.png \"马上过检\")\n\n　　在配置好后，到配置文件启用：\n\n``` cmd\n#sitemap\nsitemap:\n  path: sitemap.xml\n```\n\n　　同样要去提交收录。但是超级快，一下就能在谷歌搜索到了。\n\n\n## 其他第三方服务\n\n![Result pic 1](/contentimg/9/32.png \"目标目录\")\n\n\n　　到该目录下，列了目前NexT集成的第三方服务，可以根据文件名来选择要不要开启，都是在配置文件里面能找到开启选项的。其实这里的作用，就是把全部js脚本放在这里，然后用一个配置文件属性，判断要不要加这个脚本到html里面。\n\n\n## 其他优化\n\n　　第三方的东西我目前只加了这些，其他就是代码上的修改了。\n\n### 文章末尾添加“---end---”\n\n　　打开themes\\next\\layout\\ _macro\\post.swig，找到“wechat_subscriber”的地方，这个就是文章结尾时，“请加我好友”的图标所在的地方。复制如下代码：\n\n``` html\n    {% if not is_index %}\n\t<div style=\"text-align:center;color: #ccc;font-size:20px;\">-------------------------------------------------------- The End --------------------------------------------------------</div>\n\t{% endif %}\n```\n\n　　这里文字大小和长度，请根据自己喜好进行修改。\n\n　　或者是使用hr写法。注意这里[文本文字在DIV中垂直水平居中显示](https://blog.csdn.net/lunhui1994_/article/details/79085805)  \n\n``` html\n    {% if not is_index %}\n\t<div style=\"height:85px;line-height:85px;text-align:center;color:#ccc;\"><hr size=\"7\" color=\"coral\" style=\"vertical-align:middle;float:left\" width=\"40%\"> The End <hr size=\"7\" color=\"coral\" style=\"vertical-align:middle;float:right\" width=\"40%\"><br style=\"clear:both\"/></div>\n\t{% endif %}\n```\n\n　　但在手机端效果不行，换行了。\n\n### 取消打赏的文字摇晃\n\n　　自带的摇晃太魔性了，建议去掉。到位置：next/source/css/_common/components/post/post-reward.styl ，搜“animation”：\n\n``` java\n加“/*  */”\n```\n\n![Result pic 1](/contentimg/9/35.png \"屏蔽代码\")\n\n\n### 浏览页面的时候显示当前浏览进度\n\n　　到主题配置文件，搜scrollpercent，改为true。\n\n![Result pic 1](/contentimg/9/36.png \"显示浏览进度\")\n\n\n　　还可以放到左边：修改scrollpercent上方的b2t为true。\n\n\n![Result pic 1](/contentimg/9/37.png \"浏览进度显示在左边\")\n\n![Result pic 1](/contentimg/9/38.png \"两个修改项\")\n\n\n### fork me on github\n\n#### 右上角\n\n　　到[GitHub Corners](http://tholman.com/github-corners/)  选择喜欢的样式，复制代码。然后定位到next/layout/_layout.swig，搜索headband。将代码贴在下面：\n\n\n![Result pic 1](/contentimg/9/39.png \"右边实例\")\n\n\n### 左上角\n\n　　到[Fork_me_on_GitHub](https://blog.github.com/2008-12-19-github-ribbons/)  选样式，像上面一样操作。当然也可以自己根据实际情况微调。\n\n\n### 将标签前缀“#”换为图标 <i class=\"fa fa-tag\"></i>\n\n　　到next/layout/_macro/post.swig，搜索 \n\n``` java\nrel=\"tag\"\n```\n\n``` java\n将 #号 换成<i class=\"fa fa-tag\"></i>\n```\n\n![Result pic 1](/contentimg/9/40.png \"修改#为图标\")\n\n![Result pic 1](/contentimg/9/41.png \"效果\")\n\n\n\n### 添加加载页面\n\n![Result pic 1](/contentimg/9/42.png \"加载进度条\")\n\n\n　　在next的配置文件搜“pace-theme”：这里我这个是pace-theme-center-atom，还有其他一堆可以选。\n\n![Result pic 1](/contentimg/9/43.png \"加载进度条设置\")\n\n\n### 添加站内搜索\n\n>  npm install hexo-generator-searchdb --save\n\n　　这里可能下载不下来，按照我前面说copy怎么下载那样，在npm失败后，会显示一个html，拿到百度云离线下载，下下来后，用记事本打开，搜version，找到最新版本，然后看barl的下载链接，再复制到百度云离线下载，然后当做本地文件来安装，就能安装了。\n\n　　到主配置文件最后添加：\n\n``` bash\n#表示站内搜索\nsearch:  \n    path: search.xml\n    field: post\n    format: html\n    limit: 10000\n```\n\n　　然后到NexT配置文件搜索“local_search”，启动enable：\n\n![Result pic 1](/contentimg/9/44.png \"启动站内搜索\")\n\n\n### 修改访问URL路径\n\n　　默认情况下是年月日一串很长的url路径。是在主配置文件进行的修改：搜索“permalink”\n\n>  permalink: :category/:title/   #分类/标题\n\n![Result pic 1](/contentimg/9/45.png \"修改访问url路径\")\n\n\n\n### [添加文章置顶功能](https://blog.csdn.net/qwerty200696/article/details/79010629) \n\n　　现在应该都是新版本了，所以直接介绍新版本的方式：\n\n先卸载老插件，然后装新插件：\n\n``` bash\nnpm uninstall hexo-generator-index --save\nnpm install hexo-generator-index-pin-top --save -dev\n```\n\n　　然后在文章开头加 “top: 数字”\n\n![Result pic 1](/contentimg/9/47.png \"置顶设置\")\n\n\n　　这样就能看的效果了。不过推荐加一下置顶图标在前面：\n\n　　打开next/layout/_macro/post.swig，搜索\n``` html\n<div class=\"post-meta\">\n```\n\n　　然后加入如下代码：\n\n``` cmd\n    {% if post.top %}\n        <i class=\"fa fa-thumb-tack\"></i>\n        <font color=#222>置顶</font>\n        <span class=\"post-meta-divider\">|</span>\n    {% endif %}\n```\n\n![Result pic 1](/contentimg/9/48.png \"添加置顶图标\")\n\n![Result pic 1](/contentimg/9/49.png \"置顶效果\")　　\n\n### [添加coding部分的一键复制功能](https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD%EF%BC%89/) \n\n　　本博客没启用该功能，具体请访问该链接：[添加coding部分的一键复制功能](https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD%EF%BC%89/)  \n\n　　由于有中文，该链接通过中文转码处理，如果失效，请通过域名查找。\n\n### 添加Robot和nofollow\n\n　　新建robots.txt文件在source根目录下：\n\n```  cmd\n#hexo robots.txt\nUser-agent: *\n\nAllow: /\nAllow: /archives/\nAllow: /categories/\nAllow: /tags/\nAllow: /about/\n\nDisallow: /404/\nDisallow: /contentimg/\nDisallow: /css/\nDisallow: /images/\nDisallow: /js/\nDisallow: /lib/\n\n\n\nSitemap: http://yaojx.net/search.xml\nSitemap: http://yaojx.net/sitemap.xml\nSitemap: http://yaojx.net/baidusitemap.xml\n```\n\n　　当没这个文件时，默认全部内容可以爬，这个文件就是告诉那些可以爬，那些不行。\n\n>  npm install hexo-autonofollow --save\n\n　　当文章中有链接时，爬虫会顺着链接爬出去。所以得加这个nofollow。\n\n　　安装完后，到主配置文件最底下添加：\n\n``` cmd\nnofollow:\n    enable: true\n    exclude:\n        - yaojx.net\n```\n\n　　然后就是去百度站长提交robot文件了。\n\n### qq点击后直接开打联系我的窗口\n\n　　该功能使用的是腾讯的开放接口：\n\n![Result pic 1](/contentimg/9/51.png \"next配置文件设置\")　　\n\n\n``` html\nhttp://wpa.qq.com/msgrd?v=3&uin=659771655&site=qq&menu=yes\n```\n\n　　uin改成自己的qq就行了。\n\n### 压缩gif\n\n　　通常录屏文件要好几M，会导致网页加载严重缓慢，这里就需要进行压缩了，但是不建议进行脚本压缩，建议一张一张根据实际情况压缩。\n\n　　这里需要安装gifsicle。国内资料比较少，这里有个[说明文档](http://www.manpagez.com/man/1/gifsicle/)  。\n\n>  npm install gifsicle --global\n\n　　目前我会用的功能比较少，主要使用了压缩色调：\n\n>  gifsicle -o3 1.gif -o 4.gif --colors 32\n\n>  gifsicle -o3 需要压缩的文件  -o  输出的文件名 --colors 数字 \n\n　　通常情况下，录屏产生的gif是256色调的大体积文件，可以通过压缩成128、64、32、16等等色调，达到体积变小的目的。具体情况可以压缩试试看效果。这个操作是通过丢弃部分颜色值，达到压缩的效果的，所以色调越低，压缩越多，当然，照片也就失真越明显。\n\n### pdf显示\n\n　　目前大家做这个博客，应该大部分会把自己的简历放上去，那是放html文件？绝大部分是pdf文件的。但是要怎么处理这个pdf文件的显示？用js代码，插入iframe，电脑端是可以的，但是移动端不支持，会直接提示下载文件。实际上有个开源前端插件，可以直接使用。可以看我另一篇文章，有提到[markdown扩展](/19markdownextend/) \n\n\n这里有几篇文章是讲怎么修改整个主题的，重点推荐：\n[基于Hexo搭建个人博客——进阶篇(从入门到入土)](http://yangbingdong.com/2017/build-blog-hexo-advanced/) \n[Hexo搭建GitHub博客—打造炫酷的NexT主题--高级(四)](https://segmentfault.com/a/1190000016527304) \n[Hexo+Next个人博客主题优化](https://www.colabug.com/1840493.html) \n \n\n","slug":"9howtoeditthemes","published":1,"updated":"2018-10-27T11:51:10.675Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgs3o0063jo9cdyzcr6lm","content":"<p>　　本文是记录如何修改配置Next，增加百度统计功能、评论区、RSS、爬虫等模块。是在前面几篇文章的扩展记录。</p>\n<p>　　注意这些第三方插件，当我们的博客布在github和coding两边时，数据是可以共用的！只要id和key是同样，在服务供应商那边记录域名和网站后，就可以顺利共用数据。</p>\n<a id=\"more\"></a>\n<p>　　<br><a href=\"http://theme-next.iissnan.com/getting-started.html#avatar-setting\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\"><strong><em>Next的使用说明</em></strong></a></p>\n<p>　　开头先贴官方配置说明。这里的头像位置、昵称等等，请通过这个官方配置说明链接来配置。本文只分享官方文档里面难的部分，以及文档里面没有的部分。记住配置文件“：”后面需要打空格，然后才加内容！</p>\n<p>　　注意，打开这些第三方服务，会拖慢网站打开速度，请酌情使用。</p>\n<p>　　<a href=\"http://theme-next.iissnan.com/third-party-services.html#algolia-search\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">官方指导链接</a> </p>\n<h2 id=\"评论系统-amp-文章阅读量统计功能\"><a href=\"#评论系统-amp-文章阅读量统计功能\" class=\"headerlink\" title=\"评论系统&amp;文章阅读量统计功能\"></a>评论系统&amp;文章阅读量统计功能</h2><p>　　因为文章访问数量那个系统我用的<a href=\"https://leancloud.cn/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">leancloud</a>  ，发现配置文件里面刚好也支持它，我就也用的这个服务。</p>\n<p>　　官方文档里面有提到这个阅读理解统计的：</p>\n<p><a href=\"https://notes.doublemine.me/2015-10-21-为NexT主题添加文章阅读量统计功能.html#%E9%85%8D%E7%BD%AELeanCloud\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">为NexT主题添加文章阅读量统计功能</a>  </p>\n<p>　　一起凑合着看吧。由于它支持我们改数据，所以我就使用它了。（没事可以偷偷上去改个阅读量999999！）</p>\n<p><img src=\"/contentimg/9/8.png\" alt=\"Result pic 1\" title=\"创建应用\"></p>\n<p><img src=\"/contentimg/9/9.png\" alt=\"Result pic 1\" title=\"官方教程\"></p>\n<p><img src=\"/contentimg/9/10.png\" alt=\"Result pic 1\" title=\"Counter以及Comment\"></p>\n<p>　　注意，第一次创建应用，在这里添加class，需要等2分钟，所以要耐心等。另外，免费版的，不能删除class，所以别加太多了。注意这里：评论的是Comment，文章阅读量的是Counter。</p>\n<p>　　然后就是去获取key和id。这里不能直接鼠标拉选，不过可以右键，定位到元素，然后在代码里面找到这个字符串，就能复制了。</p>\n<p><img src=\"/contentimg/9/13.png\" alt=\"Result pic 1\" title=\"获取key和id\"></p>\n<p><img src=\"/contentimg/9/14.png\" alt=\"Result pic 1\" title=\"修改配置文件valine\"></p>\n<p><img src=\"/contentimg/9/15.png\" alt=\"Result pic 1\" title=\"修改配置文件leancloud_visitors\"></p>\n<p>　　最后，千万记得要去“安全中心”设置“web安全域名”！因为这个id和key是明文，谁都能抓取到的！</p>\n<p><img src=\"/contentimg/9/16.png\" alt=\"Result pic 1\" title=\"接口屏蔽非安全域名的调用，这会造成网页加载超级慢\"></p>\n<p>　　还可以设置邮件提醒<a href=\"https://github.com/xCss/Valine/wiki/Valine-评论系统中的邮件提醒设置\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Valine 评论系统中的邮件提醒设置</a> </p>\n<h2 id=\"百度统计\"><a href=\"#百度统计\" class=\"headerlink\" title=\"百度统计\"></a><a href=\"http://tongji.baidu.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">百度统计</a></h2><p>　　文档里面说得很简略，下面我就介绍一下详细的过程。</p>\n<p><img src=\"/contentimg/9/1.png\" alt=\"Result pic 1\" title=\"百度统计\"></p>\n<p>　　怎么打开？</p>\n<p><img src=\"/contentimg/9/3.png\" alt=\"Result pic 1\" title=\"指导文档说明情况\"></p>\n<p><img src=\"/contentimg/9/2.png\" alt=\"Result pic 1\" title=\"在这里\"></p>\n<p><img src=\"/contentimg/9/4.png\" alt=\"Result pic 1\" title=\"在配置文件这里\"></p>\n<p>　　先在百度统计那边复制key，然后到配置文件里面ctrl f找到baidu_analytics 字段，打一个空格后把key复制进去。hexo clean，再生成，让html重新编译，会自动加代码进去的。</p>\n<p><img src=\"/contentimg/9/6.png\" alt=\"Result pic 1\" title=\"F12查看代码\"></p>\n<p>　　如果不会，可以直接发布。然后到百度统计那边检查。</p>\n<p><img src=\"/contentimg/9/5.png\" alt=\"Result pic 1\" title=\"百度统计自检查\"></p>\n<h2 id=\"内容分享服务\"><a href=\"#内容分享服务\" class=\"headerlink\" title=\"内容分享服务\"></a>内容分享服务</h2><p><img src=\"/contentimg/9/7.png\" alt=\"Result pic 1\" title=\"不支持https\"></p>\n<p>　　第一个JiaThis，搜索有新闻说已经关闭分享服务了。第三个好像是国外，搞推特的，国内访问应该比较慢，也不考虑。后面找了Mob，但是不支持https，所以也用不了。</p>\n<p>　　剩下一个百度，结果，打开后发现很丑，还只能分享图片，不能整篇文章分享（得改代码）。所以我就没开该项。请自取哈。</p>\n<p><img src=\"/contentimg/9/31.png\" alt=\"Result pic 1\" title=\"取消注释该两项即可\"></p>\n<p><img src=\"/contentimg/9/30.png\" alt=\"Result pic 1\" title=\"百度分析效果\"></p>\n<p>　　分享的效果也不好，点击后调整的界面不好看。</p>\n<h2 id=\"字数统计-amp-阅读时长\"><a href=\"#字数统计-amp-阅读时长\" class=\"headerlink\" title=\"字数统计&amp;阅读时长\"></a><a href=\"https://www.cnblogs.com/php-linux/p/8418518.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">字数统计&amp;阅读时长</a></h2><p><img src=\"/contentimg/9/17.png\" alt=\"Result pic 1\" title=\"配置文件post_wordcount\"></p>\n<p>　　里面已经内置了，开启就能使用了。但是单纯改配置文件，数字是显示不出来的，得添加插件：</p>\n<blockquote>\n<p> npm install hexo-wordcount –save -dev</p>\n</blockquote>\n<p>　　安装完成后，hexo clean；hexo g。启动服务就能看到效果了。如果想像我这边一样加文字：</p>\n<p>　　到目录：/themes/next/layout/_macro/post.swig</p>\n<p>　　用记事本打开后搜索post_wordcount：</p>\n<p><img src=\"/contentimg/9/18.png\" alt=\"Result pic 1\" title=\"添加字和分钟\"><br>　　<br><img src=\"/contentimg/9/19.png\" alt=\"Result pic 1\" title=\"效果\"></p>\n<h2 id=\"RSS\"><a href=\"#RSS\" class=\"headerlink\" title=\"RSS\"></a><a href=\"https://www.jianshu.com/p/a79422ab2013\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">RSS</a></h2><blockquote>\n<p> npm install hexo-generator-feed –save -dev</p>\n</blockquote>\n<p>　　然后到主配置文件最底下添加：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions</span><br><span class=\"line\"><span class=\"function\">plugins:</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">hexo</span>-<span class=\"title\">generator</span>-<span class=\"title\">feed</span></span></span><br><span class=\"line\"><span class=\"function\">#<span class=\"title\">Feed</span> <span class=\"title\">Atom</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">feed</span>:</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">type</span>: <span class=\"title\">atom</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">path</span>: <span class=\"title\">atom.xml</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">limit</span>: 20</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/9/20.png\" alt=\"Result pic 1\" title=\"添加RSS生成配置\"></p>\n<p>　　这个插件的作用是统计记录你的文章，生成一个xml格式的文件atom.xml。别人通过订阅分析你这个文件变动来了解你文章的更新情况。</p>\n<p><img src=\"/contentimg/9/22.png\" alt=\"Result pic 1\" title=\"简书上博主分享的操作\"></p>\n<h2 id=\"百度sitemap\"><a href=\"#百度sitemap\" class=\"headerlink\" title=\"百度sitemap\"></a><a href=\"https://blog.csdn.net/heqiangflytosky/article/details/54863166\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">百度sitemap</a></h2><blockquote>\n<p> npm install hexo-generator-baidu-sitemap –save -dev</p>\n</blockquote>\n<p><img src=\"/contentimg/9/23.png\" alt=\"Result pic 1\" title=\"百度sitemap情况\"></p>\n<p>　　在百度里面搜索site:域名。检验是否被百度收录。如果没有的，需要进行登记。这里google的操作比较简单。</p>\n<p>　　百度的，由于被github屏蔽爬虫，所以只能考虑放coding上面。coding的免费玩家，是会强制301转址的，所以这时候放百度验证，是无法成功的，百度验证不会像浏览器那样跳转识别，在说明那里也提到：“如果存在转址，请暂时取消”。</p>\n<p><img src=\"/contentimg/9/24.png\" alt=\"Result pic 1\" title=\"coding要求\"></p>\n<p>　　那怎么玩？只能想办法完成这个coding要求了。加图标的话，布局上没想到怎么改。所以我选择加文字版：</p>\n<p><img src=\"/contentimg/9/25.png\" alt=\"Result pic 1\" title=\"coding要求文字版\"></p>\n<p><img src=\"/contentimg/9/26.png\" alt=\"Result pic 1\" title=\"coding要求文字版效果\"></p>\n<p>　　刚开始还去翻代码，结果发现原来NexT考虑到这个问题了，直接给我们加在配置文件里面，只需要去设置这个属性就行，不用改代码。</p>\n<p><img src=\"/contentimg/9/27.png\" alt=\"Result pic 1\" title=\"修改配置文件位置\"></p>\n<p>　　这里会遇到一个问题，当你把coding那边那个代码复制过来时，hexo g会报错！原来是由于没换行的概念，hexo读配置属性，是根据“：+空格”来判断的，所以只需要把那个空格删掉，它就不识别成属性，就不会报错。</p>\n<p>　　接下来就是等通过验证然后来搞百度收录了。</p>\n<p><a href=\"http://zhanzhang.baidu.com/linksubmit/url\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">百度收录链接</a> </p>\n<p>　　收录前需要进行的<a href=\"http://zhanzhang.baidu.com/site/siteadd\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">验证网站所有权</a>  。就是上面提到的验证。</p>\n<p>　　这里有三种方式可以做到：挂文件/在html加代码/CNAME。推荐第一种，因为第二种就直接明文了。当然，最后我还是用了第三种，CNAME，只需要去dns服务商那边设置就行了，马上就生效了，不用等coding过检。</p>\n<h3 id=\"挂文件\"><a href=\"#挂文件\" class=\"headerlink\" title=\"挂文件\"></a>挂文件</h3><p>　　就是把密码文件下载下来后，放在source根目录，然后到主配置文件找skip_render属性：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">skip_render: </span><br><span class=\"line\"> - baidu_verify_XXXXXX.html</span><br></pre></td></tr></table></figure>\n<p>　　防止hexo添加代码到该密码文件，百度爬虫才能识别到该文件。</p>\n<h3 id=\"加代码\"><a href=\"#加代码\" class=\"headerlink\" title=\"加代码\"></a>加代码</h3><p>　　找到文件\\themes\\next\\layout_partials\\head.swig。然后直接在这里的空白处插入代码。</p>\n<p><img src=\"/contentimg/9/28.png\" alt=\"Result pic 1\" title=\"在head插入代码\"></p>\n<p>　　百度统计那边功能蛮多的，不过现在博客暂时还没收录，等收录后体验下其他的功能。</p>\n<p>　　在配置好后，到配置文件启用：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">baidusitemap:</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">path</span>: <span class=\"title\">baidusitemap.xml</span></span></span><br></pre></td></tr></table></figure>\n<p>　　再到百度提交收录：</p>\n<p><img src=\"/contentimg/9/46.png\" alt=\"Result pic 1\" title=\"提交百度收录\"></p>\n<p>　　建议开启百度自动推送，就sitemap左边那个。代码已经集成在Next了，只要开启主题配置文件的属性“baidu_push”：</p>\n<p><img src=\"/contentimg/9/50.png\" alt=\"Result pic 1\" title=\"百度自动推送\"></p>\n<h2 id=\"Google收录\"><a href=\"#Google收录\" class=\"headerlink\" title=\"Google收录\"></a>Google收录</h2><blockquote>\n<p> npm install hexo-generator-sitemap –save -dev</p>\n</blockquote>\n<p>　　开vpn，<a href=\"https://www.google.com/webmasters/tools/home?hl=zh-CN\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Google站长工具</a>  类似百度收录的操作，都是下载密码html文件，放在根目录，然后到主配置文件添加忽略编译属性。</p>\n<p>　　好处是github没有屏蔽google，所以直接用github那边的挂谷歌。而且他们都是国外的，所以挂github的话，比挂国内的coding对搜索排名要有利。</p>\n<p><img src=\"/contentimg/9/29.png\" alt=\"Result pic 1\" title=\"马上过检\"></p>\n<p>　　在配置好后，到配置文件启用：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#sitemap</span><br><span class=\"line\"><span class=\"function\">sitemap:</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">path</span>: <span class=\"title\">sitemap.xml</span></span></span><br></pre></td></tr></table></figure>\n<p>　　同样要去提交收录。但是超级快，一下就能在谷歌搜索到了。</p>\n<h2 id=\"其他第三方服务\"><a href=\"#其他第三方服务\" class=\"headerlink\" title=\"其他第三方服务\"></a>其他第三方服务</h2><p><img src=\"/contentimg/9/32.png\" alt=\"Result pic 1\" title=\"目标目录\"></p>\n<p>　　到该目录下，列了目前NexT集成的第三方服务，可以根据文件名来选择要不要开启，都是在配置文件里面能找到开启选项的。其实这里的作用，就是把全部js脚本放在这里，然后用一个配置文件属性，判断要不要加这个脚本到html里面。</p>\n<h2 id=\"其他优化\"><a href=\"#其他优化\" class=\"headerlink\" title=\"其他优化\"></a>其他优化</h2><p>　　第三方的东西我目前只加了这些，其他就是代码上的修改了。</p>\n<h3 id=\"文章末尾添加“—end—”\"><a href=\"#文章末尾添加“—end—”\" class=\"headerlink\" title=\"文章末尾添加“—end—”\"></a>文章末尾添加“—end—”</h3><p>　　打开themes\\next\\layout\\ _macro\\post.swig，找到“wechat_subscriber”的地方，这个就是文章结尾时，“请加我好友”的图标所在的地方。复制如下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &#123;% if not is_index %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"text-align:center;color: #ccc;font-size:20px;\"</span>&gt;</span>-------------------------------------------------------- The End --------------------------------------------------------<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>　　这里文字大小和长度，请根据自己喜好进行修改。</p>\n<p>　　或者是使用hr写法。注意这里<a href=\"https://blog.csdn.net/lunhui1994_/article/details/79085805\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">文本文字在DIV中垂直水平居中显示</a>  </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &#123;% if not is_index %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"height:85px;line-height:85px;text-align:center;color:#ccc;\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">hr</span> <span class=\"attr\">size</span>=<span class=\"string\">\"7\"</span> <span class=\"attr\">color</span>=<span class=\"string\">\"coral\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"vertical-align:middle;float:left\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"40%\"</span>&gt;</span> The End <span class=\"tag\">&lt;<span class=\"name\">hr</span> <span class=\"attr\">size</span>=<span class=\"string\">\"7\"</span> <span class=\"attr\">color</span>=<span class=\"string\">\"coral\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"vertical-align:middle;float:right\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"40%\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> <span class=\"attr\">style</span>=<span class=\"string\">\"clear:both\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>　　但在手机端效果不行，换行了。</p>\n<h3 id=\"取消打赏的文字摇晃\"><a href=\"#取消打赏的文字摇晃\" class=\"headerlink\" title=\"取消打赏的文字摇晃\"></a>取消打赏的文字摇晃</h3><p>　　自带的摇晃太魔性了，建议去掉。到位置：next/source/css/_common/components/post/post-reward.styl ，搜“animation”：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">加“<span class=\"comment\">/*  */</span>”</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/9/35.png\" alt=\"Result pic 1\" title=\"屏蔽代码\"></p>\n<h3 id=\"浏览页面的时候显示当前浏览进度\"><a href=\"#浏览页面的时候显示当前浏览进度\" class=\"headerlink\" title=\"浏览页面的时候显示当前浏览进度\"></a>浏览页面的时候显示当前浏览进度</h3><p>　　到主题配置文件，搜scrollpercent，改为true。</p>\n<p><img src=\"/contentimg/9/36.png\" alt=\"Result pic 1\" title=\"显示浏览进度\"></p>\n<p>　　还可以放到左边：修改scrollpercent上方的b2t为true。</p>\n<p><img src=\"/contentimg/9/37.png\" alt=\"Result pic 1\" title=\"浏览进度显示在左边\"></p>\n<p><img src=\"/contentimg/9/38.png\" alt=\"Result pic 1\" title=\"两个修改项\"></p>\n<h3 id=\"fork-me-on-github\"><a href=\"#fork-me-on-github\" class=\"headerlink\" title=\"fork me on github\"></a>fork me on github</h3><h4 id=\"右上角\"><a href=\"#右上角\" class=\"headerlink\" title=\"右上角\"></a>右上角</h4><p>　　到<a href=\"http://tholman.com/github-corners/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">GitHub Corners</a>  选择喜欢的样式，复制代码。然后定位到next/layout/_layout.swig，搜索headband。将代码贴在下面：</p>\n<p><img src=\"/contentimg/9/39.png\" alt=\"Result pic 1\" title=\"右边实例\"></p>\n<h3 id=\"左上角\"><a href=\"#左上角\" class=\"headerlink\" title=\"左上角\"></a>左上角</h3><p>　　到<a href=\"https://blog.github.com/2008-12-19-github-ribbons/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Fork_me_on_GitHub</a>  选样式，像上面一样操作。当然也可以自己根据实际情况微调。</p>\n<h3 id=\"将标签前缀“-”换为图标\"><a href=\"#将标签前缀“-”换为图标\" class=\"headerlink\" title=\"将标签前缀“#”换为图标 \"></a>将标签前缀“#”换为图标 <i class=\"fa fa-tag\"></i></h3><p>　　到next/layout/_macro/post.swig，搜索 </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rel=<span class=\"string\">\"tag\"</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将 #号 换成&lt;i class=\"fa fa-tag\"&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/9/40.png\" alt=\"Result pic 1\" title=\"修改#为图标\"></p>\n<p><img src=\"/contentimg/9/41.png\" alt=\"Result pic 1\" title=\"效果\"></p>\n<h3 id=\"添加加载页面\"><a href=\"#添加加载页面\" class=\"headerlink\" title=\"添加加载页面\"></a>添加加载页面</h3><p><img src=\"/contentimg/9/42.png\" alt=\"Result pic 1\" title=\"加载进度条\"></p>\n<p>　　在next的配置文件搜“pace-theme”：这里我这个是pace-theme-center-atom，还有其他一堆可以选。</p>\n<p><img src=\"/contentimg/9/43.png\" alt=\"Result pic 1\" title=\"加载进度条设置\"></p>\n<h3 id=\"添加站内搜索\"><a href=\"#添加站内搜索\" class=\"headerlink\" title=\"添加站内搜索\"></a>添加站内搜索</h3><blockquote>\n<p> npm install hexo-generator-searchdb –save</p>\n</blockquote>\n<p>　　这里可能下载不下来，按照我前面说copy怎么下载那样，在npm失败后，会显示一个html，拿到百度云离线下载，下下来后，用记事本打开，搜version，找到最新版本，然后看barl的下载链接，再复制到百度云离线下载，然后当做本地文件来安装，就能安装了。</p>\n<p>　　到主配置文件最后添加：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#表示站内搜索</span></span><br><span class=\"line\">search:  </span><br><span class=\"line\">    path: search.xml</span><br><span class=\"line\">    field: post</span><br><span class=\"line\">    format: html</span><br><span class=\"line\">    <span class=\"built_in\">limit</span>: 10000</span><br></pre></td></tr></table></figure>\n<p>　　然后到NexT配置文件搜索“local_search”，启动enable：</p>\n<p><img src=\"/contentimg/9/44.png\" alt=\"Result pic 1\" title=\"启动站内搜索\"></p>\n<h3 id=\"修改访问URL路径\"><a href=\"#修改访问URL路径\" class=\"headerlink\" title=\"修改访问URL路径\"></a>修改访问URL路径</h3><p>　　默认情况下是年月日一串很长的url路径。是在主配置文件进行的修改：搜索“permalink”</p>\n<blockquote>\n<p> permalink: :category/:title/   #分类/标题</p>\n</blockquote>\n<p><img src=\"/contentimg/9/45.png\" alt=\"Result pic 1\" title=\"修改访问url路径\"></p>\n<h3 id=\"添加文章置顶功能\"><a href=\"#添加文章置顶功能\" class=\"headerlink\" title=\"添加文章置顶功能\"></a><a href=\"https://blog.csdn.net/qwerty200696/article/details/79010629\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">添加文章置顶功能</a></h3><p>　　现在应该都是新版本了，所以直接介绍新版本的方式：</p>\n<p>先卸载老插件，然后装新插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save -dev</span><br></pre></td></tr></table></figure>\n<p>　　然后在文章开头加 “top: 数字”</p>\n<p><img src=\"/contentimg/9/47.png\" alt=\"Result pic 1\" title=\"置顶设置\"></p>\n<p>　　这样就能看的效果了。不过推荐加一下置顶图标在前面：</p>\n<p>　　打开next/layout/_macro/post.swig，搜索<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"post-meta\"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>　　然后加入如下代码：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% <span class=\"keyword\">if</span> post.top %&#125;</span><br><span class=\"line\">    &lt;i class=\"fa fa-thumb-tack\"&gt;&lt;/i&gt;</span><br><span class=\"line\">    &lt;font <span class=\"built_in\">color</span>=#<span class=\"number\">222</span>&gt;置顶&lt;/font&gt;</span><br><span class=\"line\">    &lt;span class=\"post-meta-divider\"&gt;|&lt;/span&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/9/48.png\" alt=\"Result pic 1\" title=\"添加置顶图标\"></p>\n<p><img src=\"/contentimg/9/49.png\" alt=\"Result pic 1\" title=\"置顶效果\">　　</p>\n<h3 id=\"添加coding部分的一键复制功能\"><a href=\"#添加coding部分的一键复制功能\" class=\"headerlink\" title=\"添加coding部分的一键复制功能\"></a><a href=\"https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD%EF%BC%89/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">添加coding部分的一键复制功能</a></h3><p>　　本博客没启用该功能，具体请访问该链接：<a href=\"https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD%EF%BC%89/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">添加coding部分的一键复制功能</a>  </p>\n<p>　　由于有中文，该链接通过中文转码处理，如果失效，请通过域名查找。</p>\n<h3 id=\"添加Robot和nofollow\"><a href=\"#添加Robot和nofollow\" class=\"headerlink\" title=\"添加Robot和nofollow\"></a>添加Robot和nofollow</h3><p>　　新建robots.txt文件在source根目录下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#hexo robots.txt</span><br><span class=\"line\">User-agent: *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Allow: /</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Allow</span>: /<span class=\"title\">archives</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Allow</span>: /<span class=\"title\">categories</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Allow</span>: /<span class=\"title\">tags</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Allow</span>: /<span class=\"title\">about</span>/</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Disallow</span>: /404/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Disallow</span>: /<span class=\"title\">contentimg</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Disallow</span>: /<span class=\"title\">css</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Disallow</span>: /<span class=\"title\">images</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Disallow</span>: /<span class=\"title\">js</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Disallow</span>: /<span class=\"title\">lib</span>/</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Sitemap</span>: <span class=\"title\">http</span>://<span class=\"title\">yaojx.net</span>/<span class=\"title\">search.xml</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Sitemap</span>: <span class=\"title\">http</span>://<span class=\"title\">yaojx.net</span>/<span class=\"title\">sitemap.xml</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Sitemap</span>: <span class=\"title\">http</span>://<span class=\"title\">yaojx.net</span>/<span class=\"title\">baidusitemap.xml</span></span></span><br></pre></td></tr></table></figure>\n<p>　　当没这个文件时，默认全部内容可以爬，这个文件就是告诉那些可以爬，那些不行。</p>\n<blockquote>\n<p> npm install hexo-autonofollow –save</p>\n</blockquote>\n<p>　　当文章中有链接时，爬虫会顺着链接爬出去。所以得加这个nofollow。</p>\n<p>　　安装完后，到主配置文件最底下添加：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">nofollow:</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">enable</span>: <span class=\"title\">true</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">exclude</span>:</span></span><br><span class=\"line\"><span class=\"function\">        - <span class=\"title\">yaojx.net</span></span></span><br></pre></td></tr></table></figure>\n<p>　　然后就是去百度站长提交robot文件了。</p>\n<h3 id=\"qq点击后直接开打联系我的窗口\"><a href=\"#qq点击后直接开打联系我的窗口\" class=\"headerlink\" title=\"qq点击后直接开打联系我的窗口\"></a>qq点击后直接开打联系我的窗口</h3><p>　　该功能使用的是腾讯的开放接口：</p>\n<p><img src=\"/contentimg/9/51.png\" alt=\"Result pic 1\" title=\"next配置文件设置\">　　</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://wpa.qq.com/msgrd?v=3&amp;uin=659771655&amp;site=qq&amp;menu=yes</span><br></pre></td></tr></table></figure>\n<p>　　uin改成自己的qq就行了。</p>\n<h3 id=\"压缩gif\"><a href=\"#压缩gif\" class=\"headerlink\" title=\"压缩gif\"></a>压缩gif</h3><p>　　通常录屏文件要好几M，会导致网页加载严重缓慢，这里就需要进行压缩了，但是不建议进行脚本压缩，建议一张一张根据实际情况压缩。</p>\n<p>　　这里需要安装gifsicle。国内资料比较少，这里有个<a href=\"http://www.manpagez.com/man/1/gifsicle/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">说明文档</a>  。</p>\n<blockquote>\n<p> npm install gifsicle –global</p>\n</blockquote>\n<p>　　目前我会用的功能比较少，主要使用了压缩色调：</p>\n<blockquote>\n<p> gifsicle -o3 1.gif -o 4.gif –colors 32</p>\n</blockquote>\n<blockquote>\n<p> gifsicle -o3 需要压缩的文件  -o  输出的文件名 –colors 数字 </p>\n</blockquote>\n<p>　　通常情况下，录屏产生的gif是256色调的大体积文件，可以通过压缩成128、64、32、16等等色调，达到体积变小的目的。具体情况可以压缩试试看效果。这个操作是通过丢弃部分颜色值，达到压缩的效果的，所以色调越低，压缩越多，当然，照片也就失真越明显。</p>\n<h3 id=\"pdf显示\"><a href=\"#pdf显示\" class=\"headerlink\" title=\"pdf显示\"></a>pdf显示</h3><p>　　目前大家做这个博客，应该大部分会把自己的简历放上去，那是放html文件？绝大部分是pdf文件的。但是要怎么处理这个pdf文件的显示？用js代码，插入iframe，电脑端是可以的，但是移动端不支持，会直接提示下载文件。实际上有个开源前端插件，可以直接使用。可以看我另一篇文章，有提到<a href=\"/19markdownextend/\">markdown扩展</a> </p>\n<p>这里有几篇文章是讲怎么修改整个主题的，重点推荐：<br><a href=\"http://yangbingdong.com/2017/build-blog-hexo-advanced/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">基于Hexo搭建个人博客——进阶篇(从入门到入土)</a><br><a href=\"https://segmentfault.com/a/1190000016527304\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Hexo搭建GitHub博客—打造炫酷的NexT主题–高级(四)</a><br><a href=\"https://www.colabug.com/1840493.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Hexo+Next个人博客主题优化</a> </p>\n","site":{"data":{}},"excerpt":"<p>　　本文是记录如何修改配置Next，增加百度统计功能、评论区、RSS、爬虫等模块。是在前面几篇文章的扩展记录。</p>\n<p>　　注意这些第三方插件，当我们的博客布在github和coding两边时，数据是可以共用的！只要id和key是同样，在服务供应商那边记录域名和网站后，就可以顺利共用数据。</p>","more":"<p>　　<br><a href=\"http://theme-next.iissnan.com/getting-started.html#avatar-setting\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\"><strong><em>Next的使用说明</em></strong></a></p>\n<p>　　开头先贴官方配置说明。这里的头像位置、昵称等等，请通过这个官方配置说明链接来配置。本文只分享官方文档里面难的部分，以及文档里面没有的部分。记住配置文件“：”后面需要打空格，然后才加内容！</p>\n<p>　　注意，打开这些第三方服务，会拖慢网站打开速度，请酌情使用。</p>\n<p>　　<a href=\"http://theme-next.iissnan.com/third-party-services.html#algolia-search\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">官方指导链接</a> </p>\n<h2 id=\"评论系统-amp-文章阅读量统计功能\"><a href=\"#评论系统-amp-文章阅读量统计功能\" class=\"headerlink\" title=\"评论系统&amp;文章阅读量统计功能\"></a>评论系统&amp;文章阅读量统计功能</h2><p>　　因为文章访问数量那个系统我用的<a href=\"https://leancloud.cn/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">leancloud</a>  ，发现配置文件里面刚好也支持它，我就也用的这个服务。</p>\n<p>　　官方文档里面有提到这个阅读理解统计的：</p>\n<p><a href=\"https://notes.doublemine.me/2015-10-21-为NexT主题添加文章阅读量统计功能.html#%E9%85%8D%E7%BD%AELeanCloud\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">为NexT主题添加文章阅读量统计功能</a>  </p>\n<p>　　一起凑合着看吧。由于它支持我们改数据，所以我就使用它了。（没事可以偷偷上去改个阅读量999999！）</p>\n<p><img src=\"/contentimg/9/8.png\" alt=\"Result pic 1\" title=\"创建应用\"></p>\n<p><img src=\"/contentimg/9/9.png\" alt=\"Result pic 1\" title=\"官方教程\"></p>\n<p><img src=\"/contentimg/9/10.png\" alt=\"Result pic 1\" title=\"Counter以及Comment\"></p>\n<p>　　注意，第一次创建应用，在这里添加class，需要等2分钟，所以要耐心等。另外，免费版的，不能删除class，所以别加太多了。注意这里：评论的是Comment，文章阅读量的是Counter。</p>\n<p>　　然后就是去获取key和id。这里不能直接鼠标拉选，不过可以右键，定位到元素，然后在代码里面找到这个字符串，就能复制了。</p>\n<p><img src=\"/contentimg/9/13.png\" alt=\"Result pic 1\" title=\"获取key和id\"></p>\n<p><img src=\"/contentimg/9/14.png\" alt=\"Result pic 1\" title=\"修改配置文件valine\"></p>\n<p><img src=\"/contentimg/9/15.png\" alt=\"Result pic 1\" title=\"修改配置文件leancloud_visitors\"></p>\n<p>　　最后，千万记得要去“安全中心”设置“web安全域名”！因为这个id和key是明文，谁都能抓取到的！</p>\n<p><img src=\"/contentimg/9/16.png\" alt=\"Result pic 1\" title=\"接口屏蔽非安全域名的调用，这会造成网页加载超级慢\"></p>\n<p>　　还可以设置邮件提醒<a href=\"https://github.com/xCss/Valine/wiki/Valine-评论系统中的邮件提醒设置\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Valine 评论系统中的邮件提醒设置</a> </p>\n<h2 id=\"百度统计\"><a href=\"#百度统计\" class=\"headerlink\" title=\"百度统计\"></a><a href=\"http://tongji.baidu.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">百度统计</a></h2><p>　　文档里面说得很简略，下面我就介绍一下详细的过程。</p>\n<p><img src=\"/contentimg/9/1.png\" alt=\"Result pic 1\" title=\"百度统计\"></p>\n<p>　　怎么打开？</p>\n<p><img src=\"/contentimg/9/3.png\" alt=\"Result pic 1\" title=\"指导文档说明情况\"></p>\n<p><img src=\"/contentimg/9/2.png\" alt=\"Result pic 1\" title=\"在这里\"></p>\n<p><img src=\"/contentimg/9/4.png\" alt=\"Result pic 1\" title=\"在配置文件这里\"></p>\n<p>　　先在百度统计那边复制key，然后到配置文件里面ctrl f找到baidu_analytics 字段，打一个空格后把key复制进去。hexo clean，再生成，让html重新编译，会自动加代码进去的。</p>\n<p><img src=\"/contentimg/9/6.png\" alt=\"Result pic 1\" title=\"F12查看代码\"></p>\n<p>　　如果不会，可以直接发布。然后到百度统计那边检查。</p>\n<p><img src=\"/contentimg/9/5.png\" alt=\"Result pic 1\" title=\"百度统计自检查\"></p>\n<h2 id=\"内容分享服务\"><a href=\"#内容分享服务\" class=\"headerlink\" title=\"内容分享服务\"></a>内容分享服务</h2><p><img src=\"/contentimg/9/7.png\" alt=\"Result pic 1\" title=\"不支持https\"></p>\n<p>　　第一个JiaThis，搜索有新闻说已经关闭分享服务了。第三个好像是国外，搞推特的，国内访问应该比较慢，也不考虑。后面找了Mob，但是不支持https，所以也用不了。</p>\n<p>　　剩下一个百度，结果，打开后发现很丑，还只能分享图片，不能整篇文章分享（得改代码）。所以我就没开该项。请自取哈。</p>\n<p><img src=\"/contentimg/9/31.png\" alt=\"Result pic 1\" title=\"取消注释该两项即可\"></p>\n<p><img src=\"/contentimg/9/30.png\" alt=\"Result pic 1\" title=\"百度分析效果\"></p>\n<p>　　分享的效果也不好，点击后调整的界面不好看。</p>\n<h2 id=\"字数统计-amp-阅读时长\"><a href=\"#字数统计-amp-阅读时长\" class=\"headerlink\" title=\"字数统计&amp;阅读时长\"></a><a href=\"https://www.cnblogs.com/php-linux/p/8418518.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">字数统计&amp;阅读时长</a></h2><p><img src=\"/contentimg/9/17.png\" alt=\"Result pic 1\" title=\"配置文件post_wordcount\"></p>\n<p>　　里面已经内置了，开启就能使用了。但是单纯改配置文件，数字是显示不出来的，得添加插件：</p>\n<blockquote>\n<p> npm install hexo-wordcount –save -dev</p>\n</blockquote>\n<p>　　安装完成后，hexo clean；hexo g。启动服务就能看到效果了。如果想像我这边一样加文字：</p>\n<p>　　到目录：/themes/next/layout/_macro/post.swig</p>\n<p>　　用记事本打开后搜索post_wordcount：</p>\n<p><img src=\"/contentimg/9/18.png\" alt=\"Result pic 1\" title=\"添加字和分钟\"><br>　　<br><img src=\"/contentimg/9/19.png\" alt=\"Result pic 1\" title=\"效果\"></p>\n<h2 id=\"RSS\"><a href=\"#RSS\" class=\"headerlink\" title=\"RSS\"></a><a href=\"https://www.jianshu.com/p/a79422ab2013\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">RSS</a></h2><blockquote>\n<p> npm install hexo-generator-feed –save -dev</p>\n</blockquote>\n<p>　　然后到主配置文件最底下添加：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions</span><br><span class=\"line\"><span class=\"function\">plugins:</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">hexo</span>-<span class=\"title\">generator</span>-<span class=\"title\">feed</span></span></span><br><span class=\"line\"><span class=\"function\">#<span class=\"title\">Feed</span> <span class=\"title\">Atom</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">feed</span>:</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">type</span>: <span class=\"title\">atom</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">path</span>: <span class=\"title\">atom.xml</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">limit</span>: 20</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/9/20.png\" alt=\"Result pic 1\" title=\"添加RSS生成配置\"></p>\n<p>　　这个插件的作用是统计记录你的文章，生成一个xml格式的文件atom.xml。别人通过订阅分析你这个文件变动来了解你文章的更新情况。</p>\n<p><img src=\"/contentimg/9/22.png\" alt=\"Result pic 1\" title=\"简书上博主分享的操作\"></p>\n<h2 id=\"百度sitemap\"><a href=\"#百度sitemap\" class=\"headerlink\" title=\"百度sitemap\"></a><a href=\"https://blog.csdn.net/heqiangflytosky/article/details/54863166\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">百度sitemap</a></h2><blockquote>\n<p> npm install hexo-generator-baidu-sitemap –save -dev</p>\n</blockquote>\n<p><img src=\"/contentimg/9/23.png\" alt=\"Result pic 1\" title=\"百度sitemap情况\"></p>\n<p>　　在百度里面搜索site:域名。检验是否被百度收录。如果没有的，需要进行登记。这里google的操作比较简单。</p>\n<p>　　百度的，由于被github屏蔽爬虫，所以只能考虑放coding上面。coding的免费玩家，是会强制301转址的，所以这时候放百度验证，是无法成功的，百度验证不会像浏览器那样跳转识别，在说明那里也提到：“如果存在转址，请暂时取消”。</p>\n<p><img src=\"/contentimg/9/24.png\" alt=\"Result pic 1\" title=\"coding要求\"></p>\n<p>　　那怎么玩？只能想办法完成这个coding要求了。加图标的话，布局上没想到怎么改。所以我选择加文字版：</p>\n<p><img src=\"/contentimg/9/25.png\" alt=\"Result pic 1\" title=\"coding要求文字版\"></p>\n<p><img src=\"/contentimg/9/26.png\" alt=\"Result pic 1\" title=\"coding要求文字版效果\"></p>\n<p>　　刚开始还去翻代码，结果发现原来NexT考虑到这个问题了，直接给我们加在配置文件里面，只需要去设置这个属性就行，不用改代码。</p>\n<p><img src=\"/contentimg/9/27.png\" alt=\"Result pic 1\" title=\"修改配置文件位置\"></p>\n<p>　　这里会遇到一个问题，当你把coding那边那个代码复制过来时，hexo g会报错！原来是由于没换行的概念，hexo读配置属性，是根据“：+空格”来判断的，所以只需要把那个空格删掉，它就不识别成属性，就不会报错。</p>\n<p>　　接下来就是等通过验证然后来搞百度收录了。</p>\n<p><a href=\"http://zhanzhang.baidu.com/linksubmit/url\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">百度收录链接</a> </p>\n<p>　　收录前需要进行的<a href=\"http://zhanzhang.baidu.com/site/siteadd\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">验证网站所有权</a>  。就是上面提到的验证。</p>\n<p>　　这里有三种方式可以做到：挂文件/在html加代码/CNAME。推荐第一种，因为第二种就直接明文了。当然，最后我还是用了第三种，CNAME，只需要去dns服务商那边设置就行了，马上就生效了，不用等coding过检。</p>\n<h3 id=\"挂文件\"><a href=\"#挂文件\" class=\"headerlink\" title=\"挂文件\"></a>挂文件</h3><p>　　就是把密码文件下载下来后，放在source根目录，然后到主配置文件找skip_render属性：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">skip_render: </span><br><span class=\"line\"> - baidu_verify_XXXXXX.html</span><br></pre></td></tr></table></figure>\n<p>　　防止hexo添加代码到该密码文件，百度爬虫才能识别到该文件。</p>\n<h3 id=\"加代码\"><a href=\"#加代码\" class=\"headerlink\" title=\"加代码\"></a>加代码</h3><p>　　找到文件\\themes\\next\\layout_partials\\head.swig。然后直接在这里的空白处插入代码。</p>\n<p><img src=\"/contentimg/9/28.png\" alt=\"Result pic 1\" title=\"在head插入代码\"></p>\n<p>　　百度统计那边功能蛮多的，不过现在博客暂时还没收录，等收录后体验下其他的功能。</p>\n<p>　　在配置好后，到配置文件启用：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">baidusitemap:</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">path</span>: <span class=\"title\">baidusitemap.xml</span></span></span><br></pre></td></tr></table></figure>\n<p>　　再到百度提交收录：</p>\n<p><img src=\"/contentimg/9/46.png\" alt=\"Result pic 1\" title=\"提交百度收录\"></p>\n<p>　　建议开启百度自动推送，就sitemap左边那个。代码已经集成在Next了，只要开启主题配置文件的属性“baidu_push”：</p>\n<p><img src=\"/contentimg/9/50.png\" alt=\"Result pic 1\" title=\"百度自动推送\"></p>\n<h2 id=\"Google收录\"><a href=\"#Google收录\" class=\"headerlink\" title=\"Google收录\"></a>Google收录</h2><blockquote>\n<p> npm install hexo-generator-sitemap –save -dev</p>\n</blockquote>\n<p>　　开vpn，<a href=\"https://www.google.com/webmasters/tools/home?hl=zh-CN\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Google站长工具</a>  类似百度收录的操作，都是下载密码html文件，放在根目录，然后到主配置文件添加忽略编译属性。</p>\n<p>　　好处是github没有屏蔽google，所以直接用github那边的挂谷歌。而且他们都是国外的，所以挂github的话，比挂国内的coding对搜索排名要有利。</p>\n<p><img src=\"/contentimg/9/29.png\" alt=\"Result pic 1\" title=\"马上过检\"></p>\n<p>　　在配置好后，到配置文件启用：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#sitemap</span><br><span class=\"line\"><span class=\"function\">sitemap:</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">path</span>: <span class=\"title\">sitemap.xml</span></span></span><br></pre></td></tr></table></figure>\n<p>　　同样要去提交收录。但是超级快，一下就能在谷歌搜索到了。</p>\n<h2 id=\"其他第三方服务\"><a href=\"#其他第三方服务\" class=\"headerlink\" title=\"其他第三方服务\"></a>其他第三方服务</h2><p><img src=\"/contentimg/9/32.png\" alt=\"Result pic 1\" title=\"目标目录\"></p>\n<p>　　到该目录下，列了目前NexT集成的第三方服务，可以根据文件名来选择要不要开启，都是在配置文件里面能找到开启选项的。其实这里的作用，就是把全部js脚本放在这里，然后用一个配置文件属性，判断要不要加这个脚本到html里面。</p>\n<h2 id=\"其他优化\"><a href=\"#其他优化\" class=\"headerlink\" title=\"其他优化\"></a>其他优化</h2><p>　　第三方的东西我目前只加了这些，其他就是代码上的修改了。</p>\n<h3 id=\"文章末尾添加“—end—”\"><a href=\"#文章末尾添加“—end—”\" class=\"headerlink\" title=\"文章末尾添加“—end—”\"></a>文章末尾添加“—end—”</h3><p>　　打开themes\\next\\layout\\ _macro\\post.swig，找到“wechat_subscriber”的地方，这个就是文章结尾时，“请加我好友”的图标所在的地方。复制如下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &#123;% if not is_index %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"text-align:center;color: #ccc;font-size:20px;\"</span>&gt;</span>-------------------------------------------------------- The End --------------------------------------------------------<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>　　这里文字大小和长度，请根据自己喜好进行修改。</p>\n<p>　　或者是使用hr写法。注意这里<a href=\"https://blog.csdn.net/lunhui1994_/article/details/79085805\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">文本文字在DIV中垂直水平居中显示</a>  </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &#123;% if not is_index %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"height:85px;line-height:85px;text-align:center;color:#ccc;\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">hr</span> <span class=\"attr\">size</span>=<span class=\"string\">\"7\"</span> <span class=\"attr\">color</span>=<span class=\"string\">\"coral\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"vertical-align:middle;float:left\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"40%\"</span>&gt;</span> The End <span class=\"tag\">&lt;<span class=\"name\">hr</span> <span class=\"attr\">size</span>=<span class=\"string\">\"7\"</span> <span class=\"attr\">color</span>=<span class=\"string\">\"coral\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"vertical-align:middle;float:right\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"40%\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> <span class=\"attr\">style</span>=<span class=\"string\">\"clear:both\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>　　但在手机端效果不行，换行了。</p>\n<h3 id=\"取消打赏的文字摇晃\"><a href=\"#取消打赏的文字摇晃\" class=\"headerlink\" title=\"取消打赏的文字摇晃\"></a>取消打赏的文字摇晃</h3><p>　　自带的摇晃太魔性了，建议去掉。到位置：next/source/css/_common/components/post/post-reward.styl ，搜“animation”：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">加“<span class=\"comment\">/*  */</span>”</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/9/35.png\" alt=\"Result pic 1\" title=\"屏蔽代码\"></p>\n<h3 id=\"浏览页面的时候显示当前浏览进度\"><a href=\"#浏览页面的时候显示当前浏览进度\" class=\"headerlink\" title=\"浏览页面的时候显示当前浏览进度\"></a>浏览页面的时候显示当前浏览进度</h3><p>　　到主题配置文件，搜scrollpercent，改为true。</p>\n<p><img src=\"/contentimg/9/36.png\" alt=\"Result pic 1\" title=\"显示浏览进度\"></p>\n<p>　　还可以放到左边：修改scrollpercent上方的b2t为true。</p>\n<p><img src=\"/contentimg/9/37.png\" alt=\"Result pic 1\" title=\"浏览进度显示在左边\"></p>\n<p><img src=\"/contentimg/9/38.png\" alt=\"Result pic 1\" title=\"两个修改项\"></p>\n<h3 id=\"fork-me-on-github\"><a href=\"#fork-me-on-github\" class=\"headerlink\" title=\"fork me on github\"></a>fork me on github</h3><h4 id=\"右上角\"><a href=\"#右上角\" class=\"headerlink\" title=\"右上角\"></a>右上角</h4><p>　　到<a href=\"http://tholman.com/github-corners/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">GitHub Corners</a>  选择喜欢的样式，复制代码。然后定位到next/layout/_layout.swig，搜索headband。将代码贴在下面：</p>\n<p><img src=\"/contentimg/9/39.png\" alt=\"Result pic 1\" title=\"右边实例\"></p>\n<h3 id=\"左上角\"><a href=\"#左上角\" class=\"headerlink\" title=\"左上角\"></a>左上角</h3><p>　　到<a href=\"https://blog.github.com/2008-12-19-github-ribbons/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Fork_me_on_GitHub</a>  选样式，像上面一样操作。当然也可以自己根据实际情况微调。</p>\n<h3 id=\"将标签前缀“-”换为图标\"><a href=\"#将标签前缀“-”换为图标\" class=\"headerlink\" title=\"将标签前缀“#”换为图标 \"></a>将标签前缀“#”换为图标 <i class=\"fa fa-tag\"></i></h3><p>　　到next/layout/_macro/post.swig，搜索 </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rel=<span class=\"string\">\"tag\"</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将 #号 换成&lt;i class=\"fa fa-tag\"&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/9/40.png\" alt=\"Result pic 1\" title=\"修改#为图标\"></p>\n<p><img src=\"/contentimg/9/41.png\" alt=\"Result pic 1\" title=\"效果\"></p>\n<h3 id=\"添加加载页面\"><a href=\"#添加加载页面\" class=\"headerlink\" title=\"添加加载页面\"></a>添加加载页面</h3><p><img src=\"/contentimg/9/42.png\" alt=\"Result pic 1\" title=\"加载进度条\"></p>\n<p>　　在next的配置文件搜“pace-theme”：这里我这个是pace-theme-center-atom，还有其他一堆可以选。</p>\n<p><img src=\"/contentimg/9/43.png\" alt=\"Result pic 1\" title=\"加载进度条设置\"></p>\n<h3 id=\"添加站内搜索\"><a href=\"#添加站内搜索\" class=\"headerlink\" title=\"添加站内搜索\"></a>添加站内搜索</h3><blockquote>\n<p> npm install hexo-generator-searchdb –save</p>\n</blockquote>\n<p>　　这里可能下载不下来，按照我前面说copy怎么下载那样，在npm失败后，会显示一个html，拿到百度云离线下载，下下来后，用记事本打开，搜version，找到最新版本，然后看barl的下载链接，再复制到百度云离线下载，然后当做本地文件来安装，就能安装了。</p>\n<p>　　到主配置文件最后添加：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#表示站内搜索</span></span><br><span class=\"line\">search:  </span><br><span class=\"line\">    path: search.xml</span><br><span class=\"line\">    field: post</span><br><span class=\"line\">    format: html</span><br><span class=\"line\">    <span class=\"built_in\">limit</span>: 10000</span><br></pre></td></tr></table></figure>\n<p>　　然后到NexT配置文件搜索“local_search”，启动enable：</p>\n<p><img src=\"/contentimg/9/44.png\" alt=\"Result pic 1\" title=\"启动站内搜索\"></p>\n<h3 id=\"修改访问URL路径\"><a href=\"#修改访问URL路径\" class=\"headerlink\" title=\"修改访问URL路径\"></a>修改访问URL路径</h3><p>　　默认情况下是年月日一串很长的url路径。是在主配置文件进行的修改：搜索“permalink”</p>\n<blockquote>\n<p> permalink: :category/:title/   #分类/标题</p>\n</blockquote>\n<p><img src=\"/contentimg/9/45.png\" alt=\"Result pic 1\" title=\"修改访问url路径\"></p>\n<h3 id=\"添加文章置顶功能\"><a href=\"#添加文章置顶功能\" class=\"headerlink\" title=\"添加文章置顶功能\"></a><a href=\"https://blog.csdn.net/qwerty200696/article/details/79010629\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">添加文章置顶功能</a></h3><p>　　现在应该都是新版本了，所以直接介绍新版本的方式：</p>\n<p>先卸载老插件，然后装新插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save -dev</span><br></pre></td></tr></table></figure>\n<p>　　然后在文章开头加 “top: 数字”</p>\n<p><img src=\"/contentimg/9/47.png\" alt=\"Result pic 1\" title=\"置顶设置\"></p>\n<p>　　这样就能看的效果了。不过推荐加一下置顶图标在前面：</p>\n<p>　　打开next/layout/_macro/post.swig，搜索<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"post-meta\"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>　　然后加入如下代码：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% <span class=\"keyword\">if</span> post.top %&#125;</span><br><span class=\"line\">    &lt;i class=\"fa fa-thumb-tack\"&gt;&lt;/i&gt;</span><br><span class=\"line\">    &lt;font <span class=\"built_in\">color</span>=#<span class=\"number\">222</span>&gt;置顶&lt;/font&gt;</span><br><span class=\"line\">    &lt;span class=\"post-meta-divider\"&gt;|&lt;/span&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/contentimg/9/48.png\" alt=\"Result pic 1\" title=\"添加置顶图标\"></p>\n<p><img src=\"/contentimg/9/49.png\" alt=\"Result pic 1\" title=\"置顶效果\">　　</p>\n<h3 id=\"添加coding部分的一键复制功能\"><a href=\"#添加coding部分的一键复制功能\" class=\"headerlink\" title=\"添加coding部分的一键复制功能\"></a><a href=\"https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD%EF%BC%89/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">添加coding部分的一键复制功能</a></h3><p>　　本博客没启用该功能，具体请访问该链接：<a href=\"https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD%EF%BC%89/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">添加coding部分的一键复制功能</a>  </p>\n<p>　　由于有中文，该链接通过中文转码处理，如果失效，请通过域名查找。</p>\n<h3 id=\"添加Robot和nofollow\"><a href=\"#添加Robot和nofollow\" class=\"headerlink\" title=\"添加Robot和nofollow\"></a>添加Robot和nofollow</h3><p>　　新建robots.txt文件在source根目录下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#hexo robots.txt</span><br><span class=\"line\">User-agent: *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Allow: /</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Allow</span>: /<span class=\"title\">archives</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Allow</span>: /<span class=\"title\">categories</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Allow</span>: /<span class=\"title\">tags</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Allow</span>: /<span class=\"title\">about</span>/</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Disallow</span>: /404/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Disallow</span>: /<span class=\"title\">contentimg</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Disallow</span>: /<span class=\"title\">css</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Disallow</span>: /<span class=\"title\">images</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Disallow</span>: /<span class=\"title\">js</span>/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Disallow</span>: /<span class=\"title\">lib</span>/</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Sitemap</span>: <span class=\"title\">http</span>://<span class=\"title\">yaojx.net</span>/<span class=\"title\">search.xml</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Sitemap</span>: <span class=\"title\">http</span>://<span class=\"title\">yaojx.net</span>/<span class=\"title\">sitemap.xml</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Sitemap</span>: <span class=\"title\">http</span>://<span class=\"title\">yaojx.net</span>/<span class=\"title\">baidusitemap.xml</span></span></span><br></pre></td></tr></table></figure>\n<p>　　当没这个文件时，默认全部内容可以爬，这个文件就是告诉那些可以爬，那些不行。</p>\n<blockquote>\n<p> npm install hexo-autonofollow –save</p>\n</blockquote>\n<p>　　当文章中有链接时，爬虫会顺着链接爬出去。所以得加这个nofollow。</p>\n<p>　　安装完后，到主配置文件最底下添加：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">nofollow:</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">enable</span>: <span class=\"title\">true</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">exclude</span>:</span></span><br><span class=\"line\"><span class=\"function\">        - <span class=\"title\">yaojx.net</span></span></span><br></pre></td></tr></table></figure>\n<p>　　然后就是去百度站长提交robot文件了。</p>\n<h3 id=\"qq点击后直接开打联系我的窗口\"><a href=\"#qq点击后直接开打联系我的窗口\" class=\"headerlink\" title=\"qq点击后直接开打联系我的窗口\"></a>qq点击后直接开打联系我的窗口</h3><p>　　该功能使用的是腾讯的开放接口：</p>\n<p><img src=\"/contentimg/9/51.png\" alt=\"Result pic 1\" title=\"next配置文件设置\">　　</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://wpa.qq.com/msgrd?v=3&amp;uin=659771655&amp;site=qq&amp;menu=yes</span><br></pre></td></tr></table></figure>\n<p>　　uin改成自己的qq就行了。</p>\n<h3 id=\"压缩gif\"><a href=\"#压缩gif\" class=\"headerlink\" title=\"压缩gif\"></a>压缩gif</h3><p>　　通常录屏文件要好几M，会导致网页加载严重缓慢，这里就需要进行压缩了，但是不建议进行脚本压缩，建议一张一张根据实际情况压缩。</p>\n<p>　　这里需要安装gifsicle。国内资料比较少，这里有个<a href=\"http://www.manpagez.com/man/1/gifsicle/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">说明文档</a>  。</p>\n<blockquote>\n<p> npm install gifsicle –global</p>\n</blockquote>\n<p>　　目前我会用的功能比较少，主要使用了压缩色调：</p>\n<blockquote>\n<p> gifsicle -o3 1.gif -o 4.gif –colors 32</p>\n</blockquote>\n<blockquote>\n<p> gifsicle -o3 需要压缩的文件  -o  输出的文件名 –colors 数字 </p>\n</blockquote>\n<p>　　通常情况下，录屏产生的gif是256色调的大体积文件，可以通过压缩成128、64、32、16等等色调，达到体积变小的目的。具体情况可以压缩试试看效果。这个操作是通过丢弃部分颜色值，达到压缩的效果的，所以色调越低，压缩越多，当然，照片也就失真越明显。</p>\n<h3 id=\"pdf显示\"><a href=\"#pdf显示\" class=\"headerlink\" title=\"pdf显示\"></a>pdf显示</h3><p>　　目前大家做这个博客，应该大部分会把自己的简历放上去，那是放html文件？绝大部分是pdf文件的。但是要怎么处理这个pdf文件的显示？用js代码，插入iframe，电脑端是可以的，但是移动端不支持，会直接提示下载文件。实际上有个开源前端插件，可以直接使用。可以看我另一篇文章，有提到<a href=\"/19markdownextend/\">markdown扩展</a> </p>\n<p>这里有几篇文章是讲怎么修改整个主题的，重点推荐：<br><a href=\"http://yangbingdong.com/2017/build-blog-hexo-advanced/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">基于Hexo搭建个人博客——进阶篇(从入门到入土)</a><br><a href=\"https://segmentfault.com/a/1190000016527304\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Hexo搭建GitHub博客—打造炫酷的NexT主题–高级(四)</a><br><a href=\"https://www.colabug.com/1840493.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Hexo+Next个人博客主题优化</a> </p>"},{"title":"入门级的8种算法记录","date":"2018-10-14T14:55:58.000Z","_content":"\t\n　　本文记录算法中入门级别的8种简单排序算法。\n 1.  冒泡排序　　2.  选择排序　　3.  插入排序　　4.  堆排序\n　　5.  归并排序　　6.  快速排序　　7.  希尔排序　　8.  基数排序\n<!-- more -->\n## 基础代码实现：\n\n### 1.抽象公共接口部分\n\n``` java\n    interface ISortMethod\n    {\n        IList<int> GetResult(IList<int> sourcelist,out int countnum);\n    }\n```\n\n#### 2.建立公共基类进行数据有效性校验和控制台输出的颜色标记\n\n``` java\n    public class SortBaseClass : ISortMethod\n    {\n        public IList<int> GetResult(IList<int> sourcelist, out int countnum)\n        {\n            return CheckEffect(sourcelist,out countnum);\n        }\n\n        /// <summary>\n        /// 进行数据的有效性判断\n        /// </summary>\n        /// <param name=\"sourcelist\"></param>\n        /// <returns></returns>\n        private IList<int> CheckEffect(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = null;\n            countnum = 0;\n            if (sourcelist != null)\n            {\n                if (sourcelist.Count > 0)\n                {\n                    resultlist = Sort(sourcelist,out countnum);\n                }\n                else\n                {\n                    resultlist = sourcelist;\n                }\n            }\n\n            return resultlist;\n        }\n\n        /// <summary>\n        /// 由具体的算法部分进行重写\n        /// </summary>\n        /// <param name=\"sourcelist\"></param>\n        /// <returns></returns>\n        protected virtual IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            countnum = 0;\n            return sourcelist;\n        }\n\n        /// <summary>\n        /// 控制台过程输出\n        /// </summary>\n        /// <param name=\"sourcelist\"></param>\n        /// <param name=\"n\">交换的前面一个数的序号</param>\n        /// <param name=\"m\">交换的后面一个数的序号</param>\n        protected void ConsoleOutProcess(IList<int> sourcelist,int n,int m)\n        {\n            for (int i = 0; i < sourcelist.Count; i++)\n            {\n                if (i < sourcelist.Count - 1)\n                {\n                    if (i == n || i == m)\n                    {\n                        Console.ForegroundColor = ConsoleColor.Green;\n                    }\n                    else\n                        Console.ForegroundColor = ConsoleColor.White;\n\n                    Console.Write(sourcelist[i]);\n\n                    if (i != n)\n                    {\n                        Console.ForegroundColor = ConsoleColor.White;\n                        Console.Write(\"-->\");\n                    }\n                    else\n                    {\n                        Console.Write(\"<--\");\n                    }    \n                }\n            }\n\n            Console.ForegroundColor = ConsoleColor.White;\n            if (sourcelist.Count - 1 == n || sourcelist.Count - 1 == m)\n            {\n                Console.ForegroundColor = ConsoleColor.Green;\n            }\n            Console.Write(sourcelist[sourcelist.Count - 1]);\n            Console.ForegroundColor = ConsoleColor.White;\n            Console.WriteLine();\n        }\n    }\n```\n\n#### 3.main函数具体打印代码\n\n``` java\n    static void Main(string[] args)\n    {\n        List<int> numlst = new List<int>() { 23, 44, 66, 66, 76, 98, 11, 3, 9, 7 };\n        ISortMethod sort = new BubbleSortMethod();\n\n        Console.WriteLine(\"原数列为：\");\n        StringBuilder str = new StringBuilder();\n        for (int i = 0; i < numlst.Count; i++)\n        {\n            str.Append(numlst[i] + \"   \");\n        }\n        Console.WriteLine(str.Remove(str.Length - 3, 3).ToString());\n\n        Console.WriteLine(System.Environment.NewLine);\n        int countnum = 0;\n        List<int> result = sort.GetResult(numlst,out countnum) as List<int>;\n\n        Console.WriteLine(System.Environment.NewLine);\n        Console.WriteLine(\"经过了{0}次数据对比 \", countnum);\n        Console.WriteLine(\"排序后为：\");\n        str.Clear();\n        for (int i = 0; i < result.Count; i++)\n        {\n            str.Append(result[i] + \"-->\");\n        }\n        Console.WriteLine(str.Remove(str.Length - 3, 3).ToString());\n            \n        Console.ReadKey();\n    }\n```\n\n#### 4.具体算法实现部分\n\n具体实现算法，同时添加过程打印以便分析。\n\n## 一. 冒泡排序\n\n### 1.1原理\n\n [冒泡排序](https://baike.baidu.com/item/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/4602306?fr=aladdin) （Bubble Sort）算法的原理如下:\n\n1.  比较相邻的元素。如果第一个比第二个大，就交换他们两个。\n1.  对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。\n1.  针对所有的元素重复以上的步骤，除了最后一个。\n1.  持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。\n\n### 1.2具体代码实现\n\n``` java\n    public class BubbleSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n            countnum = 0;\n            int temp = int.MinValue;\n            for (int i = 0; i < sourcelist.Count - 1; i++)\n            {\n\t\t\t    //最后一个数最大，所以后面的数不必再次比较 -i\n                for (int j = 0; j < sourcelist.Count - 1 - i; j++)\n                {\n                    if (resultlist[j] > resultlist[j + 1])\n                    {\n                        temp = resultlist[j + 1];\n                        resultlist[j + 1] = resultlist[j];\n                        resultlist[j] = temp;\n\n                        ConsoleOutProcess(resultlist, j, j + 1);\n                    }\n                    countnum++;\n                }\n            }\n\n            return resultlist;\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new BubbleSortMethod();\n\n　　执行结果为：\n\n![Result pic 1](/contentimg/2/1.png \"冒泡排序\")\n\n## 二.选择排序\n\n### 2.1原理\n\n [选择排序](https://baike.baidu.com/item/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/9762418?fr=aladdin) （Selection sort）算法的原理如下：\n\n　每一次从待排序的[数据元素](https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%85%83%E7%B4%A0) 中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完。\n \n### 2.2具体代码实现\n\n``` java\n    public class SelectionSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n\n            int temp, pos = 0;\n            countnum = 0;\n            for (int i = 0; i < sourcelist.Count - 1; i++)\n            {\n                pos = i;\n                for (int j = i + 1; j < sourcelist.Count; j++)\n                {\n                    if (resultlist[j] < resultlist[pos])\n                    {\n                        pos = j;\n                    }\n                    countnum++;\n                }\n                if (pos == i) continue;\n                temp = resultlist[i];\n                resultlist[i] = resultlist[pos];\n                resultlist[pos] = temp;\n                ConsoleOutProcess(resultlist, i, pos);\n            }\n\n            return resultlist;\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new SelectionSortMethod();\n\n　　执行结果为：\n\n![Result pic 2](/contentimg/2/2.png \"选择排序\")\n\n## 三. 插入排序\n\n### 3.1原理\n\n [插入排序](https://www.douban.com/note/396407547/) （Insert Sort）算法的原理如下:\n\n　插入即表示将一个新的数据插入到一个有序数组中，并继续保持有序。例如有一个长度为N的无序数组，进行N-1次的插入即能完成排序。\n　第一次，数组第1个数认为是有序的数组，将数组第二个元素插入仅有1个有序的数组中；\n　第二次，数组前两个元素组成有序的数组，将数组第三个元素插入由两个元素构成的有序数组中.....\n　第N-1次，数组前N-1个元素组成有序的数组，将数组的第N个元素插入由N-1个元素构成的有序数组中，则完成了整个插入排序。\n　....\n　按序比较直到集合排序完毕。\n\n### 3.2具体代码实现\n\n``` java\n    public class NormalInsertSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n            countnum = 0;\n            int key = int.MinValue;\n            int i, j = 0;\n            for (j = 1; j < sourcelist.Count; j++)\n            {\n                key = resultlist[j];\n                i = j - 1;\n\t\t\t\t\n\t\t\t\t//将数组往后面退1位\n                while (i >= 0 && resultlist[i] > key)\n                {\n                    countnum++;\n                    resultlist[i + 1] = resultlist[i];\n                    i -= 1;\n                }\n\t\t\t\t//过滤两个相同大小的数的左右交换\n                if (resultlist[i + 1] == key) continue;\n\n\t\t\t\t//插入有序的位置（后面的都比这个数大）\n                resultlist[i + 1] = key;\n                ConsoleOutProcess(resultlist, -1, i + 1);\n            }\n\n            return resultlist;\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new NormalInsertSortMethod();\n\n　　执行结果为：\n\n![Result pic 3](/contentimg/2/3.png \"插入排序\")\n\n## 四. 堆排序\n\n### 4.1原理\n\n [堆排序](https://www.cnblogs.com/0zcl/p/6737944.html) （Heap Sort）算法的原理如下:\n\n　利用二叉树的特性，将剩余数组中的最大值（或最小值）排到开头处。然后去掉该值（提取到新数组开头数值）再次排序得到最值排去新数组那边开头，依次重复操作就能得到结果。\n　这里用到的 [二叉树的特性](https://www.jianshu.com/p/106fdd9976a8) 是节点i的左子节点为2i，右子节点为2i+1.\n　结合集合的话-1。集合(n = i-1)（i&gt;0,集合第一个序号为0，故需要-1）,序号(n)的左子节点为序号(2n+1)，右子节点为序号(2n+2)。\n　int child = 2 * parentid + 1;就是这里的特性使用。\n　引用 [链接](https://www.cnblogs.com/0zcl/p/6737944.html) 中这个图比较直观。\n \n ![Result pic 4](/contentimg/2/4.1.png \"堆排序图解\")\n \n 在下面的代码中是这样的：\n \n ![Result pic 5](/contentimg/2/4.2.png \"堆排序实例\")\n\n### 4.2具体代码实现\n\n``` java\n    public class HeapSortMethod : SortBaseClass\n    {\n        //从parentid往下面排到length位\n        private int HeapAdjust(IList<int> sourcelist, int parentid, int length)\n        {\n            int countnum = 0;\n            int temp = sourcelist[parentid];\n            //左子节点\n            int child = 2 * parentid + 1;\n\n            while (child < length)\n            {\n                countnum++;\n                //取 左右 子节点中的较大值\n                if (child + 1 < length && sourcelist[child] < sourcelist[child + 1])\n                    child++;\n                //与父节点比较，大于父节点就得交换，否则继续下个循环\n                if (temp >= sourcelist[child])\n                    break;\n\n                sourcelist[parentid] = sourcelist[child];\n                ConsoleOutProcess(sourcelist, parentid, child);\n                parentid = child;\n                child = 2 * parentid + 1;\n            }\n            //检查是否进行过交换，并将缓存中的值赋回去\n            if (sourcelist[parentid] != temp)\n            {\n                countnum++;\n                sourcelist[parentid] = temp;\n            }\n            ConsoleOutProcess(sourcelist, -1, parentid);\n\n            return countnum;\n        }\n\n        private IList<int> HeapSort(IList<int> sourcelist, int top, out int countnum)\n        {\n            IList<int> topNode = new List<int>();\n            countnum = 0;\n            //第一遍，取出最大值，排到第一个(从倒数第二层左子节点开始排)\n            //i--循环到顶0，排出最大值\n            for (int i = sourcelist.Count / 2 - 1; i >= 0; i--)\n            {\n                countnum += HeapAdjust(sourcelist, i, sourcelist.Count);\n            }\n\n            //主要排序过程(从最上面到最下面)\n            for (int i = sourcelist.Count - 1; i > sourcelist.Count - top; i--)\n            {\n                //将第一个与最后一个交换位置（最大值装入末尾）\n                int temp = sourcelist[0];\n                sourcelist[0] = sourcelist[i];\n                sourcelist[i] = temp;\n                ConsoleOutProcess(sourcelist, 0, i);\n                Console.WriteLine();\n                countnum++;\n                //i，最后一个，是当前最大值\n                //topNode 大根堆\n                topNode.Add(temp);\n\n                //将去掉最后一个值的集合重新排\n                countnum += HeapAdjust(sourcelist, 0, i);\n            }\n            //topNode 大根堆\n            //sourcelist 小根堆\n\n            return sourcelist;\n        }\n\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n\n            return HeapSort(sourcelist, sourcelist.Count, out countnum);\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new HeapSortMethod();\n\n　　执行结果为：\n\n![Result pic 6](/contentimg/2/4.3.png \"堆排序\")\n\n## 五. 归并排序\n\n### 5.1原理\n\n [归并排序](https://baike.baidu.com/item/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/1639015?fr=aladdin) （Merge Sort）算法的原理如下:\n\n　假设序列共有n个元素，将序列每相邻两个数字进行归并操作（merge)，形成floor(n/2)个序列，排序后每个序列包含两个元素。将上述序列再次归并，形成floor(n/4)个序列，每个序列包含四个元素...重复归并，直到所有元素排序完毕。\n　引用 [链接](https://www.cnblogs.com/chengxiao/p/6194356.html) 中这个图比较直观。\n \n ![Result pic 7](/contentimg/2/5.1.png \"归并排序图解\")\n \n\n### 5.2具体代码实现\n\n``` java\n    public class MergeSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n            countnum = 0;\n            DivSort(resultlist, 0, resultlist.Count - 1, ref countnum);\n\n            return resultlist;\n        }\n\n        //对折拆分左右两组\n        private void DivSort(IList<int> sourcelist, int leftid, int rightid, ref int countnum)\n        {\n            if (leftid < rightid)\n            {\n                int midid = (leftid + rightid) / 2;\n                //前1/2\n                DivSort(sourcelist, leftid, midid, ref countnum);\n\n                //后1/2\n                DivSort(sourcelist, midid + 1, rightid, ref countnum);\n\n                //比较排序(拆分到最后要进行的比较和合并)\n                Merge(sourcelist, leftid, midid, rightid, ref countnum);\n            }\n            //左右坐标相等，或者左边大于右边(midid + 1)，相当于拆到最后一个，进入下一步Merge\n        }\n\n        //主要排序操作\n        private void Merge(IList<int> sourcelist, int leftid, int midid, int rightid, ref int countnum)\n        {\n            IList<int> temp = new List<int>();\n\n            int i = leftid;\n            int j = midid + 1;\n            while (i <= midid && j <= rightid)\n            {\n                countnum++;\n                //取最小值存入缓存\n                if (sourcelist[i] <= sourcelist[j])\n                    temp.Add(sourcelist[i++]);\n                else\n                    temp.Add(sourcelist[j++]);\n            }\n            //两种情况只会存在一种：左(/右)边还有值\n            //左边\n            while (j <= rightid)\n            {\n                countnum++;\n                temp.Add(sourcelist[j++]);\n            }\n            //右边\n            while (i <= midid)\n            {\n                countnum++;\n                temp.Add(sourcelist[i++]);\n            }\n\n            foreach (var item in temp)\n            {\n                //leftid~midid~rightid区间为已排序，其他部分未排序\n                if (leftid > rightid) break;\n                sourcelist[leftid++] = item;\n            }\n\n            ConsoleOutProcess(temp, -1, temp.Count);\n            Console.WriteLine();\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new MergeSortMethod();\n\n　　执行结果为：\n\n![Result pic 8](/contentimg/2/5.2.png \"归并排序\")\n\n## 六. 快速排序\n\n### 6.1原理\n\n [快速排序](https://baike.baidu.com/item/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/369842?fromtitle=%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F&amp;fromid=2084344&amp;fr=aladdin) （Quick Sort）算法的原理如下:\n\n　假设要排序的数组是A[0]……A[N-1]，首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面：\n\n1.  设置两个变量i、j，排序开始的时候：i=0，j=N-1；\n1.  以第一个数组元素作为关键数据，赋值给<strong>key</strong>，即<strong>key</strong>=A[0]；\n1.  从j开始向前搜索，即由后开始向前搜索(j--)，找到第一个小于<strong>key</strong>的值A[j]，将A[j]和A[i]互换；\n1.  从i开始向后搜索，即由前开始向后搜索(i++)，找到第一个大于<strong>key</strong>的A[i]，将A[i]和A[j]互换；\n1.  重复第3、4步，直到i=j； (3,4步中，没找到符合条件的值，即3中A[j]不小于<strong>key</strong>,4中A[i]不大于<strong>key</strong>的时候改变j、i的值，使得j=j-1，i=i+1，直至找到为止。找到符合条件的值，进行交换的时候i， j指针位置不变。另外，i==j这一过程一定正好是i+或j-完成的时候，此时令循环结束）。\n\n　引用 [链接](http://blog.51cto.com/ahalei/1365285) 中这个图比较直观。\n \n ![Result pic 9](/contentimg/2/6.1.png \"快速排序图解\")\n \n\n### 6.2具体代码实现\n\n``` java\n    public class QuickSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n            countnum = 0;\n            QuickSort(resultlist, 0, resultlist.Count - 1,ref countnum);\n            return resultlist;\n        }\n\n        private int SortUnit(IList<int> sourcelist, int leftid, int rightid, ref int countnum)\n        {\n            int key = sourcelist[leftid];\n            int tempid = leftid;\n            while (leftid < rightid)\n            {\n                while (sourcelist[rightid] >= key && rightid > leftid)\n                {\n                    countnum++;\n                    --rightid;\n                }\n\n                sourcelist[leftid] = sourcelist[rightid];\n                ConsoleOutProcess(sourcelist, leftid, rightid);\n\n                while (sourcelist[leftid] <= key && rightid > leftid)\n                {\n                    countnum++;\n                    ++leftid;\n                }\n\n                sourcelist[rightid] = sourcelist[leftid];\n                ConsoleOutProcess(sourcelist, rightid,leftid);\n            }\n\n            sourcelist[leftid] = key;\n            ConsoleOutProcess(sourcelist, tempid, leftid);\n            return rightid;\n        }\n\n        private void QuickSort(IList<int> sourcelist, int leftid, int rightid, ref int countnum)\n        {\n            if (leftid >= rightid) return;\n            int indexid = SortUnit(sourcelist, leftid, rightid, ref countnum);\n            QuickSort(sourcelist, leftid, indexid - 1,ref countnum);\n            QuickSort(sourcelist, indexid + 1, rightid, ref countnum);\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new QuickSortMethod();\n\n　　执行结果为：\n\n![Result pic 10](/contentimg/2/6.2.png \"快速排序\")\n\n## 七. 希尔排序\n\n### 7.1原理\n\n [希尔排序](https://baike.baidu.com/item/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F/3229428?fr=aladdin) （Shell's Sort）算法是直接插入排序算法的一种更高效的改进版本：\n\n　假设要排序的数组是A[0]……A[N-1]，首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面：\n\n　先取一个小于n的整数增量（一般取n/2）d1，把数组中下标间隔d1的作为一组进行组内排序；然后取第二个增量d2（d1/2）重复操作，直到增量 = 1。\n\n　引用 [链接](https://www.cnblogs.com/chengxiao/p/6104371.html) 中这个图比较直观。\n \n ![Result pic 11](/contentimg/2/7.1.png \"希尔排序图解\")\n \n\n### 7.2具体代码实现\n\n``` java\n    public class ShellsSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n            countnum = 0;\n\n            int i, j, flag, tmp, gap = sourcelist.Count;\n            while (gap > 1)\n            {\n                gap = gap / 2;\n                do\n                {\n                    flag = 0;\n                    for (i = 0; i < sourcelist.Count - gap; i++)\n                    {\n                        countnum++;\n                        j = i + gap;\n                        if (sourcelist[i] > sourcelist[j])\n                        {\n                            tmp = sourcelist[i];\n                            sourcelist[i] = sourcelist[j];\n                            sourcelist[j] = tmp;\n                            flag = 1;\n                            ConsoleOutProcess(resultlist, j, i);\n                        }\n                    }\n                }\n                //最后间隔为1时需要多次微调排序\n                while (gap == 1 && flag != 0);\n            }\n\n            return resultlist;\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new ShellsSortMethod();\n\n　　执行结果为：\n\n![Result pic 12](/contentimg/2/7.2.png \"希尔排序\")\n\n## 八. 基数排序\n\n### 8.1原理\n\n [基数排序](https://www.cnblogs.com/dwj411024/p/5978821.html) （Radix Sort）算法的原理如下：\n\n　基数排序是一种借助多关键字排序的思想对单逻辑关键字进行排序的方法。它是一种稳定的排序算法。多关键字排序中有两种方法：最高位优先法(MSD)和最低位优先法（LSD）。通常用于对数的排序选择的是最低位优先法，即先对最次位关键字进行排序，再对高一位的关键字进行排序，以此类推。\n\n　引用 [链接](https://www.cnblogs.com/dwj411024/p/5978821.html) 中这个图比较直观。\n \n ![Result pic 11](/contentimg/2/8.1.png \"基数排序图解\")\n \n### 8.2具体代码实现\n\n``` java\n    public class RadixSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            countnum = 0;\n            int max = sourcelist[0];\n            //找到最大的数字\n            foreach (var item in sourcelist)\n            {\n                if (item > max) max = item;\n            }\n            //分析出有多少位数\n            int digit = 1;\n            while (max / 10 != 0)\n            {\n                digit++;\n                max /= 10;\n            }\n           \n            for (int i = 0; i < digit; i++)\n            {\n                int[] indexCounter = new int[10];\n                IList<int> tempList = new List<int>();\n                foreach (var item in sourcelist)\n                {\n                    tempList.Add(0);\n                }\n                //排桶\n                for(int j =0; j< sourcelist.Count; j++)\n                {\n                    int number = (sourcelist[j] % Convert.ToInt32(Math.Pow(10, i + 1))) / Convert.ToInt32(Math.Pow(10, i));  //得出i+1位上的数\n                    indexCounter[number]++;\n                }\n                int[] indexBegin = new int[10];\n                //统计数量分布,例如3，前面有多少个数，就+1放在第几位\n                for(int k = 1; k < 10; k++)\n                {\n                    indexBegin[k] = indexBegin[k - 1] + indexCounter[k - 1];\n                }\n\n                for (int k = 0; k < sourcelist.Count; k++)\n                {\n                    int number = (sourcelist[k] % Convert.ToInt32(Math.Pow(10, i + 1))) / Convert.ToInt32(Math.Pow(10, i));\n                    //indexBegin[number]++ 指出该数字该排的序号\n                    tempList[indexBegin[number]++] = sourcelist[k];\n                }\n                sourcelist = tempList;\n            }\n\n            return sourcelist;\n        }\n\n\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new RadixSortMethod();\n\n　　执行结果为：\n\n![Result pic 12](/contentimg/2/8.2.png \"基数排序\")\n\n　　该算法以空间换时间，不用进行数学上的比较就能进行排序。与前面几种算法有一定的区别。\n\n 本文测试程序工程可以从git直接获取：\n \n git代码库: [Codes](https://github.com/YaojiaxinPC/hexoblog/tree/master/SortDemo)","source":"_posts/2SortMethon.md","raw":"---\ntitle: 入门级的8种算法记录\ndate: 2018-10-14 22:55:58\ncategories:\n  - 算法\ntags:\n  - C#\n  - 数据结构\n  - 算法\n---\n\t\n　　本文记录算法中入门级别的8种简单排序算法。\n 1.  冒泡排序　　2.  选择排序　　3.  插入排序　　4.  堆排序\n　　5.  归并排序　　6.  快速排序　　7.  希尔排序　　8.  基数排序\n<!-- more -->\n## 基础代码实现：\n\n### 1.抽象公共接口部分\n\n``` java\n    interface ISortMethod\n    {\n        IList<int> GetResult(IList<int> sourcelist,out int countnum);\n    }\n```\n\n#### 2.建立公共基类进行数据有效性校验和控制台输出的颜色标记\n\n``` java\n    public class SortBaseClass : ISortMethod\n    {\n        public IList<int> GetResult(IList<int> sourcelist, out int countnum)\n        {\n            return CheckEffect(sourcelist,out countnum);\n        }\n\n        /// <summary>\n        /// 进行数据的有效性判断\n        /// </summary>\n        /// <param name=\"sourcelist\"></param>\n        /// <returns></returns>\n        private IList<int> CheckEffect(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = null;\n            countnum = 0;\n            if (sourcelist != null)\n            {\n                if (sourcelist.Count > 0)\n                {\n                    resultlist = Sort(sourcelist,out countnum);\n                }\n                else\n                {\n                    resultlist = sourcelist;\n                }\n            }\n\n            return resultlist;\n        }\n\n        /// <summary>\n        /// 由具体的算法部分进行重写\n        /// </summary>\n        /// <param name=\"sourcelist\"></param>\n        /// <returns></returns>\n        protected virtual IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            countnum = 0;\n            return sourcelist;\n        }\n\n        /// <summary>\n        /// 控制台过程输出\n        /// </summary>\n        /// <param name=\"sourcelist\"></param>\n        /// <param name=\"n\">交换的前面一个数的序号</param>\n        /// <param name=\"m\">交换的后面一个数的序号</param>\n        protected void ConsoleOutProcess(IList<int> sourcelist,int n,int m)\n        {\n            for (int i = 0; i < sourcelist.Count; i++)\n            {\n                if (i < sourcelist.Count - 1)\n                {\n                    if (i == n || i == m)\n                    {\n                        Console.ForegroundColor = ConsoleColor.Green;\n                    }\n                    else\n                        Console.ForegroundColor = ConsoleColor.White;\n\n                    Console.Write(sourcelist[i]);\n\n                    if (i != n)\n                    {\n                        Console.ForegroundColor = ConsoleColor.White;\n                        Console.Write(\"-->\");\n                    }\n                    else\n                    {\n                        Console.Write(\"<--\");\n                    }    \n                }\n            }\n\n            Console.ForegroundColor = ConsoleColor.White;\n            if (sourcelist.Count - 1 == n || sourcelist.Count - 1 == m)\n            {\n                Console.ForegroundColor = ConsoleColor.Green;\n            }\n            Console.Write(sourcelist[sourcelist.Count - 1]);\n            Console.ForegroundColor = ConsoleColor.White;\n            Console.WriteLine();\n        }\n    }\n```\n\n#### 3.main函数具体打印代码\n\n``` java\n    static void Main(string[] args)\n    {\n        List<int> numlst = new List<int>() { 23, 44, 66, 66, 76, 98, 11, 3, 9, 7 };\n        ISortMethod sort = new BubbleSortMethod();\n\n        Console.WriteLine(\"原数列为：\");\n        StringBuilder str = new StringBuilder();\n        for (int i = 0; i < numlst.Count; i++)\n        {\n            str.Append(numlst[i] + \"   \");\n        }\n        Console.WriteLine(str.Remove(str.Length - 3, 3).ToString());\n\n        Console.WriteLine(System.Environment.NewLine);\n        int countnum = 0;\n        List<int> result = sort.GetResult(numlst,out countnum) as List<int>;\n\n        Console.WriteLine(System.Environment.NewLine);\n        Console.WriteLine(\"经过了{0}次数据对比 \", countnum);\n        Console.WriteLine(\"排序后为：\");\n        str.Clear();\n        for (int i = 0; i < result.Count; i++)\n        {\n            str.Append(result[i] + \"-->\");\n        }\n        Console.WriteLine(str.Remove(str.Length - 3, 3).ToString());\n            \n        Console.ReadKey();\n    }\n```\n\n#### 4.具体算法实现部分\n\n具体实现算法，同时添加过程打印以便分析。\n\n## 一. 冒泡排序\n\n### 1.1原理\n\n [冒泡排序](https://baike.baidu.com/item/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/4602306?fr=aladdin) （Bubble Sort）算法的原理如下:\n\n1.  比较相邻的元素。如果第一个比第二个大，就交换他们两个。\n1.  对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。\n1.  针对所有的元素重复以上的步骤，除了最后一个。\n1.  持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。\n\n### 1.2具体代码实现\n\n``` java\n    public class BubbleSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n            countnum = 0;\n            int temp = int.MinValue;\n            for (int i = 0; i < sourcelist.Count - 1; i++)\n            {\n\t\t\t    //最后一个数最大，所以后面的数不必再次比较 -i\n                for (int j = 0; j < sourcelist.Count - 1 - i; j++)\n                {\n                    if (resultlist[j] > resultlist[j + 1])\n                    {\n                        temp = resultlist[j + 1];\n                        resultlist[j + 1] = resultlist[j];\n                        resultlist[j] = temp;\n\n                        ConsoleOutProcess(resultlist, j, j + 1);\n                    }\n                    countnum++;\n                }\n            }\n\n            return resultlist;\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new BubbleSortMethod();\n\n　　执行结果为：\n\n![Result pic 1](/contentimg/2/1.png \"冒泡排序\")\n\n## 二.选择排序\n\n### 2.1原理\n\n [选择排序](https://baike.baidu.com/item/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/9762418?fr=aladdin) （Selection sort）算法的原理如下：\n\n　每一次从待排序的[数据元素](https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%85%83%E7%B4%A0) 中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完。\n \n### 2.2具体代码实现\n\n``` java\n    public class SelectionSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n\n            int temp, pos = 0;\n            countnum = 0;\n            for (int i = 0; i < sourcelist.Count - 1; i++)\n            {\n                pos = i;\n                for (int j = i + 1; j < sourcelist.Count; j++)\n                {\n                    if (resultlist[j] < resultlist[pos])\n                    {\n                        pos = j;\n                    }\n                    countnum++;\n                }\n                if (pos == i) continue;\n                temp = resultlist[i];\n                resultlist[i] = resultlist[pos];\n                resultlist[pos] = temp;\n                ConsoleOutProcess(resultlist, i, pos);\n            }\n\n            return resultlist;\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new SelectionSortMethod();\n\n　　执行结果为：\n\n![Result pic 2](/contentimg/2/2.png \"选择排序\")\n\n## 三. 插入排序\n\n### 3.1原理\n\n [插入排序](https://www.douban.com/note/396407547/) （Insert Sort）算法的原理如下:\n\n　插入即表示将一个新的数据插入到一个有序数组中，并继续保持有序。例如有一个长度为N的无序数组，进行N-1次的插入即能完成排序。\n　第一次，数组第1个数认为是有序的数组，将数组第二个元素插入仅有1个有序的数组中；\n　第二次，数组前两个元素组成有序的数组，将数组第三个元素插入由两个元素构成的有序数组中.....\n　第N-1次，数组前N-1个元素组成有序的数组，将数组的第N个元素插入由N-1个元素构成的有序数组中，则完成了整个插入排序。\n　....\n　按序比较直到集合排序完毕。\n\n### 3.2具体代码实现\n\n``` java\n    public class NormalInsertSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n            countnum = 0;\n            int key = int.MinValue;\n            int i, j = 0;\n            for (j = 1; j < sourcelist.Count; j++)\n            {\n                key = resultlist[j];\n                i = j - 1;\n\t\t\t\t\n\t\t\t\t//将数组往后面退1位\n                while (i >= 0 && resultlist[i] > key)\n                {\n                    countnum++;\n                    resultlist[i + 1] = resultlist[i];\n                    i -= 1;\n                }\n\t\t\t\t//过滤两个相同大小的数的左右交换\n                if (resultlist[i + 1] == key) continue;\n\n\t\t\t\t//插入有序的位置（后面的都比这个数大）\n                resultlist[i + 1] = key;\n                ConsoleOutProcess(resultlist, -1, i + 1);\n            }\n\n            return resultlist;\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new NormalInsertSortMethod();\n\n　　执行结果为：\n\n![Result pic 3](/contentimg/2/3.png \"插入排序\")\n\n## 四. 堆排序\n\n### 4.1原理\n\n [堆排序](https://www.cnblogs.com/0zcl/p/6737944.html) （Heap Sort）算法的原理如下:\n\n　利用二叉树的特性，将剩余数组中的最大值（或最小值）排到开头处。然后去掉该值（提取到新数组开头数值）再次排序得到最值排去新数组那边开头，依次重复操作就能得到结果。\n　这里用到的 [二叉树的特性](https://www.jianshu.com/p/106fdd9976a8) 是节点i的左子节点为2i，右子节点为2i+1.\n　结合集合的话-1。集合(n = i-1)（i&gt;0,集合第一个序号为0，故需要-1）,序号(n)的左子节点为序号(2n+1)，右子节点为序号(2n+2)。\n　int child = 2 * parentid + 1;就是这里的特性使用。\n　引用 [链接](https://www.cnblogs.com/0zcl/p/6737944.html) 中这个图比较直观。\n \n ![Result pic 4](/contentimg/2/4.1.png \"堆排序图解\")\n \n 在下面的代码中是这样的：\n \n ![Result pic 5](/contentimg/2/4.2.png \"堆排序实例\")\n\n### 4.2具体代码实现\n\n``` java\n    public class HeapSortMethod : SortBaseClass\n    {\n        //从parentid往下面排到length位\n        private int HeapAdjust(IList<int> sourcelist, int parentid, int length)\n        {\n            int countnum = 0;\n            int temp = sourcelist[parentid];\n            //左子节点\n            int child = 2 * parentid + 1;\n\n            while (child < length)\n            {\n                countnum++;\n                //取 左右 子节点中的较大值\n                if (child + 1 < length && sourcelist[child] < sourcelist[child + 1])\n                    child++;\n                //与父节点比较，大于父节点就得交换，否则继续下个循环\n                if (temp >= sourcelist[child])\n                    break;\n\n                sourcelist[parentid] = sourcelist[child];\n                ConsoleOutProcess(sourcelist, parentid, child);\n                parentid = child;\n                child = 2 * parentid + 1;\n            }\n            //检查是否进行过交换，并将缓存中的值赋回去\n            if (sourcelist[parentid] != temp)\n            {\n                countnum++;\n                sourcelist[parentid] = temp;\n            }\n            ConsoleOutProcess(sourcelist, -1, parentid);\n\n            return countnum;\n        }\n\n        private IList<int> HeapSort(IList<int> sourcelist, int top, out int countnum)\n        {\n            IList<int> topNode = new List<int>();\n            countnum = 0;\n            //第一遍，取出最大值，排到第一个(从倒数第二层左子节点开始排)\n            //i--循环到顶0，排出最大值\n            for (int i = sourcelist.Count / 2 - 1; i >= 0; i--)\n            {\n                countnum += HeapAdjust(sourcelist, i, sourcelist.Count);\n            }\n\n            //主要排序过程(从最上面到最下面)\n            for (int i = sourcelist.Count - 1; i > sourcelist.Count - top; i--)\n            {\n                //将第一个与最后一个交换位置（最大值装入末尾）\n                int temp = sourcelist[0];\n                sourcelist[0] = sourcelist[i];\n                sourcelist[i] = temp;\n                ConsoleOutProcess(sourcelist, 0, i);\n                Console.WriteLine();\n                countnum++;\n                //i，最后一个，是当前最大值\n                //topNode 大根堆\n                topNode.Add(temp);\n\n                //将去掉最后一个值的集合重新排\n                countnum += HeapAdjust(sourcelist, 0, i);\n            }\n            //topNode 大根堆\n            //sourcelist 小根堆\n\n            return sourcelist;\n        }\n\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n\n            return HeapSort(sourcelist, sourcelist.Count, out countnum);\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new HeapSortMethod();\n\n　　执行结果为：\n\n![Result pic 6](/contentimg/2/4.3.png \"堆排序\")\n\n## 五. 归并排序\n\n### 5.1原理\n\n [归并排序](https://baike.baidu.com/item/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/1639015?fr=aladdin) （Merge Sort）算法的原理如下:\n\n　假设序列共有n个元素，将序列每相邻两个数字进行归并操作（merge)，形成floor(n/2)个序列，排序后每个序列包含两个元素。将上述序列再次归并，形成floor(n/4)个序列，每个序列包含四个元素...重复归并，直到所有元素排序完毕。\n　引用 [链接](https://www.cnblogs.com/chengxiao/p/6194356.html) 中这个图比较直观。\n \n ![Result pic 7](/contentimg/2/5.1.png \"归并排序图解\")\n \n\n### 5.2具体代码实现\n\n``` java\n    public class MergeSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n            countnum = 0;\n            DivSort(resultlist, 0, resultlist.Count - 1, ref countnum);\n\n            return resultlist;\n        }\n\n        //对折拆分左右两组\n        private void DivSort(IList<int> sourcelist, int leftid, int rightid, ref int countnum)\n        {\n            if (leftid < rightid)\n            {\n                int midid = (leftid + rightid) / 2;\n                //前1/2\n                DivSort(sourcelist, leftid, midid, ref countnum);\n\n                //后1/2\n                DivSort(sourcelist, midid + 1, rightid, ref countnum);\n\n                //比较排序(拆分到最后要进行的比较和合并)\n                Merge(sourcelist, leftid, midid, rightid, ref countnum);\n            }\n            //左右坐标相等，或者左边大于右边(midid + 1)，相当于拆到最后一个，进入下一步Merge\n        }\n\n        //主要排序操作\n        private void Merge(IList<int> sourcelist, int leftid, int midid, int rightid, ref int countnum)\n        {\n            IList<int> temp = new List<int>();\n\n            int i = leftid;\n            int j = midid + 1;\n            while (i <= midid && j <= rightid)\n            {\n                countnum++;\n                //取最小值存入缓存\n                if (sourcelist[i] <= sourcelist[j])\n                    temp.Add(sourcelist[i++]);\n                else\n                    temp.Add(sourcelist[j++]);\n            }\n            //两种情况只会存在一种：左(/右)边还有值\n            //左边\n            while (j <= rightid)\n            {\n                countnum++;\n                temp.Add(sourcelist[j++]);\n            }\n            //右边\n            while (i <= midid)\n            {\n                countnum++;\n                temp.Add(sourcelist[i++]);\n            }\n\n            foreach (var item in temp)\n            {\n                //leftid~midid~rightid区间为已排序，其他部分未排序\n                if (leftid > rightid) break;\n                sourcelist[leftid++] = item;\n            }\n\n            ConsoleOutProcess(temp, -1, temp.Count);\n            Console.WriteLine();\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new MergeSortMethod();\n\n　　执行结果为：\n\n![Result pic 8](/contentimg/2/5.2.png \"归并排序\")\n\n## 六. 快速排序\n\n### 6.1原理\n\n [快速排序](https://baike.baidu.com/item/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/369842?fromtitle=%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F&amp;fromid=2084344&amp;fr=aladdin) （Quick Sort）算法的原理如下:\n\n　假设要排序的数组是A[0]……A[N-1]，首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面：\n\n1.  设置两个变量i、j，排序开始的时候：i=0，j=N-1；\n1.  以第一个数组元素作为关键数据，赋值给<strong>key</strong>，即<strong>key</strong>=A[0]；\n1.  从j开始向前搜索，即由后开始向前搜索(j--)，找到第一个小于<strong>key</strong>的值A[j]，将A[j]和A[i]互换；\n1.  从i开始向后搜索，即由前开始向后搜索(i++)，找到第一个大于<strong>key</strong>的A[i]，将A[i]和A[j]互换；\n1.  重复第3、4步，直到i=j； (3,4步中，没找到符合条件的值，即3中A[j]不小于<strong>key</strong>,4中A[i]不大于<strong>key</strong>的时候改变j、i的值，使得j=j-1，i=i+1，直至找到为止。找到符合条件的值，进行交换的时候i， j指针位置不变。另外，i==j这一过程一定正好是i+或j-完成的时候，此时令循环结束）。\n\n　引用 [链接](http://blog.51cto.com/ahalei/1365285) 中这个图比较直观。\n \n ![Result pic 9](/contentimg/2/6.1.png \"快速排序图解\")\n \n\n### 6.2具体代码实现\n\n``` java\n    public class QuickSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n            countnum = 0;\n            QuickSort(resultlist, 0, resultlist.Count - 1,ref countnum);\n            return resultlist;\n        }\n\n        private int SortUnit(IList<int> sourcelist, int leftid, int rightid, ref int countnum)\n        {\n            int key = sourcelist[leftid];\n            int tempid = leftid;\n            while (leftid < rightid)\n            {\n                while (sourcelist[rightid] >= key && rightid > leftid)\n                {\n                    countnum++;\n                    --rightid;\n                }\n\n                sourcelist[leftid] = sourcelist[rightid];\n                ConsoleOutProcess(sourcelist, leftid, rightid);\n\n                while (sourcelist[leftid] <= key && rightid > leftid)\n                {\n                    countnum++;\n                    ++leftid;\n                }\n\n                sourcelist[rightid] = sourcelist[leftid];\n                ConsoleOutProcess(sourcelist, rightid,leftid);\n            }\n\n            sourcelist[leftid] = key;\n            ConsoleOutProcess(sourcelist, tempid, leftid);\n            return rightid;\n        }\n\n        private void QuickSort(IList<int> sourcelist, int leftid, int rightid, ref int countnum)\n        {\n            if (leftid >= rightid) return;\n            int indexid = SortUnit(sourcelist, leftid, rightid, ref countnum);\n            QuickSort(sourcelist, leftid, indexid - 1,ref countnum);\n            QuickSort(sourcelist, indexid + 1, rightid, ref countnum);\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new QuickSortMethod();\n\n　　执行结果为：\n\n![Result pic 10](/contentimg/2/6.2.png \"快速排序\")\n\n## 七. 希尔排序\n\n### 7.1原理\n\n [希尔排序](https://baike.baidu.com/item/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F/3229428?fr=aladdin) （Shell's Sort）算法是直接插入排序算法的一种更高效的改进版本：\n\n　假设要排序的数组是A[0]……A[N-1]，首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面：\n\n　先取一个小于n的整数增量（一般取n/2）d1，把数组中下标间隔d1的作为一组进行组内排序；然后取第二个增量d2（d1/2）重复操作，直到增量 = 1。\n\n　引用 [链接](https://www.cnblogs.com/chengxiao/p/6104371.html) 中这个图比较直观。\n \n ![Result pic 11](/contentimg/2/7.1.png \"希尔排序图解\")\n \n\n### 7.2具体代码实现\n\n``` java\n    public class ShellsSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            IList<int> resultlist = sourcelist;\n            countnum = 0;\n\n            int i, j, flag, tmp, gap = sourcelist.Count;\n            while (gap > 1)\n            {\n                gap = gap / 2;\n                do\n                {\n                    flag = 0;\n                    for (i = 0; i < sourcelist.Count - gap; i++)\n                    {\n                        countnum++;\n                        j = i + gap;\n                        if (sourcelist[i] > sourcelist[j])\n                        {\n                            tmp = sourcelist[i];\n                            sourcelist[i] = sourcelist[j];\n                            sourcelist[j] = tmp;\n                            flag = 1;\n                            ConsoleOutProcess(resultlist, j, i);\n                        }\n                    }\n                }\n                //最后间隔为1时需要多次微调排序\n                while (gap == 1 && flag != 0);\n            }\n\n            return resultlist;\n        }\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new ShellsSortMethod();\n\n　　执行结果为：\n\n![Result pic 12](/contentimg/2/7.2.png \"希尔排序\")\n\n## 八. 基数排序\n\n### 8.1原理\n\n [基数排序](https://www.cnblogs.com/dwj411024/p/5978821.html) （Radix Sort）算法的原理如下：\n\n　基数排序是一种借助多关键字排序的思想对单逻辑关键字进行排序的方法。它是一种稳定的排序算法。多关键字排序中有两种方法：最高位优先法(MSD)和最低位优先法（LSD）。通常用于对数的排序选择的是最低位优先法，即先对最次位关键字进行排序，再对高一位的关键字进行排序，以此类推。\n\n　引用 [链接](https://www.cnblogs.com/dwj411024/p/5978821.html) 中这个图比较直观。\n \n ![Result pic 11](/contentimg/2/8.1.png \"基数排序图解\")\n \n### 8.2具体代码实现\n\n``` java\n    public class RadixSortMethod : SortBaseClass\n    {\n        protected override IList<int> Sort(IList<int> sourcelist, out int countnum)\n        {\n            countnum = 0;\n            int max = sourcelist[0];\n            //找到最大的数字\n            foreach (var item in sourcelist)\n            {\n                if (item > max) max = item;\n            }\n            //分析出有多少位数\n            int digit = 1;\n            while (max / 10 != 0)\n            {\n                digit++;\n                max /= 10;\n            }\n           \n            for (int i = 0; i < digit; i++)\n            {\n                int[] indexCounter = new int[10];\n                IList<int> tempList = new List<int>();\n                foreach (var item in sourcelist)\n                {\n                    tempList.Add(0);\n                }\n                //排桶\n                for(int j =0; j< sourcelist.Count; j++)\n                {\n                    int number = (sourcelist[j] % Convert.ToInt32(Math.Pow(10, i + 1))) / Convert.ToInt32(Math.Pow(10, i));  //得出i+1位上的数\n                    indexCounter[number]++;\n                }\n                int[] indexBegin = new int[10];\n                //统计数量分布,例如3，前面有多少个数，就+1放在第几位\n                for(int k = 1; k < 10; k++)\n                {\n                    indexBegin[k] = indexBegin[k - 1] + indexCounter[k - 1];\n                }\n\n                for (int k = 0; k < sourcelist.Count; k++)\n                {\n                    int number = (sourcelist[k] % Convert.ToInt32(Math.Pow(10, i + 1))) / Convert.ToInt32(Math.Pow(10, i));\n                    //indexBegin[number]++ 指出该数字该排的序号\n                    tempList[indexBegin[number]++] = sourcelist[k];\n                }\n                sourcelist = tempList;\n            }\n\n            return sourcelist;\n        }\n\n\n    }\n```\n\n　　同时修改main函数的算法为具体的： ISortMethod sort = new RadixSortMethod();\n\n　　执行结果为：\n\n![Result pic 12](/contentimg/2/8.2.png \"基数排序\")\n\n　　该算法以空间换时间，不用进行数学上的比较就能进行排序。与前面几种算法有一定的区别。\n\n 本文测试程序工程可以从git直接获取：\n \n git代码库: [Codes](https://github.com/YaojiaxinPC/hexoblog/tree/master/SortDemo)","slug":"2SortMethon","published":1,"updated":"2018-10-18T02:47:46.207Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgsbi0069jo9cjkz3fzi8","content":"<p>　　本文记录算法中入门级别的8种简单排序算法。</p>\n<ol>\n<li>冒泡排序　　2.  选择排序　　3.  插入排序　　4.  堆排序<br>　　5.  归并排序　　6.  快速排序　　7.  希尔排序　　8.  基数排序<a id=\"more\"></a>\n<h2 id=\"基础代码实现：\"><a href=\"#基础代码实现：\" class=\"headerlink\" title=\"基础代码实现：\"></a>基础代码实现：</h2></li>\n</ol>\n<h3 id=\"1-抽象公共接口部分\"><a href=\"#1-抽象公共接口部分\" class=\"headerlink\" title=\"1.抽象公共接口部分\"></a>1.抽象公共接口部分</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ISortMethod</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">GetResult</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist,out <span class=\"keyword\">int</span> countnum)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-建立公共基类进行数据有效性校验和控制台输出的颜色标记\"><a href=\"#2-建立公共基类进行数据有效性校验和控制台输出的颜色标记\" class=\"headerlink\" title=\"2.建立公共基类进行数据有效性校验和控制台输出的颜色标记\"></a>2.建立公共基类进行数据有效性校验和控制台输出的颜色标记</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SortBaseClass : ISortMethod</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">GetResult</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> CheckEffect(sourcelist,out countnum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 进行数据的有效性判断</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"sourcelist\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">CheckEffect</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sourcelist != <span class=\"keyword\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (sourcelist.Count &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                resultlist = Sort(sourcelist,out countnum);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                resultlist = sourcelist;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 由具体的算法部分进行重写</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"sourcelist\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> virtual IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sourcelist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 控制台过程输出</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"sourcelist\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"n\"&gt;交换的前面一个数的序号&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"m\"&gt;交换的后面一个数的序号&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">ConsoleOutProcess</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> m)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sourcelist.Count; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; sourcelist.Count - <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i == n || i == m)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Console.ForegroundColor = ConsoleColor.Green;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    Console.ForegroundColor = ConsoleColor.White;</span><br><span class=\"line\"></span><br><span class=\"line\">                Console.Write(sourcelist[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i != n)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Console.ForegroundColor = ConsoleColor.White;</span><br><span class=\"line\">                    Console.Write(<span class=\"string\">\"--&gt;\"</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Console.Write(<span class=\"string\">\"&lt;--\"</span>);</span><br><span class=\"line\">                &#125;    </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Console.ForegroundColor = ConsoleColor.White;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sourcelist.Count - <span class=\"number\">1</span> == n || sourcelist.Count - <span class=\"number\">1</span> == m)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Console.ForegroundColor = ConsoleColor.Green;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Console.Write(sourcelist[sourcelist.Count - <span class=\"number\">1</span>]);</span><br><span class=\"line\">        Console.ForegroundColor = ConsoleColor.White;</span><br><span class=\"line\">        Console.WriteLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-main函数具体打印代码\"><a href=\"#3-main函数具体打印代码\" class=\"headerlink\" title=\"3.main函数具体打印代码\"></a>3.main函数具体打印代码</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(string[] args)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">int</span>&gt; numlst = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;() &#123; <span class=\"number\">23</span>, <span class=\"number\">44</span>, <span class=\"number\">66</span>, <span class=\"number\">66</span>, <span class=\"number\">76</span>, <span class=\"number\">98</span>, <span class=\"number\">11</span>, <span class=\"number\">3</span>, <span class=\"number\">9</span>, <span class=\"number\">7</span> &#125;;</span><br><span class=\"line\">    ISortMethod sort = <span class=\"keyword\">new</span> BubbleSortMethod();</span><br><span class=\"line\"></span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">\"原数列为：\"</span>);</span><br><span class=\"line\">    StringBuilder str = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; numlst.Count; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        str.Append(numlst[i] + <span class=\"string\">\"   \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Console.WriteLine(str.Remove(str.Length - <span class=\"number\">3</span>, <span class=\"number\">3</span>).ToString());</span><br><span class=\"line\"></span><br><span class=\"line\">    Console.WriteLine(System.Environment.NewLine);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">int</span>&gt; result = sort.GetResult(numlst,out countnum) as List&lt;<span class=\"keyword\">int</span>&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\">    Console.WriteLine(System.Environment.NewLine);</span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">\"经过了&#123;0&#125;次数据对比 \"</span>, countnum);</span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">\"排序后为：\"</span>);</span><br><span class=\"line\">    str.Clear();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; result.Count; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        str.Append(result[i] + <span class=\"string\">\"--&gt;\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Console.WriteLine(str.Remove(str.Length - <span class=\"number\">3</span>, <span class=\"number\">3</span>).ToString());</span><br><span class=\"line\">        </span><br><span class=\"line\">    Console.ReadKey();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-具体算法实现部分\"><a href=\"#4-具体算法实现部分\" class=\"headerlink\" title=\"4.具体算法实现部分\"></a>4.具体算法实现部分</h4><p>具体实现算法，同时添加过程打印以便分析。</p>\n<h2 id=\"一-冒泡排序\"><a href=\"#一-冒泡排序\" class=\"headerlink\" title=\"一. 冒泡排序\"></a>一. 冒泡排序</h2><h3 id=\"1-1原理\"><a href=\"#1-1原理\" class=\"headerlink\" title=\"1.1原理\"></a>1.1原理</h3><p> <a href=\"https://baike.baidu.com/item/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/4602306?fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">冒泡排序</a> （Bubble Sort）算法的原理如下:</p>\n<ol>\n<li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li>\n<li>对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</li>\n<li>针对所有的元素重复以上的步骤，除了最后一个。</li>\n<li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li>\n</ol>\n<h3 id=\"1-2具体代码实现\"><a href=\"#1-2具体代码实现\" class=\"headerlink\" title=\"1.2具体代码实现\"></a>1.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class BubbleSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp = <span class=\"keyword\">int</span>.MinValue;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sourcelist.Count - <span class=\"number\">1</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">   <span class=\"comment\">//最后一个数最大，所以后面的数不必再次比较 -i</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; sourcelist.Count - <span class=\"number\">1</span> - i; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (resultlist[j] &gt; resultlist[j + <span class=\"number\">1</span>])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    temp = resultlist[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                    resultlist[j + <span class=\"number\">1</span>] = resultlist[j];</span><br><span class=\"line\">                    resultlist[j] = temp;</span><br><span class=\"line\"></span><br><span class=\"line\">                    ConsoleOutProcess(resultlist, j, j + <span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                countnum++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new BubbleSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/1.png\" alt=\"Result pic 1\" title=\"冒泡排序\"></p>\n<h2 id=\"二-选择排序\"><a href=\"#二-选择排序\" class=\"headerlink\" title=\"二.选择排序\"></a>二.选择排序</h2><h3 id=\"2-1原理\"><a href=\"#2-1原理\" class=\"headerlink\" title=\"2.1原理\"></a>2.1原理</h3><p> <a href=\"https://baike.baidu.com/item/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/9762418?fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">选择排序</a> （Selection sort）算法的原理如下：</p>\n<p>　每一次从待排序的<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%85%83%E7%B4%A0\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">数据元素</a> 中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完。</p>\n<h3 id=\"2-2具体代码实现\"><a href=\"#2-2具体代码实现\" class=\"headerlink\" title=\"2.2具体代码实现\"></a>2.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SelectionSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp, pos = <span class=\"number\">0</span>;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sourcelist.Count - <span class=\"number\">1</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            pos = i;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; sourcelist.Count; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (resultlist[j] &lt; resultlist[pos])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    pos = j;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                countnum++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (pos == i) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            temp = resultlist[i];</span><br><span class=\"line\">            resultlist[i] = resultlist[pos];</span><br><span class=\"line\">            resultlist[pos] = temp;</span><br><span class=\"line\">            ConsoleOutProcess(resultlist, i, pos);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new SelectionSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/2.png\" alt=\"Result pic 2\" title=\"选择排序\"></p>\n<h2 id=\"三-插入排序\"><a href=\"#三-插入排序\" class=\"headerlink\" title=\"三. 插入排序\"></a>三. 插入排序</h2><h3 id=\"3-1原理\"><a href=\"#3-1原理\" class=\"headerlink\" title=\"3.1原理\"></a>3.1原理</h3><p> <a href=\"https://www.douban.com/note/396407547/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">插入排序</a> （Insert Sort）算法的原理如下:</p>\n<p>　插入即表示将一个新的数据插入到一个有序数组中，并继续保持有序。例如有一个长度为N的无序数组，进行N-1次的插入即能完成排序。<br>　第一次，数组第1个数认为是有序的数组，将数组第二个元素插入仅有1个有序的数组中；<br>　第二次，数组前两个元素组成有序的数组，将数组第三个元素插入由两个元素构成的有序数组中…..<br>　第N-1次，数组前N-1个元素组成有序的数组，将数组的第N个元素插入由N-1个元素构成的有序数组中，则完成了整个插入排序。<br>　….<br>　按序比较直到集合排序完毕。</p>\n<h3 id=\"3-2具体代码实现\"><a href=\"#3-2具体代码实现\" class=\"headerlink\" title=\"3.2具体代码实现\"></a>3.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class NormalInsertSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> key = <span class=\"keyword\">int</span>.MinValue;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i, j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">1</span>; j &lt; sourcelist.Count; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            key = resultlist[j];</span><br><span class=\"line\">            i = j - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//将数组往后面退1位</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (i &gt;= <span class=\"number\">0</span> &amp;&amp; resultlist[i] &gt; key)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                countnum++;</span><br><span class=\"line\">                resultlist[i + <span class=\"number\">1</span>] = resultlist[i];</span><br><span class=\"line\">                i -= <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"><span class=\"comment\">//过滤两个相同大小的数的左右交换</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (resultlist[i + <span class=\"number\">1</span>] == key) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入有序的位置（后面的都比这个数大）</span></span><br><span class=\"line\">            resultlist[i + <span class=\"number\">1</span>] = key;</span><br><span class=\"line\">            ConsoleOutProcess(resultlist, -<span class=\"number\">1</span>, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new NormalInsertSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/3.png\" alt=\"Result pic 3\" title=\"插入排序\"></p>\n<h2 id=\"四-堆排序\"><a href=\"#四-堆排序\" class=\"headerlink\" title=\"四. 堆排序\"></a>四. 堆排序</h2><h3 id=\"4-1原理\"><a href=\"#4-1原理\" class=\"headerlink\" title=\"4.1原理\"></a>4.1原理</h3><p> <a href=\"https://www.cnblogs.com/0zcl/p/6737944.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">堆排序</a> （Heap Sort）算法的原理如下:</p>\n<p>　利用二叉树的特性，将剩余数组中的最大值（或最小值）排到开头处。然后去掉该值（提取到新数组开头数值）再次排序得到最值排去新数组那边开头，依次重复操作就能得到结果。<br>　这里用到的 <a href=\"https://www.jianshu.com/p/106fdd9976a8\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">二叉树的特性</a> 是节点i的左子节点为2i，右子节点为2i+1.<br>　结合集合的话-1。集合(n = i-1)（i&gt;0,集合第一个序号为0，故需要-1）,序号(n)的左子节点为序号(2n+1)，右子节点为序号(2n+2)。<br>　int child = 2 * parentid + 1;就是这里的特性使用。<br>　引用 <a href=\"https://www.cnblogs.com/0zcl/p/6737944.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a> 中这个图比较直观。</p>\n<p> <img src=\"/contentimg/2/4.1.png\" alt=\"Result pic 4\" title=\"堆排序图解\"></p>\n<p> 在下面的代码中是这样的：</p>\n<p> <img src=\"/contentimg/2/4.2.png\" alt=\"Result pic 5\" title=\"堆排序实例\"></p>\n<h3 id=\"4-2具体代码实现\"><a href=\"#4-2具体代码实现\" class=\"headerlink\" title=\"4.2具体代码实现\"></a>4.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class HeapSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//从parentid往下面排到length位</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">HeapAdjust</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, <span class=\"keyword\">int</span> parentid, <span class=\"keyword\">int</span> length)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp = sourcelist[parentid];</span><br><span class=\"line\">        <span class=\"comment\">//左子节点</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> child = <span class=\"number\">2</span> * parentid + <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (child &lt; length)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            countnum++;</span><br><span class=\"line\">            <span class=\"comment\">//取 左右 子节点中的较大值</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (child + <span class=\"number\">1</span> &lt; length &amp;&amp; sourcelist[child] &lt; sourcelist[child + <span class=\"number\">1</span>])</span><br><span class=\"line\">                child++;</span><br><span class=\"line\">            <span class=\"comment\">//与父节点比较，大于父节点就得交换，否则继续下个循环</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (temp &gt;= sourcelist[child])</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            sourcelist[parentid] = sourcelist[child];</span><br><span class=\"line\">            ConsoleOutProcess(sourcelist, parentid, child);</span><br><span class=\"line\">            parentid = child;</span><br><span class=\"line\">            child = <span class=\"number\">2</span> * parentid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//检查是否进行过交换，并将缓存中的值赋回去</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sourcelist[parentid] != temp)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            countnum++;</span><br><span class=\"line\">            sourcelist[parentid] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ConsoleOutProcess(sourcelist, -<span class=\"number\">1</span>, parentid);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> countnum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">HeapSort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, <span class=\"keyword\">int</span> top, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; topNode = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//第一遍，取出最大值，排到第一个(从倒数第二层左子节点开始排)</span></span><br><span class=\"line\">        <span class=\"comment\">//i--循环到顶0，排出最大值</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = sourcelist.Count / <span class=\"number\">2</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            countnum += HeapAdjust(sourcelist, i, sourcelist.Count);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//主要排序过程(从最上面到最下面)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = sourcelist.Count - <span class=\"number\">1</span>; i &gt; sourcelist.Count - top; i--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//将第一个与最后一个交换位置（最大值装入末尾）</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = sourcelist[<span class=\"number\">0</span>];</span><br><span class=\"line\">            sourcelist[<span class=\"number\">0</span>] = sourcelist[i];</span><br><span class=\"line\">            sourcelist[i] = temp;</span><br><span class=\"line\">            ConsoleOutProcess(sourcelist, <span class=\"number\">0</span>, i);</span><br><span class=\"line\">            Console.WriteLine();</span><br><span class=\"line\">            countnum++;</span><br><span class=\"line\">            <span class=\"comment\">//i，最后一个，是当前最大值</span></span><br><span class=\"line\">            <span class=\"comment\">//topNode 大根堆</span></span><br><span class=\"line\">            topNode.Add(temp);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//将去掉最后一个值的集合重新排</span></span><br><span class=\"line\">            countnum += HeapAdjust(sourcelist, <span class=\"number\">0</span>, i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//topNode 大根堆</span></span><br><span class=\"line\">        <span class=\"comment\">//sourcelist 小根堆</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sourcelist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> HeapSort(sourcelist, sourcelist.Count, out countnum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new HeapSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/4.3.png\" alt=\"Result pic 6\" title=\"堆排序\"></p>\n<h2 id=\"五-归并排序\"><a href=\"#五-归并排序\" class=\"headerlink\" title=\"五. 归并排序\"></a>五. 归并排序</h2><h3 id=\"5-1原理\"><a href=\"#5-1原理\" class=\"headerlink\" title=\"5.1原理\"></a>5.1原理</h3><p> <a href=\"https://baike.baidu.com/item/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/1639015?fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">归并排序</a> （Merge Sort）算法的原理如下:</p>\n<p>　假设序列共有n个元素，将序列每相邻两个数字进行归并操作（merge)，形成floor(n/2)个序列，排序后每个序列包含两个元素。将上述序列再次归并，形成floor(n/4)个序列，每个序列包含四个元素…重复归并，直到所有元素排序完毕。<br>　引用 <a href=\"https://www.cnblogs.com/chengxiao/p/6194356.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a> 中这个图比较直观。</p>\n<p> <img src=\"/contentimg/2/5.1.png\" alt=\"Result pic 7\" title=\"归并排序图解\"></p>\n<h3 id=\"5-2具体代码实现\"><a href=\"#5-2具体代码实现\" class=\"headerlink\" title=\"5.2具体代码实现\"></a>5.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MergeSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        DivSort(resultlist, <span class=\"number\">0</span>, resultlist.Count - <span class=\"number\">1</span>, ref countnum);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//对折拆分左右两组</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">DivSort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, <span class=\"keyword\">int</span> leftid, <span class=\"keyword\">int</span> rightid, ref <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (leftid &lt; rightid)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> midid = (leftid + rightid) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"comment\">//前1/2</span></span><br><span class=\"line\">            DivSort(sourcelist, leftid, midid, ref countnum);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//后1/2</span></span><br><span class=\"line\">            DivSort(sourcelist, midid + <span class=\"number\">1</span>, rightid, ref countnum);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//比较排序(拆分到最后要进行的比较和合并)</span></span><br><span class=\"line\">            Merge(sourcelist, leftid, midid, rightid, ref countnum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//左右坐标相等，或者左边大于右边(midid + 1)，相当于拆到最后一个，进入下一步Merge</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//主要排序操作</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Merge</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, <span class=\"keyword\">int</span> leftid, <span class=\"keyword\">int</span> midid, <span class=\"keyword\">int</span> rightid, ref <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; temp = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = leftid;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = midid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt;= midid &amp;&amp; j &lt;= rightid)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            countnum++;</span><br><span class=\"line\">            <span class=\"comment\">//取最小值存入缓存</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (sourcelist[i] &lt;= sourcelist[j])</span><br><span class=\"line\">                temp.Add(sourcelist[i++]);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                temp.Add(sourcelist[j++]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//两种情况只会存在一种：左(/右)边还有值</span></span><br><span class=\"line\">        <span class=\"comment\">//左边</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j &lt;= rightid)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            countnum++;</span><br><span class=\"line\">            temp.Add(sourcelist[j++]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//右边</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt;= midid)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            countnum++;</span><br><span class=\"line\">            temp.Add(sourcelist[i++]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        foreach (<span class=\"keyword\">var</span> item in temp)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//leftid~midid~rightid区间为已排序，其他部分未排序</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (leftid &gt; rightid) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            sourcelist[leftid++] = item;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        ConsoleOutProcess(temp, -<span class=\"number\">1</span>, temp.Count);</span><br><span class=\"line\">        Console.WriteLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new MergeSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/5.2.png\" alt=\"Result pic 8\" title=\"归并排序\"></p>\n<h2 id=\"六-快速排序\"><a href=\"#六-快速排序\" class=\"headerlink\" title=\"六. 快速排序\"></a>六. 快速排序</h2><h3 id=\"6-1原理\"><a href=\"#6-1原理\" class=\"headerlink\" title=\"6.1原理\"></a>6.1原理</h3><p> <a href=\"https://baike.baidu.com/item/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/369842?fromtitle=%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F&amp;fromid=2084344&amp;fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">快速排序</a> （Quick Sort）算法的原理如下:</p>\n<p>　假设要排序的数组是A[0]……A[N-1]，首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面：</p>\n<ol>\n<li>设置两个变量i、j，排序开始的时候：i=0，j=N-1；</li>\n<li>以第一个数组元素作为关键数据，赋值给<strong>key</strong>，即<strong>key</strong>=A[0]；</li>\n<li>从j开始向前搜索，即由后开始向前搜索(j–)，找到第一个小于<strong>key</strong>的值A[j]，将A[j]和A[i]互换；</li>\n<li>从i开始向后搜索，即由前开始向后搜索(i++)，找到第一个大于<strong>key</strong>的A[i]，将A[i]和A[j]互换；</li>\n<li>重复第3、4步，直到i=j； (3,4步中，没找到符合条件的值，即3中A[j]不小于<strong>key</strong>,4中A[i]不大于<strong>key</strong>的时候改变j、i的值，使得j=j-1，i=i+1，直至找到为止。找到符合条件的值，进行交换的时候i， j指针位置不变。另外，i==j这一过程一定正好是i+或j-完成的时候，此时令循环结束）。</li>\n</ol>\n<p>　引用 <a href=\"http://blog.51cto.com/ahalei/1365285\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a> 中这个图比较直观。</p>\n<p> <img src=\"/contentimg/2/6.1.png\" alt=\"Result pic 9\" title=\"快速排序图解\"></p>\n<h3 id=\"6-2具体代码实现\"><a href=\"#6-2具体代码实现\" class=\"headerlink\" title=\"6.2具体代码实现\"></a>6.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class QuickSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        QuickSort(resultlist, <span class=\"number\">0</span>, resultlist.Count - <span class=\"number\">1</span>,ref countnum);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">SortUnit</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, <span class=\"keyword\">int</span> leftid, <span class=\"keyword\">int</span> rightid, ref <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> key = sourcelist[leftid];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> tempid = leftid;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (leftid &lt; rightid)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (sourcelist[rightid] &gt;= key &amp;&amp; rightid &gt; leftid)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                countnum++;</span><br><span class=\"line\">                --rightid;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            sourcelist[leftid] = sourcelist[rightid];</span><br><span class=\"line\">            ConsoleOutProcess(sourcelist, leftid, rightid);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (sourcelist[leftid] &lt;= key &amp;&amp; rightid &gt; leftid)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                countnum++;</span><br><span class=\"line\">                ++leftid;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            sourcelist[rightid] = sourcelist[leftid];</span><br><span class=\"line\">            ConsoleOutProcess(sourcelist, rightid,leftid);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        sourcelist[leftid] = key;</span><br><span class=\"line\">        ConsoleOutProcess(sourcelist, tempid, leftid);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rightid;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">QuickSort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, <span class=\"keyword\">int</span> leftid, <span class=\"keyword\">int</span> rightid, ref <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (leftid &gt;= rightid) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> indexid = SortUnit(sourcelist, leftid, rightid, ref countnum);</span><br><span class=\"line\">        QuickSort(sourcelist, leftid, indexid - <span class=\"number\">1</span>,ref countnum);</span><br><span class=\"line\">        QuickSort(sourcelist, indexid + <span class=\"number\">1</span>, rightid, ref countnum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new QuickSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/6.2.png\" alt=\"Result pic 10\" title=\"快速排序\"></p>\n<h2 id=\"七-希尔排序\"><a href=\"#七-希尔排序\" class=\"headerlink\" title=\"七. 希尔排序\"></a>七. 希尔排序</h2><h3 id=\"7-1原理\"><a href=\"#7-1原理\" class=\"headerlink\" title=\"7.1原理\"></a>7.1原理</h3><p> <a href=\"https://baike.baidu.com/item/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F/3229428?fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">希尔排序</a> （Shell’s Sort）算法是直接插入排序算法的一种更高效的改进版本：</p>\n<p>　假设要排序的数组是A[0]……A[N-1]，首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面：</p>\n<p>　先取一个小于n的整数增量（一般取n/2）d1，把数组中下标间隔d1的作为一组进行组内排序；然后取第二个增量d2（d1/2）重复操作，直到增量 = 1。</p>\n<p>　引用 <a href=\"https://www.cnblogs.com/chengxiao/p/6104371.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a> 中这个图比较直观。</p>\n<p> <img src=\"/contentimg/2/7.1.png\" alt=\"Result pic 11\" title=\"希尔排序图解\"></p>\n<h3 id=\"7-2具体代码实现\"><a href=\"#7-2具体代码实现\" class=\"headerlink\" title=\"7.2具体代码实现\"></a>7.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class ShellsSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> i, j, flag, tmp, gap = sourcelist.Count;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (gap &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            gap = gap / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">do</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; sourcelist.Count - gap; i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    countnum++;</span><br><span class=\"line\">                    j = i + gap;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (sourcelist[i] &gt; sourcelist[j])</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        tmp = sourcelist[i];</span><br><span class=\"line\">                        sourcelist[i] = sourcelist[j];</span><br><span class=\"line\">                        sourcelist[j] = tmp;</span><br><span class=\"line\">                        flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">                        ConsoleOutProcess(resultlist, j, i);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//最后间隔为1时需要多次微调排序</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (gap == <span class=\"number\">1</span> &amp;&amp; flag != <span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new ShellsSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/7.2.png\" alt=\"Result pic 12\" title=\"希尔排序\"></p>\n<h2 id=\"八-基数排序\"><a href=\"#八-基数排序\" class=\"headerlink\" title=\"八. 基数排序\"></a>八. 基数排序</h2><h3 id=\"8-1原理\"><a href=\"#8-1原理\" class=\"headerlink\" title=\"8.1原理\"></a>8.1原理</h3><p> <a href=\"https://www.cnblogs.com/dwj411024/p/5978821.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">基数排序</a> （Radix Sort）算法的原理如下：</p>\n<p>　基数排序是一种借助多关键字排序的思想对单逻辑关键字进行排序的方法。它是一种稳定的排序算法。多关键字排序中有两种方法：最高位优先法(MSD)和最低位优先法（LSD）。通常用于对数的排序选择的是最低位优先法，即先对最次位关键字进行排序，再对高一位的关键字进行排序，以此类推。</p>\n<p>　引用 <a href=\"https://www.cnblogs.com/dwj411024/p/5978821.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a> 中这个图比较直观。</p>\n<p> <img src=\"/contentimg/2/8.1.png\" alt=\"Result pic 11\" title=\"基数排序图解\"></p>\n<h3 id=\"8-2具体代码实现\"><a href=\"#8-2具体代码实现\" class=\"headerlink\" title=\"8.2具体代码实现\"></a>8.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class RadixSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> max = sourcelist[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"comment\">//找到最大的数字</span></span><br><span class=\"line\">        foreach (<span class=\"keyword\">var</span> item in sourcelist)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (item &gt; max) max = item;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//分析出有多少位数</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> digit = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (max / <span class=\"number\">10</span> != <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            digit++;</span><br><span class=\"line\">            max /= <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">       </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; digit; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span>[] indexCounter = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">            IList&lt;<span class=\"keyword\">int</span>&gt; tempList = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">            foreach (<span class=\"keyword\">var</span> item in sourcelist)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                tempList.Add(<span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//排桶</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j =<span class=\"number\">0</span>; j&lt; sourcelist.Count; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> number = (sourcelist[j] % Convert.ToInt32(Math.Pow(<span class=\"number\">10</span>, i + <span class=\"number\">1</span>))) / Convert.ToInt32(Math.Pow(<span class=\"number\">10</span>, i));  <span class=\"comment\">//得出i+1位上的数</span></span><br><span class=\"line\">                indexCounter[number]++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">int</span>[] indexBegin = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">            <span class=\"comment\">//统计数量分布,例如3，前面有多少个数，就+1放在第几位</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">1</span>; k &lt; <span class=\"number\">10</span>; k++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                indexBegin[k] = indexBegin[k - <span class=\"number\">1</span>] + indexCounter[k - <span class=\"number\">1</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; sourcelist.Count; k++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> number = (sourcelist[k] % Convert.ToInt32(Math.Pow(<span class=\"number\">10</span>, i + <span class=\"number\">1</span>))) / Convert.ToInt32(Math.Pow(<span class=\"number\">10</span>, i));</span><br><span class=\"line\">                <span class=\"comment\">//indexBegin[number]++ 指出该数字该排的序号</span></span><br><span class=\"line\">                tempList[indexBegin[number]++] = sourcelist[k];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            sourcelist = tempList;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sourcelist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new RadixSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/8.2.png\" alt=\"Result pic 12\" title=\"基数排序\"></p>\n<p>　　该算法以空间换时间，不用进行数学上的比较就能进行排序。与前面几种算法有一定的区别。</p>\n<p> 本文测试程序工程可以从git直接获取：</p>\n<p> git代码库: <a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/SortDemo\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Codes</a></p>\n","site":{"data":{}},"excerpt":"<p>　　本文记录算法中入门级别的8种简单排序算法。</p>\n<ol>\n<li>冒泡排序　　2.  选择排序　　3.  插入排序　　4.  堆排序<br>　　5.  归并排序　　6.  快速排序　　7.  希尔排序　　8.  基数排序","more":"<h2 id=\"基础代码实现：\"><a href=\"#基础代码实现：\" class=\"headerlink\" title=\"基础代码实现：\"></a>基础代码实现：</h2></li>\n</ol>\n<h3 id=\"1-抽象公共接口部分\"><a href=\"#1-抽象公共接口部分\" class=\"headerlink\" title=\"1.抽象公共接口部分\"></a>1.抽象公共接口部分</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ISortMethod</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">GetResult</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist,out <span class=\"keyword\">int</span> countnum)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-建立公共基类进行数据有效性校验和控制台输出的颜色标记\"><a href=\"#2-建立公共基类进行数据有效性校验和控制台输出的颜色标记\" class=\"headerlink\" title=\"2.建立公共基类进行数据有效性校验和控制台输出的颜色标记\"></a>2.建立公共基类进行数据有效性校验和控制台输出的颜色标记</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SortBaseClass : ISortMethod</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">GetResult</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> CheckEffect(sourcelist,out countnum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 进行数据的有效性判断</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"sourcelist\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">CheckEffect</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sourcelist != <span class=\"keyword\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (sourcelist.Count &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                resultlist = Sort(sourcelist,out countnum);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                resultlist = sourcelist;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 由具体的算法部分进行重写</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"sourcelist\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> virtual IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sourcelist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// 控制台过程输出</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"sourcelist\"&gt;&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"n\"&gt;交换的前面一个数的序号&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;param name=\"m\"&gt;交换的后面一个数的序号&lt;/param&gt;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">ConsoleOutProcess</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> m)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sourcelist.Count; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; sourcelist.Count - <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i == n || i == m)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Console.ForegroundColor = ConsoleColor.Green;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    Console.ForegroundColor = ConsoleColor.White;</span><br><span class=\"line\"></span><br><span class=\"line\">                Console.Write(sourcelist[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i != n)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Console.ForegroundColor = ConsoleColor.White;</span><br><span class=\"line\">                    Console.Write(<span class=\"string\">\"--&gt;\"</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Console.Write(<span class=\"string\">\"&lt;--\"</span>);</span><br><span class=\"line\">                &#125;    </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Console.ForegroundColor = ConsoleColor.White;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sourcelist.Count - <span class=\"number\">1</span> == n || sourcelist.Count - <span class=\"number\">1</span> == m)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Console.ForegroundColor = ConsoleColor.Green;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Console.Write(sourcelist[sourcelist.Count - <span class=\"number\">1</span>]);</span><br><span class=\"line\">        Console.ForegroundColor = ConsoleColor.White;</span><br><span class=\"line\">        Console.WriteLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-main函数具体打印代码\"><a href=\"#3-main函数具体打印代码\" class=\"headerlink\" title=\"3.main函数具体打印代码\"></a>3.main函数具体打印代码</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(string[] args)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">int</span>&gt; numlst = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;() &#123; <span class=\"number\">23</span>, <span class=\"number\">44</span>, <span class=\"number\">66</span>, <span class=\"number\">66</span>, <span class=\"number\">76</span>, <span class=\"number\">98</span>, <span class=\"number\">11</span>, <span class=\"number\">3</span>, <span class=\"number\">9</span>, <span class=\"number\">7</span> &#125;;</span><br><span class=\"line\">    ISortMethod sort = <span class=\"keyword\">new</span> BubbleSortMethod();</span><br><span class=\"line\"></span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">\"原数列为：\"</span>);</span><br><span class=\"line\">    StringBuilder str = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; numlst.Count; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        str.Append(numlst[i] + <span class=\"string\">\"   \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Console.WriteLine(str.Remove(str.Length - <span class=\"number\">3</span>, <span class=\"number\">3</span>).ToString());</span><br><span class=\"line\"></span><br><span class=\"line\">    Console.WriteLine(System.Environment.NewLine);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">int</span>&gt; result = sort.GetResult(numlst,out countnum) as List&lt;<span class=\"keyword\">int</span>&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\">    Console.WriteLine(System.Environment.NewLine);</span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">\"经过了&#123;0&#125;次数据对比 \"</span>, countnum);</span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">\"排序后为：\"</span>);</span><br><span class=\"line\">    str.Clear();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; result.Count; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        str.Append(result[i] + <span class=\"string\">\"--&gt;\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Console.WriteLine(str.Remove(str.Length - <span class=\"number\">3</span>, <span class=\"number\">3</span>).ToString());</span><br><span class=\"line\">        </span><br><span class=\"line\">    Console.ReadKey();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-具体算法实现部分\"><a href=\"#4-具体算法实现部分\" class=\"headerlink\" title=\"4.具体算法实现部分\"></a>4.具体算法实现部分</h4><p>具体实现算法，同时添加过程打印以便分析。</p>\n<h2 id=\"一-冒泡排序\"><a href=\"#一-冒泡排序\" class=\"headerlink\" title=\"一. 冒泡排序\"></a>一. 冒泡排序</h2><h3 id=\"1-1原理\"><a href=\"#1-1原理\" class=\"headerlink\" title=\"1.1原理\"></a>1.1原理</h3><p> <a href=\"https://baike.baidu.com/item/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/4602306?fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">冒泡排序</a> （Bubble Sort）算法的原理如下:</p>\n<ol>\n<li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li>\n<li>对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</li>\n<li>针对所有的元素重复以上的步骤，除了最后一个。</li>\n<li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li>\n</ol>\n<h3 id=\"1-2具体代码实现\"><a href=\"#1-2具体代码实现\" class=\"headerlink\" title=\"1.2具体代码实现\"></a>1.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class BubbleSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp = <span class=\"keyword\">int</span>.MinValue;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sourcelist.Count - <span class=\"number\">1</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">   <span class=\"comment\">//最后一个数最大，所以后面的数不必再次比较 -i</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; sourcelist.Count - <span class=\"number\">1</span> - i; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (resultlist[j] &gt; resultlist[j + <span class=\"number\">1</span>])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    temp = resultlist[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                    resultlist[j + <span class=\"number\">1</span>] = resultlist[j];</span><br><span class=\"line\">                    resultlist[j] = temp;</span><br><span class=\"line\"></span><br><span class=\"line\">                    ConsoleOutProcess(resultlist, j, j + <span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                countnum++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new BubbleSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/1.png\" alt=\"Result pic 1\" title=\"冒泡排序\"></p>\n<h2 id=\"二-选择排序\"><a href=\"#二-选择排序\" class=\"headerlink\" title=\"二.选择排序\"></a>二.选择排序</h2><h3 id=\"2-1原理\"><a href=\"#2-1原理\" class=\"headerlink\" title=\"2.1原理\"></a>2.1原理</h3><p> <a href=\"https://baike.baidu.com/item/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/9762418?fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">选择排序</a> （Selection sort）算法的原理如下：</p>\n<p>　每一次从待排序的<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%85%83%E7%B4%A0\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">数据元素</a> 中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完。</p>\n<h3 id=\"2-2具体代码实现\"><a href=\"#2-2具体代码实现\" class=\"headerlink\" title=\"2.2具体代码实现\"></a>2.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SelectionSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp, pos = <span class=\"number\">0</span>;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sourcelist.Count - <span class=\"number\">1</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            pos = i;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; sourcelist.Count; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (resultlist[j] &lt; resultlist[pos])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    pos = j;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                countnum++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (pos == i) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            temp = resultlist[i];</span><br><span class=\"line\">            resultlist[i] = resultlist[pos];</span><br><span class=\"line\">            resultlist[pos] = temp;</span><br><span class=\"line\">            ConsoleOutProcess(resultlist, i, pos);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new SelectionSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/2.png\" alt=\"Result pic 2\" title=\"选择排序\"></p>\n<h2 id=\"三-插入排序\"><a href=\"#三-插入排序\" class=\"headerlink\" title=\"三. 插入排序\"></a>三. 插入排序</h2><h3 id=\"3-1原理\"><a href=\"#3-1原理\" class=\"headerlink\" title=\"3.1原理\"></a>3.1原理</h3><p> <a href=\"https://www.douban.com/note/396407547/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">插入排序</a> （Insert Sort）算法的原理如下:</p>\n<p>　插入即表示将一个新的数据插入到一个有序数组中，并继续保持有序。例如有一个长度为N的无序数组，进行N-1次的插入即能完成排序。<br>　第一次，数组第1个数认为是有序的数组，将数组第二个元素插入仅有1个有序的数组中；<br>　第二次，数组前两个元素组成有序的数组，将数组第三个元素插入由两个元素构成的有序数组中…..<br>　第N-1次，数组前N-1个元素组成有序的数组，将数组的第N个元素插入由N-1个元素构成的有序数组中，则完成了整个插入排序。<br>　….<br>　按序比较直到集合排序完毕。</p>\n<h3 id=\"3-2具体代码实现\"><a href=\"#3-2具体代码实现\" class=\"headerlink\" title=\"3.2具体代码实现\"></a>3.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class NormalInsertSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> key = <span class=\"keyword\">int</span>.MinValue;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i, j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">1</span>; j &lt; sourcelist.Count; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            key = resultlist[j];</span><br><span class=\"line\">            i = j - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//将数组往后面退1位</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (i &gt;= <span class=\"number\">0</span> &amp;&amp; resultlist[i] &gt; key)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                countnum++;</span><br><span class=\"line\">                resultlist[i + <span class=\"number\">1</span>] = resultlist[i];</span><br><span class=\"line\">                i -= <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"><span class=\"comment\">//过滤两个相同大小的数的左右交换</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (resultlist[i + <span class=\"number\">1</span>] == key) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入有序的位置（后面的都比这个数大）</span></span><br><span class=\"line\">            resultlist[i + <span class=\"number\">1</span>] = key;</span><br><span class=\"line\">            ConsoleOutProcess(resultlist, -<span class=\"number\">1</span>, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new NormalInsertSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/3.png\" alt=\"Result pic 3\" title=\"插入排序\"></p>\n<h2 id=\"四-堆排序\"><a href=\"#四-堆排序\" class=\"headerlink\" title=\"四. 堆排序\"></a>四. 堆排序</h2><h3 id=\"4-1原理\"><a href=\"#4-1原理\" class=\"headerlink\" title=\"4.1原理\"></a>4.1原理</h3><p> <a href=\"https://www.cnblogs.com/0zcl/p/6737944.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">堆排序</a> （Heap Sort）算法的原理如下:</p>\n<p>　利用二叉树的特性，将剩余数组中的最大值（或最小值）排到开头处。然后去掉该值（提取到新数组开头数值）再次排序得到最值排去新数组那边开头，依次重复操作就能得到结果。<br>　这里用到的 <a href=\"https://www.jianshu.com/p/106fdd9976a8\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">二叉树的特性</a> 是节点i的左子节点为2i，右子节点为2i+1.<br>　结合集合的话-1。集合(n = i-1)（i&gt;0,集合第一个序号为0，故需要-1）,序号(n)的左子节点为序号(2n+1)，右子节点为序号(2n+2)。<br>　int child = 2 * parentid + 1;就是这里的特性使用。<br>　引用 <a href=\"https://www.cnblogs.com/0zcl/p/6737944.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a> 中这个图比较直观。</p>\n<p> <img src=\"/contentimg/2/4.1.png\" alt=\"Result pic 4\" title=\"堆排序图解\"></p>\n<p> 在下面的代码中是这样的：</p>\n<p> <img src=\"/contentimg/2/4.2.png\" alt=\"Result pic 5\" title=\"堆排序实例\"></p>\n<h3 id=\"4-2具体代码实现\"><a href=\"#4-2具体代码实现\" class=\"headerlink\" title=\"4.2具体代码实现\"></a>4.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class HeapSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//从parentid往下面排到length位</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">HeapAdjust</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, <span class=\"keyword\">int</span> parentid, <span class=\"keyword\">int</span> length)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp = sourcelist[parentid];</span><br><span class=\"line\">        <span class=\"comment\">//左子节点</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> child = <span class=\"number\">2</span> * parentid + <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (child &lt; length)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            countnum++;</span><br><span class=\"line\">            <span class=\"comment\">//取 左右 子节点中的较大值</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (child + <span class=\"number\">1</span> &lt; length &amp;&amp; sourcelist[child] &lt; sourcelist[child + <span class=\"number\">1</span>])</span><br><span class=\"line\">                child++;</span><br><span class=\"line\">            <span class=\"comment\">//与父节点比较，大于父节点就得交换，否则继续下个循环</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (temp &gt;= sourcelist[child])</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            sourcelist[parentid] = sourcelist[child];</span><br><span class=\"line\">            ConsoleOutProcess(sourcelist, parentid, child);</span><br><span class=\"line\">            parentid = child;</span><br><span class=\"line\">            child = <span class=\"number\">2</span> * parentid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//检查是否进行过交换，并将缓存中的值赋回去</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sourcelist[parentid] != temp)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            countnum++;</span><br><span class=\"line\">            sourcelist[parentid] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ConsoleOutProcess(sourcelist, -<span class=\"number\">1</span>, parentid);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> countnum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">HeapSort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, <span class=\"keyword\">int</span> top, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; topNode = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//第一遍，取出最大值，排到第一个(从倒数第二层左子节点开始排)</span></span><br><span class=\"line\">        <span class=\"comment\">//i--循环到顶0，排出最大值</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = sourcelist.Count / <span class=\"number\">2</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            countnum += HeapAdjust(sourcelist, i, sourcelist.Count);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//主要排序过程(从最上面到最下面)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = sourcelist.Count - <span class=\"number\">1</span>; i &gt; sourcelist.Count - top; i--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//将第一个与最后一个交换位置（最大值装入末尾）</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = sourcelist[<span class=\"number\">0</span>];</span><br><span class=\"line\">            sourcelist[<span class=\"number\">0</span>] = sourcelist[i];</span><br><span class=\"line\">            sourcelist[i] = temp;</span><br><span class=\"line\">            ConsoleOutProcess(sourcelist, <span class=\"number\">0</span>, i);</span><br><span class=\"line\">            Console.WriteLine();</span><br><span class=\"line\">            countnum++;</span><br><span class=\"line\">            <span class=\"comment\">//i，最后一个，是当前最大值</span></span><br><span class=\"line\">            <span class=\"comment\">//topNode 大根堆</span></span><br><span class=\"line\">            topNode.Add(temp);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//将去掉最后一个值的集合重新排</span></span><br><span class=\"line\">            countnum += HeapAdjust(sourcelist, <span class=\"number\">0</span>, i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//topNode 大根堆</span></span><br><span class=\"line\">        <span class=\"comment\">//sourcelist 小根堆</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sourcelist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> HeapSort(sourcelist, sourcelist.Count, out countnum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new HeapSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/4.3.png\" alt=\"Result pic 6\" title=\"堆排序\"></p>\n<h2 id=\"五-归并排序\"><a href=\"#五-归并排序\" class=\"headerlink\" title=\"五. 归并排序\"></a>五. 归并排序</h2><h3 id=\"5-1原理\"><a href=\"#5-1原理\" class=\"headerlink\" title=\"5.1原理\"></a>5.1原理</h3><p> <a href=\"https://baike.baidu.com/item/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/1639015?fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">归并排序</a> （Merge Sort）算法的原理如下:</p>\n<p>　假设序列共有n个元素，将序列每相邻两个数字进行归并操作（merge)，形成floor(n/2)个序列，排序后每个序列包含两个元素。将上述序列再次归并，形成floor(n/4)个序列，每个序列包含四个元素…重复归并，直到所有元素排序完毕。<br>　引用 <a href=\"https://www.cnblogs.com/chengxiao/p/6194356.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a> 中这个图比较直观。</p>\n<p> <img src=\"/contentimg/2/5.1.png\" alt=\"Result pic 7\" title=\"归并排序图解\"></p>\n<h3 id=\"5-2具体代码实现\"><a href=\"#5-2具体代码实现\" class=\"headerlink\" title=\"5.2具体代码实现\"></a>5.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MergeSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        DivSort(resultlist, <span class=\"number\">0</span>, resultlist.Count - <span class=\"number\">1</span>, ref countnum);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//对折拆分左右两组</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">DivSort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, <span class=\"keyword\">int</span> leftid, <span class=\"keyword\">int</span> rightid, ref <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (leftid &lt; rightid)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> midid = (leftid + rightid) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"comment\">//前1/2</span></span><br><span class=\"line\">            DivSort(sourcelist, leftid, midid, ref countnum);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//后1/2</span></span><br><span class=\"line\">            DivSort(sourcelist, midid + <span class=\"number\">1</span>, rightid, ref countnum);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//比较排序(拆分到最后要进行的比较和合并)</span></span><br><span class=\"line\">            Merge(sourcelist, leftid, midid, rightid, ref countnum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//左右坐标相等，或者左边大于右边(midid + 1)，相当于拆到最后一个，进入下一步Merge</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//主要排序操作</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Merge</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, <span class=\"keyword\">int</span> leftid, <span class=\"keyword\">int</span> midid, <span class=\"keyword\">int</span> rightid, ref <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; temp = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = leftid;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = midid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt;= midid &amp;&amp; j &lt;= rightid)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            countnum++;</span><br><span class=\"line\">            <span class=\"comment\">//取最小值存入缓存</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (sourcelist[i] &lt;= sourcelist[j])</span><br><span class=\"line\">                temp.Add(sourcelist[i++]);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                temp.Add(sourcelist[j++]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//两种情况只会存在一种：左(/右)边还有值</span></span><br><span class=\"line\">        <span class=\"comment\">//左边</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j &lt;= rightid)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            countnum++;</span><br><span class=\"line\">            temp.Add(sourcelist[j++]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//右边</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt;= midid)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            countnum++;</span><br><span class=\"line\">            temp.Add(sourcelist[i++]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        foreach (<span class=\"keyword\">var</span> item in temp)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//leftid~midid~rightid区间为已排序，其他部分未排序</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (leftid &gt; rightid) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            sourcelist[leftid++] = item;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        ConsoleOutProcess(temp, -<span class=\"number\">1</span>, temp.Count);</span><br><span class=\"line\">        Console.WriteLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new MergeSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/5.2.png\" alt=\"Result pic 8\" title=\"归并排序\"></p>\n<h2 id=\"六-快速排序\"><a href=\"#六-快速排序\" class=\"headerlink\" title=\"六. 快速排序\"></a>六. 快速排序</h2><h3 id=\"6-1原理\"><a href=\"#6-1原理\" class=\"headerlink\" title=\"6.1原理\"></a>6.1原理</h3><p> <a href=\"https://baike.baidu.com/item/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/369842?fromtitle=%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F&amp;fromid=2084344&amp;fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">快速排序</a> （Quick Sort）算法的原理如下:</p>\n<p>　假设要排序的数组是A[0]……A[N-1]，首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面：</p>\n<ol>\n<li>设置两个变量i、j，排序开始的时候：i=0，j=N-1；</li>\n<li>以第一个数组元素作为关键数据，赋值给<strong>key</strong>，即<strong>key</strong>=A[0]；</li>\n<li>从j开始向前搜索，即由后开始向前搜索(j–)，找到第一个小于<strong>key</strong>的值A[j]，将A[j]和A[i]互换；</li>\n<li>从i开始向后搜索，即由前开始向后搜索(i++)，找到第一个大于<strong>key</strong>的A[i]，将A[i]和A[j]互换；</li>\n<li>重复第3、4步，直到i=j； (3,4步中，没找到符合条件的值，即3中A[j]不小于<strong>key</strong>,4中A[i]不大于<strong>key</strong>的时候改变j、i的值，使得j=j-1，i=i+1，直至找到为止。找到符合条件的值，进行交换的时候i， j指针位置不变。另外，i==j这一过程一定正好是i+或j-完成的时候，此时令循环结束）。</li>\n</ol>\n<p>　引用 <a href=\"http://blog.51cto.com/ahalei/1365285\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a> 中这个图比较直观。</p>\n<p> <img src=\"/contentimg/2/6.1.png\" alt=\"Result pic 9\" title=\"快速排序图解\"></p>\n<h3 id=\"6-2具体代码实现\"><a href=\"#6-2具体代码实现\" class=\"headerlink\" title=\"6.2具体代码实现\"></a>6.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class QuickSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        QuickSort(resultlist, <span class=\"number\">0</span>, resultlist.Count - <span class=\"number\">1</span>,ref countnum);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">SortUnit</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, <span class=\"keyword\">int</span> leftid, <span class=\"keyword\">int</span> rightid, ref <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> key = sourcelist[leftid];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> tempid = leftid;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (leftid &lt; rightid)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (sourcelist[rightid] &gt;= key &amp;&amp; rightid &gt; leftid)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                countnum++;</span><br><span class=\"line\">                --rightid;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            sourcelist[leftid] = sourcelist[rightid];</span><br><span class=\"line\">            ConsoleOutProcess(sourcelist, leftid, rightid);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (sourcelist[leftid] &lt;= key &amp;&amp; rightid &gt; leftid)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                countnum++;</span><br><span class=\"line\">                ++leftid;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            sourcelist[rightid] = sourcelist[leftid];</span><br><span class=\"line\">            ConsoleOutProcess(sourcelist, rightid,leftid);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        sourcelist[leftid] = key;</span><br><span class=\"line\">        ConsoleOutProcess(sourcelist, tempid, leftid);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rightid;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">QuickSort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, <span class=\"keyword\">int</span> leftid, <span class=\"keyword\">int</span> rightid, ref <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (leftid &gt;= rightid) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> indexid = SortUnit(sourcelist, leftid, rightid, ref countnum);</span><br><span class=\"line\">        QuickSort(sourcelist, leftid, indexid - <span class=\"number\">1</span>,ref countnum);</span><br><span class=\"line\">        QuickSort(sourcelist, indexid + <span class=\"number\">1</span>, rightid, ref countnum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new QuickSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/6.2.png\" alt=\"Result pic 10\" title=\"快速排序\"></p>\n<h2 id=\"七-希尔排序\"><a href=\"#七-希尔排序\" class=\"headerlink\" title=\"七. 希尔排序\"></a>七. 希尔排序</h2><h3 id=\"7-1原理\"><a href=\"#7-1原理\" class=\"headerlink\" title=\"7.1原理\"></a>7.1原理</h3><p> <a href=\"https://baike.baidu.com/item/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F/3229428?fr=aladdin\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">希尔排序</a> （Shell’s Sort）算法是直接插入排序算法的一种更高效的改进版本：</p>\n<p>　假设要排序的数组是A[0]……A[N-1]，首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面：</p>\n<p>　先取一个小于n的整数增量（一般取n/2）d1，把数组中下标间隔d1的作为一组进行组内排序；然后取第二个增量d2（d1/2）重复操作，直到增量 = 1。</p>\n<p>　引用 <a href=\"https://www.cnblogs.com/chengxiao/p/6104371.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a> 中这个图比较直观。</p>\n<p> <img src=\"/contentimg/2/7.1.png\" alt=\"Result pic 11\" title=\"希尔排序图解\"></p>\n<h3 id=\"7-2具体代码实现\"><a href=\"#7-2具体代码实现\" class=\"headerlink\" title=\"7.2具体代码实现\"></a>7.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class ShellsSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        IList&lt;<span class=\"keyword\">int</span>&gt; resultlist = sourcelist;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> i, j, flag, tmp, gap = sourcelist.Count;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (gap &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            gap = gap / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">do</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; sourcelist.Count - gap; i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    countnum++;</span><br><span class=\"line\">                    j = i + gap;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (sourcelist[i] &gt; sourcelist[j])</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        tmp = sourcelist[i];</span><br><span class=\"line\">                        sourcelist[i] = sourcelist[j];</span><br><span class=\"line\">                        sourcelist[j] = tmp;</span><br><span class=\"line\">                        flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">                        ConsoleOutProcess(resultlist, j, i);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//最后间隔为1时需要多次微调排序</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (gap == <span class=\"number\">1</span> &amp;&amp; flag != <span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new ShellsSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/7.2.png\" alt=\"Result pic 12\" title=\"希尔排序\"></p>\n<h2 id=\"八-基数排序\"><a href=\"#八-基数排序\" class=\"headerlink\" title=\"八. 基数排序\"></a>八. 基数排序</h2><h3 id=\"8-1原理\"><a href=\"#8-1原理\" class=\"headerlink\" title=\"8.1原理\"></a>8.1原理</h3><p> <a href=\"https://www.cnblogs.com/dwj411024/p/5978821.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">基数排序</a> （Radix Sort）算法的原理如下：</p>\n<p>　基数排序是一种借助多关键字排序的思想对单逻辑关键字进行排序的方法。它是一种稳定的排序算法。多关键字排序中有两种方法：最高位优先法(MSD)和最低位优先法（LSD）。通常用于对数的排序选择的是最低位优先法，即先对最次位关键字进行排序，再对高一位的关键字进行排序，以此类推。</p>\n<p>　引用 <a href=\"https://www.cnblogs.com/dwj411024/p/5978821.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a> 中这个图比较直观。</p>\n<p> <img src=\"/contentimg/2/8.1.png\" alt=\"Result pic 11\" title=\"基数排序图解\"></p>\n<h3 id=\"8-2具体代码实现\"><a href=\"#8-2具体代码实现\" class=\"headerlink\" title=\"8.2具体代码实现\"></a>8.2具体代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class RadixSortMethod : SortBaseClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> override IList&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Sort</span><span class=\"params\">(IList&lt;<span class=\"keyword\">int</span>&gt; sourcelist, out <span class=\"keyword\">int</span> countnum)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        countnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> max = sourcelist[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"comment\">//找到最大的数字</span></span><br><span class=\"line\">        foreach (<span class=\"keyword\">var</span> item in sourcelist)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (item &gt; max) max = item;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//分析出有多少位数</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> digit = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (max / <span class=\"number\">10</span> != <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            digit++;</span><br><span class=\"line\">            max /= <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">       </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; digit; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span>[] indexCounter = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">            IList&lt;<span class=\"keyword\">int</span>&gt; tempList = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">int</span>&gt;();</span><br><span class=\"line\">            foreach (<span class=\"keyword\">var</span> item in sourcelist)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                tempList.Add(<span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//排桶</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j =<span class=\"number\">0</span>; j&lt; sourcelist.Count; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> number = (sourcelist[j] % Convert.ToInt32(Math.Pow(<span class=\"number\">10</span>, i + <span class=\"number\">1</span>))) / Convert.ToInt32(Math.Pow(<span class=\"number\">10</span>, i));  <span class=\"comment\">//得出i+1位上的数</span></span><br><span class=\"line\">                indexCounter[number]++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">int</span>[] indexBegin = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">            <span class=\"comment\">//统计数量分布,例如3，前面有多少个数，就+1放在第几位</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">1</span>; k &lt; <span class=\"number\">10</span>; k++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                indexBegin[k] = indexBegin[k - <span class=\"number\">1</span>] + indexCounter[k - <span class=\"number\">1</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; sourcelist.Count; k++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> number = (sourcelist[k] % Convert.ToInt32(Math.Pow(<span class=\"number\">10</span>, i + <span class=\"number\">1</span>))) / Convert.ToInt32(Math.Pow(<span class=\"number\">10</span>, i));</span><br><span class=\"line\">                <span class=\"comment\">//indexBegin[number]++ 指出该数字该排的序号</span></span><br><span class=\"line\">                tempList[indexBegin[number]++] = sourcelist[k];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            sourcelist = tempList;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sourcelist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　同时修改main函数的算法为具体的： ISortMethod sort = new RadixSortMethod();</p>\n<p>　　执行结果为：</p>\n<p><img src=\"/contentimg/2/8.2.png\" alt=\"Result pic 12\" title=\"基数排序\"></p>\n<p>　　该算法以空间换时间，不用进行数学上的比较就能进行排序。与前面几种算法有一定的区别。</p>\n<p> 本文测试程序工程可以从git直接获取：</p>\n<p> git代码库: <a href=\"https://github.com/YaojiaxinPC/hexoblog/tree/master/SortDemo\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Codes</a></p>"},{"title":"Json解析C#的四个库","date":"2018-10-15T14:55:58.000Z","_content":"\n　　目前通讯中http是使用最多的，而其中Json基本是首选。大家平时解析时都是直接调用dll，但是有没有考虑过dll里面怎么处理？这个dll又从哪里来？本文将分享我接触到的4个解析Json的C#开源库。\n<!-- more -->\n　　目前我用得较多的是Newtonsoft ，后面了解到还有轻量的MiniJSON，SimpleJson以及litjson。\n\n　　这里MiniJSON最精简，是一个class文件，通过对string进行简单字符串的处理来解析。\n\n　　然后就是SimpleJson，也是一个class文件，不过代码量超级多，功能相对比较全面。看其他博客对这个评价蛮高的，不过我没使用过，暂不评价。\n\n　　litjson，就文件多一点，好几个class组成。但是看部分博客提到跨平台上有问题。\n\n　　由于之前是做windows应用，所以一直使用的是Newtonsoft，代码量远超上面的几个，编译出来的dll也是比他们的要大。所以，比较推荐用Newtonsoft，可定制化高很多，功能和内部考虑的东西也完善。\n\n　　本文暂不讲怎么使用，只简单介绍怎么去github获取上面几个的源码，以及怎么编译。\n\n　　提到github，这是一个好东西，好多好的开源项目都在上面。不过国内网速超级慢，使用起来不是很方便。一般情况下，可以不注册账号直接下载项目代码，下载下来是一个zip文件。也可以用VS里面的扩展插件GitHub Extension for Visual Studio，下载安装过程有点久，请耐心等待：\n\n![Result pic 1](/contentimg/3/1.png \"GitHub Extension for Visual Studio\")\n\n　　使用起来相对没svn好用(当然，这里是可以用svn来使用的)。\n\n　　推荐使用客户端：[GitHubDesktop](https://desktop.github.com/) 下载下来的应该是一个77M的全量包，直接安装就可以使用：\n\n![Result pic 2](/contentimg/3/2.png \"GitHubDesktop\")\n\n　　这里使用到的就是File--&gt;Clone...；打开后\n\n![Result pic 3](/contentimg/3/3.png \"Clone a repository\")\n\n　　这里的url，就是网页上获取的：\n\n![Result pic 4](/contentimg/3/4.png \"Clone with HTTPS\")\n\n　　这里贴一下看到的其他博主写的专门介绍GitHub Desktop的：[Windows 上 GitHub Desktop 的操作](https://www.cnblogs.com/hanford/p/6038417.html) \n\n## 一.MiniJSON\n\n　　github地址：[MiniJSON](https://gist.github.com/darktable/1411710) \n\n　　直接在你的项目中新建一个class，全选代码后复制过去，就可以使用了。\n\n　　由于需要vpn，所以这里放一下代码吧：\n\n\n``` java\n/*\n * Copyright (c) 2013 Calvin Rien\n *\n * Based on the JSON parser by Patrick van Bergen\n * http://techblog.procurios.nl/k/618/news/view/14605/14863/How-do-I-write-my-own-parser-for-JSON.html\n *\n * Simplified it so that it doesn't throw exceptions\n * and can be used in Unity iPhone with maximum code stripping.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Text;\n \nnamespace MiniJSON {\n    // Example usage:\n    //\n    //  using UnityEngine;\n    //  using System.Collections;\n    //  using System.Collections.Generic;\n    //  using MiniJSON;\n    //\n    //  public class MiniJSONTest : MonoBehaviour {\n    //      void Start () {\n    //          var jsonString = \"{ \\\"array\\\": [1.44,2,3], \" +\n    //                          \"\\\"object\\\": {\\\"key1\\\":\\\"value1\\\", \\\"key2\\\":256}, \" +\n    //                          \"\\\"string\\\": \\\"The quick brown fox \\\\\\\"jumps\\\\\\\" over the lazy dog \\\", \" +\n    //                          \"\\\"unicode\\\": \\\"\\\\u3041 Men\\u00fa sesi\\u00f3n\\\", \" +\n    //                          \"\\\"int\\\": 65536, \" +\n    //                          \"\\\"float\\\": 3.1415926, \" +\n    //                          \"\\\"bool\\\": true, \" +\n    //                          \"\\\"null\\\": null }\";\n    //\n    //          var dict = Json.Deserialize(jsonString) as Dictionary<string,object>;\n    //\n    //          Debug.Log(\"deserialized: \" + dict.GetType());\n    //          Debug.Log(\"dict['array'][0]: \" + ((List<object>) dict[\"array\"])[0]);\n    //          Debug.Log(\"dict['string']: \" + (string) dict[\"string\"]);\n    //          Debug.Log(\"dict['float']: \" + (double) dict[\"float\"]); // floats come out as doubles\n    //          Debug.Log(\"dict['int']: \" + (long) dict[\"int\"]); // ints come out as longs\n    //          Debug.Log(\"dict['unicode']: \" + (string) dict[\"unicode\"]);\n    //\n    //          var str = Json.Serialize(dict);\n    //\n    //          Debug.Log(\"serialized: \" + str);\n    //      }\n    //  }\n \n    /// <summary>\n    /// This class encodes and decodes JSON strings.\n    /// Spec. details, see http://www.json.org/\n    ///\n    /// JSON uses Arrays and Objects. These correspond here to the datatypes IList and IDictionary.\n    /// All numbers are parsed to doubles.\n    /// </summary>\n    public static class Json {\n        /// <summary>\n        /// Parses the string json into a value\n        /// </summary>\n        /// <param name=\"json\">A JSON string.</param>\n        /// <returns>An List&lt;object&gt;, a Dictionary&lt;string, object&gt;, a double, an integer,a string, null, true, or false</returns>\n        public static object Deserialize(string json) {\n            // save the string for debug information\n            if (json == null) {\n                return null;\n            }\n \n            return Parser.Parse(json);\n        }\n \n        sealed class Parser : IDisposable {\n            const string WORD_BREAK = \"{}[],:\\\"\";\n \n            public static bool IsWordBreak(char c) {\n                return Char.IsWhiteSpace(c) || WORD_BREAK.IndexOf(c) != -1;\n            }\n \n            enum TOKEN {\n                NONE,\n                CURLY_OPEN,\n                CURLY_CLOSE,\n                SQUARED_OPEN,\n                SQUARED_CLOSE,\n                COLON,\n                COMMA,\n                STRING,\n                NUMBER,\n                TRUE,\n                FALSE,\n                NULL\n            };\n \n            StringReader json;\n \n            Parser(string jsonString) {\n                json = new StringReader(jsonString);\n            }\n \n            public static object Parse(string jsonString) {\n                using (var instance = new Parser(jsonString)) {\n                    return instance.ParseValue();\n                }\n            }\n \n            public void Dispose() {\n                json.Dispose();\n                json = null;\n            }\n \n            Dictionary<string, object> ParseObject() {\n                Dictionary<string, object> table = new Dictionary<string, object>();\n \n                // ditch opening brace\n                json.Read();\n \n                // {\n                while (true) {\n                    switch (NextToken) {\n                    case TOKEN.NONE:\n                        return null;\n                    case TOKEN.COMMA:\n                        continue;\n                    case TOKEN.CURLY_CLOSE:\n                        return table;\n                    default:\n                        // name\n                        string name = ParseString();\n                        if (name == null) {\n                            return null;\n                        }\n \n                        // :\n                        if (NextToken != TOKEN.COLON) {\n                            return null;\n                        }\n                        // ditch the colon\n                        json.Read();\n \n                        // value\n                        table[name] = ParseValue();\n                        break;\n                    }\n                }\n            }\n \n            List<object> ParseArray() {\n                List<object> array = new List<object>();\n \n                // ditch opening bracket\n                json.Read();\n \n                // [\n                var parsing = true;\n                while (parsing) {\n                    TOKEN nextToken = NextToken;\n \n                    switch (nextToken) {\n                    case TOKEN.NONE:\n                        return null;\n                    case TOKEN.COMMA:\n                        continue;\n                    case TOKEN.SQUARED_CLOSE:\n                        parsing = false;\n                        break;\n                    default:\n                        object value = ParseByToken(nextToken);\n \n                        array.Add(value);\n                        break;\n                    }\n                }\n \n                return array;\n            }\n \n            object ParseValue() {\n                TOKEN nextToken = NextToken;\n                return ParseByToken(nextToken);\n            }\n \n            object ParseByToken(TOKEN token) {\n                switch (token) {\n                case TOKEN.STRING:\n                    return ParseString();\n                case TOKEN.NUMBER:\n                    return ParseNumber();\n                case TOKEN.CURLY_OPEN:\n                    return ParseObject();\n                case TOKEN.SQUARED_OPEN:\n                    return ParseArray();\n                case TOKEN.TRUE:\n                    return true;\n                case TOKEN.FALSE:\n                    return false;\n                case TOKEN.NULL:\n                    return null;\n                default:\n                    return null;\n                }\n            }\n \n            string ParseString() {\n                StringBuilder s = new StringBuilder();\n                char c;\n \n                // ditch opening quote\n                json.Read();\n \n                bool parsing = true;\n                while (parsing) {\n \n                    if (json.Peek() == -1) {\n                        parsing = false;\n                        break;\n                    }\n \n                    c = NextChar;\n                    switch (c) {\n                    case '\"':\n                        parsing = false;\n                        break;\n                    case '\\\\':\n                        if (json.Peek() == -1) {\n                            parsing = false;\n                            break;\n                        }\n \n                        c = NextChar;\n                        switch (c) {\n                        case '\"':\n                        case '\\\\':\n                        case '/':\n                            s.Append(c);\n                            break;\n                        case 'b':\n                            s.Append('\\b');\n                            break;\n                        case 'f':\n                            s.Append('\\f');\n                            break;\n                        case 'n':\n                            s.Append('\\n');\n                            break;\n                        case 'r':\n                            s.Append('\\r');\n                            break;\n                        case 't':\n                            s.Append('\\t');\n                            break;\n                        case 'u':\n                            var hex = new char[4];\n \n                            for (int i=0; i< 4; i++) {\n                                hex[i] = NextChar;\n                            }\n \n                            s.Append((char) Convert.ToInt32(new string(hex), 16));\n                            break;\n                        }\n                        break;\n                    default:\n                        s.Append(c);\n                        break;\n                    }\n                }\n \n                return s.ToString();\n            }\n \n            object ParseNumber() {\n                string number = NextWord;\n \n                if (number.IndexOf('.') == -1) {\n                    long parsedInt;\n                    Int64.TryParse(number, out parsedInt);\n                    return parsedInt;\n                }\n \n                double parsedDouble;\n                Double.TryParse(number, out parsedDouble);\n                return parsedDouble;\n            }\n \n            void EatWhitespace() {\n                while (Char.IsWhiteSpace(PeekChar)) {\n                    json.Read();\n \n                    if (json.Peek() == -1) {\n                        break;\n                    }\n                }\n            }\n \n            char PeekChar {\n                get {\n                    return Convert.ToChar(json.Peek());\n                }\n            }\n \n            char NextChar {\n                get {\n                    return Convert.ToChar(json.Read());\n                }\n            }\n \n            string NextWord {\n                get {\n                    StringBuilder word = new StringBuilder();\n \n                    while (!IsWordBreak(PeekChar)) {\n                        word.Append(NextChar);\n \n                        if (json.Peek() == -1) {\n                            break;\n                        }\n                    }\n \n                    return word.ToString();\n                }\n            }\n \n            TOKEN NextToken {\n                get {\n                    EatWhitespace();\n \n                    if (json.Peek() == -1) {\n                        return TOKEN.NONE;\n                    }\n \n                    switch (PeekChar) {\n                    case '{':\n                        return TOKEN.CURLY_OPEN;\n                    case '}':\n                        json.Read();\n                        return TOKEN.CURLY_CLOSE;\n                    case '[':\n                        return TOKEN.SQUARED_OPEN;\n                    case ']':\n                        json.Read();\n                        return TOKEN.SQUARED_CLOSE;\n                    case ',':\n                        json.Read();\n                        return TOKEN.COMMA;\n                    case '\"':\n                        return TOKEN.STRING;\n                    case ':':\n                        return TOKEN.COLON;\n                    case '0':\n                    case '1':\n                    case '2':\n                    case '3':\n                    case '4':\n                    case '5':\n                    case '6':\n                    case '7':\n                    case '8':\n                    case '9':\n                    case '-':\n                        return TOKEN.NUMBER;\n                    }\n \n                    switch (NextWord) {\n                    case \"false\":\n                        return TOKEN.FALSE;\n                    case \"true\":\n                        return TOKEN.TRUE;\n                    case \"null\":\n                        return TOKEN.NULL;\n                    }\n \n                    return TOKEN.NONE;\n                }\n            }\n        }\n \n        /// <summary>\n        /// Converts a IDictionary / IList object or a simple type (string, int, etc.) into a JSON string\n        /// </summary>\n        /// <param name=\"json\">A Dictionary&lt;string, object&gt; / List&lt;object&gt;</param>\n        /// <returns>A JSON encoded string, or null if object 'json' is not serializable</returns>\n        public static string Serialize(object obj) {\n            return Serializer.Serialize(obj);\n        }\n \n        sealed class Serializer {\n            StringBuilder builder;\n \n            Serializer() {\n                builder = new StringBuilder();\n            }\n \n            public static string Serialize(object obj) {\n                var instance = new Serializer();\n \n                instance.SerializeValue(obj);\n \n                return instance.builder.ToString();\n            }\n \n            void SerializeValue(object value) {\n                IList asList;\n                IDictionary asDict;\n                string asStr;\n \n                if (value == null) {\n                    builder.Append(\"null\");\n                } else if ((asStr = value as string) != null) {\n                    SerializeString(asStr);\n                } else if (value is bool) {\n                    builder.Append((bool) value ? \"true\" : \"false\");\n                } else if ((asList = value as IList) != null) {\n                    SerializeArray(asList);\n                } else if ((asDict = value as IDictionary) != null) {\n                    SerializeObject(asDict);\n                } else if (value is char) {\n                    SerializeString(new string((char) value, 1));\n                } else {\n                    SerializeOther(value);\n                }\n            }\n \n            void SerializeObject(IDictionary obj) {\n                bool first = true;\n \n                builder.Append('{');\n \n                foreach (object e in obj.Keys) {\n                    if (!first) {\n                        builder.Append(',');\n                    }\n \n                    SerializeString(e.ToString());\n                    builder.Append(':');\n \n                    SerializeValue(obj[e]);\n \n                    first = false;\n                }\n \n                builder.Append('}');\n            }\n \n            void SerializeArray(IList anArray) {\n                builder.Append('[');\n \n                bool first = true;\n \n                foreach (object obj in anArray) {\n                    if (!first) {\n                        builder.Append(',');\n                    }\n \n                    SerializeValue(obj);\n \n                    first = false;\n                }\n \n                builder.Append(']');\n            }\n \n            void SerializeString(string str) {\n                builder.Append('\\\"');\n \n                char[] charArray = str.ToCharArray();\n                foreach (var c in charArray) {\n                    switch (c) {\n                    case '\"':\n                        builder.Append(\"\\\\\\\"\");\n                        break;\n                    case '\\\\':\n                        builder.Append(\"\\\\\\\\\");\n                        break;\n                    case '\\b':\n                        builder.Append(\"\\\\b\");\n                        break;\n                    case '\\f':\n                        builder.Append(\"\\\\f\");\n                        break;\n                    case '\\n':\n                        builder.Append(\"\\\\n\");\n                        break;\n                    case '\\r':\n                        builder.Append(\"\\\\r\");\n                        break;\n                    case '\\t':\n                        builder.Append(\"\\\\t\");\n                        break;\n                    default:\n                        int codepoint = Convert.ToInt32(c);\n                        if ((codepoint >= 32) && (codepoint <= 126)) {\n                            builder.Append(c);\n                        } else {\n                            builder.Append(\"\\\\u\");\n                            builder.Append(codepoint.ToString(\"x4\"));\n                        }\n                        break;\n                    }\n                }\n \n                builder.Append('\\\"');\n            }\n \n            void SerializeOther(object value) {\n                // NOTE: decimals lose precision during serialization.\n                // They always have, I'm just letting you know.\n                // Previously floats and doubles lost precision too.\n                if (value is float) {\n                    builder.Append(((float) value).ToString(\"R\"));\n                } else if (value is int\n                    || value is uint\n                    || value is long\n                    || value is sbyte\n                    || value is byte\n                    || value is short\n                    || value is ushort\n                    || value is ulong) {\n                    builder.Append(value);\n                } else if (value is double\n                    || value is decimal) {\n                    builder.Append(Convert.ToDouble(value).ToString(\"R\"));\n                } else {\n                    SerializeString(value.ToString());\n                }\n            }\n        }\n    }\n}\n```\n\n## 二.SimpleJson\n\n　　github地址：[SimpleJson](https://github.com/facebook-csharp-sdk/simple-json) \n\n　　你可以下载下来然后用vs打开选Net2.0编译出来一个dll（这里可能会报错，将文件EscapeToJavascriptStringTests去掉就正常了）。但是你也可以像前面那样，新建一个class，然后复制SimpleJson.cs的代码，点击SimpleJson.cs后会进到下面的详情网页，选择图中的Raw，就能进到代码页面，然后Ctrl+A进行全选复制。\n\n![Result pic 5](/contentimg/3/5.png \"Get Raw Codes\")\n\n\n## 三.LitJSON\n\n　　github地址：[LitJSON](https://github.com/LitJSON/litjson) \n\n　　这个生成超级烦，要搭.net core的环境。由于没接触core开发，后面我还是修改vs工程文件，去掉core后才能生成。\n\n　　（后面发现，其实这里是因为VS的版本问题，要新版本。这里有篇文章就是问这个的：[msbuild-of-vs2017-cannot-compile-net-standard-2-0-project](https://stackoverflow.com/questions/45979627/msbuild-of-vs2017-cannot-compile-net-standard-2-0-project)  查官网，只提到装2017，但是明明我的是2017（但是是16年底下载的，Core2.0是17年底出的），.NET Core 2.0.0 SDK这个也安装了，就是无法编译，其实是msbuild 版本。这个问题，和VS2010的msbuild编译不了2015版本的项目是一样的。所以如果装了新版本的，这里不用修改，是可以直接编译的。）\n\n　　这里也贴一下主页：[LitJSON](https://litjson.net/) \n\n　　以及一个老版本的直接dll下载地址：[DownloadDll](https://sourceforge.net/projects/litjson/) \n\n　　推荐直接下载github的然后自己编译，因为后面有更新，而网上那些，好多都是好几年前的版本。\n\n下面记录一下我怎么编译的：\n\n　　实际是修改vs工程文件，然后直接用vs打开就可以编译的，不过这里我也记录一下他自带的那些工具是怎么配置到可以用的。\n\n　　先记录怎么修改vs工程文件，目录中，实际只要用到\\litjson-develop\\src\\LitJson里的东西：\n\n![Result pic 6](/contentimg/3/6.png \"修改vs工程文件 LitJSON.csproj\")\n\n　　用记事本打开，ctrl+f查找包含“netstandard”的字段，就是下面截图红色部分，删掉：\n\n![Result pic 7](/contentimg/3/7.png \"修改LitJSON.csproj，删除部分编译条件\")\n\n　　这里简单说明一下为什么要删掉：\n\n　　“netstandard”部分是core环境的，目前我没搭这个环境，所以直接编译是会报错的。\n\n　　而中间的那个，是检查git的，如果你是部署了git，登陆了帐号，就没影响，可以更新并编译，不然就会报错。\n\n　　删掉上面红色部分后，用vs打开，直接编译就成功了。\n\n接下来介绍怎么修改自带的那些工具来生成，过程繁琐，不过不用修改vs工程文件：\n\n　　首先运行build.ps1，记住不是sh（这个是linux的），右键--&gt;使用PowerShell运行：\n\n![Result pic 8](/contentimg/3/8.png \"find build.ps1\")\n\n![Result pic 9](/contentimg/3/9.png \"run build.ps1\")\n\n　　出现下面这样的窗口，实际是里面代码，分析出你要安装这个环境的这个包，正常情况是一直下载不下来的，vpn也救不了，后面挂[百度云离线](https://pan.baidu.com/s/1qJMXKCqwyuIbe73ub3uueA%C2%A0)  （ 提取码：0osd）总算下载下来了。\n\n![Result pic 10](/contentimg/3/10.png \"get download link\")\n\n　　现在目录中多了一个文件夹，里面是安装core的环境的，可以安装，目前我系统是win10版：\n\n![Result pic 11](/contentimg/3/11.png \"Window Version\")\n\n　　这里也简单记一下怎么修改代码让dotnet-install.ps1文件能运行：\n\n　　首先右键-->编辑；里面好多脚本代码，和C#超级像，有兴趣可以去了解：\n\n![Result pic 12](/contentimg/3/12.png \"Open dotnet-install.ps1\")\n\n　　这里意思是传一个下载链接给它，然后下载解压（上面一堆脚本都是下载函数）。而现在这个url，是下不下来的，不过我们可以通过IIS，进行localhost下载：\n\n　　windows启用IIS，在程序与功能-->启用或关闭windows功能，然后你看到有iis的就打勾就行了。\n\n![Result pic 13](/contentimg/3/13.png \"Run IIS\")\n\n　　然后找到上面图中这个，点击“浏览”，把刚才通过百度云下载的dotnet-sdk-2.1.4-win-x64.zip复制过去，当然还有复制dotnet-install.ps1这个文件，不过.ps1这个后缀，在iis里面不能访问，所以我修改成txt，反正脚本中只是找文件下载，下载后保存的命名是自己定的。\n\n![Result pic 14](/contentimg/3/14.png \"Files\")\n\n　　然后就是修改脚本：\n\n![Result pic 15](/contentimg/3/15.png \"Edit Scripts\")\n\n　　修改build.ps1，告诉它去localhost目录下载这个txt；同时修改这个txt去localhost下载这个zip。\n\n　　这样就能正常运行了，但是这里由于网络原因，还会报错，就安装cake部分，不过可以重新启动就行，cake的下载和安装过程较顺利，安装好后多了3个文件夹：\n\n![Result pic 16](/contentimg/3/16.png \"Cake Files\")\n\n　　一个是检查git的，一个是编译工具cake。\n\n　　所以如果想用这个工具编译，最好是登陆git的，这样就能用自带工具编译了，core也能编译：\n\n![Result pic 17](/contentimg/3/17.png \"Run build.ps1\")\n\n　　这里我删了core的环境安装部分，然后直接运行build.ps1就可以了。\n\n　　这种方式就不用修改vs工程文件。\n\n　　从ps1文件里面了解到，是调用cake来编译的，所以，其实我们可以直接cmd来操作：\n\n![Result pic 18](/contentimg/3/18.png \"build by cake\")\n\n　　cmd到build.cake所在目录，然后调用cake.exe。\n\n## 四.Newtonsoft.Json\n\n　　主页：[www.newtonsoft.com](https://www.newtonsoft.com/json) \n\n　　github地址：[Newtonsoft.Json](https://github.com/JamesNK/Newtonsoft.Json) \n\n　　这个就编译比较简单，但是会报错readonly struct（去掉readonly就行），用vs编辑工程文件，像前面那个一样删掉core和phone等等那些选项，然后再编译就能编译通过。自带的脚本也是，下载部分很顺利就能下载，155m左右；但是还有附加的编译环境，也是core的。\n\n　　这里这个错，其实是C# 7的特性，老版本的vs都不支持。然后core的问题，其实也是更新新版本vs就能解决，后面我更新了新版本后，msbuild版本上来了，就能正常编译了。为什么在第三个那里没注意到时msbuild，因为那里用的是cake，所以当时是能用脚本编译，但是不能vs编译，后面找多点资料后才想起是这个可能。所以这里我就直接更新vs，然后就能直接编译了。什么都不用改。\n\n　　这里放一下vs2017最新版的安装索引包吧：\n\n两个官网下载地址：\n\n　　地址1：[vs2017-relnotes#15.1.26430.06](https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2017-relnotes#15.1.26430.06) \n\n　　地址2：[visualstudio.microsoft.com](https://visualstudio.microsoft.com/zh-hans/downloads/) \n\n　　以及.NET downloads：[.NET](https://www.microsoft.com/net/download) \n\n　　附加一下百度云，就是本篇文章用到的配置环境所要下载的东西（要vpn的那几个）：\n\n　　[链接](https://pan.baidu.com/s/1X0HYx4geqPqSh-WD5xBbXg)  提取码：1t2x\n\n　　这里有个文章提到这个新特性：[C# 7 Series, Part 6: Read-only structs](https://blogs.msdn.microsoft.com/mazhou/2017/11/21/c-7-series-part-6-read-only-structs/) \n\n![Result pic 19](/contentimg/3/19.png \"Git edit History\")\n\n　　以及两篇介绍的：\n\n　　[.NET Core 2.0及.NET Standard 2.0](https://www.cnblogs.com/zjoch/p/6696986.html) \n\n　　[NET Standard/Core中配置使用TargetFrameworks输出多版本类库及测试：](https://blog.csdn.net/starfd/article/details/78839704) \n\n　　平时用这个库比较多的原因，就是可定制化高，可以设置[null值要不要序列化](https://www.cnblogs.com/sczmzx/p/7813715.html)  ，等等之类的定制。\n\n结尾附几个博主写的库分享：\n\n　　[序列化效率比拼——谁是最后的赢家Newtonsoft.Json](https://www.cnblogs.com/landeanfen/p/4627383.html) \n\n　　[几个常用Json组件的性能测试](https://www.cnblogs.com/blqw/p/3274229.html) \n\n","source":"_posts/3JsonDeal.md","raw":"---\ntitle: Json解析C#的四个库\ndate: 2018-10-15 22:55:58\ncategories:\n  - 开源库分享\ntags:\n  - C#\n  - Json\n---\n\n　　目前通讯中http是使用最多的，而其中Json基本是首选。大家平时解析时都是直接调用dll，但是有没有考虑过dll里面怎么处理？这个dll又从哪里来？本文将分享我接触到的4个解析Json的C#开源库。\n<!-- more -->\n　　目前我用得较多的是Newtonsoft ，后面了解到还有轻量的MiniJSON，SimpleJson以及litjson。\n\n　　这里MiniJSON最精简，是一个class文件，通过对string进行简单字符串的处理来解析。\n\n　　然后就是SimpleJson，也是一个class文件，不过代码量超级多，功能相对比较全面。看其他博客对这个评价蛮高的，不过我没使用过，暂不评价。\n\n　　litjson，就文件多一点，好几个class组成。但是看部分博客提到跨平台上有问题。\n\n　　由于之前是做windows应用，所以一直使用的是Newtonsoft，代码量远超上面的几个，编译出来的dll也是比他们的要大。所以，比较推荐用Newtonsoft，可定制化高很多，功能和内部考虑的东西也完善。\n\n　　本文暂不讲怎么使用，只简单介绍怎么去github获取上面几个的源码，以及怎么编译。\n\n　　提到github，这是一个好东西，好多好的开源项目都在上面。不过国内网速超级慢，使用起来不是很方便。一般情况下，可以不注册账号直接下载项目代码，下载下来是一个zip文件。也可以用VS里面的扩展插件GitHub Extension for Visual Studio，下载安装过程有点久，请耐心等待：\n\n![Result pic 1](/contentimg/3/1.png \"GitHub Extension for Visual Studio\")\n\n　　使用起来相对没svn好用(当然，这里是可以用svn来使用的)。\n\n　　推荐使用客户端：[GitHubDesktop](https://desktop.github.com/) 下载下来的应该是一个77M的全量包，直接安装就可以使用：\n\n![Result pic 2](/contentimg/3/2.png \"GitHubDesktop\")\n\n　　这里使用到的就是File--&gt;Clone...；打开后\n\n![Result pic 3](/contentimg/3/3.png \"Clone a repository\")\n\n　　这里的url，就是网页上获取的：\n\n![Result pic 4](/contentimg/3/4.png \"Clone with HTTPS\")\n\n　　这里贴一下看到的其他博主写的专门介绍GitHub Desktop的：[Windows 上 GitHub Desktop 的操作](https://www.cnblogs.com/hanford/p/6038417.html) \n\n## 一.MiniJSON\n\n　　github地址：[MiniJSON](https://gist.github.com/darktable/1411710) \n\n　　直接在你的项目中新建一个class，全选代码后复制过去，就可以使用了。\n\n　　由于需要vpn，所以这里放一下代码吧：\n\n\n``` java\n/*\n * Copyright (c) 2013 Calvin Rien\n *\n * Based on the JSON parser by Patrick van Bergen\n * http://techblog.procurios.nl/k/618/news/view/14605/14863/How-do-I-write-my-own-parser-for-JSON.html\n *\n * Simplified it so that it doesn't throw exceptions\n * and can be used in Unity iPhone with maximum code stripping.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Text;\n \nnamespace MiniJSON {\n    // Example usage:\n    //\n    //  using UnityEngine;\n    //  using System.Collections;\n    //  using System.Collections.Generic;\n    //  using MiniJSON;\n    //\n    //  public class MiniJSONTest : MonoBehaviour {\n    //      void Start () {\n    //          var jsonString = \"{ \\\"array\\\": [1.44,2,3], \" +\n    //                          \"\\\"object\\\": {\\\"key1\\\":\\\"value1\\\", \\\"key2\\\":256}, \" +\n    //                          \"\\\"string\\\": \\\"The quick brown fox \\\\\\\"jumps\\\\\\\" over the lazy dog \\\", \" +\n    //                          \"\\\"unicode\\\": \\\"\\\\u3041 Men\\u00fa sesi\\u00f3n\\\", \" +\n    //                          \"\\\"int\\\": 65536, \" +\n    //                          \"\\\"float\\\": 3.1415926, \" +\n    //                          \"\\\"bool\\\": true, \" +\n    //                          \"\\\"null\\\": null }\";\n    //\n    //          var dict = Json.Deserialize(jsonString) as Dictionary<string,object>;\n    //\n    //          Debug.Log(\"deserialized: \" + dict.GetType());\n    //          Debug.Log(\"dict['array'][0]: \" + ((List<object>) dict[\"array\"])[0]);\n    //          Debug.Log(\"dict['string']: \" + (string) dict[\"string\"]);\n    //          Debug.Log(\"dict['float']: \" + (double) dict[\"float\"]); // floats come out as doubles\n    //          Debug.Log(\"dict['int']: \" + (long) dict[\"int\"]); // ints come out as longs\n    //          Debug.Log(\"dict['unicode']: \" + (string) dict[\"unicode\"]);\n    //\n    //          var str = Json.Serialize(dict);\n    //\n    //          Debug.Log(\"serialized: \" + str);\n    //      }\n    //  }\n \n    /// <summary>\n    /// This class encodes and decodes JSON strings.\n    /// Spec. details, see http://www.json.org/\n    ///\n    /// JSON uses Arrays and Objects. These correspond here to the datatypes IList and IDictionary.\n    /// All numbers are parsed to doubles.\n    /// </summary>\n    public static class Json {\n        /// <summary>\n        /// Parses the string json into a value\n        /// </summary>\n        /// <param name=\"json\">A JSON string.</param>\n        /// <returns>An List&lt;object&gt;, a Dictionary&lt;string, object&gt;, a double, an integer,a string, null, true, or false</returns>\n        public static object Deserialize(string json) {\n            // save the string for debug information\n            if (json == null) {\n                return null;\n            }\n \n            return Parser.Parse(json);\n        }\n \n        sealed class Parser : IDisposable {\n            const string WORD_BREAK = \"{}[],:\\\"\";\n \n            public static bool IsWordBreak(char c) {\n                return Char.IsWhiteSpace(c) || WORD_BREAK.IndexOf(c) != -1;\n            }\n \n            enum TOKEN {\n                NONE,\n                CURLY_OPEN,\n                CURLY_CLOSE,\n                SQUARED_OPEN,\n                SQUARED_CLOSE,\n                COLON,\n                COMMA,\n                STRING,\n                NUMBER,\n                TRUE,\n                FALSE,\n                NULL\n            };\n \n            StringReader json;\n \n            Parser(string jsonString) {\n                json = new StringReader(jsonString);\n            }\n \n            public static object Parse(string jsonString) {\n                using (var instance = new Parser(jsonString)) {\n                    return instance.ParseValue();\n                }\n            }\n \n            public void Dispose() {\n                json.Dispose();\n                json = null;\n            }\n \n            Dictionary<string, object> ParseObject() {\n                Dictionary<string, object> table = new Dictionary<string, object>();\n \n                // ditch opening brace\n                json.Read();\n \n                // {\n                while (true) {\n                    switch (NextToken) {\n                    case TOKEN.NONE:\n                        return null;\n                    case TOKEN.COMMA:\n                        continue;\n                    case TOKEN.CURLY_CLOSE:\n                        return table;\n                    default:\n                        // name\n                        string name = ParseString();\n                        if (name == null) {\n                            return null;\n                        }\n \n                        // :\n                        if (NextToken != TOKEN.COLON) {\n                            return null;\n                        }\n                        // ditch the colon\n                        json.Read();\n \n                        // value\n                        table[name] = ParseValue();\n                        break;\n                    }\n                }\n            }\n \n            List<object> ParseArray() {\n                List<object> array = new List<object>();\n \n                // ditch opening bracket\n                json.Read();\n \n                // [\n                var parsing = true;\n                while (parsing) {\n                    TOKEN nextToken = NextToken;\n \n                    switch (nextToken) {\n                    case TOKEN.NONE:\n                        return null;\n                    case TOKEN.COMMA:\n                        continue;\n                    case TOKEN.SQUARED_CLOSE:\n                        parsing = false;\n                        break;\n                    default:\n                        object value = ParseByToken(nextToken);\n \n                        array.Add(value);\n                        break;\n                    }\n                }\n \n                return array;\n            }\n \n            object ParseValue() {\n                TOKEN nextToken = NextToken;\n                return ParseByToken(nextToken);\n            }\n \n            object ParseByToken(TOKEN token) {\n                switch (token) {\n                case TOKEN.STRING:\n                    return ParseString();\n                case TOKEN.NUMBER:\n                    return ParseNumber();\n                case TOKEN.CURLY_OPEN:\n                    return ParseObject();\n                case TOKEN.SQUARED_OPEN:\n                    return ParseArray();\n                case TOKEN.TRUE:\n                    return true;\n                case TOKEN.FALSE:\n                    return false;\n                case TOKEN.NULL:\n                    return null;\n                default:\n                    return null;\n                }\n            }\n \n            string ParseString() {\n                StringBuilder s = new StringBuilder();\n                char c;\n \n                // ditch opening quote\n                json.Read();\n \n                bool parsing = true;\n                while (parsing) {\n \n                    if (json.Peek() == -1) {\n                        parsing = false;\n                        break;\n                    }\n \n                    c = NextChar;\n                    switch (c) {\n                    case '\"':\n                        parsing = false;\n                        break;\n                    case '\\\\':\n                        if (json.Peek() == -1) {\n                            parsing = false;\n                            break;\n                        }\n \n                        c = NextChar;\n                        switch (c) {\n                        case '\"':\n                        case '\\\\':\n                        case '/':\n                            s.Append(c);\n                            break;\n                        case 'b':\n                            s.Append('\\b');\n                            break;\n                        case 'f':\n                            s.Append('\\f');\n                            break;\n                        case 'n':\n                            s.Append('\\n');\n                            break;\n                        case 'r':\n                            s.Append('\\r');\n                            break;\n                        case 't':\n                            s.Append('\\t');\n                            break;\n                        case 'u':\n                            var hex = new char[4];\n \n                            for (int i=0; i< 4; i++) {\n                                hex[i] = NextChar;\n                            }\n \n                            s.Append((char) Convert.ToInt32(new string(hex), 16));\n                            break;\n                        }\n                        break;\n                    default:\n                        s.Append(c);\n                        break;\n                    }\n                }\n \n                return s.ToString();\n            }\n \n            object ParseNumber() {\n                string number = NextWord;\n \n                if (number.IndexOf('.') == -1) {\n                    long parsedInt;\n                    Int64.TryParse(number, out parsedInt);\n                    return parsedInt;\n                }\n \n                double parsedDouble;\n                Double.TryParse(number, out parsedDouble);\n                return parsedDouble;\n            }\n \n            void EatWhitespace() {\n                while (Char.IsWhiteSpace(PeekChar)) {\n                    json.Read();\n \n                    if (json.Peek() == -1) {\n                        break;\n                    }\n                }\n            }\n \n            char PeekChar {\n                get {\n                    return Convert.ToChar(json.Peek());\n                }\n            }\n \n            char NextChar {\n                get {\n                    return Convert.ToChar(json.Read());\n                }\n            }\n \n            string NextWord {\n                get {\n                    StringBuilder word = new StringBuilder();\n \n                    while (!IsWordBreak(PeekChar)) {\n                        word.Append(NextChar);\n \n                        if (json.Peek() == -1) {\n                            break;\n                        }\n                    }\n \n                    return word.ToString();\n                }\n            }\n \n            TOKEN NextToken {\n                get {\n                    EatWhitespace();\n \n                    if (json.Peek() == -1) {\n                        return TOKEN.NONE;\n                    }\n \n                    switch (PeekChar) {\n                    case '{':\n                        return TOKEN.CURLY_OPEN;\n                    case '}':\n                        json.Read();\n                        return TOKEN.CURLY_CLOSE;\n                    case '[':\n                        return TOKEN.SQUARED_OPEN;\n                    case ']':\n                        json.Read();\n                        return TOKEN.SQUARED_CLOSE;\n                    case ',':\n                        json.Read();\n                        return TOKEN.COMMA;\n                    case '\"':\n                        return TOKEN.STRING;\n                    case ':':\n                        return TOKEN.COLON;\n                    case '0':\n                    case '1':\n                    case '2':\n                    case '3':\n                    case '4':\n                    case '5':\n                    case '6':\n                    case '7':\n                    case '8':\n                    case '9':\n                    case '-':\n                        return TOKEN.NUMBER;\n                    }\n \n                    switch (NextWord) {\n                    case \"false\":\n                        return TOKEN.FALSE;\n                    case \"true\":\n                        return TOKEN.TRUE;\n                    case \"null\":\n                        return TOKEN.NULL;\n                    }\n \n                    return TOKEN.NONE;\n                }\n            }\n        }\n \n        /// <summary>\n        /// Converts a IDictionary / IList object or a simple type (string, int, etc.) into a JSON string\n        /// </summary>\n        /// <param name=\"json\">A Dictionary&lt;string, object&gt; / List&lt;object&gt;</param>\n        /// <returns>A JSON encoded string, or null if object 'json' is not serializable</returns>\n        public static string Serialize(object obj) {\n            return Serializer.Serialize(obj);\n        }\n \n        sealed class Serializer {\n            StringBuilder builder;\n \n            Serializer() {\n                builder = new StringBuilder();\n            }\n \n            public static string Serialize(object obj) {\n                var instance = new Serializer();\n \n                instance.SerializeValue(obj);\n \n                return instance.builder.ToString();\n            }\n \n            void SerializeValue(object value) {\n                IList asList;\n                IDictionary asDict;\n                string asStr;\n \n                if (value == null) {\n                    builder.Append(\"null\");\n                } else if ((asStr = value as string) != null) {\n                    SerializeString(asStr);\n                } else if (value is bool) {\n                    builder.Append((bool) value ? \"true\" : \"false\");\n                } else if ((asList = value as IList) != null) {\n                    SerializeArray(asList);\n                } else if ((asDict = value as IDictionary) != null) {\n                    SerializeObject(asDict);\n                } else if (value is char) {\n                    SerializeString(new string((char) value, 1));\n                } else {\n                    SerializeOther(value);\n                }\n            }\n \n            void SerializeObject(IDictionary obj) {\n                bool first = true;\n \n                builder.Append('{');\n \n                foreach (object e in obj.Keys) {\n                    if (!first) {\n                        builder.Append(',');\n                    }\n \n                    SerializeString(e.ToString());\n                    builder.Append(':');\n \n                    SerializeValue(obj[e]);\n \n                    first = false;\n                }\n \n                builder.Append('}');\n            }\n \n            void SerializeArray(IList anArray) {\n                builder.Append('[');\n \n                bool first = true;\n \n                foreach (object obj in anArray) {\n                    if (!first) {\n                        builder.Append(',');\n                    }\n \n                    SerializeValue(obj);\n \n                    first = false;\n                }\n \n                builder.Append(']');\n            }\n \n            void SerializeString(string str) {\n                builder.Append('\\\"');\n \n                char[] charArray = str.ToCharArray();\n                foreach (var c in charArray) {\n                    switch (c) {\n                    case '\"':\n                        builder.Append(\"\\\\\\\"\");\n                        break;\n                    case '\\\\':\n                        builder.Append(\"\\\\\\\\\");\n                        break;\n                    case '\\b':\n                        builder.Append(\"\\\\b\");\n                        break;\n                    case '\\f':\n                        builder.Append(\"\\\\f\");\n                        break;\n                    case '\\n':\n                        builder.Append(\"\\\\n\");\n                        break;\n                    case '\\r':\n                        builder.Append(\"\\\\r\");\n                        break;\n                    case '\\t':\n                        builder.Append(\"\\\\t\");\n                        break;\n                    default:\n                        int codepoint = Convert.ToInt32(c);\n                        if ((codepoint >= 32) && (codepoint <= 126)) {\n                            builder.Append(c);\n                        } else {\n                            builder.Append(\"\\\\u\");\n                            builder.Append(codepoint.ToString(\"x4\"));\n                        }\n                        break;\n                    }\n                }\n \n                builder.Append('\\\"');\n            }\n \n            void SerializeOther(object value) {\n                // NOTE: decimals lose precision during serialization.\n                // They always have, I'm just letting you know.\n                // Previously floats and doubles lost precision too.\n                if (value is float) {\n                    builder.Append(((float) value).ToString(\"R\"));\n                } else if (value is int\n                    || value is uint\n                    || value is long\n                    || value is sbyte\n                    || value is byte\n                    || value is short\n                    || value is ushort\n                    || value is ulong) {\n                    builder.Append(value);\n                } else if (value is double\n                    || value is decimal) {\n                    builder.Append(Convert.ToDouble(value).ToString(\"R\"));\n                } else {\n                    SerializeString(value.ToString());\n                }\n            }\n        }\n    }\n}\n```\n\n## 二.SimpleJson\n\n　　github地址：[SimpleJson](https://github.com/facebook-csharp-sdk/simple-json) \n\n　　你可以下载下来然后用vs打开选Net2.0编译出来一个dll（这里可能会报错，将文件EscapeToJavascriptStringTests去掉就正常了）。但是你也可以像前面那样，新建一个class，然后复制SimpleJson.cs的代码，点击SimpleJson.cs后会进到下面的详情网页，选择图中的Raw，就能进到代码页面，然后Ctrl+A进行全选复制。\n\n![Result pic 5](/contentimg/3/5.png \"Get Raw Codes\")\n\n\n## 三.LitJSON\n\n　　github地址：[LitJSON](https://github.com/LitJSON/litjson) \n\n　　这个生成超级烦，要搭.net core的环境。由于没接触core开发，后面我还是修改vs工程文件，去掉core后才能生成。\n\n　　（后面发现，其实这里是因为VS的版本问题，要新版本。这里有篇文章就是问这个的：[msbuild-of-vs2017-cannot-compile-net-standard-2-0-project](https://stackoverflow.com/questions/45979627/msbuild-of-vs2017-cannot-compile-net-standard-2-0-project)  查官网，只提到装2017，但是明明我的是2017（但是是16年底下载的，Core2.0是17年底出的），.NET Core 2.0.0 SDK这个也安装了，就是无法编译，其实是msbuild 版本。这个问题，和VS2010的msbuild编译不了2015版本的项目是一样的。所以如果装了新版本的，这里不用修改，是可以直接编译的。）\n\n　　这里也贴一下主页：[LitJSON](https://litjson.net/) \n\n　　以及一个老版本的直接dll下载地址：[DownloadDll](https://sourceforge.net/projects/litjson/) \n\n　　推荐直接下载github的然后自己编译，因为后面有更新，而网上那些，好多都是好几年前的版本。\n\n下面记录一下我怎么编译的：\n\n　　实际是修改vs工程文件，然后直接用vs打开就可以编译的，不过这里我也记录一下他自带的那些工具是怎么配置到可以用的。\n\n　　先记录怎么修改vs工程文件，目录中，实际只要用到\\litjson-develop\\src\\LitJson里的东西：\n\n![Result pic 6](/contentimg/3/6.png \"修改vs工程文件 LitJSON.csproj\")\n\n　　用记事本打开，ctrl+f查找包含“netstandard”的字段，就是下面截图红色部分，删掉：\n\n![Result pic 7](/contentimg/3/7.png \"修改LitJSON.csproj，删除部分编译条件\")\n\n　　这里简单说明一下为什么要删掉：\n\n　　“netstandard”部分是core环境的，目前我没搭这个环境，所以直接编译是会报错的。\n\n　　而中间的那个，是检查git的，如果你是部署了git，登陆了帐号，就没影响，可以更新并编译，不然就会报错。\n\n　　删掉上面红色部分后，用vs打开，直接编译就成功了。\n\n接下来介绍怎么修改自带的那些工具来生成，过程繁琐，不过不用修改vs工程文件：\n\n　　首先运行build.ps1，记住不是sh（这个是linux的），右键--&gt;使用PowerShell运行：\n\n![Result pic 8](/contentimg/3/8.png \"find build.ps1\")\n\n![Result pic 9](/contentimg/3/9.png \"run build.ps1\")\n\n　　出现下面这样的窗口，实际是里面代码，分析出你要安装这个环境的这个包，正常情况是一直下载不下来的，vpn也救不了，后面挂[百度云离线](https://pan.baidu.com/s/1qJMXKCqwyuIbe73ub3uueA%C2%A0)  （ 提取码：0osd）总算下载下来了。\n\n![Result pic 10](/contentimg/3/10.png \"get download link\")\n\n　　现在目录中多了一个文件夹，里面是安装core的环境的，可以安装，目前我系统是win10版：\n\n![Result pic 11](/contentimg/3/11.png \"Window Version\")\n\n　　这里也简单记一下怎么修改代码让dotnet-install.ps1文件能运行：\n\n　　首先右键-->编辑；里面好多脚本代码，和C#超级像，有兴趣可以去了解：\n\n![Result pic 12](/contentimg/3/12.png \"Open dotnet-install.ps1\")\n\n　　这里意思是传一个下载链接给它，然后下载解压（上面一堆脚本都是下载函数）。而现在这个url，是下不下来的，不过我们可以通过IIS，进行localhost下载：\n\n　　windows启用IIS，在程序与功能-->启用或关闭windows功能，然后你看到有iis的就打勾就行了。\n\n![Result pic 13](/contentimg/3/13.png \"Run IIS\")\n\n　　然后找到上面图中这个，点击“浏览”，把刚才通过百度云下载的dotnet-sdk-2.1.4-win-x64.zip复制过去，当然还有复制dotnet-install.ps1这个文件，不过.ps1这个后缀，在iis里面不能访问，所以我修改成txt，反正脚本中只是找文件下载，下载后保存的命名是自己定的。\n\n![Result pic 14](/contentimg/3/14.png \"Files\")\n\n　　然后就是修改脚本：\n\n![Result pic 15](/contentimg/3/15.png \"Edit Scripts\")\n\n　　修改build.ps1，告诉它去localhost目录下载这个txt；同时修改这个txt去localhost下载这个zip。\n\n　　这样就能正常运行了，但是这里由于网络原因，还会报错，就安装cake部分，不过可以重新启动就行，cake的下载和安装过程较顺利，安装好后多了3个文件夹：\n\n![Result pic 16](/contentimg/3/16.png \"Cake Files\")\n\n　　一个是检查git的，一个是编译工具cake。\n\n　　所以如果想用这个工具编译，最好是登陆git的，这样就能用自带工具编译了，core也能编译：\n\n![Result pic 17](/contentimg/3/17.png \"Run build.ps1\")\n\n　　这里我删了core的环境安装部分，然后直接运行build.ps1就可以了。\n\n　　这种方式就不用修改vs工程文件。\n\n　　从ps1文件里面了解到，是调用cake来编译的，所以，其实我们可以直接cmd来操作：\n\n![Result pic 18](/contentimg/3/18.png \"build by cake\")\n\n　　cmd到build.cake所在目录，然后调用cake.exe。\n\n## 四.Newtonsoft.Json\n\n　　主页：[www.newtonsoft.com](https://www.newtonsoft.com/json) \n\n　　github地址：[Newtonsoft.Json](https://github.com/JamesNK/Newtonsoft.Json) \n\n　　这个就编译比较简单，但是会报错readonly struct（去掉readonly就行），用vs编辑工程文件，像前面那个一样删掉core和phone等等那些选项，然后再编译就能编译通过。自带的脚本也是，下载部分很顺利就能下载，155m左右；但是还有附加的编译环境，也是core的。\n\n　　这里这个错，其实是C# 7的特性，老版本的vs都不支持。然后core的问题，其实也是更新新版本vs就能解决，后面我更新了新版本后，msbuild版本上来了，就能正常编译了。为什么在第三个那里没注意到时msbuild，因为那里用的是cake，所以当时是能用脚本编译，但是不能vs编译，后面找多点资料后才想起是这个可能。所以这里我就直接更新vs，然后就能直接编译了。什么都不用改。\n\n　　这里放一下vs2017最新版的安装索引包吧：\n\n两个官网下载地址：\n\n　　地址1：[vs2017-relnotes#15.1.26430.06](https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2017-relnotes#15.1.26430.06) \n\n　　地址2：[visualstudio.microsoft.com](https://visualstudio.microsoft.com/zh-hans/downloads/) \n\n　　以及.NET downloads：[.NET](https://www.microsoft.com/net/download) \n\n　　附加一下百度云，就是本篇文章用到的配置环境所要下载的东西（要vpn的那几个）：\n\n　　[链接](https://pan.baidu.com/s/1X0HYx4geqPqSh-WD5xBbXg)  提取码：1t2x\n\n　　这里有个文章提到这个新特性：[C# 7 Series, Part 6: Read-only structs](https://blogs.msdn.microsoft.com/mazhou/2017/11/21/c-7-series-part-6-read-only-structs/) \n\n![Result pic 19](/contentimg/3/19.png \"Git edit History\")\n\n　　以及两篇介绍的：\n\n　　[.NET Core 2.0及.NET Standard 2.0](https://www.cnblogs.com/zjoch/p/6696986.html) \n\n　　[NET Standard/Core中配置使用TargetFrameworks输出多版本类库及测试：](https://blog.csdn.net/starfd/article/details/78839704) \n\n　　平时用这个库比较多的原因，就是可定制化高，可以设置[null值要不要序列化](https://www.cnblogs.com/sczmzx/p/7813715.html)  ，等等之类的定制。\n\n结尾附几个博主写的库分享：\n\n　　[序列化效率比拼——谁是最后的赢家Newtonsoft.Json](https://www.cnblogs.com/landeanfen/p/4627383.html) \n\n　　[几个常用Json组件的性能测试](https://www.cnblogs.com/blqw/p/3274229.html) \n\n","slug":"3JsonDeal","published":1,"updated":"2018-10-18T01:58:00.922Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvklgsbj006ajo9chrrkygv6","content":"<p>　　目前通讯中http是使用最多的，而其中Json基本是首选。大家平时解析时都是直接调用dll，但是有没有考虑过dll里面怎么处理？这个dll又从哪里来？本文将分享我接触到的4个解析Json的C#开源库。<br><a id=\"more\"></a><br>　　目前我用得较多的是Newtonsoft ，后面了解到还有轻量的MiniJSON，SimpleJson以及litjson。</p>\n<p>　　这里MiniJSON最精简，是一个class文件，通过对string进行简单字符串的处理来解析。</p>\n<p>　　然后就是SimpleJson，也是一个class文件，不过代码量超级多，功能相对比较全面。看其他博客对这个评价蛮高的，不过我没使用过，暂不评价。</p>\n<p>　　litjson，就文件多一点，好几个class组成。但是看部分博客提到跨平台上有问题。</p>\n<p>　　由于之前是做windows应用，所以一直使用的是Newtonsoft，代码量远超上面的几个，编译出来的dll也是比他们的要大。所以，比较推荐用Newtonsoft，可定制化高很多，功能和内部考虑的东西也完善。</p>\n<p>　　本文暂不讲怎么使用，只简单介绍怎么去github获取上面几个的源码，以及怎么编译。</p>\n<p>　　提到github，这是一个好东西，好多好的开源项目都在上面。不过国内网速超级慢，使用起来不是很方便。一般情况下，可以不注册账号直接下载项目代码，下载下来是一个zip文件。也可以用VS里面的扩展插件GitHub Extension for Visual Studio，下载安装过程有点久，请耐心等待：</p>\n<p><img src=\"/contentimg/3/1.png\" alt=\"Result pic 1\" title=\"GitHub Extension for Visual Studio\"></p>\n<p>　　使用起来相对没svn好用(当然，这里是可以用svn来使用的)。</p>\n<p>　　推荐使用客户端：<a href=\"https://desktop.github.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">GitHubDesktop</a> 下载下来的应该是一个77M的全量包，直接安装就可以使用：</p>\n<p><img src=\"/contentimg/3/2.png\" alt=\"Result pic 2\" title=\"GitHubDesktop\"></p>\n<p>　　这里使用到的就是File–&gt;Clone…；打开后</p>\n<p><img src=\"/contentimg/3/3.png\" alt=\"Result pic 3\" title=\"Clone a repository\"></p>\n<p>　　这里的url，就是网页上获取的：</p>\n<p><img src=\"/contentimg/3/4.png\" alt=\"Result pic 4\" title=\"Clone with HTTPS\"></p>\n<p>　　这里贴一下看到的其他博主写的专门介绍GitHub Desktop的：<a href=\"https://www.cnblogs.com/hanford/p/6038417.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Windows 上 GitHub Desktop 的操作</a> </p>\n<h2 id=\"一-MiniJSON\"><a href=\"#一-MiniJSON\" class=\"headerlink\" title=\"一.MiniJSON\"></a>一.MiniJSON</h2><p>　　github地址：<a href=\"https://gist.github.com/darktable/1411710\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">MiniJSON</a> </p>\n<p>　　直接在你的项目中新建一个class，全选代码后复制过去，就可以使用了。</p>\n<p>　　由于需要vpn，所以这里放一下代码吧：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Copyright (c) 2013 Calvin Rien</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * Based on the JSON parser by Patrick van Bergen</span></span><br><span class=\"line\"><span class=\"comment\"> * http://techblog.procurios.nl/k/618/news/view/14605/14863/How-do-I-write-my-own-parser-for-JSON.html</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * Simplified it so that it doesn't throw exceptions</span></span><br><span class=\"line\"><span class=\"comment\"> * and can be used in Unity iPhone with maximum code stripping.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * Permission is hereby granted, free of charge, to any person obtaining</span></span><br><span class=\"line\"><span class=\"comment\"> * a copy of this software and associated documentation files (the</span></span><br><span class=\"line\"><span class=\"comment\"> * \"Software\"), to deal in the Software without restriction, including</span></span><br><span class=\"line\"><span class=\"comment\"> * without limitation the rights to use, copy, modify, merge, publish,</span></span><br><span class=\"line\"><span class=\"comment\"> * distribute, sublicense, and/or sell copies of the Software, and to</span></span><br><span class=\"line\"><span class=\"comment\"> * permit persons to whom the Software is furnished to do so, subject to</span></span><br><span class=\"line\"><span class=\"comment\"> * the following conditions:</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * The above copyright notice and this permission notice shall be</span></span><br><span class=\"line\"><span class=\"comment\"> * included in all copies or substantial portions of the Software.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,</span></span><br><span class=\"line\"><span class=\"comment\"> * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></span><br><span class=\"line\"><span class=\"comment\"> * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></span><br><span class=\"line\"><span class=\"comment\"> * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY</span></span><br><span class=\"line\"><span class=\"comment\"> * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,</span></span><br><span class=\"line\"><span class=\"comment\"> * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE</span></span><br><span class=\"line\"><span class=\"comment\"> * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using System.IO;</span><br><span class=\"line\">using System.Text;</span><br><span class=\"line\"> </span><br><span class=\"line\">namespace MiniJSON &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Example usage:</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">//  using UnityEngine;</span></span><br><span class=\"line\">    <span class=\"comment\">//  using System.Collections;</span></span><br><span class=\"line\">    <span class=\"comment\">//  using System.Collections.Generic;</span></span><br><span class=\"line\">    <span class=\"comment\">//  using MiniJSON;</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">//  public class MiniJSONTest : MonoBehaviour &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//      void Start () &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//          var jsonString = \"&#123; \\\"array\\\": [1.44,2,3], \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"object\\\": &#123;\\\"key1\\\":\\\"value1\\\", \\\"key2\\\":256&#125;, \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"string\\\": \\\"The quick brown fox \\\\\\\"jumps\\\\\\\" over the lazy dog \\\", \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"unicode\\\": \\\"\\\\u3041 Men\\u00fa sesi\\u00f3n\\\", \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"int\\\": 65536, \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"float\\\": 3.1415926, \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"bool\\\": true, \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"null\\\": null &#125;\";</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">//          var dict = Json.Deserialize(jsonString) as Dictionary&lt;string,object&gt;;</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"deserialized: \" + dict.GetType());</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"dict['array'][0]: \" + ((List&lt;object&gt;) dict[\"array\"])[0]);</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"dict['string']: \" + (string) dict[\"string\"]);</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"dict['float']: \" + (double) dict[\"float\"]); // floats come out as doubles</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"dict['int']: \" + (long) dict[\"int\"]); // ints come out as longs</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"dict['unicode']: \" + (string) dict[\"unicode\"]);</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">//          var str = Json.Serialize(dict);</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"serialized: \" + str);</span></span><br><span class=\"line\">    <span class=\"comment\">//      &#125;</span></span><br><span class=\"line\">    <span class=\"comment\">//  &#125;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// This class encodes and decodes JSON strings.</span></span><br><span class=\"line\">    <span class=\"comment\">/// Spec. details, see http://www.json.org/</span></span><br><span class=\"line\">    <span class=\"comment\">///</span></span><br><span class=\"line\">    <span class=\"comment\">/// JSON uses Arrays and Objects. These correspond here to the datatypes IList and IDictionary.</span></span><br><span class=\"line\">    <span class=\"comment\">/// All numbers are parsed to doubles.</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Json</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// Parses the string json into a value</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;param name=\"json\"&gt;A JSON string.&lt;/param&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;An List&amp;lt;object&amp;gt;, a Dictionary&amp;lt;string, object&amp;gt;, a double, an integer,a string, null, true, or false&lt;/returns&gt;</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> object <span class=\"title\">Deserialize</span><span class=\"params\">(string json)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// save the string for debug information</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (json == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">return</span> Parser.Parse(json);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        sealed class Parser : IDisposable &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> string WORD_BREAK = <span class=\"string\">\"&#123;&#125;[],:\\\"\"</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> bool <span class=\"title\">IsWordBreak</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Char.IsWhiteSpace(c) || WORD_BREAK.IndexOf(c) != -<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">enum</span> TOKEN &#123;</span><br><span class=\"line\">                NONE,</span><br><span class=\"line\">                CURLY_OPEN,</span><br><span class=\"line\">                CURLY_CLOSE,</span><br><span class=\"line\">                SQUARED_OPEN,</span><br><span class=\"line\">                SQUARED_CLOSE,</span><br><span class=\"line\">                COLON,</span><br><span class=\"line\">                COMMA,</span><br><span class=\"line\">                STRING,</span><br><span class=\"line\">                NUMBER,</span><br><span class=\"line\">                TRUE,</span><br><span class=\"line\">                FALSE,</span><br><span class=\"line\">                NULL</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">            StringReader json;</span><br><span class=\"line\"> </span><br><span class=\"line\">            Parser(string jsonString) &#123;</span><br><span class=\"line\">                json = <span class=\"keyword\">new</span> StringReader(jsonString);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> object <span class=\"title\">Parse</span><span class=\"params\">(string jsonString)</span> </span>&#123;</span><br><span class=\"line\">                using (<span class=\"keyword\">var</span> instance = <span class=\"keyword\">new</span> Parser(jsonString)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> instance.ParseValue();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Dispose</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                json.Dispose();</span><br><span class=\"line\">                json = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\">Dictionary&lt;string, object&gt; <span class=\"title\">ParseObject</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Dictionary&lt;string, object&gt; table = <span class=\"keyword\">new</span> Dictionary&lt;string, object&gt;();</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"comment\">// ditch opening brace</span></span><br><span class=\"line\">                json.Read();</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"comment\">// &#123;</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (NextToken) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> TOKEN.NONE:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> TOKEN.COMMA:</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> TOKEN.CURLY_CLOSE:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> table;</span><br><span class=\"line\">                    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                        <span class=\"comment\">// name</span></span><br><span class=\"line\">                        string name = ParseString();</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (name == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                        <span class=\"comment\">// :</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (NextToken != TOKEN.COLON) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"comment\">// ditch the colon</span></span><br><span class=\"line\">                        json.Read();</span><br><span class=\"line\"> </span><br><span class=\"line\">                        <span class=\"comment\">// value</span></span><br><span class=\"line\">                        table[name] = ParseValue();</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\">List&lt;object&gt; <span class=\"title\">ParseArray</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                List&lt;object&gt; array = <span class=\"keyword\">new</span> List&lt;object&gt;();</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"comment\">// ditch opening bracket</span></span><br><span class=\"line\">                json.Read();</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"comment\">// [</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> parsing = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (parsing) &#123;</span><br><span class=\"line\">                    TOKEN nextToken = NextToken;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (nextToken) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> TOKEN.NONE:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> TOKEN.COMMA:</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> TOKEN.SQUARED_CLOSE:</span><br><span class=\"line\">                        parsing = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                        object value = ParseByToken(nextToken);</span><br><span class=\"line\"> </span><br><span class=\"line\">                        array.Add(value);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\">object <span class=\"title\">ParseValue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                TOKEN nextToken = NextToken;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ParseByToken(nextToken);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\">object <span class=\"title\">ParseByToken</span><span class=\"params\">(TOKEN token)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">switch</span> (token) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.STRING:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> ParseString();</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.NUMBER:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> ParseNumber();</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.CURLY_OPEN:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> ParseObject();</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.SQUARED_OPEN:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> ParseArray();</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.TRUE:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.FALSE:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.NULL:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\">string <span class=\"title\">ParseString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                StringBuilder s = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">                <span class=\"keyword\">char</span> c;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"comment\">// ditch opening quote</span></span><br><span class=\"line\">                json.Read();</span><br><span class=\"line\"> </span><br><span class=\"line\">                bool parsing = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (parsing) &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (json.Peek() == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                        parsing = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    c = NextChar;</span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (c) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\"'</span>:</span><br><span class=\"line\">                        parsing = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\\\'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (json.Peek() == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                            parsing = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                        c = NextChar;</span><br><span class=\"line\">                        <span class=\"keyword\">switch</span> (c) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'\"'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'\\\\'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'/'</span>:</span><br><span class=\"line\">                            s.Append(c);</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'b'</span>:</span><br><span class=\"line\">                            s.Append(<span class=\"string\">'\\b'</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'f'</span>:</span><br><span class=\"line\">                            s.Append(<span class=\"string\">'\\f'</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'n'</span>:</span><br><span class=\"line\">                            s.Append(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'r'</span>:</span><br><span class=\"line\">                            s.Append(<span class=\"string\">'\\r'</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'t'</span>:</span><br><span class=\"line\">                            s.Append(<span class=\"string\">'\\t'</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'u'</span>:</span><br><span class=\"line\">                            <span class=\"keyword\">var</span> hex = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"number\">4</span>];</span><br><span class=\"line\"> </span><br><span class=\"line\">                            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">                                hex[i] = NextChar;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                            s.Append((<span class=\"keyword\">char</span>) Convert.ToInt32(<span class=\"keyword\">new</span> string(hex), <span class=\"number\">16</span>));</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                        s.Append(c);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">return</span> s.ToString();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\">object <span class=\"title\">ParseNumber</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                string number = NextWord;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">if</span> (number.IndexOf(<span class=\"string\">'.'</span>) == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">long</span> parsedInt;</span><br><span class=\"line\">                    Int64.TryParse(number, out parsedInt);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> parsedInt;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">double</span> parsedDouble;</span><br><span class=\"line\">                Double.TryParse(number, out parsedDouble);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> parsedDouble;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">EatWhitespace</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (Char.IsWhiteSpace(PeekChar)) &#123;</span><br><span class=\"line\">                    json.Read();</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (json.Peek() == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">char</span> PeekChar &#123;</span><br><span class=\"line\">                get &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> Convert.ToChar(json.Peek());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">char</span> NextChar &#123;</span><br><span class=\"line\">                get &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> Convert.ToChar(json.Read());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            string NextWord &#123;</span><br><span class=\"line\">                get &#123;</span><br><span class=\"line\">                    StringBuilder word = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">while</span> (!IsWordBreak(PeekChar)) &#123;</span><br><span class=\"line\">                        word.Append(NextChar);</span><br><span class=\"line\"> </span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (json.Peek() == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">return</span> word.ToString();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            TOKEN NextToken &#123;</span><br><span class=\"line\">                get &#123;</span><br><span class=\"line\">                    EatWhitespace();</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (json.Peek() == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.NONE;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (PeekChar) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'&#123;'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.CURLY_OPEN;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'&#125;'</span>:</span><br><span class=\"line\">                        json.Read();</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.CURLY_CLOSE;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'['</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.SQUARED_OPEN;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">']'</span>:</span><br><span class=\"line\">                        json.Read();</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.SQUARED_CLOSE;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">','</span>:</span><br><span class=\"line\">                        json.Read();</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.COMMA;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\"'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.STRING;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">':'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.COLON;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'0'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'1'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'2'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'3'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'4'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'5'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'6'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'7'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'8'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'9'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'-'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.NUMBER;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (NextWord) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"false\"</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.FALSE;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"true\"</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.TRUE;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"null\"</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.NULL;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">return</span> TOKEN.NONE;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// Converts a IDictionary / IList object or a simple type (string, int, etc.) into a JSON string</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;param name=\"json\"&gt;A Dictionary&amp;lt;string, object&amp;gt; / List&amp;lt;object&amp;gt;&lt;/param&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;A JSON encoded string, or null if object 'json' is not serializable&lt;/returns&gt;</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string <span class=\"title\">Serialize</span><span class=\"params\">(object obj)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Serializer.Serialize(obj);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        sealed <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Serializer</span> </span>&#123;</span><br><span class=\"line\">            StringBuilder builder;</span><br><span class=\"line\"> </span><br><span class=\"line\">            Serializer() &#123;</span><br><span class=\"line\">                builder = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string <span class=\"title\">Serialize</span><span class=\"params\">(object obj)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> instance = <span class=\"keyword\">new</span> Serializer();</span><br><span class=\"line\"> </span><br><span class=\"line\">                instance.SerializeValue(obj);</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">return</span> instance.builder.ToString();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SerializeValue</span><span class=\"params\">(object value)</span> </span>&#123;</span><br><span class=\"line\">                IList asList;</span><br><span class=\"line\">                IDictionary asDict;</span><br><span class=\"line\">                string asStr;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">if</span> (value == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    builder.Append(<span class=\"string\">\"null\"</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((asStr = value as string) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    SerializeString(asStr);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value is bool) &#123;</span><br><span class=\"line\">                    builder.Append((bool) value ? <span class=\"string\">\"true\"</span> : <span class=\"string\">\"false\"</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((asList = value as IList) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    SerializeArray(asList);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((asDict = value as IDictionary) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    SerializeObject(asDict);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value is <span class=\"keyword\">char</span>) &#123;</span><br><span class=\"line\">                    SerializeString(<span class=\"keyword\">new</span> string((<span class=\"keyword\">char</span>) value, <span class=\"number\">1</span>));</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    SerializeOther(value);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SerializeObject</span><span class=\"params\">(IDictionary obj)</span> </span>&#123;</span><br><span class=\"line\">                bool first = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">                builder.Append(<span class=\"string\">'&#123;'</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">                foreach (object e in obj.Keys) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!first) &#123;</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">','</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    SerializeString(e.ToString());</span><br><span class=\"line\">                    builder.Append(<span class=\"string\">':'</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">                    SerializeValue(obj[e]);</span><br><span class=\"line\"> </span><br><span class=\"line\">                    first = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                builder.Append(<span class=\"string\">'&#125;'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SerializeArray</span><span class=\"params\">(IList anArray)</span> </span>&#123;</span><br><span class=\"line\">                builder.Append(<span class=\"string\">'['</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">                bool first = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">                foreach (object obj in anArray) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!first) &#123;</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">','</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    SerializeValue(obj);</span><br><span class=\"line\"> </span><br><span class=\"line\">                    first = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                builder.Append(<span class=\"string\">']'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SerializeString</span><span class=\"params\">(string str)</span> </span>&#123;</span><br><span class=\"line\">                builder.Append(<span class=\"string\">'\\\"'</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">char</span>[] charArray = str.ToCharArray();</span><br><span class=\"line\">                foreach (<span class=\"keyword\">var</span> c in charArray) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (c) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\"'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\\\\"\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\\\'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\\\\\\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\b'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\b\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\f'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\f\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\n'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\n\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\r'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\r\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\t'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\t\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">int</span> codepoint = Convert.ToInt32(c);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> ((codepoint &gt;= <span class=\"number\">32</span>) &amp;&amp; (codepoint &lt;= <span class=\"number\">126</span>)) &#123;</span><br><span class=\"line\">                            builder.Append(c);</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                            builder.Append(<span class=\"string\">\"\\\\u\"</span>);</span><br><span class=\"line\">                            builder.Append(codepoint.ToString(<span class=\"string\">\"x4\"</span>));</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                builder.Append(<span class=\"string\">'\\\"'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SerializeOther</span><span class=\"params\">(object value)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> decimals lose precision during serialization.</span></span><br><span class=\"line\">                <span class=\"comment\">// They always have, I'm just letting you know.</span></span><br><span class=\"line\">                <span class=\"comment\">// Previously floats and doubles lost precision too.</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (value is <span class=\"keyword\">float</span>) &#123;</span><br><span class=\"line\">                    builder.Append(((<span class=\"keyword\">float</span>) value).ToString(<span class=\"string\">\"R\"</span>));</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value is <span class=\"keyword\">int</span></span><br><span class=\"line\">                    || value is uint</span><br><span class=\"line\">                    || value is <span class=\"keyword\">long</span></span><br><span class=\"line\">                    || value is sbyte</span><br><span class=\"line\">                    || value is <span class=\"keyword\">byte</span></span><br><span class=\"line\">                    || value is <span class=\"keyword\">short</span></span><br><span class=\"line\">                    || value is ushort</span><br><span class=\"line\">                    || value is ulong) &#123;</span><br><span class=\"line\">                    builder.Append(value);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value is <span class=\"keyword\">double</span></span><br><span class=\"line\">                    || value is decimal) &#123;</span><br><span class=\"line\">                    builder.Append(Convert.ToDouble(value).ToString(<span class=\"string\">\"R\"</span>));</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    SerializeString(value.ToString());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二-SimpleJson\"><a href=\"#二-SimpleJson\" class=\"headerlink\" title=\"二.SimpleJson\"></a>二.SimpleJson</h2><p>　　github地址：<a href=\"https://github.com/facebook-csharp-sdk/simple-json\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">SimpleJson</a> </p>\n<p>　　你可以下载下来然后用vs打开选Net2.0编译出来一个dll（这里可能会报错，将文件EscapeToJavascriptStringTests去掉就正常了）。但是你也可以像前面那样，新建一个class，然后复制SimpleJson.cs的代码，点击SimpleJson.cs后会进到下面的详情网页，选择图中的Raw，就能进到代码页面，然后Ctrl+A进行全选复制。</p>\n<p><img src=\"/contentimg/3/5.png\" alt=\"Result pic 5\" title=\"Get Raw Codes\"></p>\n<h2 id=\"三-LitJSON\"><a href=\"#三-LitJSON\" class=\"headerlink\" title=\"三.LitJSON\"></a>三.LitJSON</h2><p>　　github地址：<a href=\"https://github.com/LitJSON/litjson\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">LitJSON</a> </p>\n<p>　　这个生成超级烦，要搭.net core的环境。由于没接触core开发，后面我还是修改vs工程文件，去掉core后才能生成。</p>\n<p>　　（后面发现，其实这里是因为VS的版本问题，要新版本。这里有篇文章就是问这个的：<a href=\"https://stackoverflow.com/questions/45979627/msbuild-of-vs2017-cannot-compile-net-standard-2-0-project\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">msbuild-of-vs2017-cannot-compile-net-standard-2-0-project</a>  查官网，只提到装2017，但是明明我的是2017（但是是16年底下载的，Core2.0是17年底出的），.NET Core 2.0.0 SDK这个也安装了，就是无法编译，其实是msbuild 版本。这个问题，和VS2010的msbuild编译不了2015版本的项目是一样的。所以如果装了新版本的，这里不用修改，是可以直接编译的。）</p>\n<p>　　这里也贴一下主页：<a href=\"https://litjson.net/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">LitJSON</a> </p>\n<p>　　以及一个老版本的直接dll下载地址：<a href=\"https://sourceforge.net/projects/litjson/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">DownloadDll</a> </p>\n<p>　　推荐直接下载github的然后自己编译，因为后面有更新，而网上那些，好多都是好几年前的版本。</p>\n<p>下面记录一下我怎么编译的：</p>\n<p>　　实际是修改vs工程文件，然后直接用vs打开就可以编译的，不过这里我也记录一下他自带的那些工具是怎么配置到可以用的。</p>\n<p>　　先记录怎么修改vs工程文件，目录中，实际只要用到\\litjson-develop\\src\\LitJson里的东西：</p>\n<p><img src=\"/contentimg/3/6.png\" alt=\"Result pic 6\" title=\"修改vs工程文件 LitJSON.csproj\"></p>\n<p>　　用记事本打开，ctrl+f查找包含“netstandard”的字段，就是下面截图红色部分，删掉：</p>\n<p><img src=\"/contentimg/3/7.png\" alt=\"Result pic 7\" title=\"修改LitJSON.csproj，删除部分编译条件\"></p>\n<p>　　这里简单说明一下为什么要删掉：</p>\n<p>　　“netstandard”部分是core环境的，目前我没搭这个环境，所以直接编译是会报错的。</p>\n<p>　　而中间的那个，是检查git的，如果你是部署了git，登陆了帐号，就没影响，可以更新并编译，不然就会报错。</p>\n<p>　　删掉上面红色部分后，用vs打开，直接编译就成功了。</p>\n<p>接下来介绍怎么修改自带的那些工具来生成，过程繁琐，不过不用修改vs工程文件：</p>\n<p>　　首先运行build.ps1，记住不是sh（这个是linux的），右键–&gt;使用PowerShell运行：</p>\n<p><img src=\"/contentimg/3/8.png\" alt=\"Result pic 8\" title=\"find build.ps1\"></p>\n<p><img src=\"/contentimg/3/9.png\" alt=\"Result pic 9\" title=\"run build.ps1\"></p>\n<p>　　出现下面这样的窗口，实际是里面代码，分析出你要安装这个环境的这个包，正常情况是一直下载不下来的，vpn也救不了，后面挂<a href=\"https://pan.baidu.com/s/1qJMXKCqwyuIbe73ub3uueA%C2%A0\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">百度云离线</a>  （ 提取码：0osd）总算下载下来了。</p>\n<p><img src=\"/contentimg/3/10.png\" alt=\"Result pic 10\" title=\"get download link\"></p>\n<p>　　现在目录中多了一个文件夹，里面是安装core的环境的，可以安装，目前我系统是win10版：</p>\n<p><img src=\"/contentimg/3/11.png\" alt=\"Result pic 11\" title=\"Window Version\"></p>\n<p>　　这里也简单记一下怎么修改代码让dotnet-install.ps1文件能运行：</p>\n<p>　　首先右键–&gt;编辑；里面好多脚本代码，和C#超级像，有兴趣可以去了解：</p>\n<p><img src=\"/contentimg/3/12.png\" alt=\"Result pic 12\" title=\"Open dotnet-install.ps1\"></p>\n<p>　　这里意思是传一个下载链接给它，然后下载解压（上面一堆脚本都是下载函数）。而现在这个url，是下不下来的，不过我们可以通过IIS，进行localhost下载：</p>\n<p>　　windows启用IIS，在程序与功能–&gt;启用或关闭windows功能，然后你看到有iis的就打勾就行了。</p>\n<p><img src=\"/contentimg/3/13.png\" alt=\"Result pic 13\" title=\"Run IIS\"></p>\n<p>　　然后找到上面图中这个，点击“浏览”，把刚才通过百度云下载的dotnet-sdk-2.1.4-win-x64.zip复制过去，当然还有复制dotnet-install.ps1这个文件，不过.ps1这个后缀，在iis里面不能访问，所以我修改成txt，反正脚本中只是找文件下载，下载后保存的命名是自己定的。</p>\n<p><img src=\"/contentimg/3/14.png\" alt=\"Result pic 14\" title=\"Files\"></p>\n<p>　　然后就是修改脚本：</p>\n<p><img src=\"/contentimg/3/15.png\" alt=\"Result pic 15\" title=\"Edit Scripts\"></p>\n<p>　　修改build.ps1，告诉它去localhost目录下载这个txt；同时修改这个txt去localhost下载这个zip。</p>\n<p>　　这样就能正常运行了，但是这里由于网络原因，还会报错，就安装cake部分，不过可以重新启动就行，cake的下载和安装过程较顺利，安装好后多了3个文件夹：</p>\n<p><img src=\"/contentimg/3/16.png\" alt=\"Result pic 16\" title=\"Cake Files\"></p>\n<p>　　一个是检查git的，一个是编译工具cake。</p>\n<p>　　所以如果想用这个工具编译，最好是登陆git的，这样就能用自带工具编译了，core也能编译：</p>\n<p><img src=\"/contentimg/3/17.png\" alt=\"Result pic 17\" title=\"Run build.ps1\"></p>\n<p>　　这里我删了core的环境安装部分，然后直接运行build.ps1就可以了。</p>\n<p>　　这种方式就不用修改vs工程文件。</p>\n<p>　　从ps1文件里面了解到，是调用cake来编译的，所以，其实我们可以直接cmd来操作：</p>\n<p><img src=\"/contentimg/3/18.png\" alt=\"Result pic 18\" title=\"build by cake\"></p>\n<p>　　cmd到build.cake所在目录，然后调用cake.exe。</p>\n<h2 id=\"四-Newtonsoft-Json\"><a href=\"#四-Newtonsoft-Json\" class=\"headerlink\" title=\"四.Newtonsoft.Json\"></a>四.Newtonsoft.Json</h2><p>　　主页：<a href=\"https://www.newtonsoft.com/json\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">www.newtonsoft.com</a> </p>\n<p>　　github地址：<a href=\"https://github.com/JamesNK/Newtonsoft.Json\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Newtonsoft.Json</a> </p>\n<p>　　这个就编译比较简单，但是会报错readonly struct（去掉readonly就行），用vs编辑工程文件，像前面那个一样删掉core和phone等等那些选项，然后再编译就能编译通过。自带的脚本也是，下载部分很顺利就能下载，155m左右；但是还有附加的编译环境，也是core的。</p>\n<p>　　这里这个错，其实是C# 7的特性，老版本的vs都不支持。然后core的问题，其实也是更新新版本vs就能解决，后面我更新了新版本后，msbuild版本上来了，就能正常编译了。为什么在第三个那里没注意到时msbuild，因为那里用的是cake，所以当时是能用脚本编译，但是不能vs编译，后面找多点资料后才想起是这个可能。所以这里我就直接更新vs，然后就能直接编译了。什么都不用改。</p>\n<p>　　这里放一下vs2017最新版的安装索引包吧：</p>\n<p>两个官网下载地址：</p>\n<p>　　地址1：<a href=\"https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2017-relnotes#15.1.26430.06\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">vs2017-relnotes#15.1.26430.06</a> </p>\n<p>　　地址2：<a href=\"https://visualstudio.microsoft.com/zh-hans/downloads/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">visualstudio.microsoft.com</a> </p>\n<p>　　以及.NET downloads：<a href=\"https://www.microsoft.com/net/download\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">.NET</a> </p>\n<p>　　附加一下百度云，就是本篇文章用到的配置环境所要下载的东西（要vpn的那几个）：</p>\n<p>　　<a href=\"https://pan.baidu.com/s/1X0HYx4geqPqSh-WD5xBbXg\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a>  提取码：1t2x</p>\n<p>　　这里有个文章提到这个新特性：<a href=\"https://blogs.msdn.microsoft.com/mazhou/2017/11/21/c-7-series-part-6-read-only-structs/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">C# 7 Series, Part 6: Read-only structs</a> </p>\n<p><img src=\"/contentimg/3/19.png\" alt=\"Result pic 19\" title=\"Git edit History\"></p>\n<p>　　以及两篇介绍的：</p>\n<p>　　<a href=\"https://www.cnblogs.com/zjoch/p/6696986.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">.NET Core 2.0及.NET Standard 2.0</a> </p>\n<p>　　<a href=\"https://blog.csdn.net/starfd/article/details/78839704\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">NET Standard/Core中配置使用TargetFrameworks输出多版本类库及测试：</a> </p>\n<p>　　平时用这个库比较多的原因，就是可定制化高，可以设置<a href=\"https://www.cnblogs.com/sczmzx/p/7813715.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">null值要不要序列化</a>  ，等等之类的定制。</p>\n<p>结尾附几个博主写的库分享：</p>\n<p>　　<a href=\"https://www.cnblogs.com/landeanfen/p/4627383.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">序列化效率比拼——谁是最后的赢家Newtonsoft.Json</a> </p>\n<p>　　<a href=\"https://www.cnblogs.com/blqw/p/3274229.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">几个常用Json组件的性能测试</a> </p>\n","site":{"data":{}},"excerpt":"<p>　　目前通讯中http是使用最多的，而其中Json基本是首选。大家平时解析时都是直接调用dll，但是有没有考虑过dll里面怎么处理？这个dll又从哪里来？本文将分享我接触到的4个解析Json的C#开源库。<br>","more":"<br>　　目前我用得较多的是Newtonsoft ，后面了解到还有轻量的MiniJSON，SimpleJson以及litjson。</p>\n<p>　　这里MiniJSON最精简，是一个class文件，通过对string进行简单字符串的处理来解析。</p>\n<p>　　然后就是SimpleJson，也是一个class文件，不过代码量超级多，功能相对比较全面。看其他博客对这个评价蛮高的，不过我没使用过，暂不评价。</p>\n<p>　　litjson，就文件多一点，好几个class组成。但是看部分博客提到跨平台上有问题。</p>\n<p>　　由于之前是做windows应用，所以一直使用的是Newtonsoft，代码量远超上面的几个，编译出来的dll也是比他们的要大。所以，比较推荐用Newtonsoft，可定制化高很多，功能和内部考虑的东西也完善。</p>\n<p>　　本文暂不讲怎么使用，只简单介绍怎么去github获取上面几个的源码，以及怎么编译。</p>\n<p>　　提到github，这是一个好东西，好多好的开源项目都在上面。不过国内网速超级慢，使用起来不是很方便。一般情况下，可以不注册账号直接下载项目代码，下载下来是一个zip文件。也可以用VS里面的扩展插件GitHub Extension for Visual Studio，下载安装过程有点久，请耐心等待：</p>\n<p><img src=\"/contentimg/3/1.png\" alt=\"Result pic 1\" title=\"GitHub Extension for Visual Studio\"></p>\n<p>　　使用起来相对没svn好用(当然，这里是可以用svn来使用的)。</p>\n<p>　　推荐使用客户端：<a href=\"https://desktop.github.com/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">GitHubDesktop</a> 下载下来的应该是一个77M的全量包，直接安装就可以使用：</p>\n<p><img src=\"/contentimg/3/2.png\" alt=\"Result pic 2\" title=\"GitHubDesktop\"></p>\n<p>　　这里使用到的就是File–&gt;Clone…；打开后</p>\n<p><img src=\"/contentimg/3/3.png\" alt=\"Result pic 3\" title=\"Clone a repository\"></p>\n<p>　　这里的url，就是网页上获取的：</p>\n<p><img src=\"/contentimg/3/4.png\" alt=\"Result pic 4\" title=\"Clone with HTTPS\"></p>\n<p>　　这里贴一下看到的其他博主写的专门介绍GitHub Desktop的：<a href=\"https://www.cnblogs.com/hanford/p/6038417.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Windows 上 GitHub Desktop 的操作</a> </p>\n<h2 id=\"一-MiniJSON\"><a href=\"#一-MiniJSON\" class=\"headerlink\" title=\"一.MiniJSON\"></a>一.MiniJSON</h2><p>　　github地址：<a href=\"https://gist.github.com/darktable/1411710\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">MiniJSON</a> </p>\n<p>　　直接在你的项目中新建一个class，全选代码后复制过去，就可以使用了。</p>\n<p>　　由于需要vpn，所以这里放一下代码吧：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Copyright (c) 2013 Calvin Rien</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * Based on the JSON parser by Patrick van Bergen</span></span><br><span class=\"line\"><span class=\"comment\"> * http://techblog.procurios.nl/k/618/news/view/14605/14863/How-do-I-write-my-own-parser-for-JSON.html</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * Simplified it so that it doesn't throw exceptions</span></span><br><span class=\"line\"><span class=\"comment\"> * and can be used in Unity iPhone with maximum code stripping.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * Permission is hereby granted, free of charge, to any person obtaining</span></span><br><span class=\"line\"><span class=\"comment\"> * a copy of this software and associated documentation files (the</span></span><br><span class=\"line\"><span class=\"comment\"> * \"Software\"), to deal in the Software without restriction, including</span></span><br><span class=\"line\"><span class=\"comment\"> * without limitation the rights to use, copy, modify, merge, publish,</span></span><br><span class=\"line\"><span class=\"comment\"> * distribute, sublicense, and/or sell copies of the Software, and to</span></span><br><span class=\"line\"><span class=\"comment\"> * permit persons to whom the Software is furnished to do so, subject to</span></span><br><span class=\"line\"><span class=\"comment\"> * the following conditions:</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * The above copyright notice and this permission notice shall be</span></span><br><span class=\"line\"><span class=\"comment\"> * included in all copies or substantial portions of the Software.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,</span></span><br><span class=\"line\"><span class=\"comment\"> * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></span><br><span class=\"line\"><span class=\"comment\"> * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></span><br><span class=\"line\"><span class=\"comment\"> * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY</span></span><br><span class=\"line\"><span class=\"comment\"> * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,</span></span><br><span class=\"line\"><span class=\"comment\"> * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE</span></span><br><span class=\"line\"><span class=\"comment\"> * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using System.IO;</span><br><span class=\"line\">using System.Text;</span><br><span class=\"line\"> </span><br><span class=\"line\">namespace MiniJSON &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Example usage:</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">//  using UnityEngine;</span></span><br><span class=\"line\">    <span class=\"comment\">//  using System.Collections;</span></span><br><span class=\"line\">    <span class=\"comment\">//  using System.Collections.Generic;</span></span><br><span class=\"line\">    <span class=\"comment\">//  using MiniJSON;</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">//  public class MiniJSONTest : MonoBehaviour &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//      void Start () &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//          var jsonString = \"&#123; \\\"array\\\": [1.44,2,3], \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"object\\\": &#123;\\\"key1\\\":\\\"value1\\\", \\\"key2\\\":256&#125;, \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"string\\\": \\\"The quick brown fox \\\\\\\"jumps\\\\\\\" over the lazy dog \\\", \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"unicode\\\": \\\"\\\\u3041 Men\\u00fa sesi\\u00f3n\\\", \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"int\\\": 65536, \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"float\\\": 3.1415926, \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"bool\\\": true, \" +</span></span><br><span class=\"line\">    <span class=\"comment\">//                          \"\\\"null\\\": null &#125;\";</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">//          var dict = Json.Deserialize(jsonString) as Dictionary&lt;string,object&gt;;</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"deserialized: \" + dict.GetType());</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"dict['array'][0]: \" + ((List&lt;object&gt;) dict[\"array\"])[0]);</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"dict['string']: \" + (string) dict[\"string\"]);</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"dict['float']: \" + (double) dict[\"float\"]); // floats come out as doubles</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"dict['int']: \" + (long) dict[\"int\"]); // ints come out as longs</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"dict['unicode']: \" + (string) dict[\"unicode\"]);</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">//          var str = Json.Serialize(dict);</span></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"comment\">//          Debug.Log(\"serialized: \" + str);</span></span><br><span class=\"line\">    <span class=\"comment\">//      &#125;</span></span><br><span class=\"line\">    <span class=\"comment\">//  &#125;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">/// This class encodes and decodes JSON strings.</span></span><br><span class=\"line\">    <span class=\"comment\">/// Spec. details, see http://www.json.org/</span></span><br><span class=\"line\">    <span class=\"comment\">///</span></span><br><span class=\"line\">    <span class=\"comment\">/// JSON uses Arrays and Objects. These correspond here to the datatypes IList and IDictionary.</span></span><br><span class=\"line\">    <span class=\"comment\">/// All numbers are parsed to doubles.</span></span><br><span class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Json</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// Parses the string json into a value</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;param name=\"json\"&gt;A JSON string.&lt;/param&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;An List&amp;lt;object&amp;gt;, a Dictionary&amp;lt;string, object&amp;gt;, a double, an integer,a string, null, true, or false&lt;/returns&gt;</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> object <span class=\"title\">Deserialize</span><span class=\"params\">(string json)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// save the string for debug information</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (json == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">return</span> Parser.Parse(json);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        sealed class Parser : IDisposable &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> string WORD_BREAK = <span class=\"string\">\"&#123;&#125;[],:\\\"\"</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> bool <span class=\"title\">IsWordBreak</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Char.IsWhiteSpace(c) || WORD_BREAK.IndexOf(c) != -<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">enum</span> TOKEN &#123;</span><br><span class=\"line\">                NONE,</span><br><span class=\"line\">                CURLY_OPEN,</span><br><span class=\"line\">                CURLY_CLOSE,</span><br><span class=\"line\">                SQUARED_OPEN,</span><br><span class=\"line\">                SQUARED_CLOSE,</span><br><span class=\"line\">                COLON,</span><br><span class=\"line\">                COMMA,</span><br><span class=\"line\">                STRING,</span><br><span class=\"line\">                NUMBER,</span><br><span class=\"line\">                TRUE,</span><br><span class=\"line\">                FALSE,</span><br><span class=\"line\">                NULL</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">            StringReader json;</span><br><span class=\"line\"> </span><br><span class=\"line\">            Parser(string jsonString) &#123;</span><br><span class=\"line\">                json = <span class=\"keyword\">new</span> StringReader(jsonString);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> object <span class=\"title\">Parse</span><span class=\"params\">(string jsonString)</span> </span>&#123;</span><br><span class=\"line\">                using (<span class=\"keyword\">var</span> instance = <span class=\"keyword\">new</span> Parser(jsonString)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> instance.ParseValue();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Dispose</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                json.Dispose();</span><br><span class=\"line\">                json = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\">Dictionary&lt;string, object&gt; <span class=\"title\">ParseObject</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Dictionary&lt;string, object&gt; table = <span class=\"keyword\">new</span> Dictionary&lt;string, object&gt;();</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"comment\">// ditch opening brace</span></span><br><span class=\"line\">                json.Read();</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"comment\">// &#123;</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (NextToken) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> TOKEN.NONE:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> TOKEN.COMMA:</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> TOKEN.CURLY_CLOSE:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> table;</span><br><span class=\"line\">                    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                        <span class=\"comment\">// name</span></span><br><span class=\"line\">                        string name = ParseString();</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (name == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                        <span class=\"comment\">// :</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (NextToken != TOKEN.COLON) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"comment\">// ditch the colon</span></span><br><span class=\"line\">                        json.Read();</span><br><span class=\"line\"> </span><br><span class=\"line\">                        <span class=\"comment\">// value</span></span><br><span class=\"line\">                        table[name] = ParseValue();</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\">List&lt;object&gt; <span class=\"title\">ParseArray</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                List&lt;object&gt; array = <span class=\"keyword\">new</span> List&lt;object&gt;();</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"comment\">// ditch opening bracket</span></span><br><span class=\"line\">                json.Read();</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"comment\">// [</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> parsing = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (parsing) &#123;</span><br><span class=\"line\">                    TOKEN nextToken = NextToken;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (nextToken) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> TOKEN.NONE:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> TOKEN.COMMA:</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> TOKEN.SQUARED_CLOSE:</span><br><span class=\"line\">                        parsing = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                        object value = ParseByToken(nextToken);</span><br><span class=\"line\"> </span><br><span class=\"line\">                        array.Add(value);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\">object <span class=\"title\">ParseValue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                TOKEN nextToken = NextToken;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ParseByToken(nextToken);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\">object <span class=\"title\">ParseByToken</span><span class=\"params\">(TOKEN token)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">switch</span> (token) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.STRING:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> ParseString();</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.NUMBER:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> ParseNumber();</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.CURLY_OPEN:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> ParseObject();</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.SQUARED_OPEN:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> ParseArray();</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.TRUE:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.FALSE:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> TOKEN.NULL:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\">string <span class=\"title\">ParseString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                StringBuilder s = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">                <span class=\"keyword\">char</span> c;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"comment\">// ditch opening quote</span></span><br><span class=\"line\">                json.Read();</span><br><span class=\"line\"> </span><br><span class=\"line\">                bool parsing = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (parsing) &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (json.Peek() == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                        parsing = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    c = NextChar;</span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (c) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\"'</span>:</span><br><span class=\"line\">                        parsing = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\\\'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (json.Peek() == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                            parsing = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                        c = NextChar;</span><br><span class=\"line\">                        <span class=\"keyword\">switch</span> (c) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'\"'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'\\\\'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'/'</span>:</span><br><span class=\"line\">                            s.Append(c);</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'b'</span>:</span><br><span class=\"line\">                            s.Append(<span class=\"string\">'\\b'</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'f'</span>:</span><br><span class=\"line\">                            s.Append(<span class=\"string\">'\\f'</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'n'</span>:</span><br><span class=\"line\">                            s.Append(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'r'</span>:</span><br><span class=\"line\">                            s.Append(<span class=\"string\">'\\r'</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'t'</span>:</span><br><span class=\"line\">                            s.Append(<span class=\"string\">'\\t'</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'u'</span>:</span><br><span class=\"line\">                            <span class=\"keyword\">var</span> hex = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"number\">4</span>];</span><br><span class=\"line\"> </span><br><span class=\"line\">                            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">                                hex[i] = NextChar;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                            s.Append((<span class=\"keyword\">char</span>) Convert.ToInt32(<span class=\"keyword\">new</span> string(hex), <span class=\"number\">16</span>));</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                        s.Append(c);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">return</span> s.ToString();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\">object <span class=\"title\">ParseNumber</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                string number = NextWord;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">if</span> (number.IndexOf(<span class=\"string\">'.'</span>) == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">long</span> parsedInt;</span><br><span class=\"line\">                    Int64.TryParse(number, out parsedInt);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> parsedInt;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">double</span> parsedDouble;</span><br><span class=\"line\">                Double.TryParse(number, out parsedDouble);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> parsedDouble;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">EatWhitespace</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (Char.IsWhiteSpace(PeekChar)) &#123;</span><br><span class=\"line\">                    json.Read();</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (json.Peek() == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">char</span> PeekChar &#123;</span><br><span class=\"line\">                get &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> Convert.ToChar(json.Peek());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">char</span> NextChar &#123;</span><br><span class=\"line\">                get &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> Convert.ToChar(json.Read());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            string NextWord &#123;</span><br><span class=\"line\">                get &#123;</span><br><span class=\"line\">                    StringBuilder word = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">while</span> (!IsWordBreak(PeekChar)) &#123;</span><br><span class=\"line\">                        word.Append(NextChar);</span><br><span class=\"line\"> </span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (json.Peek() == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">return</span> word.ToString();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            TOKEN NextToken &#123;</span><br><span class=\"line\">                get &#123;</span><br><span class=\"line\">                    EatWhitespace();</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (json.Peek() == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.NONE;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (PeekChar) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'&#123;'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.CURLY_OPEN;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'&#125;'</span>:</span><br><span class=\"line\">                        json.Read();</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.CURLY_CLOSE;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'['</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.SQUARED_OPEN;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">']'</span>:</span><br><span class=\"line\">                        json.Read();</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.SQUARED_CLOSE;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">','</span>:</span><br><span class=\"line\">                        json.Read();</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.COMMA;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\"'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.STRING;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">':'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.COLON;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'0'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'1'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'2'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'3'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'4'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'5'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'6'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'7'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'8'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'9'</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'-'</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.NUMBER;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (NextWord) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"false\"</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.FALSE;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"true\"</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.TRUE;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"null\"</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> TOKEN.NULL;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    <span class=\"keyword\">return</span> TOKEN.NONE;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// Converts a IDictionary / IList object or a simple type (string, int, etc.) into a JSON string</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;param name=\"json\"&gt;A Dictionary&amp;lt;string, object&amp;gt; / List&amp;lt;object&amp;gt;&lt;/param&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;A JSON encoded string, or null if object 'json' is not serializable&lt;/returns&gt;</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string <span class=\"title\">Serialize</span><span class=\"params\">(object obj)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Serializer.Serialize(obj);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        sealed <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Serializer</span> </span>&#123;</span><br><span class=\"line\">            StringBuilder builder;</span><br><span class=\"line\"> </span><br><span class=\"line\">            Serializer() &#123;</span><br><span class=\"line\">                builder = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string <span class=\"title\">Serialize</span><span class=\"params\">(object obj)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> instance = <span class=\"keyword\">new</span> Serializer();</span><br><span class=\"line\"> </span><br><span class=\"line\">                instance.SerializeValue(obj);</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">return</span> instance.builder.ToString();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SerializeValue</span><span class=\"params\">(object value)</span> </span>&#123;</span><br><span class=\"line\">                IList asList;</span><br><span class=\"line\">                IDictionary asDict;</span><br><span class=\"line\">                string asStr;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">if</span> (value == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    builder.Append(<span class=\"string\">\"null\"</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((asStr = value as string) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    SerializeString(asStr);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value is bool) &#123;</span><br><span class=\"line\">                    builder.Append((bool) value ? <span class=\"string\">\"true\"</span> : <span class=\"string\">\"false\"</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((asList = value as IList) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    SerializeArray(asList);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((asDict = value as IDictionary) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    SerializeObject(asDict);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value is <span class=\"keyword\">char</span>) &#123;</span><br><span class=\"line\">                    SerializeString(<span class=\"keyword\">new</span> string((<span class=\"keyword\">char</span>) value, <span class=\"number\">1</span>));</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    SerializeOther(value);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SerializeObject</span><span class=\"params\">(IDictionary obj)</span> </span>&#123;</span><br><span class=\"line\">                bool first = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">                builder.Append(<span class=\"string\">'&#123;'</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">                foreach (object e in obj.Keys) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!first) &#123;</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">','</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    SerializeString(e.ToString());</span><br><span class=\"line\">                    builder.Append(<span class=\"string\">':'</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">                    SerializeValue(obj[e]);</span><br><span class=\"line\"> </span><br><span class=\"line\">                    first = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                builder.Append(<span class=\"string\">'&#125;'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SerializeArray</span><span class=\"params\">(IList anArray)</span> </span>&#123;</span><br><span class=\"line\">                builder.Append(<span class=\"string\">'['</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">                bool first = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">                foreach (object obj in anArray) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!first) &#123;</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">','</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                    SerializeValue(obj);</span><br><span class=\"line\"> </span><br><span class=\"line\">                    first = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                builder.Append(<span class=\"string\">']'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SerializeString</span><span class=\"params\">(string str)</span> </span>&#123;</span><br><span class=\"line\">                builder.Append(<span class=\"string\">'\\\"'</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"keyword\">char</span>[] charArray = str.ToCharArray();</span><br><span class=\"line\">                foreach (<span class=\"keyword\">var</span> c in charArray) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (c) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\"'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\\\\"\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\\\'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\\\\\\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\b'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\b\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\f'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\f\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\n'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\n\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\r'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\r\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'\\t'</span>:</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">\"\\\\t\"</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">int</span> codepoint = Convert.ToInt32(c);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> ((codepoint &gt;= <span class=\"number\">32</span>) &amp;&amp; (codepoint &lt;= <span class=\"number\">126</span>)) &#123;</span><br><span class=\"line\">                            builder.Append(c);</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                            builder.Append(<span class=\"string\">\"\\\\u\"</span>);</span><br><span class=\"line\">                            builder.Append(codepoint.ToString(<span class=\"string\">\"x4\"</span>));</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                builder.Append(<span class=\"string\">'\\\"'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SerializeOther</span><span class=\"params\">(object value)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> decimals lose precision during serialization.</span></span><br><span class=\"line\">                <span class=\"comment\">// They always have, I'm just letting you know.</span></span><br><span class=\"line\">                <span class=\"comment\">// Previously floats and doubles lost precision too.</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (value is <span class=\"keyword\">float</span>) &#123;</span><br><span class=\"line\">                    builder.Append(((<span class=\"keyword\">float</span>) value).ToString(<span class=\"string\">\"R\"</span>));</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value is <span class=\"keyword\">int</span></span><br><span class=\"line\">                    || value is uint</span><br><span class=\"line\">                    || value is <span class=\"keyword\">long</span></span><br><span class=\"line\">                    || value is sbyte</span><br><span class=\"line\">                    || value is <span class=\"keyword\">byte</span></span><br><span class=\"line\">                    || value is <span class=\"keyword\">short</span></span><br><span class=\"line\">                    || value is ushort</span><br><span class=\"line\">                    || value is ulong) &#123;</span><br><span class=\"line\">                    builder.Append(value);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value is <span class=\"keyword\">double</span></span><br><span class=\"line\">                    || value is decimal) &#123;</span><br><span class=\"line\">                    builder.Append(Convert.ToDouble(value).ToString(<span class=\"string\">\"R\"</span>));</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    SerializeString(value.ToString());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二-SimpleJson\"><a href=\"#二-SimpleJson\" class=\"headerlink\" title=\"二.SimpleJson\"></a>二.SimpleJson</h2><p>　　github地址：<a href=\"https://github.com/facebook-csharp-sdk/simple-json\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">SimpleJson</a> </p>\n<p>　　你可以下载下来然后用vs打开选Net2.0编译出来一个dll（这里可能会报错，将文件EscapeToJavascriptStringTests去掉就正常了）。但是你也可以像前面那样，新建一个class，然后复制SimpleJson.cs的代码，点击SimpleJson.cs后会进到下面的详情网页，选择图中的Raw，就能进到代码页面，然后Ctrl+A进行全选复制。</p>\n<p><img src=\"/contentimg/3/5.png\" alt=\"Result pic 5\" title=\"Get Raw Codes\"></p>\n<h2 id=\"三-LitJSON\"><a href=\"#三-LitJSON\" class=\"headerlink\" title=\"三.LitJSON\"></a>三.LitJSON</h2><p>　　github地址：<a href=\"https://github.com/LitJSON/litjson\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">LitJSON</a> </p>\n<p>　　这个生成超级烦，要搭.net core的环境。由于没接触core开发，后面我还是修改vs工程文件，去掉core后才能生成。</p>\n<p>　　（后面发现，其实这里是因为VS的版本问题，要新版本。这里有篇文章就是问这个的：<a href=\"https://stackoverflow.com/questions/45979627/msbuild-of-vs2017-cannot-compile-net-standard-2-0-project\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">msbuild-of-vs2017-cannot-compile-net-standard-2-0-project</a>  查官网，只提到装2017，但是明明我的是2017（但是是16年底下载的，Core2.0是17年底出的），.NET Core 2.0.0 SDK这个也安装了，就是无法编译，其实是msbuild 版本。这个问题，和VS2010的msbuild编译不了2015版本的项目是一样的。所以如果装了新版本的，这里不用修改，是可以直接编译的。）</p>\n<p>　　这里也贴一下主页：<a href=\"https://litjson.net/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">LitJSON</a> </p>\n<p>　　以及一个老版本的直接dll下载地址：<a href=\"https://sourceforge.net/projects/litjson/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">DownloadDll</a> </p>\n<p>　　推荐直接下载github的然后自己编译，因为后面有更新，而网上那些，好多都是好几年前的版本。</p>\n<p>下面记录一下我怎么编译的：</p>\n<p>　　实际是修改vs工程文件，然后直接用vs打开就可以编译的，不过这里我也记录一下他自带的那些工具是怎么配置到可以用的。</p>\n<p>　　先记录怎么修改vs工程文件，目录中，实际只要用到\\litjson-develop\\src\\LitJson里的东西：</p>\n<p><img src=\"/contentimg/3/6.png\" alt=\"Result pic 6\" title=\"修改vs工程文件 LitJSON.csproj\"></p>\n<p>　　用记事本打开，ctrl+f查找包含“netstandard”的字段，就是下面截图红色部分，删掉：</p>\n<p><img src=\"/contentimg/3/7.png\" alt=\"Result pic 7\" title=\"修改LitJSON.csproj，删除部分编译条件\"></p>\n<p>　　这里简单说明一下为什么要删掉：</p>\n<p>　　“netstandard”部分是core环境的，目前我没搭这个环境，所以直接编译是会报错的。</p>\n<p>　　而中间的那个，是检查git的，如果你是部署了git，登陆了帐号，就没影响，可以更新并编译，不然就会报错。</p>\n<p>　　删掉上面红色部分后，用vs打开，直接编译就成功了。</p>\n<p>接下来介绍怎么修改自带的那些工具来生成，过程繁琐，不过不用修改vs工程文件：</p>\n<p>　　首先运行build.ps1，记住不是sh（这个是linux的），右键–&gt;使用PowerShell运行：</p>\n<p><img src=\"/contentimg/3/8.png\" alt=\"Result pic 8\" title=\"find build.ps1\"></p>\n<p><img src=\"/contentimg/3/9.png\" alt=\"Result pic 9\" title=\"run build.ps1\"></p>\n<p>　　出现下面这样的窗口，实际是里面代码，分析出你要安装这个环境的这个包，正常情况是一直下载不下来的，vpn也救不了，后面挂<a href=\"https://pan.baidu.com/s/1qJMXKCqwyuIbe73ub3uueA%C2%A0\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">百度云离线</a>  （ 提取码：0osd）总算下载下来了。</p>\n<p><img src=\"/contentimg/3/10.png\" alt=\"Result pic 10\" title=\"get download link\"></p>\n<p>　　现在目录中多了一个文件夹，里面是安装core的环境的，可以安装，目前我系统是win10版：</p>\n<p><img src=\"/contentimg/3/11.png\" alt=\"Result pic 11\" title=\"Window Version\"></p>\n<p>　　这里也简单记一下怎么修改代码让dotnet-install.ps1文件能运行：</p>\n<p>　　首先右键–&gt;编辑；里面好多脚本代码，和C#超级像，有兴趣可以去了解：</p>\n<p><img src=\"/contentimg/3/12.png\" alt=\"Result pic 12\" title=\"Open dotnet-install.ps1\"></p>\n<p>　　这里意思是传一个下载链接给它，然后下载解压（上面一堆脚本都是下载函数）。而现在这个url，是下不下来的，不过我们可以通过IIS，进行localhost下载：</p>\n<p>　　windows启用IIS，在程序与功能–&gt;启用或关闭windows功能，然后你看到有iis的就打勾就行了。</p>\n<p><img src=\"/contentimg/3/13.png\" alt=\"Result pic 13\" title=\"Run IIS\"></p>\n<p>　　然后找到上面图中这个，点击“浏览”，把刚才通过百度云下载的dotnet-sdk-2.1.4-win-x64.zip复制过去，当然还有复制dotnet-install.ps1这个文件，不过.ps1这个后缀，在iis里面不能访问，所以我修改成txt，反正脚本中只是找文件下载，下载后保存的命名是自己定的。</p>\n<p><img src=\"/contentimg/3/14.png\" alt=\"Result pic 14\" title=\"Files\"></p>\n<p>　　然后就是修改脚本：</p>\n<p><img src=\"/contentimg/3/15.png\" alt=\"Result pic 15\" title=\"Edit Scripts\"></p>\n<p>　　修改build.ps1，告诉它去localhost目录下载这个txt；同时修改这个txt去localhost下载这个zip。</p>\n<p>　　这样就能正常运行了，但是这里由于网络原因，还会报错，就安装cake部分，不过可以重新启动就行，cake的下载和安装过程较顺利，安装好后多了3个文件夹：</p>\n<p><img src=\"/contentimg/3/16.png\" alt=\"Result pic 16\" title=\"Cake Files\"></p>\n<p>　　一个是检查git的，一个是编译工具cake。</p>\n<p>　　所以如果想用这个工具编译，最好是登陆git的，这样就能用自带工具编译了，core也能编译：</p>\n<p><img src=\"/contentimg/3/17.png\" alt=\"Result pic 17\" title=\"Run build.ps1\"></p>\n<p>　　这里我删了core的环境安装部分，然后直接运行build.ps1就可以了。</p>\n<p>　　这种方式就不用修改vs工程文件。</p>\n<p>　　从ps1文件里面了解到，是调用cake来编译的，所以，其实我们可以直接cmd来操作：</p>\n<p><img src=\"/contentimg/3/18.png\" alt=\"Result pic 18\" title=\"build by cake\"></p>\n<p>　　cmd到build.cake所在目录，然后调用cake.exe。</p>\n<h2 id=\"四-Newtonsoft-Json\"><a href=\"#四-Newtonsoft-Json\" class=\"headerlink\" title=\"四.Newtonsoft.Json\"></a>四.Newtonsoft.Json</h2><p>　　主页：<a href=\"https://www.newtonsoft.com/json\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">www.newtonsoft.com</a> </p>\n<p>　　github地址：<a href=\"https://github.com/JamesNK/Newtonsoft.Json\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Newtonsoft.Json</a> </p>\n<p>　　这个就编译比较简单，但是会报错readonly struct（去掉readonly就行），用vs编辑工程文件，像前面那个一样删掉core和phone等等那些选项，然后再编译就能编译通过。自带的脚本也是，下载部分很顺利就能下载，155m左右；但是还有附加的编译环境，也是core的。</p>\n<p>　　这里这个错，其实是C# 7的特性，老版本的vs都不支持。然后core的问题，其实也是更新新版本vs就能解决，后面我更新了新版本后，msbuild版本上来了，就能正常编译了。为什么在第三个那里没注意到时msbuild，因为那里用的是cake，所以当时是能用脚本编译，但是不能vs编译，后面找多点资料后才想起是这个可能。所以这里我就直接更新vs，然后就能直接编译了。什么都不用改。</p>\n<p>　　这里放一下vs2017最新版的安装索引包吧：</p>\n<p>两个官网下载地址：</p>\n<p>　　地址1：<a href=\"https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2017-relnotes#15.1.26430.06\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">vs2017-relnotes#15.1.26430.06</a> </p>\n<p>　　地址2：<a href=\"https://visualstudio.microsoft.com/zh-hans/downloads/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">visualstudio.microsoft.com</a> </p>\n<p>　　以及.NET downloads：<a href=\"https://www.microsoft.com/net/download\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">.NET</a> </p>\n<p>　　附加一下百度云，就是本篇文章用到的配置环境所要下载的东西（要vpn的那几个）：</p>\n<p>　　<a href=\"https://pan.baidu.com/s/1X0HYx4geqPqSh-WD5xBbXg\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">链接</a>  提取码：1t2x</p>\n<p>　　这里有个文章提到这个新特性：<a href=\"https://blogs.msdn.microsoft.com/mazhou/2017/11/21/c-7-series-part-6-read-only-structs/\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">C# 7 Series, Part 6: Read-only structs</a> </p>\n<p><img src=\"/contentimg/3/19.png\" alt=\"Result pic 19\" title=\"Git edit History\"></p>\n<p>　　以及两篇介绍的：</p>\n<p>　　<a href=\"https://www.cnblogs.com/zjoch/p/6696986.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">.NET Core 2.0及.NET Standard 2.0</a> </p>\n<p>　　<a href=\"https://blog.csdn.net/starfd/article/details/78839704\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">NET Standard/Core中配置使用TargetFrameworks输出多版本类库及测试：</a> </p>\n<p>　　平时用这个库比较多的原因，就是可定制化高，可以设置<a href=\"https://www.cnblogs.com/sczmzx/p/7813715.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">null值要不要序列化</a>  ，等等之类的定制。</p>\n<p>结尾附几个博主写的库分享：</p>\n<p>　　<a href=\"https://www.cnblogs.com/landeanfen/p/4627383.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">序列化效率比拼——谁是最后的赢家Newtonsoft.Json</a> </p>\n<p>　　<a href=\"https://www.cnblogs.com/blqw/p/3274229.html\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">几个常用Json组件的性能测试</a> </p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjvklgqsi0004jo9c1e2ajo8n","category_id":"cjvklgqsn0006jo9clvmj45o3","_id":"cjvklgqsw000gjo9cc8pno9pi"},{"post_id":"cjvklgqsr000ajo9cvqgp543v","category_id":"cjvklgqsn0006jo9clvmj45o3","_id":"cjvklgqsy000jjo9cn85y2yjo"},{"post_id":"cjvklgqsm0005jo9caiwqcar1","category_id":"cjvklgqsn0006jo9clvmj45o3","_id":"cjvklgqsz000ljo9czq15i4rt"},{"post_id":"cjvklgqsp0008jo9cx27obib5","category_id":"cjvklgqsw000fjo9cmb0of8dn","_id":"cjvklgqt3000rjo9cidshnh4h"},{"post_id":"cjvklgqsq0009jo9clfo8rspu","category_id":"cjvklgqt0000mjo9ctxyqqyh6","_id":"cjvklgqt5000xjo9cmy8shu9c"},{"post_id":"cjvklgqsu000djo9cdypwf0ax","category_id":"cjvklgqt3000tjo9cea2i4oo9","_id":"cjvklgqt60010jo9cn4cqmej1"},{"post_id":"cjvklgqsv000ejo9cic2uu60a","category_id":"cjvklgqt5000yjo9c17xyks8j","_id":"cjvklgqt80015jo9ciqktks6w"},{"post_id":"cjvklgqsx000ijo9cpa16u9mm","category_id":"cjvklgqt70011jo9c4enchkvd","_id":"cjvklgqt90019jo9csxgzp48p"},{"post_id":"cjvklgqsz000kjo9c282cau3a","category_id":"cjvklgqt80016jo9ctnv6n7dj","_id":"cjvklgqtb001ejo9c9pxjbxrz"},{"post_id":"cjvklgqt1000ojo9ck1odmqvr","category_id":"cjvklgqta001ajo9ckpf4t51e","_id":"cjvklgqtd001jjo9cw9w9qln3"},{"post_id":"cjvklgqt2000qjo9cyvo739vx","category_id":"cjvklgqta001ajo9ckpf4t51e","_id":"cjvklgqte001mjo9c5s6sizs1"},{"post_id":"cjvklgqt4000vjo9cly8kmdwc","category_id":"cjvklgqtd001ijo9chmvev1hm","_id":"cjvklgqtf001pjo9c4oa0rnpc"},{"post_id":"cjvklgr1h002ejo9cu7fd05bl","category_id":"cjvklgr1k002gjo9c4i97knei","_id":"cjvklgr1q002pjo9c81b3c0wc"},{"post_id":"cjvklgr1n002kjo9cuxrfq3qo","category_id":"cjvklgqta001ajo9ckpf4t51e","_id":"cjvklgr1s002tjo9c0bg1l5tc"},{"post_id":"cjvklgr1i002fjo9cx833q4je","category_id":"cjvklgr1n002ljo9ci7na3khe","_id":"cjvklgr1u002vjo9c86a3ma43"},{"post_id":"cjvklgr1l002ijo9cypgxavtt","category_id":"cjvklgr1q002qjo9crwdge2t7","_id":"cjvklgr1w0030jo9cdjgmfwcy"},{"post_id":"cjvklgr1t002ujo9ceaq4xakt","category_id":"cjvklgqsn0006jo9clvmj45o3","_id":"cjvklgr1x0034jo9cq977kj7w"},{"post_id":"cjvklgr1m002jjo9ctbqw61nl","category_id":"cjvklgr1u002wjo9c53ztns36","_id":"cjvklgr1x0035jo9cl99ei8tl"},{"post_id":"cjvklgr1o002njo9cw2vq6jg8","category_id":"cjvklgr1w0031jo9c2q4c67qx","_id":"cjvklgr1z003ajo9cyzlrores"},{"post_id":"cjvklgr1p002ojo9czju08sp9","category_id":"cjvklgr1y0036jo9c4az6ayhu","_id":"cjvklgr20003djo9czm8d41ak"},{"post_id":"cjvklgr1r002sjo9cn80njwev","category_id":"cjvklgr1z003bjo9cb8upuzmt","_id":"cjvklgr20003fjo9cax9h1q53"},{"post_id":"cjvklgrd20048jo9c7keo3yuk","category_id":"cjvklgrd30049jo9cvblylkf1","_id":"cjvklgrd4004cjo9cy4xo8hyt"},{"post_id":"cjvklgrhn004hjo9c4xpj9boy","category_id":"cjvklgr1w0031jo9c2q4c67qx","_id":"cjvklgrhs004njo9cyw7c82ky"},{"post_id":"cjvklgrho004ijo9cyzrp7orx","category_id":"cjvklgr1y0036jo9c4az6ayhu","_id":"cjvklgrht004pjo9cnqz2lm42"},{"post_id":"cjvklgrhp004kjo9cdj5ich9l","category_id":"cjvklgr1y0036jo9c4az6ayhu","_id":"cjvklgrhu004tjo9c499r44al"},{"post_id":"cjvklgrhr004mjo9csy9f6ckn","category_id":"cjvklgrht004qjo9cr9tlixfr","_id":"cjvklgrhv004wjo9c7o2iifpr"},{"post_id":"cjvklgrib004xjo9cokykielr","category_id":"cjvklgqta001ajo9ckpf4t51e","_id":"cjvklgrif0052jo9cakjutgrk"},{"post_id":"cjvklgric004yjo9c7das4lvk","category_id":"cjvklgqta001ajo9ckpf4t51e","_id":"cjvklgrih0055jo9co4ocesyh"},{"post_id":"cjvklgrie0051jo9ce4rowj36","category_id":"cjvklgrd30049jo9cvblylkf1","_id":"cjvklgrik005bjo9cvw7bhzui"},{"post_id":"cjvklgrih0054jo9c7awn8itc","category_id":"cjvklgr1w0031jo9c2q4c67qx","_id":"cjvklgril005ejo9c6mhxj9ls"},{"post_id":"cjvklgrii0058jo9cct1j3j40","category_id":"cjvklgrd30049jo9cvblylkf1","_id":"cjvklgril005gjo9cule8sqrz"},{"post_id":"cjvklgrid0050jo9cp03i4yeq","category_id":"cjvklgrig0053jo9c9o0k3g32","_id":"cjvklgrim005jjo9cdqs59o76"},{"post_id":"cjvklgrij005ajo9cqabwdsk4","category_id":"cjvklgrd30049jo9cvblylkf1","_id":"cjvklgrin005ljo9c5nfqul4p"},{"post_id":"cjvklgs3o0063jo9cdyzcr6lm","category_id":"cjvklgrd30049jo9cvblylkf1","_id":"cjvklgs3p0065jo9cvjpidn75"},{"post_id":"cjvklgsbi0069jo9cjkz3fzi8","category_id":"cjvklgr1y0036jo9c4az6ayhu","_id":"cjvklgsbm006djo9cfv5keoio"},{"post_id":"cjvklgsbj006ajo9chrrkygv6","category_id":"cjvklgsbl006cjo9cocb7jd24","_id":"cjvklgsbn006gjo9ctc22tgjh"}],"PostTag":[{"post_id":"cjvklgqsi0004jo9c1e2ajo8n","tag_id":"cjvklgqso0007jo9c1n2y9ak2","_id":"cjvklgqt2000pjo9cswhdt9z2"},{"post_id":"cjvklgqsi0004jo9c1e2ajo8n","tag_id":"cjvklgqss000cjo9cnec6tg4a","_id":"cjvklgqt3000sjo9cedv4i95i"},{"post_id":"cjvklgqsi0004jo9c1e2ajo8n","tag_id":"cjvklgqsx000hjo9ck1pvanol","_id":"cjvklgqt5000wjo9c5qo40va5"},{"post_id":"cjvklgqsm0005jo9caiwqcar1","tag_id":"cjvklgqso0007jo9c1n2y9ak2","_id":"cjvklgqt70013jo9c15go3oh3"},{"post_id":"cjvklgqsm0005jo9caiwqcar1","tag_id":"cjvklgqt3000ujo9c5apj4mrm","_id":"cjvklgqt80014jo9cblcvezq9"},{"post_id":"cjvklgqsm0005jo9caiwqcar1","tag_id":"cjvklgqt6000zjo9ck8oe6f2p","_id":"cjvklgqt90018jo9chhgt3lxb"},{"post_id":"cjvklgqsp0008jo9cx27obib5","tag_id":"cjvklgqt70012jo9crxzpjquj","_id":"cjvklgqta001cjo9c5koj13aa"},{"post_id":"cjvklgqsp0008jo9cx27obib5","tag_id":"cjvklgqt90017jo9cx4v5xz05","_id":"cjvklgqtb001djo9cch5j8vnj"},{"post_id":"cjvklgqsq0009jo9clfo8rspu","tag_id":"cjvklgqta001bjo9cgaziu6fd","_id":"cjvklgqtc001hjo9c87l9pip8"},{"post_id":"cjvklgqsr000ajo9cvqgp543v","tag_id":"cjvklgqso0007jo9c1n2y9ak2","_id":"cjvklgqte001ljo9c9iz9lw3c"},{"post_id":"cjvklgqsr000ajo9cvqgp543v","tag_id":"cjvklgqtc001gjo9c95633ozh","_id":"cjvklgqte001njo9creav8vt8"},{"post_id":"cjvklgqsu000djo9cdypwf0ax","tag_id":"cjvklgqtd001kjo9cgirsxv26","_id":"cjvklgqtg001rjo9co4gwicvj"},{"post_id":"cjvklgqsu000djo9cdypwf0ax","tag_id":"cjvklgqte001ojo9ct75hplpl","_id":"cjvklgqtg001sjo9crmso6fka"},{"post_id":"cjvklgqsv000ejo9cic2uu60a","tag_id":"cjvklgqtf001qjo9cp95st7r8","_id":"cjvklgqti001vjo9cyofms5rc"},{"post_id":"cjvklgqsv000ejo9cic2uu60a","tag_id":"cjvklgqtg001tjo9c4j7pywud","_id":"cjvklgqti001wjo9cv32kgfzk"},{"post_id":"cjvklgqsx000ijo9cpa16u9mm","tag_id":"cjvklgqth001ujo9c31j3wmga","_id":"cjvklgqtj001zjo9cyh3gji0g"},{"post_id":"cjvklgqsx000ijo9cpa16u9mm","tag_id":"cjvklgqti001xjo9coysjfvdx","_id":"cjvklgqtk0020jo9cq31qn5lc"},{"post_id":"cjvklgqsz000kjo9c282cau3a","tag_id":"cjvklgqtj001yjo9c62l30aoi","_id":"cjvklgqtk0022jo9csd1wszn7"},{"post_id":"cjvklgqt1000ojo9ck1odmqvr","tag_id":"cjvklgqtk0021jo9c9kviok53","_id":"cjvklgqtm0025jo9cbc3vdwwr"},{"post_id":"cjvklgqt1000ojo9ck1odmqvr","tag_id":"cjvklgqtl0023jo9cnwxd0hg2","_id":"cjvklgqtm0026jo9c4czq35lb"},{"post_id":"cjvklgqt2000qjo9cyvo739vx","tag_id":"cjvklgqtl0024jo9chprexwmi","_id":"cjvklgqto002ajo9cbyu7rakt"},{"post_id":"cjvklgqt2000qjo9cyvo739vx","tag_id":"cjvklgqtm0027jo9c1ji9yv9z","_id":"cjvklgqto002bjo9ctmdayl7s"},{"post_id":"cjvklgqt2000qjo9cyvo739vx","tag_id":"cjvklgqtn0028jo9cgj43t3wf","_id":"cjvklgqtp002cjo9crxy1zmio"},{"post_id":"cjvklgqt4000vjo9cly8kmdwc","tag_id":"cjvklgqto0029jo9cpvkrireq","_id":"cjvklgqtp002djo9camy30zu4"},{"post_id":"cjvklgr1h002ejo9cu7fd05bl","tag_id":"cjvklgr1k002hjo9cwsjmm6c8","_id":"cjvklgr1v002yjo9ckfspxkeu"},{"post_id":"cjvklgr1h002ejo9cu7fd05bl","tag_id":"cjvklgr1o002mjo9ccffmjc38","_id":"cjvklgr1w002zjo9cwee8c49q"},{"post_id":"cjvklgr1h002ejo9cu7fd05bl","tag_id":"cjvklgr1r002rjo9cdo2jpy8p","_id":"cjvklgr1x0033jo9ckc5pyege"},{"post_id":"cjvklgr1i002fjo9cx833q4je","tag_id":"cjvklgr1u002xjo9coez5vmn0","_id":"cjvklgr1y0038jo9cfbua66dl"},{"post_id":"cjvklgr1i002fjo9cx833q4je","tag_id":"cjvklgr1w0032jo9c4ldwvei9","_id":"cjvklgr1z0039jo9ci57fxrgv"},{"post_id":"cjvklgr1l002ijo9cypgxavtt","tag_id":"cjvklgr1y0037jo9c95d5wzx6","_id":"cjvklgr21003hjo9c3dr9usbh"},{"post_id":"cjvklgr1l002ijo9cypgxavtt","tag_id":"cjvklgr1z003cjo9cm28v3geb","_id":"cjvklgr21003ijo9cib82rlg1"},{"post_id":"cjvklgr1l002ijo9cypgxavtt","tag_id":"cjvklgr20003ejo9crzn8pthe","_id":"cjvklgr22003kjo9c5teuoqy5"},{"post_id":"cjvklgr1m002jjo9ctbqw61nl","tag_id":"cjvklgr1u002xjo9coez5vmn0","_id":"cjvklgr23003mjo9cy0plu90t"},{"post_id":"cjvklgr1m002jjo9ctbqw61nl","tag_id":"cjvklgr22003jjo9cmoven9is","_id":"cjvklgr23003njo9cjc0lkpdl"},{"post_id":"cjvklgr1n002kjo9cuxrfq3qo","tag_id":"cjvklgqtl0024jo9chprexwmi","_id":"cjvklgr23003pjo9cza1lhjll"},{"post_id":"cjvklgr1n002kjo9cuxrfq3qo","tag_id":"cjvklgqtm0027jo9c1ji9yv9z","_id":"cjvklgr24003qjo9cxf8pts37"},{"post_id":"cjvklgr1n002kjo9cuxrfq3qo","tag_id":"cjvklgqtn0028jo9cgj43t3wf","_id":"cjvklgr24003sjo9ctbnen6sv"},{"post_id":"cjvklgr1n002kjo9cuxrfq3qo","tag_id":"cjvklgr22003ljo9cx49t9xa8","_id":"cjvklgr25003tjo9cgw34s8lo"},{"post_id":"cjvklgr1o002njo9cw2vq6jg8","tag_id":"cjvklgr23003ojo9c9mp6y1ac","_id":"cjvklgr25003vjo9cz2xnt6b9"},{"post_id":"cjvklgr1p002ojo9czju08sp9","tag_id":"cjvklgr24003rjo9cxkc1erex","_id":"cjvklgr25003wjo9cvyryp82c"},{"post_id":"cjvklgr1r002sjo9cn80njwev","tag_id":"cjvklgr25003ujo9cguol89au","_id":"cjvklgr26003zjo9csqy3r8ms"},{"post_id":"cjvklgr1r002sjo9cn80njwev","tag_id":"cjvklgr26003xjo9cuzcnfvjh","_id":"cjvklgr260040jo9cgb6ajve0"},{"post_id":"cjvklgr1t002ujo9ceaq4xakt","tag_id":"cjvklgr26003yjo9cskzz9rxy","_id":"cjvklgr280044jo9cz2vhiv0o"},{"post_id":"cjvklgr1t002ujo9ceaq4xakt","tag_id":"cjvklgr270041jo9cn5yqodil","_id":"cjvklgr280045jo9chouk5jo9"},{"post_id":"cjvklgr1t002ujo9ceaq4xakt","tag_id":"cjvklgr270042jo9czbevqlwj","_id":"cjvklgr280046jo9cpg3rbkkd"},{"post_id":"cjvklgr1t002ujo9ceaq4xakt","tag_id":"cjvklgr270043jo9ckzlxoa39","_id":"cjvklgr280047jo9copiowtjd"},{"post_id":"cjvklgrd20048jo9c7keo3yuk","tag_id":"cjvklgrd3004ajo9cmq4t2344","_id":"cjvklgrd4004ejo9cckvc4g8d"},{"post_id":"cjvklgrd20048jo9c7keo3yuk","tag_id":"cjvklgrd3004bjo9cvtszoesn","_id":"cjvklgrd5004fjo9c0u39s1nd"},{"post_id":"cjvklgrd20048jo9c7keo3yuk","tag_id":"cjvklgrd4004djo9c09mfbckb","_id":"cjvklgrd5004gjo9cdt8ties4"},{"post_id":"cjvklgrho004ijo9cyzrp7orx","tag_id":"cjvklgr25003ujo9cguol89au","_id":"cjvklgrhq004ljo9cizy7yby8"},{"post_id":"cjvklgrhp004kjo9cdj5ich9l","tag_id":"cjvklgr25003ujo9cguol89au","_id":"cjvklgrht004ojo9co57laxyr"},{"post_id":"cjvklgrhn004hjo9c4xpj9boy","tag_id":"cjvklgr25003ujo9cguol89au","_id":"cjvklgrhu004sjo9cudpvrlv0"},{"post_id":"cjvklgrhn004hjo9c4xpj9boy","tag_id":"cjvklgrho004jjo9cvmnj6m0u","_id":"cjvklgrhu004ujo9cxx17m2d6"},{"post_id":"cjvklgrhr004mjo9csy9f6ckn","tag_id":"cjvklgrhu004rjo9csyca31q8","_id":"cjvklgrhv004vjo9cmip74mux"},{"post_id":"cjvklgrib004xjo9cokykielr","tag_id":"cjvklgqtl0024jo9chprexwmi","_id":"cjvklgrii0057jo9cxxhhntcv"},{"post_id":"cjvklgrib004xjo9cokykielr","tag_id":"cjvklgrid004zjo9ci10kmbzf","_id":"cjvklgrij0059jo9cwx03ei8x"},{"post_id":"cjvklgrib004xjo9cokykielr","tag_id":"cjvklgqtn0028jo9cgj43t3wf","_id":"cjvklgril005djo9cfw4l466s"},{"post_id":"cjvklgrib004xjo9cokykielr","tag_id":"cjvklgr22003ljo9cx49t9xa8","_id":"cjvklgril005fjo9c44rooyu1"},{"post_id":"cjvklgric004yjo9c7das4lvk","tag_id":"cjvklgqtl0024jo9chprexwmi","_id":"cjvklgrim005ijo9c8u6ygpfi"},{"post_id":"cjvklgric004yjo9c7das4lvk","tag_id":"cjvklgrih0056jo9c9i3iiv7b","_id":"cjvklgrim005kjo9czh9nivd7"},{"post_id":"cjvklgric004yjo9c7das4lvk","tag_id":"cjvklgqtn0028jo9cgj43t3wf","_id":"cjvklgrin005njo9cr9ga9737"},{"post_id":"cjvklgric004yjo9c7das4lvk","tag_id":"cjvklgrd3004bjo9cvtszoesn","_id":"cjvklgrio005ojo9c62xr93mi"},{"post_id":"cjvklgrid0050jo9cp03i4yeq","tag_id":"cjvklgr25003ujo9cguol89au","_id":"cjvklgrio005pjo9cxja7jnci"},{"post_id":"cjvklgrid0050jo9cp03i4yeq","tag_id":"cjvklgrik005cjo9cra91oteu","_id":"cjvklgrio005rjo9cnp1x38a5"},{"post_id":"cjvklgrid0050jo9cp03i4yeq","tag_id":"cjvklgrim005hjo9cget3w754","_id":"cjvklgrip005sjo9c9wazhayu"},{"post_id":"cjvklgrie0051jo9ce4rowj36","tag_id":"cjvklgrin005mjo9cuzm9b3ey","_id":"cjvklgrip005ujo9cvt07egnu"},{"post_id":"cjvklgrie0051jo9ce4rowj36","tag_id":"cjvklgrio005qjo9cclbni1av","_id":"cjvklgriq005vjo9ckkgm5wrs"},{"post_id":"cjvklgrih0054jo9c7awn8itc","tag_id":"cjvklgrip005tjo9cejn7djtb","_id":"cjvklgriq005xjo9c0t1ntiv4"},{"post_id":"cjvklgrii0058jo9cct1j3j40","tag_id":"cjvklgrio005qjo9cclbni1av","_id":"cjvklgrir005zjo9cv33ay537"},{"post_id":"cjvklgrij005ajo9cqabwdsk4","tag_id":"cjvklgrin005mjo9cuzm9b3ey","_id":"cjvklgris0061jo9cbhkkizvg"},{"post_id":"cjvklgrij005ajo9cqabwdsk4","tag_id":"cjvklgrio005qjo9cclbni1av","_id":"cjvklgris0062jo9c3ek8r7qp"},{"post_id":"cjvklgs3o0063jo9cdyzcr6lm","tag_id":"cjvklgqso0007jo9c1n2y9ak2","_id":"cjvklgs3q0066jo9cgrzr2ubx"},{"post_id":"cjvklgs3o0063jo9cdyzcr6lm","tag_id":"cjvklgs3p0064jo9c9nuwg5zk","_id":"cjvklgs3q0067jo9c8hkvww6k"},{"post_id":"cjvklgs3o0063jo9cdyzcr6lm","tag_id":"cjvklgrio005qjo9cclbni1av","_id":"cjvklgs3q0068jo9c4pd017a0"},{"post_id":"cjvklgsbi0069jo9cjkz3fzi8","tag_id":"cjvklgr25003ujo9cguol89au","_id":"cjvklgsbn006hjo9camcmv6v7"},{"post_id":"cjvklgsbi0069jo9cjkz3fzi8","tag_id":"cjvklgsbl006bjo9c4nl1cb6u","_id":"cjvklgsbo006ijo9cm6s0o6uo"},{"post_id":"cjvklgsbi0069jo9cjkz3fzi8","tag_id":"cjvklgsbm006ejo9cyec7yhb1","_id":"cjvklgsbo006jjo9ce3la33v5"},{"post_id":"cjvklgsbj006ajo9chrrkygv6","tag_id":"cjvklgr25003ujo9cguol89au","_id":"cjvklgsbp006kjo9c90czopbs"},{"post_id":"cjvklgsbj006ajo9chrrkygv6","tag_id":"cjvklgsbn006fjo9cgdbdb9ro","_id":"cjvklgsbp006ljo9cykfi1px3"}],"Tag":[{"name":"js","_id":"cjvklgqso0007jo9c1n2y9ak2"},{"name":"时钟挂件","_id":"cjvklgqss000cjo9cnec6tg4a"},{"name":"Markdown内嵌前端代码","_id":"cjvklgqsx000hjo9ck1pvanol"},{"name":"skip_render","_id":"cjvklgqt3000ujo9c5apj4mrm"},{"name":"Markdown内嵌html","_id":"cjvklgqt6000zjo9ck8oe6f2p"},{"name":"批处理","_id":"cjvklgqt70012jo9crxzpjquj"},{"name":"git","_id":"cjvklgqt90017jo9cx4v5xz05"},{"name":"markdown","_id":"cjvklgqta001bjo9cgaziu6fd"},{"name":"canvas-nest","_id":"cjvklgqtc001gjo9c95633ozh"},{"name":"wto","_id":"cjvklgqtd001kjo9cgirsxv26"},{"name":"SSD","_id":"cjvklgqte001ojo9ct75hplpl"},{"name":"office","_id":"cjvklgqtf001qjo9cp95st7r8"},{"name":"破解吧","_id":"cjvklgqtg001tjo9c4j7pywud"},{"name":"github","_id":"cjvklgqth001ujo9c31j3wmga"},{"name":"security alert","_id":"cjvklgqti001xjo9coysjfvdx"},{"name":"hexo源码","_id":"cjvklgqtj001yjo9c62l30aoi"},{"name":"webgl","_id":"cjvklgqtk0021jo9c9kviok53"},{"name":"环境","_id":"cjvklgqtl0023jo9cnwxd0hg2"},{"name":"游戏开发","_id":"cjvklgqtl0024jo9chprexwmi"},{"name":"2D","_id":"cjvklgqtm0027jo9c1ji9yv9z"},{"name":"入门级","_id":"cjvklgqtn0028jo9cgj43t3wf"},{"name":"指令","_id":"cjvklgqto0029jo9cpvkrireq"},{"name":"VMWare","_id":"cjvklgr1k002hjo9cwsjmm6c8"},{"name":"Linux","_id":"cjvklgr1o002mjo9ccffmjc38"},{"name":"Mac","_id":"cjvklgr1r002rjo9cdo2jpy8p"},{"name":"unity","_id":"cjvklgr1u002xjo9coez5vmn0"},{"name":"异常处理","_id":"cjvklgr1w0032jo9c4ldwvei9"},{"name":"接口调试","_id":"cjvklgr1y0037jo9c95d5wzx6"},{"name":"API使用","_id":"cjvklgr1z003cjo9cm28v3geb"},{"name":"http调试","_id":"cjvklgr20003ejo9crzn8pthe"},{"name":"Live2D","_id":"cjvklgr22003jjo9cmoven9is"},{"name":"小游戏","_id":"cjvklgr22003ljo9cx49t9xa8"},{"name":"FMS","_id":"cjvklgr23003ojo9c9mp6y1ac"},{"name":"寻路","_id":"cjvklgr24003rjo9cxkc1erex"},{"name":"C#","_id":"cjvklgr25003ujo9cguol89au"},{"name":"闭包","_id":"cjvklgr26003xjo9cuzcnfvjh"},{"name":"abowman","_id":"cjvklgr26003yjo9cskzz9rxy"},{"name":"swf","_id":"cjvklgr270041jo9cn5yqodil"},{"name":"flash","_id":"cjvklgr270042jo9czbevqlwj"},{"name":"swfobject","_id":"cjvklgr270043jo9ckzlxoa39"},{"name":"视频处理","_id":"cjvklgrd3004ajo9cmq4t2344"},{"name":"工具使用","_id":"cjvklgrd3004bjo9cvtszoesn"},{"name":"ffmpeg","_id":"cjvklgrd4004djo9c09mfbckb"},{"name":"IoDH","_id":"cjvklgrho004jjo9cvmnj6m0u"},{"name":"发布优化","_id":"cjvklgrhu004rjo9csyca31q8"},{"name":"3D","_id":"cjvklgrid004zjo9ci10kmbzf"},{"name":"游戏优化","_id":"cjvklgrih0056jo9c9i3iiv7b"},{"name":"Attribute特性","_id":"cjvklgrik005cjo9cra91oteu"},{"name":"enum特性","_id":"cjvklgrim005hjo9cget3w754"},{"name":"域名","_id":"cjvklgrin005mjo9cuzm9b3ey"},{"name":"个人博客","_id":"cjvklgrio005qjo9cclbni1av"},{"name":"设计模式","_id":"cjvklgrip005tjo9cejn7djtb"},{"name":"前端技术","_id":"cjvklgs3p0064jo9c9nuwg5zk"},{"name":"数据结构","_id":"cjvklgsbl006bjo9c4nl1cb6u"},{"name":"算法","_id":"cjvklgsbm006ejo9cyec7yhb1"},{"name":"Json","_id":"cjvklgsbn006fjo9cgdbdb9ro"}]}}